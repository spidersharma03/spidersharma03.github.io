
// This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.
var Ammo = (function() {
  var Module = this;

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(' + args.join(',') + '){ ' + source + ' })'); // new Function does not allow upvars in node
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 67108864;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===
var __ZTVN10__cxxabiv117__class_type_infoE = 17568;
var __ZTVN10__cxxabiv120__si_class_type_infoE = 17608;




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + Runtime.alignMemory(18371);
/* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__I_a() } });


/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,49,55,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,49,51,98,116,84,121,112,101,100,79,98,106,101,99,116,0,168,68,0,0,136,0,0,0,48,69,0,0,112,0,0,0,0,0,0,0,1,0,0,0,152,0,0,0,2,4,0,0,0,0,0,0,48,1,0,0,4,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,67,108,111,115,101,115,116,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,168,68,0,0,0,1,0,0,208,68,0,0,208,0,0,0,40,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,6,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,50,48,98,116,68,101,102,97,117,108,116,77,111,116,105,111,110,83,116,97,116,101,0,0,49,51,98,116,77,111,116,105,111,110,83,116,97,116,101,0,168,68,0,0,240,1,0,0,208,68,0,0,216,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,136,2,0,0,8,0,0,0,9,0,0,0,2,0,0,0,1,0,0,0,50,57,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,168,68,0,0,80,2,0,0,208,68,0,0,48,2,0,0,128,2,0,0,0,0,0,0,123,32,118,97,114,32,115,101,108,102,32,61,32,77,111,100,117,108,101,91,39,103,101,116,67,97,99,104,101,39,93,40,77,111,100,117,108,101,91,39,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,39,93,41,91,36,48,93,59,32,105,102,32,40,33,115,101,108,102,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,39,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,39,41,41,32,116,104,114,111,119,32,39,97,32,74,83,73,109,112,108,101,109,101,110,116,97,116,105,111,110,32,109,117,115,116,32,105,109,112,108,101,109,101,110,116,32,97,108,108,32,102,117,110,99,116,105,111,110,115,44,32,121,111,117,32,102,111,114,103,111,116,32,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,58,58,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,46,39,59,32,114,101,116,117,114,110,32,115,101,108,102,46,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,40,36,49,44,36,50,44,36,51,44,36,52,44,36,53,44,36,54,41,59,32,125,0,0,0,0,0,0,0,0,0,0,0,16,4,0,0,10,0,0,0,11,0,0,0,12,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,50,49,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,0,208,68,0,0,248,3,0,0,160,0,0,0,0,0,0,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,5,0,0,0,3,0,0,0,17,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,18,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,19,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,15,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,20,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,1,0,0,0,2,0,0,0,21,0,0,0,20,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,22,0,0,0,21,0,0,0,6,0,0,0,0,0,0,0,100,101,98,117,103,68,114,97,119,87,111,114,108,100,0,0,115,121,110,99,104,114,111,110,105,122,101,77,111,116,105,111,110,83,116,97,116,101,115,0,115,116,101,112,83,105,109,117,108,97,116,105,111,110,0,0,105,110,116,101,114,110,97,108,83,105,110,103,108,101,83,116,101,112,83,105,109,117,108,97,116,105,111,110,0,0,0,0,117,112,100,97,116,101,65,99,116,105,111,110,115,0,0,0,117,112,100,97,116,101,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,0,0,0,115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,0,0,0,0,0,0,0,0,99,97,108,99,117,108,97,116,101,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,114,101,97,116,101,80,114,101,100,105,99,116,105,118,101,67,111,110,116,97,99,116,115,0,0,0,0,0,0,0,0,114,101,108,101,97,115,101,32,112,114,101,100,105,99,116,105,118,101,32,99,111,110,116,97,99,116,32,109,97,110,105,102,111,108,100,115,0,0,0,0,112,114,101,100,105,99,116,105,118,101,32,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,0,0,0,0,0,105,110,116,101,103,114,97,116,101,84,114,97,110,115,102,111,114,109,115,0,0,0,0,0,67,67,68,32,109,111,116,105,111,110,32,99,108,97,109,112,105,110,103,0,0,0,0,0,97,112,112,108,121,32,115,112,101,99,117,108,97,116,105,118,101,32,99,111,110,116,97,99,116,32,114,101,115,116,105,116,117,116,105,111,110,0,0,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,0,0,0,0,0,0,0,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0,0,0,0,0,0,0,49,53,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,0,0,0,0,0,0,0,208,68,0,0,224,6,0,0,104,23,0,0,0,0,0,0,208,68,0,0,192,6,0,0,248,6,0,0,0,0,0,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,0,0,0,0,0,0,83,80,72,69,82,69,0,0,0,0,0,0,0,8,0,0,23,0,0,0,24,0,0,0,5,0,0,0,3,0,0,0,51,52,98,116,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,55,67,108,111,115,101,115,116,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,168,68,0,0,184,7,0,0,208,68,0,0,128,7,0,0,232,7,0,0,0,0,0,0,208,68,0,0,88,7,0,0,240,7,0,0,0,0,0,0,0,0,0,0,240,7,0,0,25,0,0,0,26,0,0,0,6,0,0,0,4,0,0,0,0,0,0,0,152,8,0,0,27,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,50,55,73,110,112,108,97,99,101,83,111,108,118,101,114,73,115,108,97,110,100,67,97,108,108,98,97,99,107,0,0,0,78,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,49,52,73,115,108,97,110,100,67,97,108,108,98,97,99,107,69,0,0,0,168,68,0,0,96,8,0,0,208,68,0,0,64,8,0,0,144,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,22,0,0,0,23,0,0,0,1,0,0,0,2,0,0,0,5,0,0,0,7,0,0,0,3,0,0,0,0,0,0,0,50,51,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,0,0,208,68,0,0,224,8,0,0,160,0,0,0,0,0,0,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,9,0,0,7,0,0,0,32,0,0,0,33,0,0,0,24,0,0,0,8,0,0,0,4,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,0,0,0,49,49,98,116,82,105,103,105,100,66,111,100,121,0,0,0,208,68,0,0,136,9,0,0,80,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,10,0,0,34,0,0,0,35,0,0,0,3,0,0,0,1,0,0,0,4,0,0,0,36,0,0,0,9,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,83,101,116,117,112,0,0,0,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,73,116,101,114,97,116,105,111,110,115,0,0,0,0,0,0,0,115,111,108,118,101,71,114,111,117,112,0,0,0,0,0,0,51,53,98,116,83,101,113,117,101,110,116,105,97,108,73,109,112,117,108,115,101,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,0,0,49,56,98,116,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,0,0,0,168,68,0,0,112,10,0,0,208,68,0,0,72,10,0,0,136,10,0,0,0,0,0,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,13,0,0,37,0,0,0,38,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,6,0,0,0,2,0,0,0,7,0,0,0,26,0,0,0,10,0,0,0,11,0,0,0,6,0,0,0,27,0,0,0,39,0,0,0,49,50,98,116,65,120,105,115,83,119,101,101,112,51,0,0,50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,116,69,0,0,0,0,0,0,0,50,49,98,116,66,114,111,97,100,112,104,97,115,101,73,110,116,101,114,102,97,99,101,0,168,68,0,0,160,13,0,0,208,68,0,0,128,13,0,0,184,13,0,0,0,0,0,0,208,68,0,0,112,13,0,0,192,13,0,0,0,0,0,0,0,0,0,0,192,13,0,0,40,0,0,0,41,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,6,0,0,0,2,0,0,0,7,0,0,0,26,0,0,0,10,0,0,0,11,0,0,0,6,0,0,0,27,0,0,0,39,0,0,0,0,0,0,0,224,14,0,0,42,0,0,0,43,0,0,0,5,0,0,0,1,0,0,0,7,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,8,0,0,0,15,0,0,0,9,0,0,0,28,0,0,0,10,0,0,0,6,0,0,0,16,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,49,53,98,116,78,117,108,108,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,0,50,53,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,168,68,0,0,168,14,0,0,208,68,0,0,136,14,0,0,200,14,0,0,0,0,0,0,208,68,0,0,112,14,0,0,208,14,0,0,0,0,0,0,0,0,0,0,136,15,0,0,44,0,0,0,45,0,0,0,8,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,31,0,0,0,17,0,0,0,1,0,0,0,18,0,0,0,32,0,0,0,7,0,0,0,2,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,12,0,0,0,13,0,0,0,2,0,0,0,9,0,0,0,10,0,0,0,20,0,0,0,14,0,0,0,8,0,0,0,21,0,0,0,22,0,0,0,11,0,0,0,15,0,0,0,23,0,0,0,12,0,0,0,1,0,0,0,16,0,0,0,49,48,98,116,66,111,120,83,104,97,112,101,0,0,0,0,208,68,0,0,120,15,0,0,232,52,0,0,0,0,0,0,66,111,120,0,0,0,0,0,0,0,0,0,56,16,0,0,46,0,0,0,47,0,0,0,13,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,34,0,0,0,24,0,0,0,2,0,0,0,25,0,0,0,32,0,0,0,8,0,0,0,3,0,0,0,26,0,0,0,8,0,0,0,33,0,0,0,14,0,0,0,17,0,0,0,18,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,0,0,0,0,0,0,0,208,68,0,0,24,16,0,0,0,58,0,0,0,0,0,0,66,86,72,84,82,73,65,78,71,76,69,77,69,83,72,0,0,0,0,0,0,17,0,0,48,0,0,0,49,0,0,0,19,0,0,0,0,0,0,0,90,78,75,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,50,49,98,116,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,168,68,0,0,224,16,0,0,208,68,0,0,112,16,0,0,248,16,0,0,0,0,0,0,0,0,0,0,160,17,0,0,50,0,0,0,51,0,0,0,20,0,0,0,0,0,0,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,55,112,101,114,102,111,114,109,67,111,110,118,101,120,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,83,52,95,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,208,68,0,0,40,17,0,0,248,16,0,0,0,0,0,0,0,0,0,0,48,18,0,0,52,0,0,0,53,0,0,0,21,0,0,0,0,0,0,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,52,112,101,114,102,111,114,109,82,97,121,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,208,68,0,0,200,17,0,0,248,16,0,0,0,0,0,0,0,0,0,0,144,19,0,0,54,0,0,0,55,0,0,0,15,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,37,0,0,0,17,0,0,0,3,0,0,0,27,0,0,0,38,0,0,0,9,0,0,0,2,0,0,0,28,0,0,0,9,0,0,0,33,0,0,0,22,0,0,0,23,0,0,0,2,0,0,0,16,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,184,19,0,0,56,0,0,0,57,0,0,0,15,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,37,0,0,0,17,0,0,0,3,0,0,0,30,0,0,0,38,0,0,0,9,0,0,0,2,0,0,0,28,0,0,0,9,0,0,0,33,0,0,0,22,0,0,0,23,0,0,0,2,0,0,0,16,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,224,19,0,0,58,0,0,0,59,0,0,0,15,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,37,0,0,0,17,0,0,0,3,0,0,0,31,0,0,0,38,0,0,0,9,0,0,0,2,0,0,0,28,0,0,0,9,0,0,0,33,0,0,0,22,0,0,0,23,0,0,0,2,0,0,0,16,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,49,52,98,116,67,97,112,115,117,108,101,83,104,97,112,101,0,0,0,0,0,0,0,0,208,68,0,0,120,19,0,0,248,33,0,0,0,0,0,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,88,0,0,0,0,0,0,0,208,68,0,0,160,19,0,0,144,19,0,0,0,0,0,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,90,0,0,0,0,0,0,0,208,68,0,0,200,19,0,0,144,19,0,0,0,0,0,0,67,97,112,115,117,108,101,90,0,0,0,0,0,0,0,0,67,97,112,115,117,108,101,88,0,0,0,0,0,0,0,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,0,0,0,0,0,67,97,112,115,117,108,101,83,104,97,112,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,20,0,0,60,0,0,0,61,0,0,0,2,0,0,0,10,0,0,0,39,0,0,0,40,0,0,0,11,0,0,0,12,0,0,0,17,0,0,0,32,0,0,0,9,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,10,0,0,0,41,0,0,0,50,49,98,116,67,111,108,108,105,115,105,111,110,68,105,115,112,97,116,99,104,101,114,0,208,68,0,0,136,20,0,0,216,41,0,0,0,0,0,0,0,0,0,0,8,21,0,0,62,0,0,0,63,0,0,0,11,0,0,0,0,0,0,0,50,51,98,116,67,111,108,108,105,115,105,111,110,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,49,55,98,116,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,0,0,168,68,0,0,232,20,0,0,208,68,0,0,200,20,0,0,0,21,0,0,0,0,0,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,0,0,0,0,0,168,68,0,0,56,21,0,0,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,0,0,0,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,0,0,0,0,0,168,68,0,0,112,21,0,0,0,0,0,0,104,23,0,0,64,0,0,0,65,0,0,0,15,0,0,0,16,0,0,0,5,0,0,0,3,0,0,0,66,0,0,0,1,0,0,0,2,0,0,0,18,0,0,0,42,0,0,0,18,0,0,0,43,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,79,118,101,114,102,108,111,119,32,105,110,32,65,65,66,66,44,32,111,98,106,101,99,116,32,114,101,109,111,118,101,100,32,102,114,111,109,32,115,105,109,117,108,97,116,105,111,110,0,0,0,0,0,0,0,0,73,102,32,121,111,117,32,99,97,110,32,114,101,112,114,111,100,117,99,101,32,116,104,105,115,44,32,112,108,101,97,115,101,32,101,109,97,105,108,32,98,117,103,115,64,99,111,110,116,105,110,117,111,117,115,112,104,121,115,105,99,115,46,99,111,109,10,0,0,0,0,0,80,108,101,97,115,101,32,105,110,99,108,117,100,101,32,97,98,111,118,101,32,105,110,102,111,114,109,97,116,105,111,110,44,32,121,111,117,114,32,80,108,97,116,102,111,114,109,44,32,118,101,114,115,105,111,110,32,111,102,32,79,83,46,10,0,0,0,0,0,0,0,0,84,104,97,110,107,115,46,10,0,0,0,0,0,0,0,0,117,112,100,97,116,101,65,97,98,98,115,0,0,0,0,0,99,97,108,99,117,108,97,116,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,0,0,0,0,0,0,0,112,101,114,102,111,114,109,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,105,111,110,0,0,0,0,0,0,0,100,105,115,112,97,116,99,104,65,108,108,67,111,108,108,105,115,105,111,110,80,97,105,114,115,0,0,0,0,0,0,0,99,111,110,118,101,120,83,119,101,101,112,67,111,109,112,111,117,110,100,0,0,0,0,0,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,0,0,0,0,0,0,168,68,0,0,80,23,0,0,0,0,0,0,184,23,0,0,67,0,0,0,68,0,0,0,19,0,0,0,20,0,0,0,252,255,255,255,184,23,0,0,69,0,0,0,70,0,0,0,21,0,0,0,0,0,0,0,49,55,68,101,98,117,103,68,114,97,119,99,97,108,108,98,97,99,107,0,0,0,0,0,48,69,0,0,160,23,0,0,0,0,0,0,2,0,0,0,232,56,0,0,2,0,0,0,24,57,0,0,2,4,0,0,50,52,98,116,66,114,111,97,100,112,104,97,115,101,65,97,98,98,67,97,108,108,98,97,99,107,0,0,0,0,0,0,168,68,0,0,216,23,0,0,0,0,0,0,96,24,0,0,71,0,0,0,72,0,0,0,12,0,0,0,0,0,0,0,50,49,98,116,83,105,110,103,108,101,83,119,101,101,112,67,97,108,108,98,97,99,107,0,50,51,98,116,66,114,111,97,100,112,104,97,115,101,82,97,121,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,208,68,0,0,48,24,0,0,248,23,0,0,0,0,0,0,208,68,0,0,24,24,0,0,80,24,0,0,0,0,0,0,0,0,0,0,160,24,0,0,73,0,0,0,74,0,0,0,13,0,0,0,0,0,0,0,49,57,98,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,0,0,208,68,0,0,136,24,0,0,80,24,0,0,0,0,0,0,0,0,0,0,104,25,0,0,75,0,0,0,76,0,0,0,14,0,0,0,6,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,49,52,76,111,99,97,108,73,110,102,111,65,100,100,101,114,95,49,0,0,208,68,0,0,200,24,0,0,232,7,0,0,0,0,0,0,0,0,0,0,72,26,0,0,77,0,0,0,78,0,0,0,22,0,0,0,1,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,0,0,0,0,0,0,0,208,68,0,0,144,25,0,0,16,54,0,0,0,0,0,0,0,0,0,0,32,27,0,0,79,0,0,0,80,0,0,0,22,0,0,0,2,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,0,208,68,0,0,112,26,0,0,16,54,0,0,0,0,0,0,0,0,0,0,208,27,0,0,81,0,0,0,82,0,0,0,15,0,0,0,7,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,49,53,76,111,99,97,108,73,110,102,111,65,100,100,101,114,50,0,0,0,0,208,68,0,0,72,27,0,0,40,1,0,0,0,0,0,0,0,0,0,0,168,28,0,0,83,0,0,0,84,0,0,0,25,0,0,0,44,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,57,82,97,121,84,101,115,116,101,114,95,49,0,78,54,98,116,68,98,118,116,56,73,67,111,108,108,105,100,101,69,0,0,0,0,0,0,168,68,0,0,136,28,0,0,208,68,0,0,8,28,0,0,160,28,0,0,0,0,0,0,0,0,0,0,104,29,0,0,85,0,0,0,86,0,0,0,23,0,0,0,1,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,0,0,0,208,68,0,0,208,28,0,0,224,53,0,0,0,0,0,0,0,0,0,0,40,30,0,0,87,0,0,0,88,0,0,0,23,0,0,0,2,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,0,208,68,0,0,144,29,0,0,224,53,0,0,0,0,0,0,0,0,0,0,120,30,0,0,10,0,0,0,45,0,0,0,26,0,0,0,89,0,0,0,90,0,0,0,0,0,0,0,78,49,50,98,116,67,111,110,118,101,120,67,97,115,116,49,48,67,97,115,116,82,101,115,117,108,116,69,0,0,0,0,168,68,0,0,88,30,0,0,0,0,0,0,32,31,0,0,91,0,0,0,92,0,0,0,24,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,46,0,0,0,36,0,0,0,4,0,0,0,37,0,0,0,32,0,0,0,11,0,0,0,4,0,0,0,38,0,0,0,13,0,0,0,33,0,0,0,47,0,0,0,93,0,0,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,67,104,105,108,100,68,97,116,97,0,0,0,0,0,0,0,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,68,97,116,97,0,0,0,0,0,49,53,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,0,0,0,0,0,0,0,208,68,0,0,8,31,0,0,136,21,0,0,0,0,0,0,67,111,109,112,111,117,110,100,0,0,0,0,0,0,0,0,0,0,0,0,136,32,0,0,94,0,0,0,95,0,0,0,25,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,48,0,0,0,17,0,0,0,5,0,0,0,39,0,0,0,49,0,0,0,12,0,0,0,2,0,0,0,40,0,0,0,14,0,0,0,33,0,0,0,27,0,0,0,28,0,0,0,2,0,0,0,26,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,168,32,0,0,96,0,0,0,97,0,0,0,25,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,48,0,0,0,17,0,0,0,5,0,0,0,41,0,0,0,50,0,0,0,12,0,0,0,2,0,0,0,40,0,0,0,14,0,0,0,33,0,0,0,27,0,0,0,28,0,0,0,2,0,0,0,26,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,200,32,0,0,98,0,0,0,99,0,0,0,25,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,48,0,0,0,17,0,0,0,5,0,0,0,42,0,0,0,51,0,0,0,12,0,0,0,2,0,0,0,40,0,0,0,14,0,0,0,33,0,0,0,27,0,0,0,28,0,0,0,2,0,0,0,26,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,49,49,98,116,67,111,110,101,83,104,97,112,101,0,0,0,208,68,0,0,120,32,0,0,248,33,0,0,0,0,0,0,49,50,98,116,67,111,110,101,83,104,97,112,101,90,0,0,208,68,0,0,152,32,0,0,136,32,0,0,0,0,0,0,49,50,98,116,67,111,110,101,83,104,97,112,101,88,0,0,208,68,0,0,184,32,0,0,136,32,0,0,0,0,0,0,67,111,110,101,88,0,0,0,67,111,110,101,90,0,0,0,98,116,67,111,110,101,83,104,97,112,101,68,97,116,97,0,67,111,110,101,0,0,0,0,0,0,0,0,56,33,0,0,100,0,0,0,101,0,0,0,1,0,0,0,0,0,0,0,50,55,98,116,67,111,110,116,105,110,117,111,117,115,67,111,110,118,101,120,67,111,108,108,105,115,105,111,110,0,0,0,208,68,0,0,24,33,0,0,216,33,0,0,0,0,0,0,0,0,0,0,184,33,0,0,102,0,0,0,103,0,0,0,29,0,0,0,30,0,0,0,3,0,0,0,0,0,0,0,49,54,98,116,80,111,105,110,116,67,111,108,108,101,99,116,111,114,0,0,0,0,0,0,78,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,54,82,101,115,117,108,116,69,0,168,68,0,0,128,33,0,0,208,68,0,0,104,33,0,0,176,33,0,0,0,0,0,0,49,50,98,116,67,111,110,118,101,120,67,97,115,116,0,0,168,68,0,0,200,33,0,0,50,49,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,0,208,68,0,0,224,33,0,0,24,34,0,0,0,0,0,0,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,0,208,68,0,0,8,34,0,0,136,21,0,0,0,0,0,0,0,0,0,0,120,35,0,0,104,0,0,0,105,0,0,0,27,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,52,0,0,0,17,0,0,0,6,0,0,0,43,0,0,0,53,0,0,0,13,0,0,0,2,0,0,0,44,0,0,0,15,0,0,0,33,0,0,0,31,0,0,0,32,0,0,0,2,0,0,0,28,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,5,0,0,0,0,0,0,0,160,35,0,0,106,0,0,0,107,0,0,0,27,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,52,0,0,0,17,0,0,0,6,0,0,0,45,0,0,0,53,0,0,0,13,0,0,0,2,0,0,0,44,0,0,0,15,0,0,0,33,0,0,0,31,0,0,0,33,0,0,0,2,0,0,0,29,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,6,0,0,0,0,0,0,0,200,35,0,0,108,0,0,0,109,0,0,0,27,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,52,0,0,0,17,0,0,0,6,0,0,0,46,0,0,0,53,0,0,0,13,0,0,0,2,0,0,0,44,0,0,0,15,0,0,0,33,0,0,0,31,0,0,0,34,0,0,0,2,0,0,0,30,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,7,0,0,0,49,53,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,0,0,0,0,0,0,0,208,68,0,0,96,35,0,0,248,33,0,0,0,0,0,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,88,0,0,0,0,0,0,208,68,0,0,136,35,0,0,120,35,0,0,0,0,0,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,90,0,0,0,0,0,0,208,68,0,0,176,35,0,0,120,35,0,0,0,0,0,0,67,121,108,105,110,100,101,114,90,0,0,0,0,0,0,0,67,121,108,105,110,100,101,114,88,0,0,0,0,0,0,0,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0,0,0,0,0,67,121,108,105,110,100,101,114,89,0,0,0,0,0,0,0,0,0,0,0,120,36,0,0,110,0,0,0,111,0,0,0,2,0,0,0,35,0,0,0,3,0,0,0,31,0,0,0,3,0,0,0,32,0,0,0,54,0,0,0,47,0,0,0,48,0,0,0,36,0,0,0,55,0,0,0,112,0,0,0,49,54,98,116,68,98,118,116,66,114,111,97,100,112,104,97,115,101,0,0,0,0,0,0,208,68,0,0,96,36,0,0,184,13,0,0,0,0,0,0,0,0,0,0,200,36,0,0,113,0,0,0,114,0,0,0,25,0,0,0,56,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,50,48,66,114,111,97,100,112,104,97,115,101,65,97,98,98,84,101,115,116,101,114,0,0,208,68,0,0,176,36,0,0,160,28,0,0,0,0,0,0,0,0,0,0,24,37,0,0,115,0,0,0,116,0,0,0,25,0,0,0,57,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,49,57,66,114,111,97,100,112,104,97,115,101,82,97,121,84,101,115,116,101,114,0,0,0,208,68,0,0,0,37,0,0,160,28,0,0,0,0,0,0,0,0,0,0,104,37,0,0,117,0,0,0,118,0,0,0,37,0,0,0,58,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,49,56,98,116,68,98,118,116,84,114,101,101,67,111,108,108,105,100,101,114,0,0,0,0,208,68,0,0,80,37,0,0,160,28,0,0,0,0,0,0,0,0,0,0,232,37,0,0,119,0,0,0,120,0,0,0,49,0,0,0,50,0,0,0,16,0,0,0,51,0,0,0,51,49,98,116,68,101,102,97,117,108,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,0,0,50,52,98,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,0,168,68,0,0,192,37,0,0,208,68,0,0,152,37,0,0,224,37,0,0,0,0,0,0,0,0,0,0,112,38,0,0,121,0,0,0,122,0,0,0,3,0,0,0,0,0,0,0,78,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,51,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,67,114,101,97,116,101,70,117,110,99,0,0,0,0,0,0,0,0,168,68,0,0,64,38,0,0,208,68,0,0,16,38,0,0,104,38,0,0,0,0,0,0,0,0,0,0,200,38,0,0,123,0,0,0,124,0,0,0,4,0,0,0,0,0,0,0,78,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,208,68,0,0,152,38,0,0,104,38,0,0,0,0,0,0,0,0,0,0,40,39,0,0,125,0,0,0,126,0,0,0,5,0,0,0,0,0,0,0,78,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,208,68,0,0,240,38,0,0,104,38,0,0,0,0,0,0,0,0,0,0,136,39,0,0,127,0,0,0,128,0,0,0,6,0,0,0,0,0,0,0,78,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,208,68,0,0,80,39,0,0,104,38,0,0,0,0,0,0,0,0,0,0,216,39,0,0,129,0,0,0,130,0,0,0,7,0,0,0,0,0,0,0,78,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,208,68,0,0,176,39,0,0,104,38,0,0,0,0,0,0,0,0,0,0,56,40,0,0,131,0,0,0,132,0,0,0,8,0,0,0,0,0,0,0,78,50,56,98,116,67,111,109], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,208,68,0,0,0,40,0,0,104,38,0,0,0,0,0,0,0,0,0,0,152,40,0,0,133,0,0,0,134,0,0,0,9,0,0,0,0,0,0,0,78,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,208,68,0,0,96,40,0,0,104,38,0,0,0,0,0,0,0,0,0,0,240,40,0,0,135,0,0,0,136,0,0,0,10,0,0,0,0,0,0,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,208,68,0,0,192,40,0,0,104,38,0,0,0,0,0,0,0,0,0,0,88,41,0,0,137,0,0,0,138,0,0,0,11,0,0,0,0,0,0,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,208,68,0,0,24,41,0,0,104,38,0,0,0,0,0,0,0,0,0,0,184,41,0,0,139,0,0,0,140,0,0,0,12,0,0,0,0,0,0,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,208,68,0,0,128,41,0,0,104,38,0,0,0,0,0,0,49,50,98,116,68,105,115,112,97,116,99,104,101,114,0,0,168,68,0,0,200,41,0,0,0,0,0,0,56,42,0,0,141,0,0,0,142,0,0,0,4,0,0,0,1,0,0,0,59,0,0,0,0,0,0,0,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,50,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,168,68,0,0,24,42,0,0,208,68,0,0,0,42,0,0,48,42,0,0,0,0,0,0,0,0,0,0,120,42,0,0,143,0,0,0,144,0,0,0,2,0,0,0,0,0,0,0,49,53,98,116,71,106,107,67,111,110,118,101,120,67,97,115,116,0,0,0,0,0,0,0,208,68,0,0,96,42,0,0,216,33,0,0,0,0,0,0,0,0,0,0,248,42,0,0,145,0,0,0,146,0,0,0,1,0,0,0,0,0,0,0,51,48,98,116,71,106,107,69,112,97,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,0,0,51,48,98,116,67,111,110,118,101,120,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,0,0,168,68,0,0,200,42,0,0,208,68,0,0,160,42,0,0,240,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,43,0,0,147,0,0,0,148,0,0,0,5,0,0,0,0,0,0,0,49,55,98,116,71,106,107,80,97,105,114,68,101,116,101,99,116,111,114,0,0,0,0,0,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,0,0,168,68,0,0,72,43,0,0,208,68,0,0,48,43,0,0,112,43,0,0,0,0,0,0,0,0,0,0,192,43,0,0,149,0,0,0,150,0,0,0,38,0,0,0,39,0,0,0,4,0,0,0,0,0,0,0,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,0,0,0,0,0,208,68,0,0,168,43,0,0,176,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,47,0,0,151,0,0,0,152,0,0,0,2,0,0,0,0,0,0,0,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,208,68,0,0,208,47,0,0,240,42,0,0,0,0,0,0,0,0,0,0,216,48,0,0,153,0,0,0,154,0,0,0,40,0,0,0,41,0,0,0,5,0,0,0,0,0,0,0,90,78,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,49,50,99,97,108,99,80,101,110,68,101,112,116,104,69,82,50,50,98,116,86,111,114,111,110,111,105,83,105,109,112,108,101,120,83,111,108,118,101,114,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,83,52,95,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,55,95,82,57,98,116,86,101,99,116,111,114,51,83,57,95,83,57,95,80,49,50,98,116,73,68,101,98,117,103,68,114,97,119,69,50,48,98,116,73,110,116,101,114,109,101,100,105,97,116,101,82,101,115,117,108,116,0,0,0,0,0,0,208,68,0,0,40,48,0,0,176,33,0,0,0,0,0,0,0,0,0,0,40,49,0,0,155,0,0,0,156,0,0,0,13,0,0,0,52,0,0,0,17,0,0,0,60,0,0,0,61,0,0,0,14,0,0,0,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,0,0,0,0,0,0,0,0,208,68,0,0,16,49,0,0,160,53,0,0,0,0,0,0,0,0,0,0,176,49,0,0,157,0,0,0,158,0,0,0,33,0,0,0,0,0,0,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,48,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,95,48,0,0,0,0,208,68,0,0,80,49,0,0,24,57,0,0,0,0,0,0,0,0,0,0,64,50,0,0,159,0,0,0,160,0,0,0,34,0,0,0,0,0,0,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,57,81,117,97,110,116,105,122,101,100,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,0,208,68,0,0,216,49,0,0,24,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,50,0,0,161,0,0,0,162,0,0,0,18,0,0,0,15,0,0,0,42,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,43,0,0,0,56,0,0,0,44,0,0,0,62,0,0,0,45,0,0,0,19,0,0,0,57,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,0,208,68,0,0,192,50,0,0,208,14,0,0,0,0,0,0,0,0,0,0,144,51,0,0,163,0,0,0,164,0,0,0,18,0,0,0,0,0,0,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,208,68,0,0,8,51,0,0,0,21,0,0,0,0,0,0,0,0,0,0,40,52,0,0,165,0,0,0,166,0,0,0,19,0,0,0,0,0,0,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,208,68,0,0,184,51,0,0,0,21,0,0,0,0,0,0,10,215,163,60,0,0,0,0,0,0,0,0,232,52,0,0,167,0,0,0,168,0,0,0,25,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,65,0,0,0,17,0,0,0,7,0,0,0,1,0,0,0,32,0,0,0,12,0,0,0,2,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,22,0,0,0,46,0,0,0,2,0,0,0,35,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,50,51,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,83,104,97,112,101,0,0,0,0,0,0,0,208,68,0,0,200,52,0,0,248,33,0,0,0,0,0,0,0,0,0,0,160,53,0,0,169,0,0,0,170,0,0,0,13,0,0,0,52,0,0,0,17,0,0,0,60,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,0,98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0,0,0,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0,49,52,98,116,81,117,97,110,116,105,122,101,100,66,118,104,0,0,0,0,0,0,0,0,168,68,0,0,136,53,0,0,0,0,0,0,16,54,0,0,171,0,0,0,172,0,0,0,22,0,0,0,1,0,0,0,50,53,98,116,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,208,68,0,0,192,53,0,0,232,56,0,0,0,0,0,0,50,56,98,116,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,0,208,68,0,0,240,53,0,0,232,56,0,0,0,0,0,0,0,0,0,0,192,54,0,0,173,0,0,0,174,0,0,0,36,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,65,0,0,0,17,0,0,0,8,0,0,0,58,0,0,0,32,0,0,0,12,0,0,0,2,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,22,0,0,0,47,0,0,0,2,0,0,0,37,0,0,0,10,0,0,0,59,0,0,0,48,0,0,0,8,0,0,0,60,0,0,0,61,0,0,0,38,0,0,0,49,0,0,0,62,0,0,0,39,0,0,0,2,0,0,0,40,0,0,0,49,53,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,0,0,0,0,0,0,0,208,68,0,0,168,54,0,0,232,52,0,0,0,0,0,0,84,114,105,97,110,103,108,101,0,0,0,0,0,0,0,0,0,0,0,0,72,55,0,0,175,0,0,0,176,0,0,0,50,0,0,0,66,0,0,0,105,115,108,97,110,100,85,110,105,111,110,70,105,110,100,65,110,100,81,117,105,99,107,83,111,114,116,0,0,0,0,0,112,114,111,99,101,115,115,73,115,108,97,110,100,115,0,0,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,0,0,0,0,0,168,68,0,0,40,55,0,0,0,0,0,0,200,55,0,0,177,0,0,0,178,0,0,0,41,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,65,0,0,0,17,0,0,0,9,0,0,0,63,0,0,0,32,0,0,0,14,0,0,0,8,0,0,0,19,0,0,0,7,0,0,0,33,0,0,0,51,0,0,0,52,0,0,0,2,0,0,0,42,0,0,0,10,0,0,0,29,0,0,0,24,0,0,0,0,0,0,0,49,51,98,116,83,112,104,101,114,101,83,104,97,112,101,0,208,68,0,0,184,55,0,0,248,33,0,0,0,0,0,0,0,0,0,0,32,56,0,0,179,0,0,0,180,0,0,0,6,0,0,0,2,0,0,0,67,0,0,0,0,0,0,0,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,208,68,0,0,248,55,0,0,96,59,0,0,0,0,0,0,0,0,0,0,120,56,0,0,181,0,0,0,182,0,0,0,7,0,0,0,3,0,0,0,68,0,0,0,0,0,0,0,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,208,68,0,0,80,56,0,0,96,59,0,0,0,0,0,0,0,0,0,0,192,56,0,0,183,0,0,0,184,0,0,0,3,0,0,0,0,0,0,0,50,50,98,116,83,117,98,115,105,109,112,108,101,120,67,111,110,118,101,120,67,97,115,116,0,0,0,0,0,0,0,0,208,68,0,0,160,56,0,0,216,33,0,0,0,0,0,0,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,168,68,0,0,208,56,0,0,51,49,98,116,73,110,116,101,114,110,97,108,84,114,105,97,110,103,108,101,73,110,100,101,120,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,168,68,0,0,240,56,0,0,0,0,0,0,128,57,0,0,185,0,0,0,186,0,0,0,43,0,0,0,1,0,0,0,2,0,0,0,69,0,0,0,70,0,0,0,64,0,0,0,71,0,0,0,72,0,0,0,65,0,0,0,53,0,0,0,54,0,0,0,66,0,0,0,20,0,0,0,0,0,0,0,49,52,98,116,84,114,105,97,110,103,108,101,77,101,115,104,0,0,0,0,0,0,0,0,208,68,0,0,104,57,0,0,176,67,0,0,0,0,0,0,0,0,0,0,0,58,0,0,187,0,0,0,188,0,0,0,13,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,73,0,0,0,24,0,0,0,2,0,0,0,67,0,0,0,32,0,0,0,8,0,0,0,3,0,0,0,68,0,0,0,21,0,0,0,33,0,0,0,44,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,0,0,208,68,0,0,232,57,0,0,120,61,0,0,0,0,0,0,84,82,73,65,78,71,76,69,77,69,83,72,0,0,0,0,0,0,0,0,80,58,0,0,189,0,0,0,190,0,0,0,45,0,0,0,0,0,0,0,50,49,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0,208,68,0,0,56,58,0,0,232,56,0,0,0,0,0,0,0,0,0,0,224,58,0,0,191,0,0,0,192,0,0,0,46,0,0,0,0,0,0,0,90,78,75,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,49,54,70,105,108,116,101,114,101,100,67,97,108,108,98,97,99,107,0,0,0,208,68,0,0,120,58,0,0,24,57,0,0,0,0,0,0,0,0,0,0,40,59,0,0,193,0,0,0,194,0,0,0,8,0,0,0,0,0,0,0,50,50,83,112,104,101,114,101,84,114,105,97,110,103,108,101,68,101,116,101,99,116,111,114,0,0,0,0,0,0,0,0,208,68,0,0,8,59,0,0,112,43,0,0,0,0,0,0,51,48,98,116,65,99,116,105,118,97,116,105,110,103,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,0,208,68,0,0,56,59,0,0,48,42,0,0,0,0,0,0,0,0,0,0,176,59,0,0,195,0,0,0,196,0,0,0,9,0,0,0,4,0,0,0,74,0,0,0,0,0,0,0,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,208,68,0,0,144,59,0,0,96,59,0,0,0,0,0,0,0,0,0,0,240,59,0,0,197,0,0,0,198,0,0,0,10,0,0,0,0,0,0,0,49,54,98,116,66,111,120,66,111,120,68,101,116,101,99,116,111,114,0,0,0,0,0,0,208,68,0,0,216,59,0,0,112,43,0,0,0,0,0,0,0,0,0,0,64,60,0,0,199,0,0,0,200,0,0,0,11,0,0,0,5,0,0,0,75,0,0,0,0,0,0,0,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,208,68,0,0,32,60,0,0,96,59,0,0,0,0,0,0,0,0,0,0,152,60,0,0,201,0,0,0,202,0,0,0,25,0,0,0,76,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,50,50,98,116,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,208,68,0,0,120,60,0,0,160,28,0,0,0,0,0,0,0,0,0,0,240,60,0,0,203,0,0,0,204,0,0,0,12,0,0,0,6,0,0,0,77,0,0,0,0,0,0,0,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,208,68,0,0,200,60,0,0,96,59,0,0,0,0,0,0,0,0,0,0,80,61,0,0,205,0,0,0,206,0,0,0,55,0,0,0,78,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,51,48,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,208,68,0,0,40,61,0,0,160,28,0,0,0,0,0,0,49,52,98,116,67,111,110,99,97,118,101,83,104,97,112,101,0,0,0,0,0,0,0,0,208,68,0,0,96,61,0,0,136,21,0,0,0,0,0,0,0,0,0,0,232,61,0,0,207,0,0,0,208,0,0,0,13,0,0,0,7,0,0,0,79,0,0,0,0,0,0,0,0,0,0,0,24,62,0,0,209,0,0,0,210,0,0,0,47,0,0,0,0,0,0,0,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,208,68,0,0,192,61,0,0,96,59,0,0,0,0,0,0,50,52,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,0,0,208,68,0,0,248,61,0,0,232,56,0,0,0,0,0,0,0,0,0,0,224,62,0,0,211,0,0,0,212,0,0,0,48,0,0,0,0,0,0,0,90,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,0,0,208,68,0,0,64,62,0,0,232,56,0,0,0,0,0,0,0,0,0,0,128,63,0,0,213,0,0,0,214,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,72,63,0,0,215,0,0,0,216,0,0,0,14,0,0,0,8,0,0,0,80,0,0,0,0,0,0,0,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,208,68,0,0,40,63,0,0,96,59,0,0,0,0,0,0,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,208,68,0,0,88,63,0,0,104,38,0,0,0,0,0,0,0,0,0,0,208,63,0,0,217,0,0,0,218,0,0,0,38,0,0,0,39,0,0,0,6,0,0,0,0,0,0,0,50,52,98,116,80,101,114,116,117,114,98,101,100,67,111,110,116,97,99,116,82,101,115,117,108,116,0,0,0,0,0,0,208,68,0,0,176,63,0,0,192,43,0,0,0,0,0,0,0,0,0,0,144,64,0,0,219,0,0,0,220,0,0,0,56,0,0,0,57,0,0,0,7,0,0,0,0,0,0,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,50,49,98,116,87,105,116,104,111,117,116,77,97,114,103,105,110,82,101,115,117,108,116,95,48,0,0,208,68,0,0,0,64,0,0,176,33,0,0,0,0,0,0,0,0,0,0,72,65,0,0,221,0,0,0,222,0,0,0,58,0,0,0,59,0,0,0,8,0,0,0,0,0,0,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,49,51,98,116,68,117,109,109,121,82,101,115,117,108,116,0,0,0,0,208,68,0,0,192,64,0,0,176,33,0,0,0,0,0,0,0,0,0,0,160,65,0,0,223,0,0,0,224,0,0,0,15,0,0,0,9,0,0,0,81,0,0,0,0,0,0,0,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,208,68,0,0,120,65,0,0,48,42,0,0,0,0,0,0,0,0,0,0,216,65,0,0,225,0,0,0,226,0,0,0,49,56,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,0,0,0,0,168,68,0,0,192,65,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,66,0,0,227,0,0,0,228,0,0,0,22,0,0,0,23,0,0,0,69,0,0,0,0,0,0,0,50,51,98,116,72,97,115,104,101,100,83,105,109,112,108,101,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,168,68,0,0,56,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,116,73,110,116,73,110,100,101,120,68,97,116,97,0,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,0,0,0,0,0,98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,0,98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0,0,0,0,0,98,116,77,101,115,104,80,97,114,116,68,97,116,97,0,0,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0,0,0,0,0,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,0,0,0,0,0,0,0,168,68,0,0,32,67,0,0,0,0,0,0,176,67,0,0,229,0,0,0,230,0,0,0,43,0,0,0,1,0,0,0,2,0,0,0,69,0,0,0,70,0,0,0,64,0,0,0,82,0,0,0,83,0,0,0,65,0,0,0,53,0,0,0,54,0,0,0,66,0,0,0,20,0,0,0,0,0,0,0,50,54,98,116,84,114,105,97,110,103,108,101,73,110,100,101,120,86,101,114,116,101,120,65,114,114,97,121,0,0,0,0,208,68,0,0,144,67,0,0,64,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,111,111,116,0,0,0,0,216,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,168,68,0,0,24,68,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,208,68,0,0,48,68,0,0,40,68,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,208,68,0,0,104,68,0,0,88,68,0,0,0,0,0,0,0,0,0,0,144,68,0,0,231,0,0,0,232,0,0,0,233,0,0,0,234,0,0,0,24,0,0,0,4,0,0,0,16,0,0,0,49,0,0,0,0,0,0,0,24,69,0,0,231,0,0,0,235,0,0,0,233,0,0,0,234,0,0,0,24,0,0,0,5,0,0,0,17,0,0,0,50,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,208,68,0,0,240,68,0,0,144,68,0,0,0,0,0,0,0,0,0,0,120,69,0,0,231,0,0,0,236,0,0,0,233,0,0,0,234,0,0,0,24,0,0,0,6,0,0,0,18,0,0,0,51,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,208,68,0,0,80,69,0,0,144,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,71,0,0,237,0,0,0,238,0,0,0,70,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,208,68,0,0,168,71,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  var _cosf=Math_cos;

   
  Module["_i64Subtract"] = _i64Subtract;

  var _fabsf=Math_abs;

  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  function _abort() {
      Module['abort']();
    }

  var _acosf=Math_acos;

   
  Module["_strlen"] = _strlen;

  var _sqrtf=Math_sqrt;

   
  Module["_i64Add"] = _i64Add;

  var _llvm_pow_f32=Math_pow;

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = Math.floor(idx / this.chunkSize);
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(xhr.response || []);
              } else {
                return intArrayFromString(xhr.responseText || '', true);
              }
            });
            var lazyArray = this;
            lazyArray.setDataGetter(function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
              return lazyArray.chunks[chunkNum];
            });
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
          function pointerLockChange() {
            Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                  document['mozPointerLockElement'] === canvas ||
                                  document['webkitPointerLockElement'] === canvas ||
                                  document['msPointerLockElement'] === canvas;
          }
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = -event.wheelDelta;
            break;
          case 'wheel': 
            delta = event.deltaY;
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return Math.max(-1, Math.min(1, delta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodf=_fmod;

  var _atan2f=Math_atan2;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _llvm_trap() {
      abort('trap!');
    }

  function ___cxa_guard_release() {}

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((ptr)+(4))>>2)]=Math.floor((now-1000*Math.floor(now/1000))*1000); // microseconds
      return 0;
    }

  function _emscripten_asm_const_double(code) {
      var args = Array.prototype.slice.call(arguments, 1);
      return +Runtime.getAsmConst(code, args.length).apply(null, args);
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  var _sinf=Math_sin;

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function __ZNSt9exceptionD2Ev() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

   
  Module["_memmove"] = _memmove;

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;


  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _UItoF=true;

  var __ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiidii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiidii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_iiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viidi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viidi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viddiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viddiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vidii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidi(index,a1,a2,a3) {
  try {
    Module["dynCall_vidi"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_diiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiddddiid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    Module["dynCall_viiiiddddiid"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_diiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiid(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiidii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_diiidii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viidii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viidii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_diiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiid(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_diiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_did(index,a1,a2) {
  try {
    return Module["dynCall_did"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiidddddidi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  try {
    Module["dynCall_viiiidddddidi"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diidii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_diidii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_diiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iidid(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iidid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.__ZTISt9exception|0;var p=0;var q=0;var r=0;var s=0;var t=+env.NaN,u=+env.Infinity;var v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0.0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=global.Math.floor;var P=global.Math.abs;var Q=global.Math.sqrt;var R=global.Math.pow;var S=global.Math.cos;var T=global.Math.sin;var U=global.Math.tan;var V=global.Math.acos;var W=global.Math.asin;var X=global.Math.atan;var Y=global.Math.atan2;var Z=global.Math.exp;var _=global.Math.log;var $=global.Math.ceil;var aa=global.Math.imul;var ba=env.abort;var ca=env.assert;var da=env.asmPrintInt;var ea=env.asmPrintFloat;var fa=env.min;var ga=env.invoke_viiiii;var ha=env.invoke_vid;var ia=env.invoke_vi;var ja=env.invoke_viiidii;var ka=env.invoke_vii;var la=env.invoke_iiiiiiiiiii;var ma=env.invoke_ii;var na=env.invoke_viidi;var oa=env.invoke_viddiii;var pa=env.invoke_vidii;var qa=env.invoke_iiiii;var ra=env.invoke_vidi;var sa=env.invoke_diiiiiiii;var ta=env.invoke_viiiiddddiid;var ua=env.invoke_diiiii;var va=env.invoke_iiii;var wa=env.invoke_viiiiii;var xa=env.invoke_iiid;var ya=env.invoke_di;var za=env.invoke_iiiiiii;var Aa=env.invoke_diiidii;var Ba=env.invoke_viidii;var Ca=env.invoke_viiiiiiiii;var Da=env.invoke_viiiiiiiiii;var Ea=env.invoke_iii;var Fa=env.invoke_diii;var Ga=env.invoke_diiiiiiiiii;var Ha=env.invoke_viiiid;var Ia=env.invoke_diiiiiiiii;var Ja=env.invoke_did;var Ka=env.invoke_viiiidddddidi;var La=env.invoke_diidii;var Ma=env.invoke_diiii;var Na=env.invoke_iiiiiiiiii;var Oa=env.invoke_viiid;var Pa=env.invoke_viii;var Qa=env.invoke_v;var Ra=env.invoke_viid;var Sa=env.invoke_iidid;var Ta=env.invoke_viiii;var Ua=env.___cxa_throw;var Va=env._cosf;var Wa=env.__ZSt9terminatev;var Xa=env._fmod;var Ya=env.___cxa_guard_acquire;var Za=env.___cxa_is_number_type;var _a=env._atan2f;var $a=env.___cxa_find_matching_catch;var ab=env._fflush;var bb=env.___cxa_guard_release;var cb=env._emscripten_asm_const_double;var db=env.___setErrNo;var eb=env._fabsf;var fb=env._sbrk;var gb=env._llvm_pow_f32;var hb=env.___cxa_begin_catch;var ib=env._sinf;var jb=env.___resumeException;var kb=env.__ZSt18uncaught_exceptionv;var lb=env._sysconf;var mb=env._acosf;var nb=env._emscripten_memcpy_big;var ob=env._sqrtf;var pb=env.___errno_location;var qb=env.__ZNSt9exceptionD2Ev;var rb=env.___cxa_does_inherit;var sb=env.__exit;var tb=env._abort;var ub=env._time;var vb=env.___cxa_allocate_exception;var wb=env._gettimeofday;var xb=env._llvm_trap;var yb=env._exit;var zb=env.___cxa_pure_virtual;var Ab=0.0;
// EMSCRIPTEN_START_FUNCS
function jk(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0;m=i;i=i+320|0;c[b+188>>2]=-1;Mv(2544);c[b+184>>2]=0;if((e|0)>0){p=0;do{c[(c[d+(p<<2)>>2]|0)+212>>2]=-1;p=p+1|0}while((p|0)!=(e|0))}q=c[b+12>>2]|0;if((q|0)<(e+1|0)){if((e+1|0)!=0?(c[4336]=(c[4336]|0)+1,o=cw(((e+1|0)*244|3)+16|0)|0,(o|0)!=0):0){c[(o+19&-16)+ -4>>2]=o;o=o+19&-16}else{o=0}p=c[b+8>>2]|0;if((p|0)>0){q=0;do{x=o+(q*244|0)|0;Y=c[b+16>>2]|0;w=Y+(q*244|0)|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];x=o+(q*244|0)+16|0;w=Y+(q*244|0)+16|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];x=o+(q*244|0)+32|0;w=Y+(q*244|0)+32|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];x=o+(q*244|0)+48|0;w=Y+(q*244|0)+48|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];mw(o+(q*244|0)+64|0,Y+(q*244|0)+64|0,180)|0;q=q+1|0}while((q|0)!=(p|0))}p=c[b+16>>2]|0;if((p|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[p+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=o;c[b+12>>2]=e+1;q=e+1|0;o=b+8|0}else{o=b+8|0}jw(m+56|0,0,244)|0;p=c[o>>2]|0;if((p|0)<0){if((q|0)<0){q=c[b+16>>2]|0;if((q|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[q+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+12>>2]=0}do{Y=c[b+16>>2]|0;x=Y+(p*244|0)|0;c[x+0>>2]=c[m+56>>2];c[x+4>>2]=c[m+60>>2];c[x+8>>2]=c[m+64>>2];c[x+12>>2]=c[m+68>>2];x=Y+(p*244|0)+16|0;c[x+0>>2]=c[m+72>>2];c[x+4>>2]=c[m+76>>2];c[x+8>>2]=c[m+80>>2];c[x+12>>2]=c[m+84>>2];x=Y+(p*244|0)+32|0;c[x+0>>2]=c[m+88>>2];c[x+4>>2]=c[m+92>>2];c[x+8>>2]=c[m+96>>2];c[x+12>>2]=c[m+100>>2];x=Y+(p*244|0)+48|0;c[x+0>>2]=c[m+104>>2];c[x+4>>2]=c[m+108>>2];c[x+8>>2]=c[m+112>>2];c[x+12>>2]=c[m+116>>2];mw(Y+(p*244|0)+64|0,m+120|0,180)|0;p=p+1|0}while((p|0)!=0)}c[o>>2]=0;if((e|0)>0){o=0;do{p=d+(o<<2)|0;q=gk(b,c[p>>2]|0,+g[l+12>>2])|0;p=c[p>>2]|0;if((!((p|0)==0?1:(c[p+236>>2]&2|0)==0)?+g[p+344>>2]!=0.0:0)?(n=c[b+16>>2]|0,(c[p+504>>2]&2|0)!=0):0){E=+g[l+76>>2];S=1.0/+g[p+396>>2];V=1.0/+g[p+400>>2];F=1.0/+g[p+404>>2];M=+g[p+4>>2];N=+g[p+8>>2];O=+g[p+12>>2];R=+g[p+20>>2];U=+g[p+24>>2];X=+g[p+28>>2];T=+g[p+36>>2];W=+g[p+40>>2];C=+g[p+44>>2];B=+g[p+328>>2];z=+g[p+332>>2];D=+g[p+336>>2];y=(M*S*M+N*V*N+O*F*O)*B+(S*M*R+V*N*U+F*O*X)*z+(S*M*T+V*N*W+F*O*C)*D;A=(M*S*R+N*V*U+O*F*X)*B+(R*S*R+U*V*U+X*F*X)*z+(S*R*T+V*U*W+F*X*C)*D;C=D*(T*S*T+W*V*W+C*F*C)+(B*(M*S*T+N*V*W+O*F*C)+z*(R*S*T+U*V*W+X*F*C));F=(z*C-D*A)*(z*C-D*A)+(D*y-B*C)*(D*y-B*C)+(B*A-z*y)*(B*A-z*y);if(F>E*E){X=1.0/+Q(+F)*E;E=(z*C-D*A)*X;C=X*(D*y-B*C);y=X*(B*A-z*y)}else{E=z*C-D*A;C=D*y-B*C;y=B*A-z*y}V=+g[l+12>>2];W=(E*+g[p+268>>2]+C*+g[p+284>>2]+y*+g[p+300>>2])*V;X=V*(E*+g[p+272>>2]+C*+g[p+288>>2]+y*+g[p+304>>2]);g[n+(q*244|0)+224>>2]=+g[n+(q*244|0)+224>>2]-(E*+g[p+264>>2]+C*+g[p+280>>2]+y*+g[p+296>>2])*V;g[n+(q*244|0)+228>>2]=+g[n+(q*244|0)+228>>2]-W;g[n+(q*244|0)+232>>2]=+g[n+(q*244|0)+232>>2]-X}o=o+1|0}while((o|0)<(e|0))}if((k|0)>0){e=0;do{Y=c[j+(e<<2)>>2]|0;Db[c[(c[Y>>2]|0)+8>>2]&255](Y);g[Y+36>>2]=0.0;e=e+1|0}while((e|0)<(k|0))}n=c[b+168>>2]|0;if((n|0)<(k|0)?(c[b+172>>2]|0)<(k|0):0){if((k|0)==0){e=0}else{c[4336]=(c[4336]|0)+1;e=cw((k<<3|3)+16|0)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}n=c[b+168>>2]|0}if((n|0)>0){d=0;do{o=e+(d<<3)|0;if((o|0)!=0){x=(c[b+176>>2]|0)+(d<<3)|0;Y=c[x+4>>2]|0;c[o>>2]=c[x>>2];c[o+4>>2]=Y}d=d+1|0}while((d|0)!=(n|0))}n=c[b+176>>2]|0;if((n|0)!=0){if((a[b+180>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0)}c[b+176>>2]=0}a[b+180>>0]=1;c[b+176>>2]=e;c[b+172>>2]=k}c[b+168>>2]=k;if((k|0)>0){e=0;n=0;do{d=c[b+176>>2]|0;o=d+(e<<3)|0;p=j+(e<<2)|0;q=c[p>>2]|0;r=c[q+44>>2]|0;if((r|0)!=0){q=r+0|0;r=q+64|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(r|0));q=c[p>>2]|0}if((a[q+20>>0]|0)==0){c[o>>2]=0;c[d+(e<<3)+4>>2]=0;d=0}else{Fb[c[(c[q>>2]|0)+16>>2]&127](q,o);d=c[o>>2]|0}n=d+n|0;e=e+1|0}while((e|0)<(k|0))}else{n=0}e=c[b+48>>2]|0;if((e|0)<(n|0)?(c[b+52>>2]|0)<(n|0):0){if((n|0)==0){d=0}else{c[4336]=(c[4336]|0)+1;e=cw((n*152|3)+16|0)|0;if((e|0)==0){d=0}else{c[(e+19&-16)+ -4>>2]=e;d=e+19&-16}e=c[b+48>>2]|0}if((e|0)>0){o=0;do{mw(d+(o*152|0)|0,(c[b+56>>2]|0)+(o*152|0)|0,152)|0;o=o+1|0}while((o|0)!=(e|0))}e=c[b+56>>2]|0;if((e|0)!=0){if((a[b+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=d;c[b+52>>2]=n}c[b+48>>2]=n;if((k|0)>0){o=c[b+176>>2]|0;e=0;n=0;while(1){d=o+(n<<3)|0;if((c[d>>2]|0)==0){d=0}else{v=c[b+56>>2]|0;u=j+(n<<2)|0;t=c[u>>2]|0;o=c[t+28>>2]|0;p=c[t+32>>2]|0;s=gk(b,o,+g[l+12>>2])|0;r=gk(b,p,+g[l+12>>2])|0;q=c[b+16>>2]|0;x=c[t+24>>2]|0;if((x|0)<=0){x=c[l+20>>2]|0}if((x|0)>(c[b+184>>2]|0)){c[b+184>>2]=x}if((c[d>>2]|0)>0){w=0;do{Y=w+e|0;jw(v+(Y*152|0)|0,0,152)|0;g[v+(Y*152|0)+120>>2]=-3.4028234663852886e+38;g[v+(Y*152|0)+124>>2]=3.4028234663852886e+38;g[v+(Y*152|0)+100>>2]=0.0;g[v+(Y*152|0)+96>>2]=0.0;c[v+(Y*152|0)+144>>2]=s;c[v+(Y*152|0)+148>>2]=r;c[v+(Y*152|0)+136>>2]=x;w=w+1|0}while((w|0)<(c[d>>2]|0))}c[q+(s*244|0)+64>>2]=0;c[q+(s*244|0)+68>>2]=0;c[q+(s*244|0)+72>>2]=0;c[q+(s*244|0)+76>>2]=0;c[q+(s*244|0)+80>>2]=0;c[q+(s*244|0)+84>>2]=0;c[q+(s*244|0)+88>>2]=0;c[q+(s*244|0)+92>>2]=0;c[q+(s*244|0)+144>>2]=0;c[q+(s*244|0)+148>>2]=0;c[q+(s*244|0)+152>>2]=0;c[q+(s*244|0)+156>>2]=0;c[q+(s*244|0)+160>>2]=0;c[q+(s*244|0)+164>>2]=0;c[q+(s*244|0)+168>>2]=0;c[q+(s*244|0)+172>>2]=0;c[q+(r*244|0)+64>>2]=0;c[q+(r*244|0)+68>>2]=0;c[q+(r*244|0)+72>>2]=0;c[q+(r*244|0)+76>>2]=0;c[q+(r*244|0)+80>>2]=0;c[q+(r*244|0)+84>>2]=0;c[q+(r*244|0)+88>>2]=0;c[q+(r*244|0)+92>>2]=0;c[q+(r*244|0)+144>>2]=0;c[q+(r*244|0)+148>>2]=0;c[q+(r*244|0)+152>>2]=0;c[q+(r*244|0)+156>>2]=0;c[q+(r*244|0)+160>>2]=0;c[q+(r*244|0)+164>>2]=0;c[q+(r*244|0)+168>>2]=0;c[q+(r*244|0)+172>>2]=0;g[m>>2]=1.0/+g[l+12>>2];g[m+4>>2]=+g[l+32>>2];c[m+8>>2]=v+(e*152|0)+16;c[m+12>>2]=v+(e*152|0);c[m+16>>2]=v+(e*152|0)+48;c[m+20>>2]=v+(e*152|0)+32;c[m+24>>2]=38;c[m+28>>2]=v+(e*152|0)+112;Y=v+(e*152|0)+116|0;g[Y>>2]=+g[l+40>>2];g[m+52>>2]=+g[l+4>>2];c[m+32>>2]=Y;c[m+36>>2]=v+(e*152|0)+120;c[m+40>>2]=v+(e*152|0)+124;c[m+48>>2]=c[l+20>>2];Y=c[u>>2]|0;Fb[c[(c[Y>>2]|0)+20>>2]&127](Y,m);if((c[d>>2]|0)>0){w=0;do{x=w+e|0;Y=(c[u>>2]|0)+16|0;y=+g[Y>>2];if(+g[v+(x*152|0)+124>>2]>=y){g[v+(x*152|0)+124>>2]=y;y=+g[Y>>2]}y=-y;if(+g[v+(x*152|0)+120>>2]<=y){g[v+(x*152|0)+120>>2]=y}c[v+(x*152|0)+132>>2]=t;Y=c[t+28>>2]|0;W=+g[v+(x*152|0)>>2];I=+g[v+(x*152|0)+4>>2];J=+g[v+(x*152|0)+8>>2];y=(W*+g[Y+280>>2]+I*+g[Y+284>>2]+J*+g[Y+288>>2])*+g[Y+548>>2];H=(W*+g[Y+296>>2]+I*+g[Y+300>>2]+J*+g[Y+304>>2])*+g[Y+552>>2];g[v+(x*152|0)+64>>2]=(+g[Y+264>>2]*W+ +g[Y+268>>2]*I+ +g[Y+272>>2]*J)*+g[Y+544>>2];g[v+(x*152|0)+68>>2]=y;g[v+(x*152|0)+72>>2]=H;g[v+(x*152|0)+76>>2]=0.0;Y=c[t+32>>2]|0;H=+g[v+(x*152|0)+32>>2];y=+g[v+(x*152|0)+36>>2];J=+g[v+(x*152|0)+40>>2];I=(H*+g[Y+280>>2]+y*+g[Y+284>>2]+J*+g[Y+288>>2])*+g[Y+548>>2];W=(H*+g[Y+296>>2]+y*+g[Y+300>>2]+J*+g[Y+304>>2])*+g[Y+552>>2];g[v+(x*152|0)+80>>2]=(+g[Y+264>>2]*H+ +g[Y+268>>2]*y+ +g[Y+272>>2]*J)*+g[Y+544>>2];g[v+(x*152|0)+84>>2]=I;g[v+(x*152|0)+88>>2]=W;g[v+(x*152|0)+92>>2]=0.0;W=+g[o+344>>2];I=+g[v+(x*152|0)+16>>2];H=+g[v+(x*152|0)+20>>2];G=+g[v+(x*152|0)+24>>2];F=+g[v+(x*152|0)>>2];E=+g[v+(x*152|0)+4>>2];D=+g[v+(x*152|0)+8>>2];X=+g[p+344>>2];C=+g[v+(x*152|0)+48>>2];B=+g[v+(x*152|0)+52>>2];A=+g[v+(x*152|0)+56>>2];z=+g[v+(x*152|0)+32>>2];J=I*W*I+H*W*H+G*W*G+(F*(+g[o+264>>2]*F+ +g[o+268>>2]*E+ +g[o+272>>2]*D)+E*(F*+g[o+280>>2]+E*+g[o+284>>2]+D*+g[o+288>>2])+D*(F*+g[o+296>>2]+E*+g[o+300>>2]+D*+g[o+304>>2]))+(C*X*C+B*X*B+A*X*A)+(z*(+g[p+264>>2]*z+ +g[p+268>>2]*y+ +g[p+272>>2]*J)+y*(z*+g[p+280>>2]+y*+g[p+284>>2]+J*+g[p+288>>2])+J*(z*+g[p+296>>2]+y*+g[p+300>>2]+J*+g[p+304>>2]));if(+P(+J)>1.1920928955078125e-7){T=1.0/J}else{T=0.0}g[v+(x*152|0)+108>>2]=T;if((c[q+(s*244|0)+240>>2]|0)==0){X=0.0;K=0.0;L=0.0;M=0.0;N=0.0;O=0.0}else{X=+g[q+(s*244|0)+208>>2];K=+g[q+(s*244|0)+212>>2];L=+g[q+(s*244|0)+216>>2];M=+g[q+(s*244|0)+224>>2];N=+g[q+(s*244|0)+228>>2];O=+g[q+(s*244|0)+232>>2]}if((c[q+(r*244|0)+240>>2]|0)==0){W=0.0;V=0.0;U=0.0;J=0.0;S=0.0;R=0.0}else{W=+g[q+(r*244|0)+208>>2];V=+g[q+(r*244|0)+212>>2];U=+g[q+(r*244|0)+216>>2];J=+g[q+(r*244|0)+224>>2];S=+g[q+(r*244|0)+228>>2];R=+g[q+(r*244|0)+232>>2]}g[v+(x*152|0)+112>>2]=+g[v+(x*152|0)+112>>2]*T+T*(0.0- +g[m+52>>2]*((X+ +g[o+312>>2])*I+(K+ +g[o+316>>2])*H+(L+ +g[o+320>>2])*G+((M+ +g[o+328>>2])*F+(N+ +g[o+332>>2])*E+(O+ +g[o+336>>2])*D)+((W+ +g[p+312>>2])*C+(V+ +g[p+316>>2])*B+(U+ +g[p+320>>2])*A+((J+ +g[p+328>>2])*z+(S+ +g[p+332>>2])*y+(R+ +g[p+336>>2])*+g[v+(x*152|0)+40>>2]))));g[v+(x*152|0)+100>>2]=0.0;w=w+1|0}while((w|0)<(c[d>>2]|0))}o=c[b+176>>2]|0;d=c[o+(n<<3)>>2]|0}n=n+1|0;if((n|0)>=(k|0)){break}else{e=d+e|0}}}mc[c[(c[b>>2]|0)+28>>2]&63](b,f,h,l);f=c[b+48>>2]|0;j=c[b+28>>2]|0;k=c[b+68>>2]|0;e=c[b+128>>2]|0;if((e|0)<(f|0)?(c[b+132>>2]|0)<(f|0):0){if((f|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;h=cw((f<<2|3)+16|0)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}e=c[b+128>>2]|0}if((e|0)>0){n=0;do{d=h+(n<<2)|0;if((d|0)!=0){c[d>>2]=c[(c[b+136>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(e|0))}e=c[b+136>>2]|0;if((e|0)!=0){if((a[b+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=h;c[b+132>>2]=f}c[b+128>>2]=f;if((c[l+64>>2]&16|0)==0){h=c[b+108>>2]|0;if((h|0)<(j|0)?(c[b+112>>2]|0)<(j|0):0){if((j|0)==0){l=0}else{c[4336]=(c[4336]|0)+1;l=cw((j<<2|3)+16|0)|0;if((l|0)==0){l=0}else{c[(l+19&-16)+ -4>>2]=l;l=l+19&-16}h=c[b+108>>2]|0}if((h|0)>0){n=0;do{e=l+(n<<2)|0;if((e|0)!=0){c[e>>2]=c[(c[b+116>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(h|0))}h=c[b+116>>2]|0;if((h|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=l;c[b+112>>2]=j}c[b+108>>2]=j}else{l=c[b+108>>2]|0;if((l|0)<(j<<1|0)?(c[b+112>>2]|0)<(j<<1|0):0){if((j|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;l=cw((j<<3|3)+16|0)|0;if((l|0)==0){h=0}else{c[(l+19&-16)+ -4>>2]=l;h=l+19&-16}l=c[b+108>>2]|0}if((l|0)>0){n=0;do{e=h+(n<<2)|0;if((e|0)!=0){c[e>>2]=c[(c[b+116>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}l=c[b+116>>2]|0;if((l|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=h;c[b+112>>2]=j<<1}c[b+108>>2]=j<<1}l=c[b+148>>2]|0;if((l|0)<(k|0)?(c[b+152>>2]|0)<(k|0):0){if((k|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;l=cw((k<<2|3)+16|0)|0;if((l|0)==0){h=0}else{c[(l+19&-16)+ -4>>2]=l;h=l+19&-16}l=c[b+148>>2]|0}if((l|0)>0){n=0;do{e=h+(n<<2)|0;if((e|0)!=0){c[e>>2]=c[(c[b+156>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(l|0))}l=c[b+156>>2]|0;if((l|0)!=0){if((a[b+160>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[b+156>>2]=0}a[b+160>>0]=1;c[b+156>>2]=h;c[b+152>>2]=k}c[b+148>>2]=k;if((f|0)>0){l=c[b+136>>2]|0;h=0;do{c[l+(h<<2)>>2]=h;h=h+1|0}while((h|0)!=(f|0))}if((j|0)>0){l=c[b+116>>2]|0;f=0;do{c[l+(f<<2)>>2]=f;f=f+1|0}while((f|0)!=(j|0))}if((k|0)>0){b=c[b+156>>2]|0;l=0;do{c[b+(l<<2)>>2]=l;l=l+1|0}while((l|0)!=(k|0))}b=c[4354]|0;Y=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=Y;if((Y|0)!=0){i=m;return 0.0}do{if((c[b+4>>2]|0)!=0){wb(m+304|0,0)|0;Y=c[4340]|0;g[b+8>>2]=+(((c[m+308>>2]|0)-(c[Y+4>>2]|0)+(((c[m+304>>2]|0)-(c[Y>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=m;return 0.0}}}while(0);c[4354]=c[b+20>>2];i=m;return 0.0}function kk(b,d,e,f,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0;j=i;n=c[b+48>>2]|0;e=c[b+28>>2]|0;h=c[b+68>>2]|0;if((c[m+64>>2]&1|0)!=0){if((n|0)>0){f=c[b+136>>2]|0;q=c[b+192>>2]|0;r=0;do{s=f+(r<<2)|0;t=c[s>>2]|0;r=r+1|0;q=(aa(q,1664525)|0)+1013904223|0;if(r>>>0<65537){u=q>>>16^q;if(r>>>0<257){if(r>>>0<17){u=(u>>>8^u)>>>4^(u>>>8^u);if(r>>>0<5){if(r>>>0<3){u=(u>>>2^u)>>>1^(u>>>2^u)}else{u=u>>>2^u}}}else{u=u>>>8^u}}}else{u=q}u=f+(((u>>>0)%(r>>>0)|0)<<2)|0;c[s>>2]=c[u>>2];c[u>>2]=t}while((r|0)!=(n|0));c[b+192>>2]=q}if((c[m+20>>2]|0)>(d|0)){if((e|0)>0){s=c[b+116>>2]|0;r=c[b+192>>2]|0;q=0;do{f=s+(q<<2)|0;n=c[f>>2]|0;q=q+1|0;r=(aa(r,1664525)|0)+1013904223|0;if(q>>>0<65537){t=r>>>16^r;if(q>>>0<257){if(q>>>0<17){t=(t>>>8^t)>>>4^(t>>>8^t);if(q>>>0<5){if(q>>>0<3){t=(t>>>2^t)>>>1^(t>>>2^t)}else{t=t>>>2^t}}}else{t=t>>>8^t}}}else{t=r}u=s+(((t>>>0)%(q>>>0)|0)<<2)|0;c[f>>2]=c[u>>2];c[u>>2]=n}while((q|0)!=(e|0));c[b+192>>2]=r}if((h|0)>0){r=c[b+156>>2]|0;q=c[b+192>>2]|0;f=0;do{n=r+(f<<2)|0;e=c[n>>2]|0;f=f+1|0;q=(aa(q,1664525)|0)+1013904223|0;if(f>>>0<65537){s=q>>>16^q;if(f>>>0<257){if(f>>>0<17){s=(s>>>8^s)>>>4^(s>>>8^s);if(f>>>0<5){if(f>>>0<3){s=(s>>>2^s)>>>1^(s>>>2^s)}else{s=s>>>2^s}}}else{s=s>>>8^s}}}else{s=q}u=r+(((s>>>0)%(f>>>0)|0)<<2)|0;c[n>>2]=c[u>>2];c[u>>2]=e}while((f|0)!=(h|0));c[b+192>>2]=q}}}f=c[b+48>>2]|0;if((c[m+64>>2]&256|0)==0){if((f|0)>0){o=0;do{h=c[(c[b+136>>2]|0)+(o<<2)>>2]|0;p=c[b+56>>2]|0;if((c[p+(h*152|0)+136>>2]|0)>(d|0)){f=c[b+16>>2]|0;$j(f+((c[p+(h*152|0)+144>>2]|0)*244|0)|0,f+((c[p+(h*152|0)+148>>2]|0)*244|0)|0,p+(h*152|0)|0);f=c[b+48>>2]|0}o=o+1|0}while((o|0)<(f|0))}if((c[m+20>>2]|0)<=(d|0)){i=j;return 0.0}if((l|0)>0){o=0;do{d=k+(o<<2)|0;p=c[d>>2]|0;if((a[p+20>>0]|0)!=0){s=gk(b,c[p+28>>2]|0,+g[m+12>>2])|0;u=gk(b,c[(c[d>>2]|0)+32>>2]|0,+g[m+12>>2])|0;t=c[b+16>>2]|0;r=c[d>>2]|0;hc[c[(c[r>>2]|0)+24>>2]&15](r,t+(s*244|0)|0,t+(u*244|0)|0,+g[m+12>>2])}o=o+1|0}while((o|0)!=(l|0))}m=c[b+28>>2]|0;if((m|0)>0){l=0;do{u=c[(c[b+116>>2]|0)+(l<<2)>>2]|0;t=c[b+36>>2]|0;s=c[b+16>>2]|0;ak(s+((c[t+(u*152|0)+144>>2]|0)*244|0)|0,s+((c[t+(u*152|0)+148>>2]|0)*244|0)|0,t+(u*152|0)|0);l=l+1|0}while((l|0)!=(m|0))}o=c[b+68>>2]|0;if((o|0)>0){k=0;do{l=c[(c[b+156>>2]|0)+(k<<2)>>2]|0;m=c[b+76>>2]|0;v=+g[(c[b+36>>2]|0)+((c[m+(l*152|0)+140>>2]|0)*152|0)+100>>2];if(v>0.0){w=v*+g[m+(l*152|0)+104>>2];g[m+(l*152|0)+120>>2]=-w;g[m+(l*152|0)+124>>2]=w;u=c[b+16>>2]|0;$j(u+((c[m+(l*152|0)+144>>2]|0)*244|0)|0,u+((c[m+(l*152|0)+148>>2]|0)*244|0)|0,m+(l*152|0)|0)}k=k+1|0}while((k|0)!=(o|0))}m=c[b+88>>2]|0;if((m|0)<=0){i=j;return 0.0}k=0;do{l=c[b+96>>2]|0;v=+g[(c[b+36>>2]|0)+((c[l+(k*152|0)+140>>2]|0)*152|0)+100>>2];if(v>0.0){w=+g[l+(k*152|0)+104>>2];w=v*w>w?w:v*w;g[l+(k*152|0)+120>>2]=-w;g[l+(k*152|0)+124>>2]=w;u=c[b+16>>2]|0;$j(u+((c[l+(k*152|0)+144>>2]|0)*244|0)|0,u+((c[l+(k*152|0)+148>>2]|0)*244|0)|0,l+(k*152|0)|0)}k=k+1|0}while((k|0)!=(m|0));i=j;return 0.0}if((f|0)>0){h=0;do{n=c[(c[b+136>>2]|0)+(h<<2)>>2]|0;e=c[b+56>>2]|0;if((c[e+(n*152|0)+136>>2]|0)>(d|0)){f=c[b+16>>2]|0;$j(f+((c[e+(n*152|0)+144>>2]|0)*244|0)|0,f+((c[e+(n*152|0)+148>>2]|0)*244|0)|0,e+(n*152|0)|0);f=c[b+48>>2]|0}h=h+1|0}while((h|0)<(f|0))}if((c[m+20>>2]|0)<=(d|0)){i=j;return 0.0}if((l|0)>0){d=0;do{e=k+(d<<2)|0;h=c[e>>2]|0;if((a[h+20>>0]|0)!=0){s=gk(b,c[h+28>>2]|0,+g[m+12>>2])|0;u=gk(b,c[(c[e>>2]|0)+32>>2]|0,+g[m+12>>2])|0;t=c[b+16>>2]|0;r=c[e>>2]|0;hc[c[(c[r>>2]|0)+24>>2]&15](r,t+(s*244|0)|0,t+(u*244|0)|0,+g[m+12>>2])}d=d+1|0}while((d|0)!=(l|0))}n=c[m+64>>2]|0;l=c[b+28>>2]|0;if((n&512|0)!=0){if((l|0)<=0){i=j;return 0.0}e=0;do{h=c[(c[b+116>>2]|0)+(e<<2)>>2]|0;d=c[b+36>>2]|0;k=c[b+16>>2]|0;ak(k+((c[d+(h*152|0)+144>>2]|0)*244|0)|0,k+((c[d+(h*152|0)+148>>2]|0)*244|0)|0,d+(h*152|0)|0);v=+g[d+(h*152|0)+100>>2];h=aa(e,(n>>>4&1)+1|0)|0;d=c[(c[b+156>>2]|0)+(h<<2)>>2]|0;k=c[b+76>>2]|0;if(v>0.0){w=v*+g[k+(d*152|0)+104>>2];g[k+(d*152|0)+120>>2]=-w;g[k+(d*152|0)+124>>2]=w;u=c[b+16>>2]|0;$j(u+((c[k+(d*152|0)+144>>2]|0)*244|0)|0,u+((c[k+(d*152|0)+148>>2]|0)*244|0)|0,k+(d*152|0)|0)}if((c[m+64>>2]&16|0)!=0?(o=c[(c[b+156>>2]|0)+(h+1<<2)>>2]|0,p=c[b+76>>2]|0,v>0.0):0){w=v*+g[p+(o*152|0)+104>>2];g[p+(o*152|0)+120>>2]=-w;g[p+(o*152|0)+124>>2]=w;u=c[b+16>>2]|0;$j(u+((c[p+(o*152|0)+144>>2]|0)*244|0)|0,u+((c[p+(o*152|0)+148>>2]|0)*244|0)|0,p+(o*152|0)|0)}e=e+1|0}while((e|0)!=(l|0));i=j;return 0.0}if((l|0)>0){m=0;do{u=c[(c[b+116>>2]|0)+(m<<2)>>2]|0;t=c[b+36>>2]|0;s=c[b+16>>2]|0;ak(s+((c[t+(u*152|0)+144>>2]|0)*244|0)|0,s+((c[t+(u*152|0)+148>>2]|0)*244|0)|0,t+(u*152|0)|0);m=m+1|0}while((m|0)!=(l|0))}m=c[b+68>>2]|0;if((m|0)>0){l=0;do{k=c[(c[b+156>>2]|0)+(l<<2)>>2]|0;o=c[b+76>>2]|0;v=+g[(c[b+36>>2]|0)+((c[o+(k*152|0)+140>>2]|0)*152|0)+100>>2];if(v>0.0){w=v*+g[o+(k*152|0)+104>>2];g[o+(k*152|0)+120>>2]=-w;g[o+(k*152|0)+124>>2]=w;u=c[b+16>>2]|0;$j(u+((c[o+(k*152|0)+144>>2]|0)*244|0)|0,u+((c[o+(k*152|0)+148>>2]|0)*244|0)|0,o+(k*152|0)|0)}l=l+1|0}while((l|0)!=(m|0))}k=c[b+88>>2]|0;if((k|0)<=0){i=j;return 0.0}l=0;do{m=c[b+96>>2]|0;v=+g[(c[b+36>>2]|0)+((c[m+(l*152|0)+140>>2]|0)*152|0)+100>>2];if(v>0.0){w=+g[m+(l*152|0)+104>>2];w=v*w>w?w:v*w;g[m+(l*152|0)+120>>2]=-w;g[m+(l*152|0)+124>>2]=w;u=c[b+16>>2]|0;$j(u+((c[m+(l*152|0)+144>>2]|0)*244|0)|0,u+((c[m+(l*152|0)+148>>2]|0)*244|0)|0,m+(l*152|0)|0)}l=l+1|0}while((l|0)!=(k|0));i=j;return 0.0}function lk(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;d=i;if((c[j+44>>2]|0)==0){i=d;return}h=c[j+20>>2]|0;if((c[j+64>>2]&256|0)==0){if((h|0)<=0){i=d;return}f=1;while(1){g=c[a+28>>2]|0;if((g|0)>0){h=0;do{e=c[(c[a+116>>2]|0)+(h<<2)>>2]|0;b=c[a+36>>2]|0;k=c[a+16>>2]|0;bk(k+((c[b+(e*152|0)+144>>2]|0)*244|0)|0,k+((c[b+(e*152|0)+148>>2]|0)*244|0)|0,b+(e*152|0)|0);h=h+1|0}while((h|0)!=(g|0));h=c[j+20>>2]|0}if((f|0)>=(h|0)){break}f=f+1|0}i=d;return}else{if((h|0)<=0){i=d;return}f=1;while(1){g=c[a+28>>2]|0;if((g|0)>0){h=0;do{e=c[(c[a+116>>2]|0)+(h<<2)>>2]|0;b=c[a+36>>2]|0;k=c[a+16>>2]|0;bk(k+((c[b+(e*152|0)+144>>2]|0)*244|0)|0,k+((c[b+(e*152|0)+148>>2]|0)*244|0)|0,b+(e*152|0)|0);h=h+1|0}while((h|0)!=(g|0));h=c[j+20>>2]|0}if((f|0)>=(h|0)){break}f=f+1|0}i=d;return}}function mk(a,b,d,e,f,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;m=i;i=i+16|0;Mv(2576);Xb[c[(c[a>>2]|0)+32>>2]&1](a,b,d,e,f,h,j,k,l);o=c[a+184>>2]|0;n=c[k+20>>2]|0;n=(o|0)>(n|0)?o:n;if((n|0)>0){o=0;do{+$b[c[(c[a>>2]|0)+40>>2]&3](a,o,b,d,e,f,h,j,k,l);o=o+1|0}while((o|0)<(n|0))}h=c[4354]|0;o=(c[h+16>>2]|0)+ -1|0;c[h+16>>2]=o;if((o|0)!=0){i=m;return 0.0}do{if((c[h+4>>2]|0)!=0){wb(m|0,0)|0;o=c[4340]|0;g[h+8>>2]=+(((c[m+4>>2]|0)-(c[o+4>>2]|0)+(((c[m>>2]|0)-(c[o>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[h+8>>2];if((c[h+16>>2]|0)==0){h=c[4354]|0;break}else{i=m;return 0.0}}}while(0);c[4354]=c[h+20>>2];i=m;return 0.0}function nk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0;d=i;i=i+80|0;j=c[b+28>>2]|0;l=c[f+64>>2]|0;if((l&4|0)!=0&(j|0)>0){e=c[b+36>>2]|0;k=c[b+76>>2]|0;if((l&16|0)==0){l=0;do{q=c[e+(l*152|0)+132>>2]|0;g[q+120>>2]=+g[e+(l*152|0)+100>>2];g[q+124>>2]=+g[k+((c[e+(l*152|0)+140>>2]|0)*152|0)+100>>2];l=l+1|0}while((l|0)!=(j|0))}else{l=0;do{q=c[e+(l*152|0)+132>>2]|0;g[q+120>>2]=+g[e+(l*152|0)+100>>2];p=c[e+(l*152|0)+140>>2]|0;g[q+124>>2]=+g[k+(p*152|0)+100>>2];g[q+128>>2]=+g[k+((p+1|0)*152|0)+100>>2];l=l+1|0}while((l|0)!=(j|0))}}q=c[b+48>>2]|0;if((q|0)>0){p=0;do{j=c[b+56>>2]|0;l=c[j+(p*152|0)+132>>2]|0;k=c[l+44>>2]|0;e=j+(p*152|0)+100|0;if((k|0)!=0){o=+g[e>>2];s=c[l+28>>2]|0;n=1.0/+g[f+12>>2];m=o*+g[j+(p*152|0)+20>>2]*+g[s+352>>2]*n;r=o*+g[j+(p*152|0)+24>>2]*+g[s+356>>2]*n;g[k>>2]=+g[j+(p*152|0)+16>>2]*o*+g[s+348>>2]*n+ +g[k>>2];g[k+4>>2]=m+ +g[k+4>>2];g[k+8>>2]=r+ +g[k+8>>2];r=+g[e>>2];s=c[l+32>>2]|0;m=1.0/+g[f+12>>2];n=r*+g[j+(p*152|0)+52>>2]*+g[s+352>>2]*m;o=r*+g[j+(p*152|0)+56>>2]*+g[s+356>>2]*m;g[k+32>>2]=+g[j+(p*152|0)+48>>2]*r*+g[s+348>>2]*m+ +g[k+32>>2];g[k+36>>2]=n+ +g[k+36>>2];g[k+40>>2]=o+ +g[k+40>>2];s=c[l+28>>2]|0;o=+g[e>>2];n=1.0/+g[f+12>>2];m=+g[j+(p*152|0)+4>>2]*+g[s+548>>2]*o*n;r=o*+g[j+(p*152|0)+8>>2]*+g[s+552>>2]*n;g[k+16>>2]=+g[j+(p*152|0)>>2]*+g[s+544>>2]*o*n+ +g[k+16>>2];g[k+20>>2]=m+ +g[k+20>>2];g[k+24>>2]=r+ +g[k+24>>2];s=c[l+32>>2]|0;r=+g[e>>2];m=1.0/+g[f+12>>2];n=+g[j+(p*152|0)+36>>2]*+g[s+548>>2]*r*m;o=r*+g[j+(p*152|0)+40>>2]*+g[s+552>>2]*m;g[k+48>>2]=+g[j+(p*152|0)+32>>2]*+g[s+544>>2]*r*m+ +g[k+48>>2];g[k+52>>2]=n+ +g[k+52>>2];g[k+56>>2]=o+ +g[k+56>>2]}g[l+36>>2]=+g[e>>2];r=+P(+(+g[e>>2]));if(r>=+g[l+16>>2]){a[l+20>>0]=0}p=p+1|0}while((p|0)!=(q|0))}p=c[b+8>>2]|0;if((p|0)>0){j=c[b+16>>2]|0;e=0;do{k=j+(e*244|0)|0;l=c[j+(e*244|0)+240>>2]|0;if((l|0)!=0){if((c[f+44>>2]|0)==0){s=j+(e*244|0)+176|0;m=+g[j+(e*244|0)+64>>2]+ +g[s>>2];g[s>>2]=m;s=j+(e*244|0)+180|0;n=+g[j+(e*244|0)+68>>2]+ +g[s>>2];g[s>>2]=n;s=j+(e*244|0)+184|0;o=+g[j+(e*244|0)+72>>2]+ +g[s>>2];g[s>>2]=o;s=j+(e*244|0)+192|0;g[s>>2]=+g[j+(e*244|0)+80>>2]+ +g[s>>2];s=j+(e*244|0)+196|0;g[s>>2]=+g[j+(e*244|0)+84>>2]+ +g[s>>2];s=j+(e*244|0)+200|0;g[s>>2]=+g[j+(e*244|0)+88>>2]+ +g[s>>2]}else{m=+g[f+12>>2];n=+g[f+52>>2];l=j+(e*244|0)+176|0;g[l>>2]=+g[j+(e*244|0)+64>>2]+ +g[l>>2];l=j+(e*244|0)+180|0;g[l>>2]=+g[j+(e*244|0)+68>>2]+ +g[l>>2];l=j+(e*244|0)+184|0;g[l>>2]=+g[j+(e*244|0)+72>>2]+ +g[l>>2];l=j+(e*244|0)+192|0;g[l>>2]=+g[j+(e*244|0)+80>>2]+ +g[l>>2];l=j+(e*244|0)+196|0;g[l>>2]=+g[j+(e*244|0)+84>>2]+ +g[l>>2];l=j+(e*244|0)+200|0;g[l>>2]=+g[j+(e*244|0)+88>>2]+ +g[l>>2];l=j+(e*244|0)+144|0;p=j+(e*244|0)+148|0;if(((((!(+g[l>>2]!=0.0)?!(+g[p>>2]!=0.0):0)?!(+g[j+(e*244|0)+152>>2]!=0.0):0)?!(+g[j+(e*244|0)+160>>2]!=0.0):0)?!(+g[j+(e*244|0)+164>>2]!=0.0):0)?!(+g[j+(e*244|0)+168>>2]!=0.0):0){k=j}else{h=22}if((h|0)==22){h=0;o=+g[j+(e*244|0)+164>>2]*n;r=+g[j+(e*244|0)+168>>2]*n;g[d>>2]=+g[j+(e*244|0)+160>>2]*n;g[d+4>>2]=o;g[d+8>>2]=r;g[d+12>>2]=0.0;ji(k,+g[l>>2],+g[p>>2],+g[j+(e*244|0)+152>>2],d,m,d+16|0);c[k+0>>2]=c[d+16>>2];c[k+4>>2]=c[d+20>>2];c[k+8>>2]=c[d+24>>2];c[k+12>>2]=c[d+28>>2];k=j+(e*244|0)+16|0;c[k+0>>2]=c[d+32>>2];c[k+4>>2]=c[d+36>>2];c[k+8>>2]=c[d+40>>2];c[k+12>>2]=c[d+44>>2];k=j+(e*244|0)+32|0;c[k+0>>2]=c[d+48>>2];c[k+4>>2]=c[d+52>>2];c[k+8>>2]=c[d+56>>2];c[k+12>>2]=c[d+60>>2];k=j+(e*244|0)+48|0;c[k+0>>2]=c[d+64>>2];c[k+4>>2]=c[d+68>>2];c[k+8>>2]=c[d+72>>2];c[k+12>>2]=c[d+76>>2];k=c[b+16>>2]|0}j=k;m=+g[k+(e*244|0)+176>>2];n=+g[k+(e*244|0)+180>>2];o=+g[k+(e*244|0)+184>>2];l=c[k+(e*244|0)+240>>2]|0}m=m+ +g[j+(e*244|0)+208>>2];r=n+ +g[j+(e*244|0)+212>>2];n=o+ +g[j+(e*244|0)+216>>2];q=l+260|0;c[q>>2]=(c[q>>2]|0)+1;g[l+312>>2]=m;g[l+316>>2]=r;g[l+320>>2]=n;g[l+324>>2]=0.0;q=c[b+16>>2]|0;s=c[q+(e*244|0)+240>>2]|0;n=+g[q+(e*244|0)+192>>2]+ +g[q+(e*244|0)+224>>2];o=+g[q+(e*244|0)+196>>2]+ +g[q+(e*244|0)+228>>2];r=+g[q+(e*244|0)+200>>2]+ +g[q+(e*244|0)+232>>2];c[s+260>>2]=(c[s+260>>2]|0)+1;g[s+328>>2]=n;g[s+332>>2]=o;g[s+336>>2]=r;g[s+340>>2]=0.0;if((c[f+44>>2]|0)!=0){q=c[b+16>>2]|0;s=c[q+(e*244|0)+240>>2]|0;p=q+(e*244|0)|0;c[s+260>>2]=(c[s+260>>2]|0)+1;c[s+4>>2]=c[p+0>>2];c[s+8>>2]=c[p+4>>2];c[s+12>>2]=c[p+8>>2];c[s+16>>2]=c[p+12>>2];p=q+(e*244|0)+16|0;c[s+20>>2]=c[p+0>>2];c[s+24>>2]=c[p+4>>2];c[s+28>>2]=c[p+8>>2];c[s+32>>2]=c[p+12>>2];p=q+(e*244|0)+32|0;c[s+36>>2]=c[p+0>>2];c[s+40>>2]=c[p+4>>2];c[s+44>>2]=c[p+8>>2];c[s+48>>2]=c[p+12>>2];q=q+(e*244|0)+48|0;c[s+52>>2]=c[q+0>>2];c[s+56>>2]=c[q+4>>2];c[s+60>>2]=c[q+8>>2];c[s+64>>2]=c[q+12>>2]}j=c[b+16>>2]|0;c[(c[j+(e*244|0)+240>>2]|0)+212>>2]=-1;p=c[b+8>>2]|0}e=e+1|0}while((e|0)<(p|0))}if((c[b+28>>2]|0)<0?(c[b+32>>2]|0)<0:0){f=c[b+36>>2]|0;if((f|0)!=0){if((a[b+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+32>>2]=0}c[b+28>>2]=0;if((c[b+48>>2]|0)<0?(c[b+52>>2]|0)<0:0){f=c[b+56>>2]|0;if((f|0)!=0){if((a[b+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+52>>2]=0}c[b+48>>2]=0;if((c[b+68>>2]|0)<0?(c[b+72>>2]|0)<0:0){f=c[b+76>>2]|0;if((f|0)!=0){if((a[b+80>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=0;c[b+72>>2]=0}c[b+68>>2]=0;if((c[b+88>>2]|0)<0?(c[b+92>>2]|0)<0:0){f=c[b+96>>2]|0;if((f|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+92>>2]=0}c[b+88>>2]=0;if((c[b+8>>2]|0)>=0){c[b+8>>2]=0;i=d;return 0.0}if((c[b+12>>2]|0)>=0){c[b+8>>2]=0;i=d;return 0.0}f=c[b+16>>2]|0;if((f|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+12>>2]=0;c[b+8>>2]=0;i=d;return 0.0}function ok(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;m=i;i=i+16|0;Mv(2616);+bc[c[(c[a>>2]|0)+44>>2]&3](a,b,d,e,f,h,j,k,l);+bc[c[(c[a>>2]|0)+48>>2]&3](a,b,d,e,f,h,j,k,l);+fc[c[(c[a>>2]|0)+36>>2]&1](a,b,d,k);j=c[4354]|0;e=(c[j+16>>2]|0)+ -1|0;c[j+16>>2]=e;if((e|0)!=0){i=m;return 0.0}do{if((c[j+4>>2]|0)!=0){wb(m|0,0)|0;e=c[4340]|0;g[j+8>>2]=+(((c[m+4>>2]|0)-(c[e+4>>2]|0)+(((c[m>>2]|0)-(c[e>>2]|0)|0)*1e6|0)-(c[j+12>>2]|0)|0)>>>0)/1.0e3+ +g[j+8>>2];if((c[j+16>>2]|0)==0){j=c[4354]|0;break}else{i=m;return 0.0}}}while(0);c[4354]=c[j+20>>2];i=m;return 0.0}function pk(a){a=a|0;c[a+192>>2]=0;return}function qk(a,b,c){a=a|0;b=b|0;c=c|0;return}function rk(a,b,c){a=a|0;b=b|0;c=c|0;return}function sk(a){a=a|0;return 1}function tk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+176|0;c[b+4>>2]=d;c[b>>2]=64;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3.4028234663852886e+38;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=e;if((a[3368]|0)!=0){c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Pj(2752,0.0,f);c[b+32>>2]=2752;d=b+36|0;g[d>>2]=0.0;d=b+40|0;g[d>>2]=.30000001192092896;d=b+44|0;c[d>>2]=0;i=f;return}if((Ya(3368)|0)==0){c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Pj(2752,0.0,f);c[b+32>>2]=2752;d=b+36|0;g[d>>2]=0.0;d=b+40|0;g[d>>2]=.30000001192092896;d=b+44|0;c[d>>2]=0;i=f;return}c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;g[2916>>2]=1.0;g[2920>>2]=1.0;g[2924>>2]=1.0;g[2928>>2]=0.0;c[2932>>2]=0;g[2936>>2]=999999984306749400.0;c[2940>>2]=0;c[2944>>2]=0;c[2948>>2]=0;c[2952>>2]=0;c[2956>>2]=1;c[2960>>2]=-1;c[2964>>2]=-1;c[2968>>2]=1;g[2972>>2]=0.0;g[2976>>2]=.5;g[2980>>2]=0.0;g[2984>>2]=0.0;c[2988>>2]=1;c[2992>>2]=0;g[2996>>2]=1.0;c[3e3>>2]=0;c[3004>>2]=0;c[3008>>2]=0;c[3012>>2]=0;g[2756>>2]=1.0;c[2760>>2]=0;c[2764>>2]=0;c[2768>>2]=0;c[2772>>2]=0;g[2776>>2]=1.0;c[2780>>2]=0;c[2784>>2]=0;c[2788>>2]=0;c[2792>>2]=0;g[2796>>2]=1.0;c[2800>>2]=0;c[2804>>2]=0;c[2808>>2]=0;c[2812>>2]=0;c[2816>>2]=0;c[688]=2376;a[3252>>0]=1;c[3248>>2]=0;c[3240>>2]=0;c[3244>>2]=0;g[f+32>>2]=0.0;c[f+36>>2]=0;c[f+104>>2]=0;c[f+108>>2]=c[f+16>>2];c[f+112>>2]=c[f+20>>2];c[f+116>>2]=c[f+24>>2];c[f+120>>2]=c[f+28>>2];g[f+124>>2]=0.0;g[f+128>>2]=0.0;g[f+132>>2]=.5;g[f+136>>2]=0.0;g[f+140>>2]=0.0;g[f+144>>2]=.800000011920929;g[f+148>>2]=1.0;a[f+152>>0]=0;g[f+156>>2]=.004999999888241291;g[f+160>>2]=.009999999776482582;g[f+164>>2]=.009999999776482582;g[f+168>>2]=.009999999776482582;g[f+40>>2]=1.0;c[f+44>>2]=0;c[f+48>>2]=0;c[f+52>>2]=0;c[f+56>>2]=0;g[f+60>>2]=1.0;c[f+64>>2]=0;c[f+68>>2]=0;c[f+72>>2]=0;c[f+76>>2]=0;g[f+80>>2]=1.0;d=f+84|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;Oj(2752,f+32|0);bb(3368);c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Pj(2752,0.0,f);c[b+32>>2]=2752;d=b+36|0;g[d>>2]=0.0;d=b+40|0;g[d>>2]=.30000001192092896;d=b+44|0;c[d>>2]=0;i=f;return}function uk(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,h=0,j=0;f=i;c[b>>2]=Zb[c[(c[e>>2]|0)+28>>2]&31](e,c[a+28>>2]|0)|0;c[b+4>>2]=Zb[c[(c[e>>2]|0)+28>>2]&31](e,c[a+32>>2]|0)|0;h=Zb[c[(c[e>>2]|0)+40>>2]&31](e,a)|0;j=Zb[c[(c[e>>2]|0)+28>>2]&31](e,h)|0;c[b+8>>2]=j;if((j|0)!=0){Fb[c[(c[e>>2]|0)+48>>2]&127](e,h)}c[b+12>>2]=c[a+4>>2];c[b+24>>2]=d[a+21>>0]|0;c[b+40>>2]=c[a+24>>2];g[b+44>>2]=+g[a+16>>2];c[b+48>>2]=d[a+20>>0]|0;c[b+20>>2]=c[a+12>>2];c[b+16>>2]=c[a+8>>2];g[b+28>>2]=+g[a+36>>2];g[b+32>>2]=+g[a+40>>2];c[b+36>>2]=0;h=c[a+28>>2]|0;if((c[h+488>>2]|0)>0){e=0;do{if((c[(c[h+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b+36>>2]=1;h=c[a+28>>2]|0}e=e+1|0}while((e|0)<(c[h+488>>2]|0))}h=c[a+32>>2]|0;if((c[h+488>>2]|0)>0){e=0}else{i=f;return 2720}do{if((c[(c[h+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b+36>>2]=1;h=c[a+32>>2]|0}e=e+1|0}while((e|0)<(c[h+488>>2]|0));i=f;return 2720}function vk(d,f,h,j,k,l){d=d|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0.0,p=0.0,q=0.0;m=i;c[d>>2]=3560;b[d+4>>1]=-2;b[d+6>>1]=-1;c[d+92>>2]=k;c[d+96>>2]=0;a[d+100>>0]=0;c[d+104>>2]=0;c[d+108>>2]=0;if((k|0)==0){c[4336]=(c[4336]|0)+1;k=cw(95)|0;if((k|0)!=0?(c[(k+19&-16)+ -4>>2]=k,(k+19&-16|0)!=0):0){wr(k+19&-16);k=k+19&-16}else{k=0}c[d+92>>2]=k;a[d+100>>0]=1}if(!l){c[4336]=(c[4336]|0)+1;l=cw(43)|0;if((l|0)!=0?(n=l+19&-16,c[n+ -4>>2]=l,(l+19&-16|0)!=0):0){c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[(l+19&-16)>>2]=3624;a[n+20>>0]=1;c[n+16>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;n=l+19&-16}else{n=0}c[d+112>>2]=n;c[4336]=(c[4336]|0)+1;n=cw(215)|0;if((n|0)!=0?(c[(n+19&-16)+ -4>>2]=n,(n+19&-16|0)!=0):0){Gp(n+19&-16,c[d+112>>2]|0);n=n+19&-16}else{n=0}c[d+108>>2]=n;a[n+193>>0]=1}c[d+8>>2]=c[f+0>>2];c[d+12>>2]=c[f+4>>2];c[d+16>>2]=c[f+8>>2];c[d+20>>2]=c[f+12>>2];c[d+24>>2]=c[h+0>>2];c[d+28>>2]=c[h+4>>2];c[d+32>>2]=c[h+8>>2];c[d+36>>2]=c[h+12>>2];q=+(e[d+6>>1]|0);p=q/(+g[d+28>>2]- +g[d+12>>2]);o=q/(+g[d+32>>2]- +g[d+16>>2]);g[d+40>>2]=q/(+g[d+24>>2]- +g[d+8>>2]);g[d+44>>2]=p;g[d+48>>2]=o;g[d+52>>2]=0.0;f=(j&65535)+1&65535;c[4336]=(c[4336]|0)+1;h=cw(f<<6|19)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}if((f|0)!=0){n=h+(f<<6)|0;l=h;do{c[l>>2]=0;c[l+8>>2]=0;l=l+64|0}while((l|0)!=(n|0))}c[d+60>>2]=h;b[d+58>>1]=(j&65535)+1;b[d+56>>1]=0;b[d+64>>1]=1;if(f>>>0>1){j=1;n=1;do{b[h+(j<<6)+48>>1]=j+1;n=n+1<<16>>16;j=n&65535}while(j>>>0<f>>>0)}b[h+(f+ -1<<6)+48>>1]=0;c[4336]=(c[4336]|0)+1;j=cw((f<<3|3)+16|0)|0;if((j|0)!=0){c[(j+19&-16)+ -4>>2]=j;c[d+80>>2]=j+19&-16;if((j+19&-16|0)==0){j=0}else{j=j+19&-16}}else{c[d+80>>2]=0;j=0}c[d+68>>2]=j;c[4336]=(c[4336]|0)+1;j=cw((f<<3|3)+16|0)|0;if((j|0)!=0){c[(j+19&-16)+ -4>>2]=j;c[d+84>>2]=j+19&-16;if((j+19&-16|0)==0){j=0}else{j=j+19&-16}}else{c[d+84>>2]=0;j=0}c[d+72>>2]=j;c[4336]=(c[4336]|0)+1;j=cw((f<<3|3)+16|0)|0;if((j|0)!=0){c[(j+19&-16)+ -4>>2]=j;c[d+88>>2]=j+19&-16;if((j+19&-16|0)==0){j=0}else{j=j+19&-16}}else{c[d+88>>2]=0;j=0}c[d+76>>2]=j;c[c[d+60>>2]>>2]=0;k=c[d+60>>2]|0;b[k+48>>1]=0;b[k+54>>1]=1;l=c[d+68>>2]|0;b[l>>1]=0;b[l+2>>1]=0;b[l+4>>1]=b[d+6>>1]|0;b[l+6>>1]=0;b[k+50>>1]=0;b[k+56>>1]=1;l=c[d+72>>2]|0;b[l>>1]=0;b[l+2>>1]=0;b[l+4>>1]=b[d+6>>1]|0;b[l+6>>1]=0;b[k+52>>1]=0;b[k+58>>1]=1;k=c[d+76>>2]|0;b[k>>1]=0;b[k+2>>1]=0;b[k+4>>1]=b[d+6>>1]|0;b[k+6>>1]=0;c[d>>2]=3384;i=m;return}function wk(a){a=a|0;var b=0;b=i;Pk(a);i=b;return}function xk(a){a=a|0;var b=0;b=i;Pk(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function yk(a,d,f,h,j,k,l,m,n){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;o=i;i=i+16|0;Mk(a,o+6|0,+g[d>>2],+g[d+4>>2],+g[d+8>>2],0);Mk(a,o,+g[f>>2],+g[f+4>>2],+g[f+8>>2],1);p=b[a+64>>1]|0;q=c[a+60>>2]|0;b[a+64>>1]=b[q+((p&65535)<<6)+48>>1]|0;b[a+56>>1]=(b[a+56>>1]|0)+1<<16>>16;c[q+((p&65535)<<6)+12>>2]=p&65535;c[q+((p&65535)<<6)>>2]=j;b[q+((p&65535)<<6)+4>>1]=k;b[q+((p&65535)<<6)+6>>1]=l;c[q+((p&65535)<<6)+8>>2]=n;u=(e[a+56>>1]|0)<<1;v=(u&65534)+ -1|0;s=(c[a+60>>2]|0)+54|0;b[s>>1]=(e[s>>1]|0)+2;s=c[a+68>>2]|0;r=e[s+(v<<2)>>1]|e[s+(v<<2)+2>>1]<<16;b[s+((u&65534|1)<<2)>>1]=r;b[s+((u&65534|1)<<2)+2>>1]=r>>>16;s=c[a+68>>2]|0;b[s+(v<<2)>>1]=b[o+6>>1]|0;b[s+(v<<2)+2>>1]=p;b[s+((u&65534)<<2)>>1]=b[o>>1]|0;b[s+((u&65534)<<2)+2>>1]=p;b[q+((p&65535)<<6)+48>>1]=v;b[q+((p&65535)<<6)+54>>1]=u;s=(c[a+60>>2]|0)+56|0;b[s>>1]=(e[s>>1]|0)+2;s=c[a+72>>2]|0;r=e[s+(v<<2)>>1]|e[s+(v<<2)+2>>1]<<16;b[s+((u&65534|1)<<2)>>1]=r;b[s+((u&65534|1)<<2)+2>>1]=r>>>16;s=c[a+72>>2]|0;b[s+(v<<2)>>1]=b[o+8>>1]|0;b[s+(v<<2)+2>>1]=p;b[s+((u&65534)<<2)>>1]=b[o+2>>1]|0;b[s+((u&65534)<<2)+2>>1]=p;b[q+((p&65535)<<6)+50>>1]=v;b[q+((p&65535)<<6)+56>>1]=u;s=(c[a+60>>2]|0)+58|0;b[s>>1]=(e[s>>1]|0)+2;s=c[a+76>>2]|0;r=e[s+(v<<2)>>1]|e[s+(v<<2)+2>>1]<<16;b[s+((u&65534|1)<<2)>>1]=r;b[s+((u&65534|1)<<2)+2>>1]=r>>>16;s=c[a+76>>2]|0;b[s+(v<<2)>>1]=b[o+10>>1]|0;b[s+(v<<2)+2>>1]=p;b[s+((u&65534)<<2)>>1]=b[o+4>>1]|0;b[s+((u&65534)<<2)+2>>1]=p;b[q+((p&65535)<<6)+52>>1]=v;b[q+((p&65535)<<6)+58>>1]=u;u=c[a+68>>2]|0;v=e[q+((p&65535)<<6)+48>>1]|0;s=c[a+60>>2]|0;r=b[u+(v+ -1<<2)>>1]|0;if((e[u+(v<<2)>>1]|0)<(r&65535)){n=s+((e[u+(v<<2)+2>>1]|0)<<6)+48|0;t=u+(v<<2)|0;u=u+(v+ -1<<2)|0;while(1){v=e[u+2>>1]|0;if((r&1)==0){v=s+(v<<6)+48|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}else{v=s+(v<<6)+54|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}b[n>>1]=(b[n>>1]|0)+ -1<<16>>16;r=e[t>>1]|e[t+2>>1]<<16;v=e[u>>1]|e[u+2>>1]<<16;b[t>>1]=v;b[t+2>>1]=v>>>16;b[u>>1]=r;b[u+2>>1]=r>>>16;t=t+ -4|0;u=u+ -4|0;r=b[u>>1]|0;if(!((e[t>>1]|0)<(r&65535))){break}s=c[a+60>>2]|0}n=c[a+68>>2]|0}else{n=u}r=e[q+((p&65535)<<6)+54>>1]|0;u=n+(r<<2)|0;t=n+(r+ -1<<2)|0;s=b[t>>1]|0;a:do{if((e[u>>1]|0)<(s&65535)){v=c[a+60>>2]|0;n=v+((e[n+(r<<2)+2>>1]|0)<<6)+54|0;r=v;while(1){v=e[t+2>>1]|0;if((s&1)==0){v=r+(v<<6)+48|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}else{v=r+(v<<6)+54|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}b[n>>1]=(b[n>>1]|0)+ -1<<16>>16;s=e[u>>1]|e[u+2>>1]<<16;v=e[t>>1]|e[t+2>>1]<<16;b[u>>1]=v;b[u+2>>1]=v>>>16;b[t>>1]=s;b[t+2>>1]=s>>>16;u=u+ -4|0;t=t+ -4|0;s=b[t>>1]|0;if(!((e[u>>1]|0)<(s&65535))){break a}r=c[a+60>>2]|0}}}while(0);v=c[a+72>>2]|0;u=e[q+((p&65535)<<6)+50>>1]|0;s=c[a+60>>2]|0;r=b[v+(u+ -1<<2)>>1]|0;if((e[v+(u<<2)>>1]|0)<(r&65535)){n=s+((e[v+(u<<2)+2>>1]|0)<<6)+50|0;t=v+(u<<2)|0;u=v+(u+ -1<<2)|0;while(1){v=e[u+2>>1]|0;if((r&1)==0){v=s+(v<<6)+50|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}else{v=s+(v<<6)+56|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}b[n>>1]=(b[n>>1]|0)+ -1<<16>>16;r=e[t>>1]|e[t+2>>1]<<16;v=e[u>>1]|e[u+2>>1]<<16;b[t>>1]=v;b[t+2>>1]=v>>>16;b[u>>1]=r;b[u+2>>1]=r>>>16;t=t+ -4|0;u=u+ -4|0;r=b[u>>1]|0;if(!((e[t>>1]|0)<(r&65535))){break}s=c[a+60>>2]|0}v=c[a+72>>2]|0}n=e[q+((p&65535)<<6)+56>>1]|0;u=v+(n<<2)|0;t=v+(n+ -1<<2)|0;r=b[t>>1]|0;b:do{if((e[u>>1]|0)<(r&65535)){s=c[a+60>>2]|0;n=s+((e[v+(n<<2)+2>>1]|0)<<6)+56|0;while(1){v=e[t+2>>1]|0;if((r&1)==0){v=s+(v<<6)+50|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}else{v=s+(v<<6)+56|0;b[v>>1]=(b[v>>1]|0)+1<<16>>16}b[n>>1]=(b[n>>1]|0)+ -1<<16>>16;r=e[u>>1]|e[u+2>>1]<<16;v=e[t>>1]|e[t+2>>1]<<16;b[u>>1]=v;b[u+2>>1]=v>>>16;b[t>>1]=r;b[t+2>>1]=r>>>16;u=u+ -4|0;t=t+ -4|0;r=b[t>>1]|0;if(!((e[u>>1]|0)<(r&65535))){break b}s=c[a+60>>2]|0}}}while(0);Nk(a,2,b[q+((p&65535)<<6)+52>>1]|0);Ok(a,2,b[q+((p&65535)<<6)+58>>1]|0,m);q=c[a+60>>2]|0;a=c[a+108>>2]|0;if((a|0)==0){v=q+((p&65535)<<6)|0;i=o;return v|0}c[q+((p&65535)<<6)+60>>2]=gc[c[(c[a>>2]|0)+8>>2]&3](a,d,f,h,j,k,l,m,0)|0;v=q+((p&65535)<<6)|0;i=o;return v|0}function zk(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;h=c[a+108>>2]|0;if((h|0)!=0){ic[c[(c[h>>2]|0)+12>>2]&63](h,c[d+60>>2]|0,f)}h=c[d+12>>2]|0;d=c[a+60>>2]|0;r=c[a+92>>2]|0;if(!(Hb[c[(c[r>>2]|0)+56>>2]&127](r)|0)){r=c[a+92>>2]|0;ic[c[(c[r>>2]|0)+16>>2]&63](r,d+((h&65535)<<6)|0,f)}f=e[a+56>>1]|0;j=c[a+60>>2]|0;b[j+54>>1]=(e[j+54>>1]|0)+65534;b[j+56>>1]=(e[j+56>>1]|0)+65534;b[j+58>>1]=(e[j+58>>1]|0)+65534;j=0;do{l=a+(j<<2)+68|0;k=c[l>>2]|0;o=e[d+((h&65535)<<6)+(j<<1)+54>>1]|0;b[k+(o<<2)>>1]=b[a+6>>1]|0;p=b[k+(o+1<<2)+2>>1]|0;if(p<<16>>16==0){o=k}else{m=(c[a+60>>2]|0)+((e[k+(o<<2)+2>>1]|0)<<6)+(j<<1)+54|0;n=k+(o<<2)|0;o=k+(o+1<<2)|0;while(1){r=b[o>>1]|0;if((e[n>>1]|0)<(r&65535)){break}q=c[a+60>>2]|0;p=p&65535;if((r&1)==0){r=q+(p<<6)+(j<<1)+48|0;b[r>>1]=(b[r>>1]|0)+ -1<<16>>16}else{r=q+(p<<6)+(j<<1)+54|0;b[r>>1]=(b[r>>1]|0)+ -1<<16>>16}b[m>>1]=(b[m>>1]|0)+1<<16>>16;p=e[n>>1]|e[n+2>>1]<<16;r=e[o>>1]|e[o+2>>1]<<16;b[n>>1]=r;b[n+2>>1]=r>>>16;b[o>>1]=p;b[o+2>>1]=p>>>16;p=b[o+6>>1]|0;if(p<<16>>16==0){break}else{n=n+4|0;o=o+4|0}}o=c[l>>2]|0}p=e[d+((h&65535)<<6)+(j<<1)+48>>1]|0;b[k+(p<<2)>>1]=b[a+6>>1]|0;n=b[o+(p+1<<2)+2>>1]|0;a:do{if(!(n<<16>>16==0)){l=(c[a+60>>2]|0)+((e[o+(p<<2)+2>>1]|0)<<6)+(j<<1)+48|0;m=o+(p<<2)|0;o=o+(p+1<<2)|0;while(1){p=b[o>>1]|0;if((e[m>>1]|0)<(p&65535)){break a}q=c[a+60>>2]|0;n=n&65535;if((p&1)==0){r=q+(n<<6)+(j<<1)+48|0;b[r>>1]=(b[r>>1]|0)+ -1<<16>>16}else{r=q+(n<<6)+(j<<1)+54|0;b[r>>1]=(b[r>>1]|0)+ -1<<16>>16}b[l>>1]=(b[l>>1]|0)+1<<16>>16;n=e[m>>1]|e[m+2>>1]<<16;r=e[o>>1]|e[o+2>>1]<<16;b[m>>1]=r;b[m+2>>1]=r>>>16;b[o>>1]=n;b[o+2>>1]=n>>>16;n=b[o+6>>1]|0;if(n<<16>>16==0){break}else{m=m+4|0;o=o+4|0}}}}while(0);b[k+((f<<1)+ -1<<2)+2>>1]=0;b[k+((f<<1)+ -1<<2)>>1]=b[a+6>>1]|0;j=j+1|0}while((j|0)!=3);b[(c[a+60>>2]|0)+((h&65535)<<6)+48>>1]=b[a+64>>1]|0;b[a+64>>1]=h;b[a+56>>1]=(b[a+56>>1]|0)+ -1<<16>>16;i=g;return}function Ak(a,d,f,h,j){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;k=i;i=i+16|0;c[d+16>>2]=c[f+0>>2];c[d+20>>2]=c[f+4>>2];c[d+24>>2]=c[f+8>>2];c[d+28>>2]=c[f+12>>2];c[d+32>>2]=c[h+0>>2];c[d+36>>2]=c[h+4>>2];c[d+40>>2]=c[h+8>>2];c[d+44>>2]=c[h+12>>2];q=c[a+60>>2]|0;r=c[d+12>>2]&65535;Mk(a,k+6|0,+g[f>>2],+g[f+4>>2],+g[f+8>>2],0);Mk(a,k,+g[h>>2],+g[h+4>>2],+g[h+8>>2],1);y=0;do{z=b[q+(r<<6)+(y<<1)+48>>1]|0;w=b[q+(r<<6)+(y<<1)+54>>1]|0;F=b[k+6+(y<<1)>>1]|0;A=a+(y<<2)+68|0;I=c[A>>2]|0;H=(F&65535)-(e[I+((z&65535)<<2)>>1]|0)|0;G=b[k+(y<<1)>>1]|0;x=(G&65535)-(e[I+((w&65535)<<2)>>1]|0)|0;b[I+((z&65535)<<2)>>1]=F;b[I+((w&65535)<<2)>>1]=G;if((H|0)<0){Nk(a,y,z)}a:do{if((x|0)>0?(v=c[A>>2]|0,s=c[a+60>>2]|0,t=e[v+((w&65535)<<2)+2>>1]|0,u=b[v+((w&65535)+1<<2)+2>>1]|0,!(u<<16>>16==0)):0){B=1<<y&3;C=s+(t<<6)+(y<<1)+54|0;I=u;D=v+((w&65535)<<2)|0;E=v+((w&65535)+1<<2)|0;while(1){F=b[E>>1]|0;if((e[D>>1]|0)<(F&65535)){break a}G=c[a+60>>2]|0;I=I&65535;if((F&1)==0){if(((((e[s+(t<<6)+(B<<1)+54>>1]|0)>=(e[G+(I<<6)+(B<<1)+48>>1]|0)?(e[G+(I<<6)+(B<<1)+54>>1]|0)>=(e[s+(t<<6)+(B<<1)+48>>1]|0):0)?(e[s+(t<<6)+((1<<B&3)<<1)+54>>1]|0)>=(e[G+(I<<6)+((1<<B&3)<<1)+48>>1]|0):0)?(e[G+(I<<6)+((1<<B&3)<<1)+54>>1]|0)>=(e[s+(t<<6)+((1<<B&3)<<1)+48>>1]|0):0)?(m=c[a+92>>2]|0,n=G+((e[D+2>>1]|0)<<6)|0,Qb[c[(c[m>>2]|0)+8>>2]&31](m,n,G+(I<<6)|0)|0,m=c[a+96>>2]|0,(m|0)!=0):0){Qb[c[(c[m>>2]|0)+8>>2]&31](m,n,G+(I<<6)|0)|0}I=G+(I<<6)+(y<<1)+48|0;b[I>>1]=(b[I>>1]|0)+ -1<<16>>16}else{I=G+(I<<6)+(y<<1)+54|0;b[I>>1]=(b[I>>1]|0)+ -1<<16>>16}b[C>>1]=(b[C>>1]|0)+1<<16>>16;I=e[D>>1]|e[D+2>>1]<<16;G=e[E>>1]|e[E+2>>1]<<16;b[D>>1]=G;b[D+2>>1]=G>>>16;b[E>>1]=I;b[E+2>>1]=I>>>16;I=b[E+6>>1]|0;if(I<<16>>16==0){break}else{D=D+4|0;E=E+4|0}}}}while(0);b:do{if((H|0)>0?(o=c[A>>2]|0,p=b[o+((z&65535)+1<<2)+2>>1]|0,!(p<<16>>16==0)):0){B=(c[a+60>>2]|0)+((e[o+((z&65535)<<2)+2>>1]|0)<<6)+(y<<1)+48|0;C=1<<y&3;E=p;A=o+((z&65535)<<2)|0;z=o+((z&65535)+1<<2)|0;while(1){F=b[z>>1]|0;if((e[A>>1]|0)<(F&65535)){break b}D=c[a+60>>2]|0;E=E&65535;if((F&1)==0){I=D+(E<<6)+(y<<1)+48|0;b[I>>1]=(b[I>>1]|0)+ -1<<16>>16}else{F=e[A+2>>1]|0;if(((((e[D+(F<<6)+(C<<1)+54>>1]|0)>=(e[D+(E<<6)+(C<<1)+48>>1]|0)?(e[D+(E<<6)+(C<<1)+54>>1]|0)>=(e[D+(F<<6)+(C<<1)+48>>1]|0):0)?(e[D+(F<<6)+((1<<C&3)<<1)+54>>1]|0)>=(e[D+(E<<6)+((1<<C&3)<<1)+48>>1]|0):0)?(e[D+(E<<6)+((1<<C&3)<<1)+54>>1]|0)>=(e[D+(F<<6)+((1<<C&3)<<1)+48>>1]|0):0)?(l=c[a+92>>2]|0,Lb[c[(c[l>>2]|0)+12>>2]&31](l,D+(F<<6)|0,D+(E<<6)|0,j)|0,l=c[a+96>>2]|0,(l|0)!=0):0){Lb[c[(c[l>>2]|0)+12>>2]&31](l,D+(F<<6)|0,D+(E<<6)|0,j)|0}I=D+(E<<6)+(y<<1)+54|0;b[I>>1]=(b[I>>1]|0)+ -1<<16>>16}b[B>>1]=(b[B>>1]|0)+1<<16>>16;E=e[A>>1]|e[A+2>>1]<<16;I=e[z>>1]|e[z+2>>1]<<16;b[A>>1]=I;b[A+2>>1]=I>>>16;b[z>>1]=E;b[z+2>>1]=E>>>16;E=b[z+6>>1]|0;if(E<<16>>16==0){break}else{A=A+4|0;z=z+4|0}}}}while(0);if((x|0)<0){Ok(a,y,w,j)}y=y+1|0}while((y|0)!=3);l=c[a+108>>2]|0;if((l|0)==0){i=k;return}Bb[c[(c[l>>2]|0)+16>>2]&31](l,c[d+60>>2]|0,f,h,j);i=k;return}function Bk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=i;c[d+0>>2]=c[b+16>>2];c[d+4>>2]=c[b+20>>2];c[d+8>>2]=c[b+24>>2];c[d+12>>2]=c[b+28>>2];c[e+0>>2]=c[b+32>>2];c[e+4>>2]=c[b+36>>2];c[e+8>>2]=c[b+40>>2];c[e+12>>2]=c[b+44>>2];i=a;return}function Ck(a,d,f,g,h,j){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;k=i;l=c[a+108>>2]|0;if((l|0)!=0){Rb[c[(c[l>>2]|0)+24>>2]&7](l,d,f,g,h,j);i=k;return}l=b[a+56>>1]|0;if(!((l&65535)<<1>>>0>1)){i=k;return}h=1;j=2;while(1){f=c[a+68>>2]|0;if(!((b[f+(h<<2)>>1]&1)==0)){Zb[c[(c[g>>2]|0)+8>>2]&31](g,(c[a+60>>2]|0)+((e[f+(h<<2)+2>>1]|0)<<6)|0)|0;l=b[a+56>>1]|0}h=j&65535;if(!(h>>>0<((l&65535)<<1|1)>>>0)){break}j=j+1<<16>>16}i=k;return}function Dk(a,d,f,h){a=a|0;d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;j=i;k=c[a+108>>2]|0;if((k|0)!=0){mc[c[(c[k>>2]|0)+28>>2]&63](k,d,f,h);i=j;return}m=b[a+56>>1]|0;if(!((m&65535)<<1>>>0>1)){i=j;return}n=1;k=2;while(1){o=c[a+68>>2]|0;if(!((b[o+(n<<2)>>1]&1)==0)){l=c[a+60>>2]|0;n=e[o+(n<<2)+2>>1]|0;if(!(+g[d>>2]>+g[l+(n<<6)+32>>2])?!(+g[f>>2]<+g[l+(n<<6)+16>>2]):0){o=1}else{o=0}if(!(!(+g[d+8>>2]>+g[l+(n<<6)+40>>2])?!(+g[f+8>>2]<+g[l+(n<<6)+24>>2]):0)){o=0}if(!(+g[d+4>>2]>+g[l+(n<<6)+36>>2])?!(+g[f+4>>2]<+g[l+(n<<6)+20>>2]|o^1):0){Zb[c[(c[h>>2]|0)+8>>2]&31](h,l+(n<<6)|0)|0;m=b[a+56>>1]|0}}n=k&65535;if(!(n>>>0<((m&65535)<<1|1)>>>0)){break}k=k+1<<16>>16}i=j;return}function Ek(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+32|0;r=c[a+92>>2]|0;if(!(Hb[c[(c[r>>2]|0)+56>>2]&127](r)|0)){i=f;return}d=c[a+92>>2]|0;d=Hb[c[(c[d>>2]|0)+28>>2]&127](d)|0;g=c[d+4>>2]|0;if((g|0)>1){Lk(d,0,g+ -1|0);g=c[d+4>>2]|0}o=g-(c[a+104>>2]|0)|0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;Kk(d,o,f+16|0);c[a+104>>2]=0;o=c[d+4>>2]|0;if((o|0)>0){h=0;p=0;m=0;g=0;while(1){j=c[d+12>>2]|0;k=j+(g<<4)|0;n=c[k>>2]|0;j=j+(g<<4)+4|0;l=c[j>>2]|0;if((n|0)==(h|0)){if((l|0)==(p|0)){l=p;n=h;h=12}else{n=h;h=8}}else{h=8}a:do{if((h|0)==8){h=0;q=n+54|0;r=n+48|0;p=0;do{if((e[q+(p<<1)>>1]|0)<(e[l+48+(p<<1)>>1]|0)){h=12;break a}s=p;p=p+1|0;if((e[l+54+(s<<1)>>1]|0)<(e[r+(s<<1)>>1]|0)){h=12;break a}}while((p|0)<3)}}while(0);if((h|0)==12){m=c[a+92>>2]|0;ic[c[(c[m>>2]|0)+32>>2]&63](m,k,b);c[k>>2]=0;c[j>>2]=0;m=(c[a+104>>2]|0)+1|0;c[a+104>>2]=m;c[3220]=(c[3220]|0)+ -1;o=c[d+4>>2]|0}g=g+1|0;if((g|0)>=(o|0)){break}else{h=n;p=l}}if((o|0)>1){Lk(d,0,o+ -1|0);m=c[a+104>>2]|0;o=c[d+4>>2]|0}}else{m=0}s=o-m|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Kk(d,s,f);c[a+104>>2]=0;i=f;return}function Fk(a){a=a|0;return c[a+92>>2]|0}function Gk(a){a=a|0;return c[a+92>>2]|0}function Hk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;c[b+0>>2]=c[a+8>>2];c[b+4>>2]=c[a+12>>2];c[b+8>>2]=c[a+16>>2];c[b+12>>2]=c[a+20>>2];c[d+0>>2]=c[a+24>>2];c[d+4>>2]=c[a+28>>2];c[d+8>>2]=c[a+32>>2];c[d+12>>2]=c[a+36>>2];i=e;return}function Ik(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;d=i;if((b[a+56>>1]|0)!=0){i=d;return}b[a+64>>1]=1;f=b[a+58>>1]|0;e=c[a+60>>2]|0;if((f&65535)>1){f=1;g=1;while(1){b[e+(f<<6)+48>>1]=f+1;g=g+1<<16>>16;f=b[a+58>>1]|0;if((g&65535)<(f&65535)){f=g&65535}else{break}}}b[e+((f&65535)+ -1<<6)+48>>1]=0;i=d;return}function Jk(a){a=a|0;return}function Kk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=c[b+4>>2]|0;if(!((g|0)<=(d|0)&(g|0)<(d|0))){c[b+4>>2]=d;i=f;return}if((c[b+8>>2]|0)<(d|0)){if((d|0)==0){h=0;j=g}else{c[4336]=(c[4336]|0)+1;h=cw((d<<4|3)+16|0)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}j=c[b+4>>2]|0}if((j|0)>0){k=0;do{l=c[b+12>>2]|0;c[h+(k<<4)>>2]=c[l+(k<<4)>>2];c[h+(k<<4)+4>>2]=c[l+(k<<4)+4>>2];c[h+(k<<4)+8>>2]=c[l+(k<<4)+8>>2];c[h+(k<<4)+12>>2]=c[l+(k<<4)+12>>2];k=k+1|0}while((k|0)!=(j|0))}j=c[b+12>>2]|0;if((j|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=h;c[b+8>>2]=d;h=b+12|0}else{h=b+12|0}do{l=c[h>>2]|0;c[l+(g<<4)>>2]=c[e>>2];c[l+(g<<4)+4>>2]=c[e+4>>2];c[l+(g<<4)+8>>2]=c[e+8>>2];c[l+(g<<4)+12>>2]=c[e+12>>2];g=g+1|0}while((g|0)!=(d|0));c[b+4>>2]=d;i=f;return}function Lk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;while(1){j=(b+d|0)/2|0;g=c[a+12>>2]|0;h=c[g+(j<<4)>>2]|0;f=c[g+(j<<4)+4>>2]|0;j=c[g+(j<<4)+8>>2]|0;k=b;o=d;while(1){a:while(1){m=c[g+(k<<4)>>2]|0;if((m|0)==0){q=-1}else{q=c[m+12>>2]|0}if((h|0)==0){n=-1}else{n=c[h+12>>2]|0}l=c[g+(k<<4)+4>>2]|0;if((l|0)==0){r=-1}else{r=c[l+12>>2]|0}if((f|0)==0){p=-1}else{p=c[f+12>>2]|0}do{if((q|0)<=(n|0)){n=(m|0)==(h|0)&(r|0)>(p|0);if(n|(m|0)==(h|0)^1){if(n){break}else{break a}}if((l|0)!=(f|0)){break a}if(!((c[g+(k<<4)+8>>2]|0)>>>0>j>>>0)){break a}}}while(0);k=k+1|0}b:do{if((h|0)==0){while(1){p=c[g+(o<<4)>>2]|0;if((p|0)==0){r=-1}else{r=c[p+12>>2]|0}if((f|0)==0){s=-1}else{s=c[f+12>>2]|0}n=c[g+(o<<4)+4>>2]|0;if((n|0)==0){q=-1}else{q=c[n+12>>2]|0}do{if(!((r|0)<-1)){q=(p|0)==0&(s|0)>(q|0);if(q|(p|0)==0^1){if(q){break}else{break b}}if((f|0)!=(n|0)){break b}if(!(j>>>0>(c[g+(o<<4)+8>>2]|0)>>>0)){break b}}}while(0);o=o+ -1|0}}else{n=c[h+12>>2]|0;q=o;while(1){p=c[g+(q<<4)>>2]|0;if((p|0)==0){t=-1}else{t=c[p+12>>2]|0}if((f|0)==0){r=-1}else{r=c[f+12>>2]|0}o=c[g+(q<<4)+4>>2]|0;if((o|0)==0){s=-1}else{s=c[o+12>>2]|0}do{if((n|0)<=(t|0)){r=(h|0)==(p|0)&(r|0)>(s|0);if(r|(h|0)==(p|0)^1){if(r){break}else{o=q;break b}}if((f|0)!=(o|0)){o=q;break b}if(!(j>>>0>(c[g+(q<<4)+8>>2]|0)>>>0)){o=q;break b}}}while(0);q=q+ -1|0}}}while(0);if((k|0)<=(o|0)){t=g+(k<<4)|0;r=c[g+(k<<4)+8>>2]|0;s=c[g+(k<<4)+12>>2]|0;q=g+(o<<4)|0;c[t+0>>2]=c[q+0>>2];c[t+4>>2]=c[q+4>>2];c[t+8>>2]=c[q+8>>2];c[t+12>>2]=c[q+12>>2];t=c[a+12>>2]|0;c[t+(o<<4)>>2]=m;c[t+(o<<4)+4>>2]=l;c[t+(o<<4)+8>>2]=r;c[t+(o<<4)+12>>2]=s;k=k+1|0;o=o+ -1|0}if((k|0)>(o|0)){break}g=c[a+12>>2]|0}if((o|0)>(b|0)){Lk(a,b,o)}if((k|0)<(d|0)){b=k}else{break}}i=e;return}function Mk(a,c,d,e,f,h){a=a|0;c=c|0;d=+d;e=+e;f=+f;h=h|0;var j=0,k=0;j=i;d=(d- +g[a+8>>2])*+g[a+40>>2];e=(e- +g[a+12>>2])*+g[a+44>>2];f=(f- +g[a+16>>2])*+g[a+48>>2];do{if(!(d<=0.0)){k=b[a+6>>1]|0;if(!(d>=+(k&65535|0))){k=b[a+4>>1]&(~~d&65535)&65535|h;break}else{k=b[a+4>>1]&k&65535|h;break}}else{k=h}}while(0);b[c>>1]=k;do{if(!(e<=0.0)){k=b[a+6>>1]|0;if(!(e>=+(k&65535|0))){k=b[a+4>>1]&(~~e&65535)&65535|h;break}else{k=b[a+4>>1]&k&65535|h;break}}else{k=h}}while(0);b[c+2>>1]=k;if(f<=0.0){h=h&65535;k=c+4|0;b[k>>1]=h;i=j;return}k=b[a+6>>1]|0;if(!(f>=+(k&65535|0))){h=b[a+4>>1]&(~~f&65535)&65535|h;h=h&65535;k=c+4|0;b[k>>1]=h;i=j;return}else{h=b[a+4>>1]&k&65535|h;h=h&65535;k=c+4|0;b[k>>1]=h;i=j;return}}function Nk(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=i;p=c[a+(d<<2)+68>>2]|0;g=c[a+60>>2]|0;h=e[p+((f&65535)<<2)+2>>1]|0;n=b[p+((f&65535)+ -1<<2)>>1]|0;if(!((e[p+((f&65535)<<2)>>1]|0)<(n&65535))){i=l;return}m=g;o=p+((f&65535)<<2)|0;p=p+((f&65535)+ -1<<2)|0;while(1){f=e[p+2>>1]|0;if((n&1)==0){f=m+(f<<6)+(d<<1)+48|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16}else{if(((((e[g+(h<<6)+((1<<d&3)<<1)+54>>1]|0)>=(e[m+(f<<6)+((1<<d&3)<<1)+48>>1]|0)?(e[m+(f<<6)+((1<<d&3)<<1)+54>>1]|0)>=(e[g+(h<<6)+((1<<d&3)<<1)+48>>1]|0):0)?(e[g+(h<<6)+((1<<(1<<d&3)&3)<<1)+54>>1]|0)>=(e[m+(f<<6)+((1<<(1<<d&3)&3)<<1)+48>>1]|0):0)?(e[m+(f<<6)+((1<<(1<<d&3)&3)<<1)+54>>1]|0)>=(e[g+(h<<6)+((1<<(1<<d&3)&3)<<1)+48>>1]|0):0)?(j=c[a+92>>2]|0,k=m+(f<<6)|0,Qb[c[(c[j>>2]|0)+8>>2]&31](j,g+(h<<6)|0,k)|0,j=c[a+96>>2]|0,(j|0)!=0):0){Qb[c[(c[j>>2]|0)+8>>2]&31](j,g+(h<<6)|0,k)|0}f=m+(f<<6)+(d<<1)+54|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16}b[g+(h<<6)+(d<<1)+48>>1]=(b[g+(h<<6)+(d<<1)+48>>1]|0)+ -1<<16>>16;n=e[o>>1]|e[o+2>>1]<<16;f=e[p>>1]|e[p+2>>1]<<16;b[o>>1]=f;b[o+2>>1]=f>>>16;b[p>>1]=n;b[p+2>>1]=n>>>16;o=o+ -4|0;p=p+ -4|0;n=b[p>>1]|0;if(!((e[o>>1]|0)<(n&65535))){break}m=c[a+60>>2]|0}i=l;return}function Ok(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;q=c[a+(d<<2)+68>>2]|0;o=b[q+((f&65535)+ -1<<2)>>1]|0;if(!((e[q+((f&65535)<<2)>>1]|0)<(o&65535))){i=j;return}n=c[a+60>>2]|0;h=n+((e[q+((f&65535)<<2)+2>>1]|0)<<6)+(d<<1)+54|0;p=q+((f&65535)<<2)|0;q=q+((f&65535)+ -1<<2)|0;while(1){f=e[q+2>>1]|0;if((o&1)==0){o=e[p+2>>1]|0;if(((((e[n+(o<<6)+((1<<d&3)<<1)+54>>1]|0)>=(e[n+(f<<6)+((1<<d&3)<<1)+48>>1]|0)?(e[n+(f<<6)+((1<<d&3)<<1)+54>>1]|0)>=(e[n+(o<<6)+((1<<d&3)<<1)+48>>1]|0):0)?(e[n+(o<<6)+((1<<(1<<d&3)&3)<<1)+54>>1]|0)>=(e[n+(f<<6)+((1<<(1<<d&3)&3)<<1)+48>>1]|0):0)?(e[n+(f<<6)+((1<<(1<<d&3)&3)<<1)+54>>1]|0)>=(e[n+(o<<6)+((1<<(1<<d&3)&3)<<1)+48>>1]|0):0)?(l=c[a+92>>2]|0,m=n+(o<<6)|0,k=n+(f<<6)|0,Lb[c[(c[l>>2]|0)+12>>2]&31](l,m,k,g)|0,l=c[a+96>>2]|0,(l|0)!=0):0){Lb[c[(c[l>>2]|0)+12>>2]&31](l,m,k,g)|0}f=n+(f<<6)+(d<<1)+48|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16}else{f=n+(f<<6)+(d<<1)+54|0;b[f>>1]=(b[f>>1]|0)+1<<16>>16}b[h>>1]=(b[h>>1]|0)+ -1<<16>>16;o=e[p>>1]|e[p+2>>1]<<16;f=e[q>>1]|e[q+2>>1]<<16;b[p>>1]=f;b[p+2>>1]=f>>>16;b[q>>1]=o;b[q+2>>1]=o>>>16;p=p+ -4|0;q=q+ -4|0;o=b[q>>1]|0;if(!((e[p>>1]|0)<(o&65535))){break}n=c[a+60>>2]|0}i=j;return}function Pk(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=3560;if((c[b+108>>2]|0)!=0){e=c[b+112>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+112>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+108>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+108>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}}e=c[b+88>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+84>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+80>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+60>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}if((a[b+100>>0]|0)==0){i=d;return}e=c[b+92>>2]|0;Db[c[c[e>>2]>>2]&255](e);b=c[b+92>>2]|0;if((b|0)==0){i=d;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function Qk(a){a=a|0;var b=0;b=i;Pk(a);i=b;return}function Rk(a){a=a|0;var b=0;b=i;Pk(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Sk(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=3624;e=c[b+16>>2]|0;if((e|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;i=d;return}function Tk(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=3624;e=c[b+16>>2]|0;if((e|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}if((b|0)==0){i=d;return}}dw(b);i=d;return}function Uk(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Vk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function Wk(a,b,c){a=a|0;b=b|0;c=c|0;return}function Xk(a){a=a|0;return c[a+16>>2]|0}function Yk(a){a=a|0;return c[a+16>>2]|0}function Zk(a){a=a|0;return a+4|0}function _k(a,b,c){a=a|0;b=b|0;c=c|0;return}function $k(a){a=a|0;return 0}function al(a,b,c){a=a|0;b=b|0;c=c|0;return}function bl(a,b){a=a|0;b=b|0;return}function cl(a,b,c){a=a|0;b=b|0;c=c|0;return}function dl(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function el(a){a=a|0;return 1}function fl(a,b){a=a|0;b=b|0;return}function gl(a,b){a=a|0;b=b|0;return}function hl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;f=i;k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);o=k+ +g[a+28>>2];m=k+ +g[a+32>>2];k=k+ +g[a+36>>2];w=+P(+(+g[b>>2]));v=+P(+(+g[b+4>>2]));u=+P(+(+g[b+8>>2]));s=+P(+(+g[b+16>>2]));r=+P(+(+g[b+20>>2]));q=+P(+(+g[b+24>>2]));n=+P(+(+g[b+32>>2]));l=+P(+(+g[b+36>>2]));j=+P(+(+g[b+40>>2]));t=+g[b+48>>2];p=+g[b+52>>2];h=+g[b+56>>2];g[d>>2]=t-(o*w+m*v+k*u);g[d+4>>2]=p-(o*s+m*r+k*q);g[d+8>>2]=h-(o*n+m*l+k*j);g[d+12>>2]=0.0;g[e>>2]=o*w+m*v+k*u+t;g[e+4>>2]=o*s+m*r+k*q+p;g[e+8>>2]=o*n+m*l+k*j+h;g[e+12>>2]=0.0;i=f;return}function il(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;k=+g[a+28>>2];h=+g[a+32>>2];l=+g[a+36>>2];j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);l=(l+ +Tb[c[(c[a>>2]|0)+48>>2]&15](a))*2.0;g[d>>2]=b/12.0*((h+f)*2.0*(h+f)*2.0+l*l);g[d+4>>2]=b/12.0*((k+j)*2.0*(k+j)*2.0+l*l);g[d+8>>2]=b/12.0*((k+j)*2.0*(k+j)*2.0+(h+f)*2.0*(h+f)*2.0);g[d+12>>2]=0.0;i=e;return}function jl(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=13384;d=c[a+52>>2]|0;if((d|0)==0){i=b;return}Db[c[c[d>>2]>>2]&255](d);a=c[a+52>>2]|0;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function kl(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=13384;d=c[a+52>>2]|0;if((d|0)!=0){Db[c[c[d>>2]>>2]&255](d);d=c[a+52>>2]|0;if((d|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[d+ -4>>2]|0)}if((a|0)==0){i=b;return}}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function ll(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;d=i;m=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);o=(m+ +g[a+28>>2])/+g[a+12>>2];l=(j+ +g[a+32>>2])/+g[a+16>>2];h=(e+ +g[a+36>>2])/+g[a+20>>2];n=+P(+(+g[b>>2]));k=+P(+(+g[b+4>>2]));f=+P(+(+g[b+8>>2]));g[a+12>>2]=n;g[a+16>>2]=k;g[a+20>>2]=f;g[a+24>>2]=0.0;g[a+28>>2]=o*n-m;g[a+32>>2]=l*k-j;g[a+36>>2]=h*f-e;g[a+40>>2]=0.0;i=d;return}function ml(a){a=a|0;return 3992}function nl(a,b){a=a|0;b=+b;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0;d=i;j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=j+ +g[a+28>>2];f=f+ +g[a+32>>2];k=k+ +g[a+36>>2];g[a+44>>2]=b;h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);b=k- +Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=j-h;g[a+32>>2]=f-e;g[a+36>>2]=b;g[a+40>>2]=0.0;i=d;return}function ol(a){a=a|0;return+(+g[a+44>>2])}function pl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,j=0.0,k=0.0,l=0.0;h=i;e=+g[b+28>>2];k=+g[b+32>>2];l=+g[b+36>>2];f=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);j=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);l=l+ +Tb[c[(c[b>>2]|0)+48>>2]&15](b);j=+g[d+4>>2]>=0.0?k+j:-(k+j);k=+g[d+8>>2]>=0.0?l:-l;g[a>>2]=+g[d>>2]>=0.0?e+f:-(e+f);g[a+4>>2]=j;g[a+8>>2]=k;g[a+12>>2]=0.0;i=h;return}function ql(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;d=+g[b+28>>2];e=+g[b+32>>2];e=+g[c+4>>2]>=0.0?e:-e;f=+g[b+36>>2];f=+g[c+8>>2]>=0.0?f:-f;g[a>>2]=+g[c>>2]>=0.0?d:-d;g[a+4>>2]=e;g[a+8>>2]=f;g[a+12>>2]=0.0;return}function rl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0;f=i;if((d|0)<=0){i=f;return}e=0;do{h=+g[a+28>>2];j=+g[a+32>>2];j=+g[b+(e<<4)+4>>2]>=0.0?j:-j;k=+g[a+36>>2];k=+g[b+(e<<4)+8>>2]>=0.0?k:-k;g[c+(e<<4)>>2]=+g[b+(e<<4)>>2]>=0.0?h:-h;g[c+(e<<4)+4>>2]=j;g[c+(e<<4)+8>>2]=k;g[c+(e<<4)+12>>2]=0.0;e=e+1|0}while((e|0)!=(d|0));i=f;return}function sl(a){a=a|0;return 6}function tl(a,b,c){a=a|0;b=b|0;c=c|0;a=i;switch(b|0){case 3:{g[c>>2]=0.0;g[c+4>>2]=-1.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 1:{g[c>>2]=-1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 2:{g[c>>2]=0.0;g[c+4>>2]=1.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 4:{g[c>>2]=0.0;g[c+4>>2]=0.0;g[c+8>>2]=1.0;g[c+12>>2]=0.0;i=a;return};case 0:{g[c>>2]=1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=a;return};case 5:{g[c>>2]=0.0;g[c+4>>2]=0.0;g[c+8>>2]=-1.0;g[c+12>>2]=0.0;i=a;return};default:{i=a;return}}}function ul(a){a=a|0;return 8}function vl(a){a=a|0;return 12}function wl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;do{switch(b|0){case 4:{g=0;break};case 1:{g=0;b=2;break};case 6:{g=2;break};case 0:{g=0;b=1;break};case 9:{g=4;b=6;break};case 11:{g=6;b=7;break};case 2:{g=1;b=3;break};case 8:{g=4;b=5;break};case 5:{g=1;break};case 7:{g=3;break};case 10:{g=5;b=7;break};case 3:{g=2;break};default:{g=0;b=0}}}while(0);ic[c[(c[a>>2]|0)+108>>2]&63](a,g,d);ic[c[(c[a>>2]|0)+108>>2]&63](a,b,e);i=f;return}function xl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;l=+g[a+28>>2];j=+g[a+32>>2];f=+g[a+36>>2];k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);f=f+ +Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=+(b&1^1|0)*(l+k)- +(b&1|0)*(l+k);g[d+4>>2]=+(b>>>1&1^1|0)*(j+h)- +(b>>>1&1|0)*(j+h);g[d+8>>2]=+(b>>>2&1^1|0)*f- +(b>>>2&1|0)*f;g[d+12>>2]=0.0;i=e;return}function yl(a){a=a|0;return 6}function zl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0;f=i;i=i+48|0;ic[c[(c[a>>2]|0)+124>>2]&63](a,f+32|0,e);k=+g[f+32>>2];j=+g[f+36>>2];h=+g[f+40>>2];g[b>>2]=k;g[b+4>>2]=j;g[b+8>>2]=h;g[b+12>>2]=0.0;e=c[(c[a>>2]|0)+64>>2]|0;g[f>>2]=-k;g[f+4>>2]=-j;g[f+8>>2]=-h;g[f+12>>2]=0.0;ic[e&63](f+16|0,a,f);c[d+0>>2]=c[f+16>>2];c[d+4>>2]=c[f+20>>2];c[d+8>>2]=c[f+24>>2];c[d+12>>2]=c[f+28>>2];i=f;return}function Al(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0.0,f=0.0,h=0.0,j=0.0;d=i;h=+g[a+28>>2];f=+g[a+32>>2];e=+g[a+36>>2];j=+g[b>>2];if(!(j<=h+c)){a=0;i=d;return a|0}if(!(j>=-h-c)){a=0;i=d;return a|0}h=+g[b+4>>2];if(!(h<=f+c)){a=0;i=d;return a|0}if(!(h>=-f-c)){a=0;i=d;return a|0}f=+g[b+8>>2];if(!(f<=e+c)){a=0;i=d;return a|0}a=f>=-e-c;i=d;return a|0}function Bl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0;d=i;e=+g[a+28>>2];f=+g[a+32>>2];h=+g[a+36>>2];switch(c|0){case 1:{g[b>>2]=-1.0;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=-e;i=d;return};case 5:{g[b>>2]=0.0;g[b+4>>2]=0.0;g[b+8>>2]=-1.0;g[b+12>>2]=-h;i=d;return};case 3:{g[b>>2]=0.0;g[b+4>>2]=-1.0;g[b+8>>2]=0.0;g[b+12>>2]=-f;i=d;return};case 4:{g[b>>2]=0.0;g[b+4>>2]=0.0;g[b+8>>2]=1.0;g[b+12>>2]=-h;i=d;return};case 2:{g[b>>2]=0.0;g[b+4>>2]=1.0;g[b+8>>2]=0.0;g[b+12>>2]=-f;i=d;return};case 0:{g[b>>2]=1.0;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=-e;i=d;return};default:{i=d;return}}}function Cl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;h=i;i=i+48|0;c[b+8>>2]=0;g[b+12>>2]=0.0;c[b>>2]=14744;c[b+48>>2]=d;c[b+4>>2]=21;if(Hb[c[(c[d>>2]|0)+40>>2]&127](d)|0){ic[c[(c[d>>2]|0)+48>>2]&63](d,b+16|0,b+32|0)}else{c[h+32>>2]=0;c[h+36>>2]=0;c[h+40>>2]=0;c[h+44>>2]=0;g[h+32>>2]=1.0;ic[c[(c[b>>2]|0)+68>>2]&63](h+16|0,b,h+32|0);g[b+32>>2]=+g[h+16>>2]+ +g[b+12>>2];g[h+32>>2]=-1.0;ic[c[(c[b>>2]|0)+68>>2]&63](h,b,h+32|0);c[h+16>>2]=c[h+0>>2];c[h+20>>2]=c[h+4>>2];c[h+24>>2]=c[h+8>>2];c[h+28>>2]=c[h+12>>2];g[b+16>>2]=+g[h+16>>2]- +g[b+12>>2];c[h+32>>2]=0;c[h+36>>2]=0;c[h+40>>2]=0;c[h+44>>2]=0;g[h+36>>2]=1.0;ic[c[(c[b>>2]|0)+68>>2]&63](h+16|0,b,h+32|0);g[b+36>>2]=+g[h+20>>2]+ +g[b+12>>2];g[h+36>>2]=-1.0;ic[c[(c[b>>2]|0)+68>>2]&63](h,b,h+32|0);c[h+16>>2]=c[h+0>>2];c[h+20>>2]=c[h+4>>2];c[h+24>>2]=c[h+8>>2];c[h+28>>2]=c[h+12>>2];g[b+20>>2]=+g[h+20>>2]- +g[b+12>>2];c[h+32>>2]=0;c[h+36>>2]=0;c[h+40>>2]=0;c[h+44>>2]=0;g[h+40>>2]=1.0;ic[c[(c[b>>2]|0)+68>>2]&63](h+16|0,b,h+32|0);g[b+40>>2]=+g[h+24>>2]+ +g[b+12>>2];g[h+40>>2]=-1.0;ic[c[(c[b>>2]|0)+68>>2]&63](h,b,h+32|0);c[h+16>>2]=c[h+0>>2];c[h+20>>2]=c[h+4>>2];c[h+24>>2]=c[h+8>>2];c[h+28>>2]=c[h+12>>2];g[b+24>>2]=+g[h+24>>2]- +g[b+12>>2]}c[b>>2]=4008;c[b+52>>2]=0;c[b+56>>2]=0;a[b+60>>0]=e&1;a[b+61>>0]=0;c[b+4>>2]=21;if(!f){i=h;return}c[4336]=(c[4336]|0)+1;e=cw(191)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+52>>2]=282;a[e+60>>0]=0;a[e+80>>0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;a[e+100>>0]=1;c[e+96>>2]=0;c[e+88>>2]=0;c[e+92>>2]=0;a[e+120>>0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;a[e+140>>0]=1;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;c[e+144>>2]=0;a[e+164>>0]=1;c[e+160>>2]=0;c[e+152>>2]=0;c[e+156>>2]=0;c[e+168>>2]=0;g[e+4>>2]=-3.4028234663852886e+38;g[e+8>>2]=-3.4028234663852886e+38;g[e+12>>2]=-3.4028234663852886e+38;g[e+16>>2]=0.0;g[e+20>>2]=3.4028234663852886e+38;g[e+24>>2]=3.4028234663852886e+38;g[e+28>>2]=3.4028234663852886e+38;g[e+32>>2]=0.0;c[e>>2]=12528;c[b+52>>2]=e;nr(e,c[b+48>>2]|0,(a[b+60>>0]|0)!=0,b+16|0,b+32|0);a[b+61>>0]=1;i=h;return}function Dl(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=4008;if((a[b+61>>0]|0)!=0){e=c[b+52>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+52>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}if((b|0)==0){i=d;return}}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function El(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=4008;if((a[b+61>>0]|0)==0){i=d;return}e=c[b+52>>2]|0;Db[c[c[e>>2]>>2]&255](e);b=c[b+52>>2]|0;if((b|0)==0){i=d;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function Fl(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0,F=0,G=0,H=0,I=0;k=i;i=i+80|0;I=c[d+48>>2]|0;c[k>>2]=4192;c[k+4>>2]=I;c[k+8>>2]=f;f=c[d+52>>2]|0;if((a[f+60>>0]|0)==0){n=c[f+56>>2]|0;a:do{if((n|0)>0){l=0;m=c[f+96>>2]|0;d=1;while(1){if(!(+g[h>>2]>+g[m+16>>2])?!(+g[j>>2]<+g[m>>2]):0){B=1}else{B=0}if(!(!(+g[h+8>>2]>+g[m+24>>2])?!(+g[j+8>>2]<+g[m+8>>2]):0)){B=0}if(!(+g[h+4>>2]>+g[m+20>>2])?!(+g[j+4>>2]<+g[m+4>>2]):0){x=c[m+32>>2]|0;if((x|0)==-1&B){ic[c[(c[k>>2]|0)+8>>2]&63](k,c[m+36>>2]|0,c[m+40>>2]|0);n=c[f+56>>2]|0;x=44}else{y=x;A=(x|0)==-1;x=43}}else{A=c[m+32>>2]|0;y=A;A=(A|0)==-1;B=0;x=43}if((x|0)==43){x=0;if(B|A){x=44}else{l=y+l|0;m=m+(y<<6)|0}}if((x|0)==44){l=l+1|0;m=m+64|0}if((l|0)>=(n|0)){break a}d=d+1|0}}else{d=0}}while(0);if((c[3400]|0)>=(d|0)){i=k;return}c[3400]=d;i=k;return}o=+g[h>>2];q=+g[h+4>>2];r=+g[h+8>>2];p=+g[f+4>>2];z=o<p?p:o;o=+g[f+8>>2];D=q<o?o:q;q=+g[f+12>>2];C=r<q?q:r;v=+g[f+20>>2];t=+g[f+24>>2];s=+g[f+28>>2];w=+g[f+36>>2];u=+g[f+40>>2];r=+g[f+44>>2];h=~~(((v<z?v:z)-p)*w)&65535&65534;b[k+66>>1]=h;d=~~(((t<D?t:D)-o)*u)&65535&65534;b[k+68>>1]=d;l=~~(((s<C?s:C)-q)*r)&65535&65534;b[k+70>>1]=l;C=+g[j>>2];D=+g[j+4>>2];z=+g[j+8>>2];C=C<p?p:C;D=D<o?o:D;z=z<q?q:z;j=(~~(((v<C?v:C)-p)*w+1.0)&65535|1)&65535;b[k+60>>1]=j;m=(~~(((t<D?t:D)-o)*u+1.0)&65535|1)&65535;b[k+62>>1]=m;n=(~~(((s<z?s:z)-q)*r+1.0)&65535|1)&65535;b[k+64>>1]=n;x=c[f+144>>2]|0;if((x|0)==0){x=c[f+56>>2]|0;b:do{if((x|0)>0){y=0;A=c[f+136>>2]|0;f=1;while(1){F=((j&65535)>=(e[A>>1]|0)?(h&65535)<=(e[A+6>>1]|0):0)&(l&65535)<=(e[A+10>>1]|0)&(n&65535)>=(e[A+4>>1]|0)&(d&65535)<=(e[A+8>>1]|0)&(m&65535)>=(e[A+2>>1]|0);E=A+12|0;B=c[E>>2]|0;if((B|0)>-1&F){ic[c[(c[k>>2]|0)+8>>2]&63](k,B>>21,B&2097151)}if(F|(B|0)>-1){y=y+1|0;A=A+16|0}else{I=c[E>>2]|0;y=y-I|0;A=A+(0-I<<4)|0}if((y|0)>=(x|0)){break b}f=f+1|0}}else{f=0}}while(0);if((c[3400]|0)>=(f|0)){i=k;return}c[3400]=f;i=k;return}else if((x|0)==2){js(c[f+136>>2]|0,k,k+66|0,k+60|0);i=k;return}else if((x|0)==1){if((c[f+152>>2]|0)<=0){i=k;return}x=0;do{A=c[f+160>>2]|0;if(((j&65535)>=(e[A+(x<<5)>>1]|0)?(h&65535)<=(e[A+(x<<5)+6>>1]|0):0)&(l&65535)<=(e[A+(x<<5)+10>>1]|0)&(n&65535)>=(e[A+(x<<5)+4>>1]|0)&(d&65535)<=(e[A+(x<<5)+8>>1]|0)&(m&65535)>=(e[A+(x<<5)+2>>1]|0)){y=c[A+(x<<5)+12>>2]|0;A=c[A+(x<<5)+16>>2]|0;c:do{if((A|0)>0){E=y;F=(c[f+136>>2]|0)+(y<<4)|0;B=1;while(1){G=((j&65535)>=(e[F>>1]|0)?(h&65535)<=(e[F+6>>1]|0):0)&(l&65535)<=(e[F+10>>1]|0)&(n&65535)>=(e[F+4>>1]|0)&(d&65535)<=(e[F+8>>1]|0)&(m&65535)>=(e[F+2>>1]|0);H=F+12|0;I=c[H>>2]|0;if((I|0)>-1&G){ic[c[(c[k>>2]|0)+8>>2]&63](k,I>>21,I&2097151)}if(G|(I|0)>-1){E=E+1|0;F=F+16|0}else{I=c[H>>2]|0;E=E-I|0;F=F+(0-I<<4)|0}if((E|0)>=(A+y|0)){break c}B=B+1|0}}else{B=0}}while(0);if((c[3400]|0)<(B|0)){c[3400]=B}}x=x+1|0}while((x|0)<(c[f+152>>2]|0));i=k;return}else{i=k;return}}function Gl(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0;e=i;l=Hb[c[(c[b>>2]|0)+28>>2]&127](b)|0;k=+g[l>>2]- +g[d>>2];j=+g[l+4>>2]- +g[d+4>>2];h=+g[l+8>>2]- +g[d+8>>2];if(!(k*k+j*j+h*h>1.1920928955078125e-7)){i=e;return}vt(b,d);if((a[b+61>>0]|0)!=0?(f=c[b+52>>2]|0,Db[c[c[f>>2]>>2]&255](f),f=c[b+52>>2]|0,(f|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[4336]=(c[4336]|0)+1;f=cw(191)|0;if((f|0)==0){f=0}else{c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}c[f+52>>2]=282;a[f+60>>0]=0;a[f+80>>0]=1;c[f+76>>2]=0;c[f+68>>2]=0;c[f+72>>2]=0;a[f+100>>0]=1;c[f+96>>2]=0;c[f+88>>2]=0;c[f+92>>2]=0;a[f+120>>0]=1;c[f+116>>2]=0;c[f+108>>2]=0;c[f+112>>2]=0;a[f+140>>0]=1;c[f+136>>2]=0;c[f+128>>2]=0;c[f+132>>2]=0;c[f+144>>2]=0;a[f+164>>0]=1;c[f+160>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+168>>2]=0;g[f+4>>2]=-3.4028234663852886e+38;g[f+8>>2]=-3.4028234663852886e+38;g[f+12>>2]=-3.4028234663852886e+38;g[f+16>>2]=0.0;g[f+20>>2]=3.4028234663852886e+38;g[f+24>>2]=3.4028234663852886e+38;g[f+28>>2]=3.4028234663852886e+38;g[f+32>>2]=0.0;c[f>>2]=12528;c[b+52>>2]=f;nr(f,c[b+48>>2]|0,(a[b+60>>0]|0)!=0,b+16|0,b+32|0);a[b+61>>0]=1;i=e;return}function Hl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0;e=i;h=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;j=Zb[c[(c[d>>2]|0)+28>>2]&31](d,h)|0;c[b>>2]=j;if((j|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,h)}c[b+4>>2]=c[a+4>>2];j=c[a+48>>2]|0;Qb[c[(c[j>>2]|0)+56>>2]&31](j,b+12|0,d)|0;g[b+52>>2]=+g[a+12>>2];do{if((c[a+52>>2]|0)!=0?((Hb[c[(c[d>>2]|0)+52>>2]&127](d)|0)&1|0)==0:0){h=Zb[c[(c[d>>2]|0)+24>>2]&31](d,c[a+52>>2]|0)|0;if((h|0)==0){c[b+40>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+52>>2]|0)|0;c[b+44>>2]=0;h=c[a+52>>2]|0;h=Hb[c[(c[h>>2]|0)+12>>2]&127](h)|0;h=Qb[c[(c[d>>2]|0)+16>>2]&31](d,h,1)|0;j=c[a+52>>2]|0;j=Qb[c[(c[j>>2]|0)+16>>2]&31](j,c[h+8>>2]|0,d)|0;Bb[c[(c[d>>2]|0)+20>>2]&31](d,h,j,1213612625,c[a+52>>2]|0);break}else{c[b+40>>2]=h;c[b+44>>2]=0;break}}else{f=8}}while(0);if((f|0)==8){c[b+40>>2]=0;c[b+44>>2]=0}if((c[a+56>>2]|0)!=0?((Hb[c[(c[d>>2]|0)+52>>2]&127](d)|0)&2|0)==0:0){f=Zb[c[(c[d>>2]|0)+24>>2]&31](d,c[a+56>>2]|0)|0;if((f|0)==0){c[b+48>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+56>>2]|0)|0;h=c[a+56>>2]|0;h=Hb[c[(c[h>>2]|0)+8>>2]&127](h)|0;h=Qb[c[(c[d>>2]|0)+16>>2]&31](d,h,1)|0;j=c[a+56>>2]|0;j=Qb[c[(c[j>>2]|0)+12>>2]&31](j,c[h+8>>2]|0,d)|0;Bb[c[(c[d>>2]|0)+20>>2]&31](d,h,j,1346456916,c[a+56>>2]|0);i=e;return 4096}else{c[b+48>>2]=f;i=e;return 4096}}c[b+48>>2]=0;i=e;return 4096}function Il(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[a+52>>2]|0;if((e|0)==0){i=d;return}f=Hb[c[(c[e>>2]|0)+12>>2]&127](e)|0;f=Qb[c[(c[b>>2]|0)+16>>2]&31](b,f,1)|0;e=c[a+52>>2]|0;e=Qb[c[(c[e>>2]|0)+16>>2]&31](e,c[f+8>>2]|0,b)|0;Bb[c[(c[b>>2]|0)+20>>2]&31](b,f,e,1213612625,c[a+52>>2]|0);i=d;return}function Jl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[a+56>>2]|0;if((e|0)==0){i=d;return}f=Hb[c[(c[e>>2]|0)+8>>2]&127](e)|0;f=Qb[c[(c[b>>2]|0)+16>>2]&31](b,f,1)|0;e=c[a+56>>2]|0;e=Qb[c[(c[e>>2]|0)+12>>2]&31](e,c[f+8>>2]|0,b)|0;Bb[c[(c[b>>2]|0)+20>>2]&31](b,f,e,1346456916,c[a+56>>2]|0);i=d;return}function Kl(a){a=a|0;return 4168}function Ll(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function Ml(a){a=a|0;return+(+g[a+12>>2])}function Nl(a){a=a|0;return 60}function Ol(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;ic[c[(c[b>>2]|0)+68>>2]&63](a,b,d);i=e;return}function Pl(a){a=a|0;return}function Ql(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Rl(a,b,f){a=a|0;b=b|0;f=f|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0;o=i;i=i+32|0;l=c[a+4>>2]|0;Yb[c[(c[l>>2]|0)+16>>2]&3](l,o+28|0,o+24|0,o+20|0,o+16|0,o+12|0,o+8|0,o+4|0,o,b);l=c[o+12>>2]|0;m=aa(c[o+8>>2]|0,f)|0;k=c[a+4>>2]|0;n=c[o>>2]|0;j=2;while(1){if((n|0)==2){q=c[l+m+(j<<2)>>2]|0}else if((n|0)==3){q=e[l+m+(j<<1)>>1]|0}else{q=d[l+(j+m)>>0]|0}p=c[o+28>>2]|0;q=aa(c[o+16>>2]|0,q)|0;if((c[o+20>>2]|0)==0){s=+g[p+(q+4)>>2]*+g[k+8>>2];r=+g[p+(q+8)>>2]*+g[k+12>>2];g[a+(j<<4)+12>>2]=+g[p+q>>2]*+g[k+4>>2];g[a+(j<<4)+16>>2]=s;g[a+(j<<4)+20>>2]=r;g[a+(j<<4)+24>>2]=0.0}else{r=+h[p+(q+8)>>3]*+g[k+8>>2];s=+h[p+(q+16)>>3]*+g[k+12>>2];g[a+(j<<4)+12>>2]=+h[p+q>>3]*+g[k+4>>2];g[a+(j<<4)+16>>2]=r;g[a+(j<<4)+20>>2]=s;g[a+(j<<4)+24>>2]=0.0}if((j|0)>0){j=j+ -1|0}else{break}}q=c[a+8>>2]|0;mc[c[(c[q>>2]|0)+8>>2]&63](q,a+12|0,b,f);q=c[a+4>>2]|0;Fb[c[(c[q>>2]|0)+24>>2]&127](q,b);i=o;return}function Sl(a){a=a|0;return}function Tl(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Ul(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0;n=i;i=i+80|0;l=c[a+4>>2]|0;Yb[c[(c[l>>2]|0)+16>>2]&3](l,n+28|0,n+24|0,n+20|0,n+16|0,n+12|0,n+8|0,n+4|0,n,b);l=c[n+12>>2]|0;k=aa(c[n+8>>2]|0,d)|0;f=c[a+4>>2]|0;m=(c[n+20>>2]|0)==0;j=c[n+28>>2]|0;if((c[n>>2]|0)!=3){o=c[n+16>>2]|0;p=aa(o,c[l+(k+8)>>2]|0)|0;if(m){s=+g[j+(p+4)>>2]*+g[f+8>>2];r=+g[j+(p+8)>>2]*+g[f+12>>2];g[n+64>>2]=+g[j+p>>2]*+g[f+4>>2];g[n+68>>2]=s;g[n+72>>2]=r;g[n+76>>2]=0.0;q=aa(o,c[l+(k+4)>>2]|0)|0;r=+g[j+(q+4)>>2]*+g[f+8>>2];s=+g[j+(q+8)>>2]*+g[f+12>>2];g[n+48>>2]=+g[j+q>>2]*+g[f+4>>2];g[n+52>>2]=r;g[n+56>>2]=s;g[n+60>>2]=0.0;q=aa(o,c[l+k>>2]|0)|0;s=+g[j+(q+4)>>2]*+g[f+8>>2];r=+g[j+(q+8)>>2]*+g[f+12>>2];g[n+32>>2]=+g[j+q>>2]*+g[f+4>>2];g[n+36>>2]=s;g[n+40>>2]=r;g[n+44>>2]=0.0;q=a+8|0;q=c[q>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;mc[p&63](q,n+32|0,b,d);q=c[a+4>>2]|0;p=c[q>>2]|0;p=p+24|0;p=c[p>>2]|0;Fb[p&127](q,b);i=n;return}else{r=+h[j+(p+8)>>3]*+g[f+8>>2];s=+h[j+(p+16)>>3]*+g[f+12>>2];g[n+64>>2]=+h[j+p>>3]*+g[f+4>>2];g[n+68>>2]=r;g[n+72>>2]=s;g[n+76>>2]=0.0;q=aa(o,c[l+(k+4)>>2]|0)|0;s=+h[j+(q+8)>>3]*+g[f+8>>2];r=+h[j+(q+16)>>3]*+g[f+12>>2];g[n+48>>2]=+h[j+q>>3]*+g[f+4>>2];g[n+52>>2]=s;g[n+56>>2]=r;g[n+60>>2]=0.0;q=aa(o,c[l+k>>2]|0)|0;r=+h[j+(q+8)>>3]*+g[f+8>>2];s=+h[j+(q+16)>>3]*+g[f+12>>2];g[n+32>>2]=+h[j+q>>3]*+g[f+4>>2];g[n+36>>2]=r;g[n+40>>2]=s;g[n+44>>2]=0.0;q=a+8|0;q=c[q>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;mc[p&63](q,n+32|0,b,d);q=c[a+4>>2]|0;p=c[q>>2]|0;p=p+24|0;p=c[p>>2]|0;Fb[p&127](q,b);i=n;return}}o=c[n+16>>2]|0;p=2;while(1){q=aa(o,e[l+k+(p<<1)>>1]|0)|0;if(m){r=+g[j+(q+4)>>2]*+g[f+8>>2];s=+g[j+(q+8)>>2]*+g[f+12>>2];g[n+32+(p<<4)>>2]=+g[j+q>>2]*+g[f+4>>2];g[n+32+(p<<4)+4>>2]=r;g[n+32+(p<<4)+8>>2]=s;g[n+32+(p<<4)+12>>2]=0.0}else{r=+h[j+(q+8)>>3]*+g[f+8>>2];s=+h[j+(q+16)>>3]*+g[f+12>>2];g[n+32+(p<<4)>>2]=+h[j+q>>3]*+g[f+4>>2];g[n+32+(p<<4)+4>>2]=r;g[n+32+(p<<4)+8>>2]=s;g[n+32+(p<<4)+12>>2]=0.0}if((p|0)>0){p=p+ -1|0}else{break}}q=a+8|0;q=c[q>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;mc[p&63](q,n+32|0,b,d);q=c[a+4>>2]|0;p=c[q>>2]|0;p=p+24|0;p=c[p>>2]|0;Fb[p&127](q,b);i=n;return}function Vl(a){a=a|0;return}function Wl(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Xl(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0;n=i;i=i+80|0;m=c[a+4>>2]|0;Yb[c[(c[m>>2]|0)+16>>2]&3](m,n+28|0,n+24|0,n+20|0,n+16|0,n+12|0,n+8|0,n+4|0,n,b);m=(c[n+12>>2]|0)+(aa(c[n+8>>2]|0,d)|0)|0;k=c[a+4>>2]|0;f=(c[n>>2]|0)==3;l=(c[n+20>>2]|0)==0;j=c[n+28>>2]|0;o=2;while(1){if(f){p=e[m+(o<<1)>>1]|0}else{p=c[m+(o<<2)>>2]|0}p=aa(c[n+16>>2]|0,p)|0;if(l){r=+g[j+(p+4)>>2]*+g[k+8>>2];q=+g[j+(p+8)>>2]*+g[k+12>>2];g[n+32+(o<<4)>>2]=+g[j+p>>2]*+g[k+4>>2];g[n+32+(o<<4)+4>>2]=r;g[n+32+(o<<4)+8>>2]=q;g[n+32+(o<<4)+12>>2]=0.0}else{q=+h[j+(p+8)>>3]*+g[k+8>>2];r=+h[j+(p+16)>>3]*+g[k+12>>2];g[n+32+(o<<4)>>2]=+h[j+p>>3]*+g[k+4>>2];g[n+32+(o<<4)+4>>2]=q;g[n+32+(o<<4)+8>>2]=r;g[n+32+(o<<4)+12>>2]=0.0}if((o|0)>0){o=o+ -1|0}else{break}}p=c[a+8>>2]|0;mc[c[(c[p>>2]|0)+8>>2]&63](p,n+32|0,b,d);p=c[a+4>>2]|0;Fb[c[(c[p>>2]|0)+24>>2]&127](p,b);i=n;return}function Yl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;e=i;i=i+32|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];if(f*f+h*h+j*j<9999999747378752.0e-20){f=1.0;h=0.0;j=0.0}else{q=1.0/+Q(+(f*f+h*h+j*j));f=f*q;h=h*q;j=j*q}d=c[b+52>>2]|0;m=+g[b+(((d+2|0)%3|0)<<2)+28>>2];c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;g[e+16+(d<<2)>>2]=+g[b+(d<<2)+28>>2];l=f*m;k=h*m;m=j*m;q=l+ +g[e+16>>2];n=k+ +g[e+20>>2];o=m+ +g[e+24>>2];p=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);q=q-f*p;n=n-h*p;p=o-j*p;o=j*p+(f*q+h*n);if(o>-999999984306749400.0){g[a>>2]=q;g[a+4>>2]=n;g[a+8>>2]=p;g[a+12>>2]=0.0}else{o=-999999984306749400.0}c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;d=c[b+52>>2]|0;g[e+(d<<2)>>2]=-+g[b+(d<<2)+28>>2];l=l+ +g[e>>2];k=k+ +g[e+4>>2];q=m+ +g[e+8>>2];m=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);l=l-f*m;k=k-h*m;m=q-j*m;if(!(j*m+(f*l+h*k)>o)){i=e;return}g[a>>2]=l;g[a+4>>2]=k;g[a+8>>2]=m;g[a+12>>2]=0.0;i=e;return}function Zl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0;f=i;i=i+32|0;k=c[a+52>>2]|0;h=+g[a+(((k+2|0)%3|0)<<2)+28>>2];if((e|0)<=0){i=f;return}j=0;while(1){m=a+(k<<2)+28|0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;g[f+16+(k<<2)>>2]=+g[m>>2];m=b+(j<<4)|0;l=b+(j<<4)+4|0;k=b+(j<<4)+8|0;u=h*+g[m>>2]+ +g[f+16>>2];s=h*+g[l>>2]+ +g[f+20>>2];q=h*+g[k>>2]+ +g[f+24>>2];w=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);t=+g[m>>2];r=+g[l>>2];v=+g[k>>2];if(t*(u-w*t)+r*(s-w*r)+v*(q-w*v)>-999999984306749400.0){g[d+(j<<4)>>2]=u-w*t;g[d+(j<<4)+4>>2]=s-w*r;g[d+(j<<4)+8>>2]=q-w*v;g[d+(j<<4)+12>>2]=0.0;p=+g[m>>2];o=+g[l>>2];n=+g[k>>2];q=t*(u-w*t)+r*(s-w*r)+v*(q-w*v)}else{p=t;o=r;n=v;q=-999999984306749400.0}c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;x=c[a+52>>2]|0;g[f+(x<<2)>>2]=-+g[a+(x<<2)+28>>2];p=h*p+ +g[f>>2];o=h*o+ +g[f+4>>2];r=h*n+ +g[f+8>>2];n=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);s=+g[m>>2];t=+g[l>>2];u=+g[k>>2];if(s*(p-n*s)+t*(o-n*t)+u*(r-n*u)>q){g[d+(j<<4)>>2]=p-n*s;g[d+(j<<4)+4>>2]=o-n*t;g[d+(j<<4)+8>>2]=r-n*u;g[d+(j<<4)+12>>2]=0.0}j=j+1|0;if((j|0)==(e|0)){break}k=c[a+52>>2]|0}i=f;return}function _l(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0;e=i;i=i+16|0;k=c[a+52>>2]|0;h=+g[a+(((k+2|0)%3|0)<<2)+28>>2];g[e>>2]=h;g[e+4>>2]=h;g[e+8>>2]=h;g[e+12>>2]=0.0;g[e+(k<<2)>>2]=+g[a+(k<<2)+28>>2]+ +g[e+(k<<2)>>2];h=(+g[e>>2]+.03999999910593033)*2.0;f=(+g[e+4>>2]+.03999999910593033)*2.0;j=(+g[e+8>>2]+.03999999910593033)*2.0;g[d>>2]=b*.0833333283662796*(f*f+j*j);g[d+4>>2]=b*.0833333283662796*(h*h+j*j);g[d+8>>2]=b*.0833333283662796*(h*h+f*f);i=e;return}function $l(a){a=a|0;return}function am(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function bm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0;f=i;i=i+16|0;x=c[a+52>>2]|0;k=+g[a+(((x+2|0)%3|0)<<2)+28>>2];g[f>>2]=k;g[f+4>>2]=k;g[f+8>>2]=k;g[f+12>>2]=0.0;g[f+(x<<2)>>2]=k+ +g[a+(x<<2)+28>>2];k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);n=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=k+ +g[f>>2];g[f>>2]=k;h=h+ +g[f+4>>2];g[f+4>>2]=h;n=n+ +g[f+8>>2];u=+P(+(+g[b>>2]));t=+P(+(+g[b+4>>2]));v=+P(+(+g[b+8>>2]));q=+P(+(+g[b+16>>2]));p=+P(+(+g[b+20>>2]));r=+P(+(+g[b+24>>2]));l=+P(+(+g[b+32>>2]));j=+P(+(+g[b+36>>2]));m=+P(+(+g[b+40>>2]));w=+g[b+48>>2];s=+g[b+52>>2];o=+g[b+56>>2];g[d>>2]=w-(n*v+(u*k+t*h));g[d+4>>2]=s-(n*r+(q*k+p*h));g[d+8>>2]=o-(n*m+(l*k+j*h));g[d+12>>2]=0.0;g[e>>2]=w+(n*v+(u*k+t*h));g[e+4>>2]=s+(n*r+(q*k+p*h));g[e+8>>2]=o+(n*m+(l*k+j*h));g[e+12>>2]=0.0;i=f;return}function cm(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;d=i;m=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);o=(m+ +g[a+28>>2])/+g[a+12>>2];l=(j+ +g[a+32>>2])/+g[a+16>>2];h=(e+ +g[a+36>>2])/+g[a+20>>2];n=+P(+(+g[b>>2]));k=+P(+(+g[b+4>>2]));f=+P(+(+g[b+8>>2]));g[a+12>>2]=n;g[a+16>>2]=k;g[a+20>>2]=f;g[a+24>>2]=0.0;g[a+28>>2]=o*n-m;g[a+32>>2]=l*k-j;g[a+36>>2]=h*f-e;g[a+40>>2]=0.0;i=d;return}function dm(a){a=a|0;return 5160}function em(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;g[a+(c[b+52>>2]<<2)>>2]=1.0;i=d;return}function fm(a,b){a=a|0;b=+b;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0;d=i;j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=j+ +g[a+28>>2];f=f+ +g[a+32>>2];k=k+ +g[a+36>>2];g[a+44>>2]=b;h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);b=k- +Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=j-h;g[a+32>>2]=f-e;g[a+36>>2]=b;g[a+40>>2]=0.0;i=d;return}function gm(a){a=a|0;return 60}function hm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+52>>2];i=e;return 5136}function im(a){a=a|0;return}function jm(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function km(a){a=a|0;return 5120}function lm(a){a=a|0;return}function mm(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function nm(a){a=a|0;return 5104}function om(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0;e=i;i=i+80|0;f=c[c[a>>2]>>2]|0;h=c[c[a+4>>2]>>2]|0;if(!(Qb[c[(c[b>>2]|0)+24>>2]&31](b,f,h)|0)){i=e;return}j=c[f+192>>2]|0;c[e+56>>2]=0;c[e+60>>2]=j;c[e+64>>2]=f;c[e+68>>2]=f+4;c[e+72>>2]=-1;c[e+76>>2]=-1;j=c[h+192>>2]|0;c[e+32>>2]=0;c[e+36>>2]=j;c[e+40>>2]=h;c[e+44>>2]=h+4;c[e+48>>2]=-1;c[e+52>>2]=-1;j=c[a+8>>2]|0;if((j|0)==0){j=Lb[c[(c[b>>2]|0)+8>>2]&31](b,e+56|0,e+32|0,0)|0;c[a+8>>2]=j;if((j|0)==0){i=e;return}}c[e>>2]=11152;c[e+4>>2]=0;c[e+8>>2]=e+56;c[e+12>>2]=e+32;if((c[d+8>>2]|0)==1){Bb[c[(c[j>>2]|0)+8>>2]&31](j,e+56|0,e+32|0,d,e);i=e;return}k=+Pb[c[(c[j>>2]|0)+12>>2]&15](j,f,h,d,e);if(!(+g[d+12>>2]>k)){i=e;return}g[d+12>>2]=k;i=e;return}function pm(a){a=a|0;return}function qm(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=5192;e=c[b+20>>2]|0;if((e|0)==0){a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;dw(b);i=d;return}if((a[b+24>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;dw(b);i=d;return}function rm(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=5192;e=c[b+20>>2]|0;if((e|0)!=0){if((a[b+24>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+20>>2]=0}a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;i=d;return}function sm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0,m=0,n=0.0,o=0;f=i;i=i+16|0;c[1294]=(c[1294]|0)+1;if((c[b+4>>2]&2|0)==0){j=13368}else{o=c[d+192>>2]|0;l=+cc[c[(c[o>>2]|0)+20>>2]&1](o,.019999999552965164);g[f+4>>2]=l;o=c[e+192>>2]|0;n=+cc[c[(c[o>>2]|0)+20>>2]&1](o,.019999999552965164);g[f>>2]=n;j=l<n?f+4|0:f}k=+g[j>>2];n=+g[d+184>>2];l=+g[e+184>>2];l=n<l?n:l;j=c[b+68>>2]|0;m=c[j+8>>2]|0;if((m|0)==0){if((c[b+4>>2]&4|0)!=0){o=0;i=f;return o|0}c[4336]=(c[4336]|0)+1;j=cw(791)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}}else{o=c[j+12>>2]|0;c[j+12>>2]=c[o>>2];c[j+8>>2]=m+ -1;j=o}c[j>>2]=1025;c[j+116>>2]=0;a[j+120>>0]=0;o=j+124|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;c[j+300>>2]=0;a[j+304>>0]=0;o=j+308|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;c[j+484>>2]=0;a[j+488>>0]=0;o=j+492|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;c[j+668>>2]=0;a[j+672>>0]=0;o=j+676|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[o+28>>2]=0;c[j+740>>2]=d;c[j+744>>2]=e;c[j+748>>2]=0;g[j+752>>2]=k;g[j+756>>2]=l;c[j+768>>2]=c[b+12>>2];e=c[b+12>>2]|0;if((e|0)==(c[b+16>>2]|0)?(h=(e|0)==0?1:e<<1,(e|0)<(h|0)):0){if((h|0)==0){d=0}else{c[4336]=(c[4336]|0)+1;d=cw((h<<2|3)+16|0)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}e=c[b+12>>2]|0}if((e|0)>0){o=0;do{m=d+(o<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[b+20>>2]|0)+(o<<2)>>2]}o=o+1|0}while((o|0)!=(e|0))}m=c[b+20>>2]|0;if((m|0)!=0){if((a[b+24>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[m+ -4>>2]|0);e=c[b+12>>2]|0}c[b+20>>2]=0}a[b+24>>0]=1;c[b+20>>2]=d;c[b+16>>2]=h}h=(c[b+20>>2]|0)+(e<<2)|0;if((h|0)!=0){c[h>>2]=j}c[b+12>>2]=e+1;o=j;i=f;return o|0}function tm(a,b){a=a|0;b=b|0;var d=0,e=0;a=i;d=c[b+748>>2]|0;if((d|0)>0){e=0;do{e=e+1|0}while((e|0)<(d|0))}c[b+748>>2]=0;i=a;return}function um(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[1294]=(c[1294]|0)+ -1;Fb[c[(c[a>>2]|0)+20>>2]&127](a,b);e=c[b+768>>2]|0;f=(c[a+12>>2]|0)+ -1|0;h=c[a+20>>2]|0;g=c[h+(e<<2)>>2]|0;c[h+(e<<2)>>2]=c[h+(f<<2)>>2];c[(c[a+20>>2]|0)+(f<<2)>>2]=g;c[(c[(c[a+20>>2]|0)+(e<<2)>>2]|0)+768>>2]=e;c[a+12>>2]=(c[a+12>>2]|0)+ -1;a=c[a+68>>2]|0;if((b|0)==0){i=d;return}e=c[a+16>>2]|0;if(!(e>>>0>b>>>0)?(e+(aa(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){c[b>>2]=c[a+12>>2];c[a+12>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+1;i=d;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function vm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+16|0;c[f>>2]=a;c[f+4>>2]=e;e=c[a+((c[(c[b+4>>2]|0)+4>>2]|0)*144|0)+(c[(c[d+4>>2]|0)+4>>2]<<2)+72>>2]|0;e=Lb[c[(c[e>>2]|0)+8>>2]&31](e,f,b,d)|0;i=f;return e|0}function wm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=i;b=c[b+204>>2]|0;if((b&4|0)==0?(e=c[d+204>>2]|0,(e&4|0)==0):0){if((b&3|0)==0){d=1}else{d=(e&3|0)==0}}else{d=0}i=a;return d|0}function xm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=i;e=c[b+216>>2]|0;if((e|0)==2|(e|0)==5?(e=c[d+216>>2]|0,(e|0)==2|(e|0)==5):0){e=0;i=a;return e|0}if((c[b+256>>2]|0)==0){e=1;i=a;return e|0}e=Zb[c[c[b>>2]>>2]&31](b,d)|0;i=a;return e|0}function ym(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+16|0;c[f>>2]=5304;c[f+4>>2]=d;c[f+8>>2]=a;ic[c[(c[b>>2]|0)+48>>2]&63](b,f,e);i=f;return}function zm(a){a=a|0;return}function Am(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=c[a+64>>2]|0;e=c[a+8>>2]|0;if((e|0)!=0){b=c[a+12>>2]|0;c[a+12>>2]=c[b>>2];c[a+8>>2]=e+ -1;e=b;i=d;return e|0}c[4336]=(c[4336]|0)+1;b=cw(b+19|0)|0;if((b|0)==0){e=0;i=d;return e|0}c[(b+19&-16)+ -4>>2]=b;e=b+19&-16;i=d;return e|0}function Bm(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;a=c[a+64>>2]|0;if((b|0)==0){i=d;return}e=c[a+16>>2]|0;if(!(e>>>0>b>>>0)?(e+(aa(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){c[b>>2]=c[a+12>>2];c[a+12>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+1;i=d;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function Cm(a){a=a|0;return c[a+12>>2]|0}function Dm(a,b){a=a|0;b=b|0;return c[(c[a+20>>2]|0)+(b<<2)>>2]|0}function Em(a){a=a|0;var b=0;b=i;if((c[a+12>>2]|0)==0){a=0;i=b;return a|0}a=c[a+20>>2]|0;i=b;return a|0}function Fm(a){a=a|0;return c[a+68>>2]|0}function Gm(a){a=a|0;return c[a+68>>2]|0}function Hm(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Im(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a+8>>2]|0;ic[c[e+60>>2]&63](b,e,c[a+4>>2]|0);i=d;return 0}function Jm(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Km(a,b,d){a=a|0;b=b|0;d=d|0;c[a+16>>2]=b;c[a+24>>2]=d;return}function Lm(a,b,d){a=a|0;b=b|0;d=d|0;c[a+20>>2]=b;c[a+28>>2]=d;return}function Mm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0;e=i;g[b+16>>2]=+g[a+4>>2];g[b+20>>2]=+g[a+8>>2];g[b+24>>2]=+g[a+12>>2];g[b+28>>2]=+g[a+16>>2];g[b+32>>2]=+g[a+20>>2];g[b+36>>2]=+g[a+24>>2];g[b+40>>2]=+g[a+28>>2];g[b+44>>2]=+g[a+32>>2];g[b+48>>2]=+g[a+36>>2];g[b+52>>2]=+g[a+40>>2];g[b+56>>2]=+g[a+44>>2];g[b+60>>2]=+g[a+48>>2];g[b+64>>2]=+g[a+52>>2];g[b+68>>2]=+g[a+56>>2];g[b+72>>2]=+g[a+60>>2];g[b+76>>2]=+g[a+64>>2];g[b+80>>2]=+g[a+68>>2];g[b+84>>2]=+g[a+72>>2];g[b+88>>2]=+g[a+76>>2];g[b+92>>2]=+g[a+80>>2];g[b+96>>2]=+g[a+84>>2];g[b+100>>2]=+g[a+88>>2];g[b+104>>2]=+g[a+92>>2];g[b+108>>2]=+g[a+96>>2];g[b+112>>2]=+g[a+100>>2];g[b+116>>2]=+g[a+104>>2];g[b+120>>2]=+g[a+108>>2];g[b+124>>2]=+g[a+112>>2];g[b+128>>2]=+g[a+116>>2];g[b+132>>2]=+g[a+120>>2];g[b+136>>2]=+g[a+124>>2];g[b+140>>2]=+g[a+128>>2];g[b+144>>2]=+g[a+132>>2];g[b+148>>2]=+g[a+136>>2];g[b+152>>2]=+g[a+140>>2];g[b+156>>2]=+g[a+144>>2];g[b+160>>2]=+g[a+148>>2];g[b+164>>2]=+g[a+152>>2];g[b+168>>2]=+g[a+156>>2];g[b+172>>2]=+g[a+160>>2];g[b+176>>2]=+g[a+164>>2];g[b+180>>2]=+g[a+168>>2];g[b+184>>2]=+g[a+172>>2];g[b+188>>2]=+g[a+176>>2];c[b+224>>2]=c[a+180>>2];g[b+192>>2]=+g[a+184>>2];c[b>>2]=0;c[b+4>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+192>>2]|0)|0;c[b+8>>2]=0;c[b+228>>2]=c[a+204>>2];c[b+232>>2]=c[a+208>>2];c[b+236>>2]=c[a+212>>2];c[b+240>>2]=c[a+216>>2];g[b+196>>2]=+g[a+220>>2];g[b+200>>2]=+g[a+224>>2];g[b+204>>2]=+g[a+232>>2];g[b+208>>2]=+g[a+228>>2];c[b+244>>2]=c[a+236>>2];f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b+12>>2]=h;if((h|0)==0){d=a+244|0;j=+g[d>>2];d=b+212|0;g[d>>2]=j;d=a+248|0;j=+g[d>>2];d=b+216|0;g[d>>2]=j;d=a+252|0;j=+g[d>>2];d=b+220|0;g[d>>2]=j;d=a+256|0;d=c[d>>2]|0;h=b+248|0;c[h>>2]=d;i=e;return 5400}Fb[c[(c[d>>2]|0)+48>>2]&127](d,f);d=a+244|0;j=+g[d>>2];d=b+212|0;g[d>>2]=j;d=a+248|0;j=+g[d>>2];d=b+216|0;g[d>>2]=j;d=a+252|0;j=+g[d>>2];d=b+220|0;g[d>>2]=j;d=a+256|0;d=c[d>>2]|0;h=b+248|0;c[h>>2]=d;i=e;return 5400}function Nm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0;e=i;i=i+96|0;g[e+32>>2]=1.0;c[e+36>>2]=0;c[e+40>>2]=0;c[e+44>>2]=0;c[e+48>>2]=0;g[e+52>>2]=1.0;c[e+56>>2]=0;c[e+60>>2]=0;c[e+64>>2]=0;c[e+68>>2]=0;g[e+72>>2]=1.0;n=e+76|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&63](a,e+32|0,e+16|0,e);l=+g[e>>2];m=+g[e+16>>2];j=+g[e+4>>2];k=+g[e+20>>2];f=+g[e+8>>2];h=+g[e+24>>2];g[d>>2]=+Q(+((l-m)*(l-m)+(j-k)*(j-k)+(f-h)*(f-h)))*.5;g[b>>2]=(m+l)*.5;g[b+4>>2]=(k+j)*.5;g[b+8>>2]=(h+f)*.5;g[b+12>>2]=0.0;i=e;return}function Om(a,b){a=a|0;b=+b;var d=0;d=i;b=+Tb[c[(c[a>>2]|0)+16>>2]&15](a)*b;i=d;return+b}function Pm(a){a=a|0;var b=0,d=0.0,e=0.0,f=0.0;b=i;i=i+32|0;ic[c[(c[a>>2]|0)+12>>2]&63](a,b+8|0,b);f=+g[b+8>>2];e=+g[b+12>>2];d=+g[b+16>>2];d=+Q(+(f*f+e*e+d*d));i=b;return+(d+ +g[b>>2])}function Qm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=g;if((g|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];i=e;return 5464}function Rm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;f=Hb[c[(c[a>>2]|0)+52>>2]&127](a)|0;f=Qb[c[(c[b>>2]|0)+16>>2]&31](b,f,1)|0;e=Qb[c[(c[a>>2]|0)+56>>2]&31](a,c[f+8>>2]|0,b)|0;Bb[c[(c[b>>2]|0)+20>>2]&31](b,f,e,1346455635,a);i=d;return}function Sm(a){a=a|0;return 12}function Tm(a){a=a|0;var b=0;b=i;Um(a);if((a|0)!=0){dw(a)}i=b;return}function Um(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;c[b>>2]=5528;e=c[b+8>>2]|0;g=c[b+16>>2]|0;if((e|0)>0){f=0;do{h=(c[g+(f<<2)>>2]|0)+188|0;j=c[h>>2]|0;if((j|0)!=0){e=c[b+68>>2]|0;e=Hb[c[(c[e>>2]|0)+36>>2]&127](e)|0;ic[c[(c[e>>2]|0)+40>>2]&63](e,j,c[b+24>>2]|0);e=c[b+68>>2]|0;ic[c[(c[e>>2]|0)+12>>2]&63](e,j,c[b+24>>2]|0);c[h>>2]=0;e=c[b+8>>2]|0;g=c[b+16>>2]|0}f=f+1|0}while((f|0)<(e|0))}if((g|0)==0){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;j=b+12|0;c[j>>2]=0;i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[g+ -4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;j=b+12|0;c[j>>2]=0;i=d;return}function Vm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+96|0;k=c[b+8>>2]|0;if((k|0)==(c[b+12>>2]|0)?(h=(k|0)==0?1:k<<1,(k|0)<(h|0)):0){if((h|0)==0){j=0}else{c[4336]=(c[4336]|0)+1;j=cw((h<<2|3)+16|0)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}k=c[b+8>>2]|0}if((k|0)>0){m=0;do{l=j+(m<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[b+16>>2]|0)+(m<<2)>>2]}m=m+1|0}while((m|0)!=(k|0))}l=c[b+16>>2]|0;if((l|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0);k=c[b+8>>2]|0}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=j;c[b+12>>2]=h}h=(c[b+16>>2]|0)+(k<<2)|0;if((h|0)!=0){c[h>>2]=d}c[b+8>>2]=k+1;c[g+32>>2]=c[d+4>>2];c[g+36>>2]=c[d+8>>2];c[g+40>>2]=c[d+12>>2];c[g+44>>2]=c[d+16>>2];c[g+48>>2]=c[d+20>>2];c[g+52>>2]=c[d+24>>2];c[g+56>>2]=c[d+28>>2];c[g+60>>2]=c[d+32>>2];c[g+64>>2]=c[d+36>>2];c[g+68>>2]=c[d+40>>2];c[g+72>>2]=c[d+44>>2];c[g+76>>2]=c[d+48>>2];c[g+80>>2]=c[d+52>>2];c[g+84>>2]=c[d+56>>2];c[g+88>>2]=c[d+60>>2];c[g+92>>2]=c[d+64>>2];m=c[d+192>>2]|0;mc[c[(c[m>>2]|0)+8>>2]&63](m,g+32|0,g+16|0,g);m=c[b+68>>2]|0;c[d+188>>2]=gc[c[(c[m>>2]|0)+8>>2]&3](m,g+16|0,g,c[(c[d+192>>2]|0)+4>>2]|0,d,e,f,c[b+24>>2]|0,0)|0;i=g;return}function Wm(b){b=b|0;var d=0,e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0;d=i;i=i+64|0;Mv(5808);q=c[b+8>>2]|0;if((q|0)>0){f=0;do{h=c[(c[b+16>>2]|0)+(f<<2)>>2]|0;if(!((a[b+76>>0]|0)==0?(r=c[h+216>>2]|0,(r|0)==2|(r|0)==5):0)){r=c[h+192>>2]|0;mc[c[(c[r>>2]|0)+8>>2]&63](r,h+4|0,d+48|0,d+32|0);k=+g[d+48>>2]+-.019999999552965164;g[d+48>>2]=k;j=+g[d+52>>2]+-.019999999552965164;g[d+52>>2]=j;l=+g[d+56>>2]+-.019999999552965164;g[d+56>>2]=l;o=+g[d+32>>2]+.019999999552965164;g[d+32>>2]=o;n=+g[d+36>>2]+.019999999552965164;g[d+36>>2]=n;m=+g[d+40>>2]+.019999999552965164;g[d+40>>2]=m;if(((a[b+44>>0]|0)!=0?(c[h+236>>2]|0)==2:0)?(c[h+204>>2]&3|0)==0:0){r=c[h+192>>2]|0;mc[c[(c[r>>2]|0)+8>>2]&63](r,h+68|0,d+16|0,d);k=+g[d+16>>2]+-.019999999552965164;g[d+16>>2]=k;j=+g[d+20>>2]+-.019999999552965164;g[d+20>>2]=j;l=+g[d+24>>2]+-.019999999552965164;g[d+24>>2]=l;o=+g[d>>2]+.019999999552965164;g[d>>2]=o;n=+g[d+4>>2]+.019999999552965164;g[d+4>>2]=n;m=+g[d+8>>2]+.019999999552965164;g[d+8>>2]=m;p=+g[d+48>>2];if(k<p){g[d+48>>2]=k}else{k=p}p=+g[d+52>>2];if(j<p){g[d+52>>2]=j}else{j=p}p=+g[d+56>>2];if(l<p){g[d+56>>2]=l}else{l=p}p=+g[d+28>>2];if(p<+g[d+60>>2]){g[d+60>>2]=p}p=+g[d+32>>2];if(p<o){g[d+32>>2]=o}else{o=p}p=+g[d+36>>2];if(p<n){g[d+36>>2]=n}else{n=p}p=+g[d+40>>2];if(p<m){g[d+40>>2]=m}else{m=p}p=+g[d+12>>2];if(+g[d+44>>2]<p){g[d+44>>2]=p}}q=c[b+68>>2]|0;if((c[h+204>>2]&1|0)==0?(k=o-k,o=n-j,p=m-l,!(k*k+o*o+p*p<999999995904.0)):0){if(!(((c[h+216>>2]|0)+ -4|0)>>>0<2)){c[h+216>>2]=5}if((a[5584]|0)!=0?(e=c[b+72>>2]|0,(e|0)!=0):0){a[5584]=0;Fb[c[(c[e>>2]|0)+36>>2]&127](e,5592);r=c[b+72>>2]|0;Fb[c[(c[r>>2]|0)+36>>2]&127](r,5648);r=c[b+72>>2]|0;Fb[c[(c[r>>2]|0)+36>>2]&127](r,5720);r=c[b+72>>2]|0;Fb[c[(c[r>>2]|0)+36>>2]&127](r,5792)}}else{Bb[c[(c[q>>2]|0)+16>>2]&31](q,c[h+188>>2]|0,d+48|0,d+32|0,c[b+24>>2]|0)}q=c[b+8>>2]|0}f=f+1|0}while((f|0)<(q|0))}b=c[4354]|0;r=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=r;if((r|0)!=0){i=d;return}do{if((c[b+4>>2]|0)!=0){wb(d+48|0,0)|0;r=c[4340]|0;g[b+8>>2]=+(((c[d+52>>2]|0)-(c[r+4>>2]|0)+(((c[d+48>>2]|0)-(c[r>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=d;return}}}while(0);c[4354]=c[b+20>>2];i=d;return}function Xm(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;Mv(5824);d=c[a+68>>2]|0;Fb[c[(c[d>>2]|0)+32>>2]&127](d,c[a+24>>2]|0);a=c[4354]|0;d=(c[a+16>>2]|0)+ -1|0;c[a+16>>2]=d;if((d|0)!=0){i=b;return}do{if((c[a+4>>2]|0)!=0){wb(b|0,0)|0;d=c[4340]|0;g[a+8>>2]=+(((c[b+4>>2]|0)-(c[d+4>>2]|0)+(((c[b>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3+ +g[a+8>>2];if((c[a+16>>2]|0)==0){a=c[4354]|0;break}else{i=b;return}}}while(0);c[4354]=c[a+20>>2];i=b;return}function Ym(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;Mv(5856);Db[c[(c[a>>2]|0)+8>>2]&255](a);Db[c[(c[a>>2]|0)+12>>2]&255](a);d=c[a+24>>2]|0;Mv(5896);if((d|0)!=0){f=c[(c[d>>2]|0)+32>>2]|0;e=c[a+68>>2]|0;e=Hb[c[(c[e>>2]|0)+36>>2]&127](e)|0;mc[f&63](d,e,a+28|0,c[a+24>>2]|0)}a=c[4354]|0;f=(c[a+16>>2]|0)+ -1|0;c[a+16>>2]=f;do{if((f|0)==0){if((c[a+4>>2]|0)!=0){wb(b|0,0)|0;d=c[4340]|0;g[a+8>>2]=+(((c[b+4>>2]|0)-(c[d+4>>2]|0)+(((c[b>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3+ +g[a+8>>2];d=c[4354]|0;if((c[a+16>>2]|0)==0){a=d}else{a=d;break}}a=c[a+20>>2]|0;c[4354]=a}}while(0);d=a+16|0;f=(c[d>>2]|0)+ -1|0;c[d>>2]=f;if((f|0)!=0){i=b;return}do{if((c[a+4>>2]|0)!=0){wb(b|0,0)|0;e=c[4340]|0;f=a+8|0;g[f>>2]=+(((c[b+4>>2]|0)-(c[e+4>>2]|0)+(((c[b>>2]|0)-(c[e>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3+ +g[f>>2];if((c[d>>2]|0)==0){a=c[4354]|0;break}else{i=b;return}}}while(0);c[4354]=c[a+20>>2];i=b;return}function Zm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=c[b+188>>2]|0;if((f|0)!=0){k=c[a+68>>2]|0;k=Hb[c[(c[k>>2]|0)+36>>2]&127](k)|0;ic[c[(c[k>>2]|0)+40>>2]&63](k,f,c[a+24>>2]|0);k=c[a+68>>2]|0;ic[c[(c[k>>2]|0)+12>>2]&63](k,f,c[a+24>>2]|0);c[b+188>>2]=0}f=c[a+8>>2]|0;if((f|0)<=0){i=e;return}g=c[a+16>>2]|0;h=0;while(1){j=g+(h<<2)|0;k=h+1|0;if((c[j>>2]|0)==(b|0)){break}if((k|0)<(f|0)){h=k}else{d=9;break}}if((d|0)==9){i=e;return}if((h|0)>=(f|0)){i=e;return}c[j>>2]=c[g+(f+ -1<<2)>>2];c[(c[a+16>>2]|0)+(f+ -1<<2)>>2]=b;c[a+8>>2]=f+ -1;i=e;return}



function _m(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0.0,L=0.0;j=i;i=i+1392|0;c[j+1192>>2]=0;g[j+1196>>2]=1.0;g[j+1200>>2]=1.0;g[j+1204>>2]=1.0;g[j+1208>>2]=0.0;c[j+1184>>2]=14168;c[j+1188>>2]=8;g[j+1212>>2]=0.0;g[j+1228>>2]=0.0;z=c[f+4>>2]|0;x=c[f+12>>2]|0;A=c[z+4>>2]|0;if((A|0)<20){c[j+1008>>2]=7744;c[j+1176>>2]=0;g[j+1180>>2]=0.0;g[j+1172>>2]=+g[h+4>>2];g[j+956>>2]=9999999747378752.0e-20;a[j+980>>0]=0;c[j+632>>2]=14480;c[j+636>>2]=j+648;c[j+640>>2]=j+1184;c[j+644>>2]=z;c[j+616>>2]=10832;c[j+620>>2]=j+648;c[j+624>>2]=j+1184;c[j+628>>2]=z;J=(c[h+16>>2]&4|0)==0?j+616|0:j+632|0;if(!(Ub[c[(c[J>>2]|0)+8>>2]&3](J,d,e,x,x,j+1008|0)|0)){i=j;return}x=j+1140|0;m=+g[x>>2];k=+g[j+1144>>2];n=+g[j+1148>>2];if(!(m*m+k*k+n*n>9999999747378752.0e-20)){i=j;return}l=+g[j+1172>>2];if(!(l<+g[h+4>>2])){i=j;return}H=1.0/+Q(+(m*m+k*k+n*n));g[x>>2]=m*H;g[j+1144>>2]=k*H;g[j+1148>>2]=n*H;c[j+584>>2]=c[f+8>>2];c[j+588>>2]=0;c[j+592>>2]=c[x+0>>2];c[j+596>>2]=c[x+4>>2];c[j+600>>2]=c[x+8>>2];c[j+604>>2]=c[x+12>>2];g[j+608>>2]=l;+_b[c[(c[h>>2]|0)+12>>2]&7](h,j+584|0,1);i=j;return}if((A+ -21|0)>>>0<9){t=+g[x>>2];u=+g[x+16>>2];s=+g[x+32>>2];v=+g[x+4>>2];w=+g[x+20>>2];r=+g[x+36>>2];G=+g[x+8>>2];H=+g[x+24>>2];q=+g[x+40>>2];y=-+g[x+48>>2];E=-+g[x+52>>2];F=-+g[x+56>>2];n=+g[d+48>>2];o=+g[d+52>>2];p=+g[d+56>>2];g[j+568>>2]=t*y+u*E+s*F+(t*n+u*o+s*p);g[j+572>>2]=v*y+w*E+r*F+(v*n+w*o+r*p);g[j+576>>2]=G*y+H*E+q*F+(G*n+H*o+q*p);g[j+580>>2]=0.0;l=+g[e+48>>2];k=+g[e+52>>2];m=+g[e+56>>2];s=t*y+u*E+s*F+(t*l+u*k+s*m);r=v*y+w*E+r*F+(v*l+w*k+r*m);q=G*y+H*E+q*F+(G*l+H*k+q*m);g[j+552>>2]=s;g[j+556>>2]=r;g[j+560>>2]=q;g[j+564>>2]=0.0;e=c[z+4>>2]|0;if((e|0)==25){J=c[f+8>>2]|0;I=c[h+16>>2]|0;c[j+316>>2]=c[j+568>>2];c[j+320>>2]=c[j+572>>2];c[j+324>>2]=c[j+576>>2];c[j+328>>2]=c[j+580>>2];c[j+332>>2]=c[j+552>>2];c[j+336>>2]=c[j+556>>2];c[j+340>>2]=c[j+560>>2];c[j+344>>2]=c[j+564>>2];c[j+348>>2]=I;g[j+352>>2]=1.0;c[j+312>>2]=7552;c[j+356>>2]=h;c[j+360>>2]=J;c[j+364>>2]=z;c[j+368>>2]=c[x+0>>2];c[j+372>>2]=c[x+4>>2];c[j+376>>2]=c[x+8>>2];c[j+380>>2]=c[x+12>>2];c[j+384>>2]=c[x+16>>2];c[j+388>>2]=c[x+20>>2];c[j+392>>2]=c[x+24>>2];c[j+396>>2]=c[x+28>>2];c[j+400>>2]=c[x+32>>2];c[j+404>>2]=c[x+36>>2];c[j+408>>2]=c[x+40>>2];c[j+412>>2]=c[x+44>>2];c[j+416>>2]=c[x+48>>2];c[j+420>>2]=c[x+52>>2];c[j+424>>2]=c[x+56>>2];c[j+428>>2]=c[x+60>>2];g[j+352>>2]=+g[h+4>>2];mc[c[(c[z>>2]|0)+144>>2]&63](z,j+312|0,j+568|0,j+552|0);i=j;return}else if((e|0)==21){J=c[f+8>>2]|0;I=c[h+16>>2]|0;c[j+436>>2]=c[j+568>>2];c[j+440>>2]=c[j+572>>2];c[j+444>>2]=c[j+576>>2];c[j+448>>2]=c[j+580>>2];c[j+452>>2]=c[j+552>>2];c[j+456>>2]=c[j+556>>2];c[j+460>>2]=c[j+560>>2];c[j+464>>2]=c[j+564>>2];c[j+468>>2]=I;g[j+472>>2]=1.0;c[j+432>>2]=7552;c[j+476>>2]=h;c[j+480>>2]=J;c[j+484>>2]=z;c[j+488>>2]=c[x+0>>2];c[j+492>>2]=c[x+4>>2];c[j+496>>2]=c[x+8>>2];c[j+500>>2]=c[x+12>>2];c[j+504>>2]=c[x+16>>2];c[j+508>>2]=c[x+20>>2];c[j+512>>2]=c[x+24>>2];c[j+516>>2]=c[x+28>>2];c[j+520>>2]=c[x+32>>2];c[j+524>>2]=c[x+36>>2];c[j+528>>2]=c[x+40>>2];c[j+532>>2]=c[x+44>>2];c[j+536>>2]=c[x+48>>2];c[j+540>>2]=c[x+52>>2];c[j+544>>2]=c[x+56>>2];c[j+548>>2]=c[x+60>>2];g[j+472>>2]=+g[h+4>>2];x=c[z+48>>2]|0;c[j+1272>>2]=4536;c[j+1276>>2]=x;c[j+1280>>2]=j+432;x=c[z+52>>2]|0;c[j+1328>>2]=0;c[j+1332>>2]=0;c[j+1336>>2]=0;c[j+1340>>2]=0;c[j+1304>>2]=0;c[j+1308>>2]=0;c[j+1312>>2]=0;c[j+1316>>2]=0;if((a[x+60>>0]|0)==0){ks(x,j+1272|0,j+568|0,s,r,q,j+1328|0,j+1304|0);i=j;return}else{ls(x,j+1272|0,j+568|0,s,r,q,j+1328|0,j+1304|0,c[x+56>>2]|0);i=j;return}}else{L=+g[x>>2];K=+g[x+16>>2];s=+g[x+32>>2];t=+g[x+4>>2];u=+g[x+20>>2];v=+g[x+36>>2];F=+g[x+8>>2];G=+g[x+24>>2];H=+g[x+40>>2];w=-+g[x+48>>2];y=-+g[x+52>>2];E=-+g[x+56>>2];r=L*w+K*y+s*E+(L*n+K*o+s*p);q=t*w+u*y+v*E+(t*n+u*o+v*p);o=F*w+G*y+H*E+(F*n+G*o+H*p);p=L*w+K*y+s*E+(L*l+K*k+s*m);n=t*w+u*y+v*E+(t*l+u*k+v*m);k=F*w+G*y+H*E+(F*l+G*k+H*m);J=c[f+8>>2]|0;I=c[h+16>>2]|0;g[j+196>>2]=r;g[j+200>>2]=q;g[j+204>>2]=o;g[j+208>>2]=0.0;g[j+212>>2]=p;g[j+216>>2]=n;g[j+220>>2]=k;g[j+224>>2]=0.0;c[j+228>>2]=I;g[j+232>>2]=1.0;c[j+192>>2]=7360;c[j+236>>2]=h;c[j+240>>2]=J;c[j+244>>2]=z;c[j+248>>2]=c[x+0>>2];c[j+252>>2]=c[x+4>>2];c[j+256>>2]=c[x+8>>2];c[j+260>>2]=c[x+12>>2];c[j+264>>2]=c[x+16>>2];c[j+268>>2]=c[x+20>>2];c[j+272>>2]=c[x+24>>2];c[j+276>>2]=c[x+28>>2];c[j+280>>2]=c[x+32>>2];c[j+284>>2]=c[x+36>>2];c[j+288>>2]=c[x+40>>2];c[j+292>>2]=c[x+44>>2];c[j+296>>2]=c[x+48>>2];c[j+300>>2]=c[x+52>>2];c[j+304>>2]=c[x+56>>2];c[j+308>>2]=c[x+60>>2];g[j+232>>2]=+g[h+4>>2];g[j+176>>2]=r;g[j+180>>2]=q;g[j+184>>2]=o;g[j+188>>2]=0.0;if(p<r){g[j+176>>2]=p}if(n<q){g[j+180>>2]=n}if(k<o){g[j+184>>2]=k}g[j+160>>2]=r;g[j+164>>2]=q;g[j+168>>2]=o;g[j+172>>2]=0.0;if(r<p){g[j+160>>2]=p}if(q<n){g[j+164>>2]=n}if(o<k){g[j+168>>2]=k}mc[c[(c[z>>2]|0)+64>>2]&63](z,j+192|0,j+176|0,j+160|0);i=j;return}}if((A|0)!=31){i=j;return}A=c[z+64>>2]|0;J=c[f+8>>2]|0;c[j+128>>2]=7144;c[j+132>>2]=J;c[j+136>>2]=z;c[j+140>>2]=x;c[j+144>>2]=d;c[j+148>>2]=e;c[j+152>>2]=h;if((A|0)==0){h=c[z+16>>2]|0;if((h|0)<=0){i=j;return}f=0;while(1){J=c[z+24>>2]|0;I=c[J+(f*80|0)+64>>2]|0;$h(j+1328|0,x,J+(f*80|0)|0);J=c[j+132>>2]|0;c[j+1304>>2]=0;c[j+1308>>2]=I;c[j+1312>>2]=J;c[j+1316>>2]=j+1328;c[j+1320>>2]=-1;c[j+1324>>2]=f;J=c[j+152>>2]|0;g[j+1276>>2]=1.0;c[j+1280>>2]=0;b[j+1284>>1]=1;b[j+1286>>1]=-1;c[j+1288>>2]=0;c[j+1272>>2]=6968;c[j+1292>>2]=J;c[j+1296>>2]=f;g[j+1276>>2]=+g[J+4>>2];c[j+1288>>2]=c[J+16>>2];_m(c[j+144>>2]|0,c[j+148>>2]|0,j+1304|0,j+1272|0);f=f+1|0;if((f|0)>=(h|0)){break}z=c[j+136>>2]|0;x=c[j+140>>2]|0}i=j;return}an(j+64|0,x,d);p=+g[j+112>>2];q=+g[j+116>>2];o=+g[j+120>>2];an(j,x,e);z=c[A>>2]|0;if((z|0)==0){i=j;return}r=+g[j+48>>2]-p;t=+g[j+52>>2]-q;u=+g[j+56>>2]-o;s=1.0/+Q(+(r*r+t*t+u*u));if(r*s==0.0){v=999999984306749400.0}else{v=1.0/(r*s)}if(t*s==0.0){w=999999984306749400.0}else{w=1.0/(t*s)}if(u*s==0.0){y=999999984306749400.0}else{y=1.0/(u*s)}h=v<0.0|0;x=w<0.0|0;f=y<0.0|0;c[4336]=(c[4336]|0)+1;e=cw(531)|0;if((e|0)==0){D=0}else{c[(e+19&-16)+ -4>>2]=e;D=e+19&-16}e=0;do{A=D+(e<<2)|0;if((A|0)!=0){c[A>>2]=0}e=e+1|0}while((e|0)!=128);c[D>>2]=z;C=128;d=128;z=1;B=126;do{e=z+ -1|0;A=c[D+(e<<2)>>2]|0;c[j+1240>>2]=c[A+0>>2];c[j+1244>>2]=c[A+4>>2];c[j+1248>>2]=c[A+8>>2];c[j+1252>>2]=c[A+12>>2];c[j+1256>>2]=c[A+16>>2];c[j+1260>>2]=c[A+20>>2];c[j+1264>>2]=c[A+24>>2];c[j+1268>>2]=c[A+28>>2];E=v*(+g[j+1240+(h<<4)>>2]-p);G=v*(+g[j+1240+((h^1)<<4)>>2]-p);F=w*(+g[j+1240+(x<<4)+4>>2]-q);H=w*(+g[j+1240+((x^1)<<4)+4>>2]-q);do{if(((!(E>H|F>G)?(l=F>E?F:E,n=H<G?H:G,k=y*(+g[j+1240+(f<<4)+8>>2]-o),m=y*(+g[j+1240+((f^1)<<4)+8>>2]-o),!(l>m|k>n)):0)?(k>l?k:l)<r*s*r+t*s*t+u*s*u:0)?(m<n?m:n)>0.0:0){if((c[A+40>>2]|0)==0){Fb[c[(c[j+128>>2]|0)+12>>2]&127](j+128|0,A);z=e;break}if((e|0)>(B|0)){B=d<<1;if((d|0)<(B|0)){if((C|0)<(B|0)){if((d|0)!=0){c[4336]=(c[4336]|0)+1;C=cw((d<<3|3)+16|0)|0;if((C|0)==0){J=0}else{c[(C+19&-16)+ -4>>2]=C;J=C+19&-16}if((d|0)>0){I=0;do{C=J+(I<<2)|0;if((C|0)!=0){c[C>>2]=c[D+(I<<2)>>2]}I=I+1|0}while((I|0)!=(d|0))}}else{J=0}if((D|0)==0){D=J;C=B}else{c[4338]=(c[4338]|0)+1;dw(c[D+ -4>>2]|0);D=J;C=B}}do{I=D+(d<<2)|0;if((I|0)!=0){c[I>>2]=0}d=d+1|0}while((d|0)!=(B|0))}d=B;B=B+ -2|0}c[D+(e<<2)>>2]=c[A+36>>2];c[D+(z<<2)>>2]=c[A+40>>2];z=z+1|0}else{z=e}}while(0)}while((z|0)!=0);if((D|0)==0){i=j;return}c[4338]=(c[4338]|0)+1;dw(c[D+ -4>>2]|0);i=j;return}function $m(a){a=a|0;return}function an(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;j=+g[c+48>>2]- +g[b+48>>2];h=+g[c+52>>2]- +g[b+52>>2];e=+g[c+56>>2]- +g[b+56>>2];p=+g[b>>2];y=+g[c>>2];o=+g[b+16>>2];x=+g[c+16>>2];n=+g[b+32>>2];w=+g[c+32>>2];v=+g[c+4>>2];u=+g[c+20>>2];t=+g[c+36>>2];s=+g[c+8>>2];r=+g[c+24>>2];q=+g[c+40>>2];m=+g[b+4>>2];l=+g[b+20>>2];k=+g[b+36>>2];i=+g[b+8>>2];f=+g[b+24>>2];d=+g[b+40>>2];g[a>>2]=p*y+o*x+n*w;g[a+4>>2]=p*v+o*u+n*t;g[a+8>>2]=p*s+o*r+n*q;g[a+12>>2]=0.0;g[a+16>>2]=y*m+x*l+w*k;g[a+20>>2]=v*m+u*l+t*k;g[a+24>>2]=s*m+r*l+q*k;g[a+28>>2]=0.0;g[a+32>>2]=y*i+x*f+w*d;g[a+36>>2]=v*i+u*f+t*d;g[a+40>>2]=s*i+r*f+q*d;g[a+44>>2]=0.0;g[a+48>>2]=j*p+h*o+e*n;g[a+52>>2]=j*m+h*l+e*k;g[a+56>>2]=j*i+h*f+e*d;g[a+60>>2]=0.0;return}function bn(d,e,f,h,j,k){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0;l=i;i=i+1664|0;m=c[h+4>>2]|0;n=c[h+12>>2]|0;D=c[m+4>>2]|0;if((D|0)<20){c[l+1424>>2]=7744;c[l+1592>>2]=0;g[l+1596>>2]=k;g[l+1588>>2]=+g[j+4>>2];g[l+1372>>2]=9999999747378752.0e-20;a[l+1396>>0]=0;c[l+1056>>2]=10896;c[l+1032>>2]=8456;c[l+1036>>2]=l+1064;c[l+1040>>2]=l+1056;c[l+1044>>2]=d;c[l+1048>>2]=m;c[l+1052>>2]=0;if(!(Oo(l+1032|0,e,f,n,n,l+1424|0)|0)){i=l;return}m=l+1556|0;q=+g[m>>2];p=+g[l+1560>>2];o=+g[l+1564>>2];if(!(q*q+p*p+o*o>9999999747378752.0e-20)){i=l;return}k=+g[l+1588>>2];if(!(k<+g[j+4>>2])){i=l;return}C=1.0/+Q(+(q*q+p*p+o*o));g[m>>2]=q*C;g[l+1560>>2]=p*C;g[l+1564>>2]=o*C;c[l+984>>2]=c[h+8>>2];c[l+988>>2]=0;c[l+992>>2]=c[m+0>>2];c[l+996>>2]=c[m+4>>2];c[l+1e3>>2]=c[m+8>>2];c[l+1004>>2]=c[m+12>>2];c[l+1008>>2]=c[l+1572>>2];c[l+1012>>2]=c[l+1576>>2];c[l+1016>>2]=c[l+1580>>2];c[l+1020>>2]=c[l+1584>>2];g[l+1024>>2]=k;+_b[c[(c[j>>2]|0)+12>>2]&7](j,l+984|0,1);i=l;return}if(!((D+ -21|0)>>>0<9)){if((D|0)!=31){i=l;return}Mv(5928);if((c[m+16>>2]|0)>0){D=0;do{F=c[m+24>>2]|0;o=+g[F+(D*80|0)>>2];r=+g[F+(D*80|0)+4>>2];u=+g[F+(D*80|0)+8>>2];p=+g[F+(D*80|0)+16>>2];s=+g[F+(D*80|0)+20>>2];w=+g[F+(D*80|0)+24>>2];q=+g[F+(D*80|0)+32>>2];t=+g[F+(D*80|0)+36>>2];y=+g[F+(D*80|0)+40>>2];N=+g[F+(D*80|0)+48>>2];M=+g[F+(D*80|0)+52>>2];C=+g[F+(D*80|0)+56>>2];F=c[F+(D*80|0)+64>>2]|0;L=+g[n>>2];K=+g[n+4>>2];J=+g[n+8>>2];I=+g[n+16>>2];H=+g[n+20>>2];G=+g[n+24>>2];v=+g[n+32>>2];x=+g[n+36>>2];z=+g[n+40>>2];A=N*L+M*K+C*J+ +g[n+48>>2];B=N*I+M*H+C*G+ +g[n+52>>2];C=N*v+M*x+C*z+ +g[n+56>>2];g[l+1600>>2]=o*L+p*K+q*J;g[l+1604>>2]=r*L+s*K+t*J;g[l+1608>>2]=u*L+w*K+y*J;g[l+1612>>2]=0.0;g[l+1616>>2]=o*I+p*H+q*G;g[l+1620>>2]=r*I+s*H+t*G;g[l+1624>>2]=u*I+w*H+y*G;g[l+1628>>2]=0.0;g[l+1632>>2]=o*v+p*x+q*z;g[l+1636>>2]=r*v+s*x+t*z;g[l+1640>>2]=u*v+w*x+y*z;g[l+1644>>2]=0.0;g[l+1648>>2]=A;g[l+1652>>2]=B;g[l+1656>>2]=C;g[l+1660>>2]=0.0;b[l+32>>1]=1;b[l+34>>1]=-1;c[l+24>>2]=6328;c[l+36>>2]=j;c[l+40>>2]=D;g[l+28>>2]=+g[j+4>>2];E=c[h+8>>2]|0;c[l>>2]=h;c[l+4>>2]=F;c[l+8>>2]=E;c[l+12>>2]=l+1600;c[l+16>>2]=-1;c[l+20>>2]=D;bn(d,e,f,l,l+24|0,k);D=D+1|0}while((D|0)<(c[m+16>>2]|0))}h=c[4354]|0;F=(c[h+16>>2]|0)+ -1|0;c[h+16>>2]=F;if((F|0)!=0){i=l;return}do{if((c[h+4>>2]|0)!=0){wb(l+1600|0,0)|0;F=c[4340]|0;g[h+8>>2]=+(((c[l+1604>>2]|0)-(c[F+4>>2]|0)+(((c[l+1600>>2]|0)-(c[F>>2]|0)|0)*1e6|0)-(c[h+12>>2]|0)|0)>>>0)/1.0e3+ +g[h+8>>2];if((c[h+16>>2]|0)==0){h=c[4354]|0;break}else{i=l;return}}}while(0);c[4354]=c[h+20>>2];i=l;return}if((D|0)==21){v=+g[n>>2];p=+g[n+16>>2];q=+g[n+32>>2];r=+g[n+4>>2];s=+g[n+20>>2];t=+g[n+36>>2];C=+g[n+8>>2];A=+g[n+24>>2];y=+g[n+40>>2];u=-+g[n+48>>2];o=-+g[n+52>>2];w=-+g[n+56>>2];x=+g[e+48>>2];z=+g[e+52>>2];B=+g[e+56>>2];g[l+968>>2]=v*u+p*o+q*w+(v*x+p*z+q*B);g[l+972>>2]=r*u+s*o+t*w+(r*x+s*z+t*B);g[l+976>>2]=C*u+A*o+y*w+(C*x+A*z+y*B);g[l+980>>2]=0.0;B=+g[f+48>>2];z=+g[f+52>>2];x=+g[f+56>>2];O=+g[f>>2];G=+g[f+16>>2];H=+g[f+32>>2];I=+g[f+4>>2];J=+g[f+20>>2];K=+g[f+36>>2];L=+g[f+8>>2];M=+g[f+24>>2];N=+g[f+40>>2];g[l+904>>2]=v*O+p*G+q*H;g[l+908>>2]=v*I+p*J+q*K;g[l+912>>2]=v*L+p*M+q*N;g[l+916>>2]=0.0;g[l+920>>2]=r*O+s*G+t*H;g[l+924>>2]=r*I+s*J+t*K;g[l+928>>2]=r*L+s*M+t*N;g[l+932>>2]=0.0;g[l+936>>2]=C*O+A*G+y*H;g[l+940>>2]=C*I+A*J+y*K;g[l+944>>2]=C*L+A*M+y*N;F=l+948|0;c[F+0>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;c[F+12>>2]=0;c[F+16>>2]=0;h=c[h+8>>2]|0;N=+Tb[c[(c[m>>2]|0)+48>>2]&15](m);c[l+680>>2]=13744;c[l+684>>2]=d;c[l+688>>2]=c[e+0>>2];c[l+692>>2]=c[e+4>>2];c[l+696>>2]=c[e+8>>2];c[l+700>>2]=c[e+12>>2];c[l+704>>2]=c[e+16>>2];c[l+708>>2]=c[e+20>>2];c[l+712>>2]=c[e+24>>2];c[l+716>>2]=c[e+28>>2];c[l+720>>2]=c[e+32>>2];c[l+724>>2]=c[e+36>>2];c[l+728>>2]=c[e+40>>2];c[l+732>>2]=c[e+44>>2];c[l+736>>2]=c[e+48>>2];c[l+740>>2]=c[e+52>>2];c[l+744>>2]=c[e+56>>2];c[l+748>>2]=c[e+60>>2];c[l+752>>2]=c[f+0>>2];c[l+756>>2]=c[f+4>>2];c[l+760>>2]=c[f+8>>2];c[l+764>>2]=c[f+12>>2];c[l+768>>2]=c[f+16>>2];c[l+772>>2]=c[f+20>>2];c[l+776>>2]=c[f+24>>2];c[l+780>>2]=c[f+28>>2];c[l+784>>2]=c[f+32>>2];c[l+788>>2]=c[f+36>>2];c[l+792>>2]=c[f+40>>2];c[l+796>>2]=c[f+44>>2];c[l+800>>2]=c[f+48>>2];c[l+804>>2]=c[f+52>>2];c[l+808>>2]=c[f+56>>2];c[l+812>>2]=c[f+60>>2];c[l+816>>2]=c[n+0>>2];c[l+820>>2]=c[n+4>>2];c[l+824>>2]=c[n+8>>2];c[l+828>>2]=c[n+12>>2];c[l+832>>2]=c[n+16>>2];c[l+836>>2]=c[n+20>>2];c[l+840>>2]=c[n+24>>2];c[l+844>>2]=c[n+28>>2];c[l+848>>2]=c[n+32>>2];c[l+852>>2]=c[n+36>>2];c[l+856>>2]=c[n+40>>2];c[l+860>>2]=c[n+44>>2];c[l+864>>2]=c[n+48>>2];c[l+868>>2]=c[n+52>>2];c[l+872>>2]=c[n+56>>2];c[l+876>>2]=c[n+60>>2];g[l+884>>2]=N;c[l+680>>2]=6752;c[l+892>>2]=j;c[l+896>>2]=h;c[l+900>>2]=m;g[l+880>>2]=+g[j+4>>2];g[l+888>>2]=k;mc[c[(c[d>>2]|0)+8>>2]&63](d,l+904|0,l+664|0,l+648|0);h=c[m+48>>2]|0;c[l+1600>>2]=4376;c[l+1604>>2]=h;c[l+1608>>2]=l+680;h=c[m+52>>2]|0;if((a[h+60>>0]|0)==0){ks(h,l+1600|0,l+968|0,v*u+p*o+q*w+(v*B+p*z+q*x),r*u+s*o+t*w+(r*B+s*z+t*x),C*u+A*o+y*w+(C*B+A*z+y*x),l+664|0,l+648|0);i=l;return}else{ls(h,l+1600|0,l+968|0,v*u+p*o+q*w+(v*B+p*z+q*x),r*u+s*o+t*w+(r*B+s*z+t*x),C*u+A*o+y*w+(C*B+A*z+y*x),l+664|0,l+648|0,c[h+56>>2]|0);i=l;return}}else if((D|0)==28){c[l+472>>2]=7744;c[l+640>>2]=0;g[l+644>>2]=k;g[l+636>>2]=+g[j+4>>2];c[l+448>>2]=8456;c[l+452>>2]=0;c[l+456>>2]=0;c[l+460>>2]=d;c[l+464>>2]=0;c[l+468>>2]=m;if(!(Oo(l+448|0,e,f,n,n,l+472|0)|0)){i=l;return}m=l+604|0;k=+g[m>>2];o=+g[l+608>>2];p=+g[l+612>>2];if(!(k*k+o*o+p*p>9999999747378752.0e-20)){i=l;return}q=+g[l+636>>2];if(!(q<+g[j+4>>2])){i=l;return}O=1.0/+Q(+(k*k+o*o+p*p));g[m>>2]=k*O;g[l+608>>2]=o*O;g[l+612>>2]=p*O;c[l+400>>2]=c[h+8>>2];c[l+404>>2]=0;c[l+408>>2]=c[m+0>>2];c[l+412>>2]=c[m+4>>2];c[l+416>>2]=c[m+8>>2];c[l+420>>2]=c[m+12>>2];c[l+424>>2]=c[l+620>>2];c[l+428>>2]=c[l+624>>2];c[l+432>>2]=c[l+628>>2];c[l+436>>2]=c[l+632>>2];g[l+440>>2]=q;+_b[c[(c[j>>2]|0)+12>>2]&7](j,l+400|0,1);i=l;return}else{u=+g[n>>2];v=+g[n+16>>2];w=+g[n+32>>2];x=+g[n+4>>2];y=+g[n+20>>2];z=+g[n+36>>2];J=+g[n+8>>2];L=+g[n+24>>2];N=+g[n+40>>2];H=-+g[n+48>>2];G=-+g[n+52>>2];C=-+g[n+56>>2];A=+g[e+48>>2];B=+g[e+52>>2];p=+g[e+56>>2];t=u*H+v*G+w*C+(u*A+v*B+w*p);q=x*H+y*G+z*C+(x*A+y*B+z*p);p=J*H+L*G+N*C+(J*A+L*B+N*p);B=+g[f+48>>2];A=+g[f+52>>2];o=+g[f+56>>2];s=u*H+v*G+w*C+(u*B+v*A+w*o);r=x*H+y*G+z*C+(x*B+y*A+z*o);o=J*H+L*G+N*C+(J*B+L*A+N*o);A=+g[f>>2];B=+g[f+16>>2];C=+g[f+32>>2];G=+g[f+4>>2];H=+g[f+20>>2];I=+g[f+36>>2];K=+g[f+8>>2];M=+g[f+24>>2];O=+g[f+40>>2];g[l+336>>2]=u*A+v*B+w*C;g[l+340>>2]=u*G+v*H+w*I;g[l+344>>2]=u*K+v*M+w*O;g[l+348>>2]=0.0;g[l+352>>2]=x*A+y*B+z*C;g[l+356>>2]=x*G+y*H+z*I;g[l+360>>2]=x*K+y*M+z*O;g[l+364>>2]=0.0;g[l+368>>2]=J*A+L*B+N*C;g[l+372>>2]=J*G+L*H+N*I;g[l+376>>2]=J*K+L*M+N*O;F=l+380|0;c[F+0>>2]=0;c[F+4>>2]=0;c[F+8>>2]=0;c[F+12>>2]=0;c[F+16>>2]=0;F=c[h+8>>2]|0;O=+Tb[c[(c[m>>2]|0)+48>>2]&15](m);c[l+112>>2]=13744;c[l+116>>2]=d;c[l+120>>2]=c[e+0>>2];c[l+124>>2]=c[e+4>>2];c[l+128>>2]=c[e+8>>2];c[l+132>>2]=c[e+12>>2];c[l+136>>2]=c[e+16>>2];c[l+140>>2]=c[e+20>>2];c[l+144>>2]=c[e+24>>2];c[l+148>>2]=c[e+28>>2];c[l+152>>2]=c[e+32>>2];c[l+156>>2]=c[e+36>>2];c[l+160>>2]=c[e+40>>2];c[l+164>>2]=c[e+44>>2];c[l+168>>2]=c[e+48>>2];c[l+172>>2]=c[e+52>>2];c[l+176>>2]=c[e+56>>2];c[l+180>>2]=c[e+60>>2];c[l+184>>2]=c[f+0>>2];c[l+188>>2]=c[f+4>>2];c[l+192>>2]=c[f+8>>2];c[l+196>>2]=c[f+12>>2];c[l+200>>2]=c[f+16>>2];c[l+204>>2]=c[f+20>>2];c[l+208>>2]=c[f+24>>2];c[l+212>>2]=c[f+28>>2];c[l+216>>2]=c[f+32>>2];c[l+220>>2]=c[f+36>>2];c[l+224>>2]=c[f+40>>2];c[l+228>>2]=c[f+44>>2];c[l+232>>2]=c[f+48>>2];c[l+236>>2]=c[f+52>>2];c[l+240>>2]=c[f+56>>2];c[l+244>>2]=c[f+60>>2];c[l+248>>2]=c[n+0>>2];c[l+252>>2]=c[n+4>>2];c[l+256>>2]=c[n+8>>2];c[l+260>>2]=c[n+12>>2];c[l+264>>2]=c[n+16>>2];c[l+268>>2]=c[n+20>>2];c[l+272>>2]=c[n+24>>2];c[l+276>>2]=c[n+28>>2];c[l+280>>2]=c[n+32>>2];c[l+284>>2]=c[n+36>>2];c[l+288>>2]=c[n+40>>2];c[l+292>>2]=c[n+44>>2];c[l+296>>2]=c[n+48>>2];c[l+300>>2]=c[n+52>>2];c[l+304>>2]=c[n+56>>2];c[l+308>>2]=c[n+60>>2];g[l+316>>2]=O;c[l+112>>2]=6528;c[l+324>>2]=j;c[l+328>>2]=F;c[l+332>>2]=m;g[l+312>>2]=+g[j+4>>2];g[l+320>>2]=k;mc[c[(c[d>>2]|0)+8>>2]&63](d,l+336|0,l+96|0,l+80|0);g[l+64>>2]=t;g[l+68>>2]=q;g[l+72>>2]=p;g[l+76>>2]=0.0;if(s<t){g[l+64>>2]=s;v=s}else{v=t}if(r<q){g[l+68>>2]=r;u=r}else{u=q}if(o<p){g[l+72>>2]=o;k=o}else{k=p}g[l+48>>2]=t;g[l+52>>2]=q;g[l+56>>2]=p;g[l+60>>2]=0.0;if(t<s){g[l+48>>2]=s}else{s=t}if(q<r){g[l+52>>2]=r;q=r}if(p<o){g[l+56>>2]=o}else{o=p}g[l+64>>2]=+g[l+96>>2]+v;g[l+68>>2]=+g[l+100>>2]+u;g[l+72>>2]=+g[l+104>>2]+k;g[l+48>>2]=+g[l+80>>2]+s;g[l+52>>2]=+g[l+84>>2]+q;g[l+56>>2]=+g[l+88>>2]+o;mc[c[(c[m>>2]|0)+64>>2]&63](m,l+112|0,l+64|0,l+48|0);i=l;return}}function cn(a){a=a|0;return}function dn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;j=i;i=i+256|0;c[j+32>>2]=6264;h=j+68|0;c[h+0>>2]=c[b+0>>2];c[h+4>>2]=c[b+4>>2];c[h+8>>2]=c[b+8>>2];c[h+12>>2]=c[b+12>>2];f=j+84|0;c[f+0>>2]=c[d+0>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];c[j+244>>2]=a;c[j+248>>2]=e;g[j+100>>2]=1.0;c[j+104>>2]=0;c[j+108>>2]=0;c[j+112>>2]=0;c[j+116>>2]=0;g[j+120>>2]=1.0;c[j+124>>2]=0;c[j+128>>2]=0;c[j+132>>2]=0;c[j+136>>2]=0;g[j+140>>2]=1.0;c[j+144>>2]=0;c[j+148>>2]=c[h+0>>2];c[j+152>>2]=c[h+4>>2];c[j+156>>2]=c[h+8>>2];c[j+160>>2]=c[h+12>>2];g[j+164>>2]=1.0;c[j+168>>2]=0;c[j+172>>2]=0;c[j+176>>2]=0;c[j+180>>2]=0;g[j+184>>2]=1.0;c[j+188>>2]=0;c[j+192>>2]=0;c[j+196>>2]=0;c[j+200>>2]=0;g[j+204>>2]=1.0;c[j+208>>2]=0;c[j+212>>2]=c[d+0>>2];c[j+216>>2]=c[d+4>>2];c[j+220>>2]=c[d+8>>2];c[j+224>>2]=c[d+12>>2];n=+g[d>>2]- +g[b>>2];k=+g[d+4>>2]- +g[b+4>>2];q=+g[d+8>>2]- +g[b+8>>2];l=1.0/+Q(+(n*n+k*k+q*q));if(n*l==0.0){p=999999984306749400.0}else{p=1.0/(n*l)}g[j+36>>2]=p;if(k*l==0.0){o=999999984306749400.0}else{o=1.0/(k*l)}g[j+40>>2]=o;if(q*l==0.0){m=999999984306749400.0}else{m=1.0/(q*l)}g[j+44>>2]=m;c[j+52>>2]=p<0.0;c[j+56>>2]=o<0.0;c[j+60>>2]=m<0.0;g[j+64>>2]=n*l*(+g[f>>2]- +g[h>>2])+k*l*(+g[j+88>>2]- +g[j+72>>2])+q*l*(+g[j+92>>2]- +g[j+76>>2]);e=c[a+68>>2]|0;h=c[(c[e>>2]|0)+24>>2]|0;c[j+16>>2]=0;c[j+20>>2]=0;c[j+24>>2]=0;c[j+28>>2]=0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;Rb[h&7](e,b,d,j+32|0,j+16|0,j);i=j;return}function en(a){a=a|0;return}function fn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0;h=i;i=i+384|0;Mv(5952);c[h+112>>2]=c[d+0>>2];c[h+116>>2]=c[d+4>>2];c[h+120>>2]=c[d+8>>2];c[h+124>>2]=c[d+12>>2];c[h+128>>2]=c[d+16>>2];c[h+132>>2]=c[d+20>>2];c[h+136>>2]=c[d+24>>2];c[h+140>>2]=c[d+28>>2];c[h+144>>2]=c[d+32>>2];c[h+148>>2]=c[d+36>>2];c[h+152>>2]=c[d+40>>2];c[h+156>>2]=c[d+44>>2];j=h+160|0;c[j+0>>2]=c[d+48>>2];c[j+4>>2]=c[d+52>>2];c[j+8>>2]=c[d+56>>2];c[j+12>>2]=c[d+60>>2];c[h+48>>2]=c[e+0>>2];c[h+52>>2]=c[e+4>>2];c[h+56>>2]=c[e+8>>2];c[h+60>>2]=c[e+12>>2];c[h+64>>2]=c[e+16>>2];c[h+68>>2]=c[e+20>>2];c[h+72>>2]=c[e+24>>2];c[h+76>>2]=c[e+28>>2];c[h+80>>2]=c[e+32>>2];c[h+84>>2]=c[e+36>>2];c[h+88>>2]=c[e+40>>2];c[h+92>>2]=c[e+44>>2];k=h+96|0;c[k+0>>2]=c[e+48>>2];c[k+4>>2]=c[e+52>>2];c[k+8>>2]=c[e+56>>2];c[k+12>>2]=c[e+60>>2];si(h+112|0,h+48|0,h+180|0,h+176|0);l=+g[h+176>>2];u=+g[h+180>>2]*l;t=l*+g[h+184>>2];l=l*+g[h+188>>2];g[h+180>>2]=1.0;x=h+184|0;c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;c[x+12>>2]=0;g[h+200>>2]=1.0;v=h+204|0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[v+12>>2]=0;g[h+220>>2]=1.0;s=h+224|0;c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[s+16>>2]=0;Qh(h+112|0,h);p=+g[h>>2];n=+g[h+4>>2];w=+g[h+8>>2];q=+g[h+12>>2];o=p*(2.0/(p*p+n*n+w*w+q*q));m=n*(2.0/(p*p+n*n+w*w+q*q));r=w*(2.0/(p*p+n*n+w*w+q*q));g[h+180>>2]=1.0-(n*m+w*r);g[x>>2]=p*m-q*r;g[h+188>>2]=p*r+q*m;g[h+192>>2]=0.0;g[h+196>>2]=p*m+q*r;g[h+200>>2]=1.0-(p*o+w*r);g[v>>2]=n*r-q*o;g[h+208>>2]=0.0;g[h+212>>2]=p*r-q*m;g[h+216>>2]=n*r+q*o;g[h+220>>2]=1.0-(p*o+n*m);g[s>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,h+180|0,h+32|0,h+16|0);m=+g[h+20>>2];n=+g[h+24>>2];o=+g[h+16>>2];p=+g[h+32>>2]+0.0;q=+g[h+36>>2]+0.0;r=+g[h+40>>2]+0.0;l=+Q(+(u*u+t*t+l*l))*+Tb[c[(c[b>>2]|0)+16>>2]&15](b);g[h+44>>2]=0.0;g[h+28>>2]=0.0;g[h+32>>2]=p-l;g[h+36>>2]=q-l;g[h+40>>2]=r-l;g[h+16>>2]=l+o;g[h+20>>2]=l+m;g[h+24>>2]=l+n;c[h+180>>2]=6152;c[h+216>>2]=c[d+0>>2];c[h+220>>2]=c[d+4>>2];c[h+224>>2]=c[d+8>>2];c[h+228>>2]=c[d+12>>2];c[h+232>>2]=c[d+16>>2];c[h+236>>2]=c[d+20>>2];c[h+240>>2]=c[d+24>>2];c[h+244>>2]=c[d+28>>2];c[h+248>>2]=c[d+32>>2];c[h+252>>2]=c[d+36>>2];c[h+256>>2]=c[d+40>>2];c[h+260>>2]=c[d+44>>2];s=h+264|0;c[s+0>>2]=c[d+48>>2];c[s+4>>2]=c[d+52>>2];c[s+8>>2]=c[d+56>>2];c[s+12>>2]=c[d+60>>2];c[h+280>>2]=c[e+0>>2];c[h+284>>2]=c[e+4>>2];c[h+288>>2]=c[e+8>>2];c[h+292>>2]=c[e+12>>2];c[h+296>>2]=c[e+16>>2];c[h+300>>2]=c[e+20>>2];c[h+304>>2]=c[e+24>>2];c[h+308>>2]=c[e+28>>2];c[h+312>>2]=c[e+32>>2];c[h+316>>2]=c[e+36>>2];c[h+320>>2]=c[e+40>>2];c[h+324>>2]=c[e+44>>2];d=h+328|0;c[d+0>>2]=c[e+48>>2];c[d+4>>2]=c[e+52>>2];c[d+8>>2]=c[e+56>>2];c[d+12>>2]=c[e+60>>2];c[h+360>>2]=a;c[h+364>>2]=f;g[h+368>>2]=0.0;c[h+372>>2]=b;n=+g[d>>2]- +g[s>>2];l=+g[h+332>>2]- +g[h+268>>2];m=+g[h+336>>2]- +g[h+272>>2];o=1.0/+Q(+(n*n+l*l+m*m));if(n*o==0.0){p=999999984306749400.0}else{p=1.0/(n*o)}g[h+184>>2]=p;if(l*o==0.0){q=999999984306749400.0}else{q=1.0/(l*o)}g[h+188>>2]=q;if(m*o==0.0){r=999999984306749400.0}else{r=1.0/(m*o)}g[h+192>>2]=r;c[h+200>>2]=p<0.0;c[h+204>>2]=q<0.0;c[h+208>>2]=r<0.0;g[h+212>>2]=m*m*o+(n*n*o+l*l*o);x=c[a+68>>2]|0;Rb[c[(c[x>>2]|0)+24>>2]&7](x,j,k,h+180|0,h+32|0,h+16|0);j=c[4354]|0;x=(c[j+16>>2]|0)+ -1|0;c[j+16>>2]=x;if((x|0)!=0){i=h;return}do{if((c[j+4>>2]|0)!=0){wb(h+180|0,0)|0;x=c[4340]|0;g[j+8>>2]=+(((c[h+184>>2]|0)-(c[x+4>>2]|0)+(((c[h+180>>2]|0)-(c[x>>2]|0)|0)*1e6|0)-(c[j+12>>2]|0)|0)>>>0)/1.0e3+ +g[j+8>>2];if((c[j+16>>2]|0)==0){j=c[4354]|0;break}else{i=h;return}}}while(0);c[4354]=c[j+20>>2];i=h;return}function gn(a){a=a|0;return}function hn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0;f=i;i=i+480|0;h=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;kc[c[(c[h>>2]|0)+56>>2]&1](h,b,1.0);h=c[d+4>>2]|0;switch(h|0){case 31:{h=c[d+16>>2]|0;if((h|0)<=0){i=f;return}do{h=h+ -1|0;r=c[d+24>>2]|0;D=+g[r+(h*80|0)>>2];A=+g[r+(h*80|0)+4>>2];x=+g[r+(h*80|0)+8>>2];C=+g[r+(h*80|0)+16>>2];z=+g[r+(h*80|0)+20>>2];v=+g[r+(h*80|0)+24>>2];B=+g[r+(h*80|0)+32>>2];y=+g[r+(h*80|0)+36>>2];t=+g[r+(h*80|0)+40>>2];L=+g[r+(h*80|0)+48>>2];K=+g[r+(h*80|0)+52>>2];q=+g[r+(h*80|0)+56>>2];r=c[r+(h*80|0)+64>>2]|0;o=c[(c[a>>2]|0)+28>>2]|0;J=+g[b>>2];I=+g[b+4>>2];H=+g[b+8>>2];G=+g[b+16>>2];F=+g[b+20>>2];E=+g[b+24>>2];w=+g[b+32>>2];u=+g[b+36>>2];s=+g[b+40>>2];l=L*J+K*I+q*H+ +g[b+48>>2];p=L*G+K*F+q*E+ +g[b+52>>2];q=L*w+K*u+q*s+ +g[b+56>>2];g[f+416>>2]=D*J+C*I+B*H;g[f+420>>2]=A*J+z*I+y*H;g[f+424>>2]=x*J+v*I+t*H;g[f+428>>2]=0.0;g[f+432>>2]=D*G+C*F+B*E;g[f+436>>2]=A*G+z*F+y*E;g[f+440>>2]=x*G+v*F+t*E;g[f+444>>2]=0.0;g[f+448>>2]=D*w+C*u+B*s;g[f+452>>2]=A*w+z*u+y*s;g[f+456>>2]=x*w+v*u+t*s;g[f+460>>2]=0.0;g[f+464>>2]=l;g[f+468>>2]=p;g[f+472>>2]=q;g[f+476>>2]=0.0;mc[o&63](a,f+416|0,r,e)}while((h|0)>0);i=f;return};case 10:{r=c[d+52>>2]|0;K=+g[d+(((r+2|0)%3|0)<<2)+28>>2];L=+g[d+(r<<2)+28>>2];o=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Jb[c[(c[o>>2]|0)+76>>2]&0](o,K,L,r,b,e);i=f;return};case 0:{c[f+400>>2]=c[d+28>>2];c[f+404>>2]=c[d+32>>2];c[f+408>>2]=c[d+36>>2];c[f+412>>2]=c[d+40>>2];J=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);K=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);L=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);J=J+ +g[f+400>>2];g[f+400>>2]=J;K=K+ +g[f+404>>2];g[f+404>>2]=K;L=L+ +g[f+408>>2];g[f+408>>2]=L;r=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;o=c[(c[r>>2]|0)+72>>2]|0;g[f+384>>2]=-J;g[f+388>>2]=-K;g[f+392>>2]=-L;g[f+396>>2]=0.0;Bb[o&31](r,f+384|0,f+400|0,b,e);i=f;return};case 9:{h=c[d+92>>2]|0;if((h|0)<=0){i=f;return}do{h=h+ -1|0;r=c[d+100>>2]|0;x=+g[r+(h<<4)>>2];y=+g[r+(h<<4)+4>>2];K=+g[r+(h<<4)+8>>2];r=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;o=c[(c[r>>2]|0)+16>>2]|0;L=+g[(c[d+120>>2]|0)+(h<<2)>>2];A=+g[b>>2];B=+g[b+4>>2];z=+g[b+8>>2];D=+g[b+16>>2];E=+g[b+20>>2];C=+g[b+24>>2];G=+g[b+32>>2];H=+g[b+36>>2];F=+g[b+40>>2];I=x*A+y*B+K*z+ +g[b+48>>2];J=x*D+y*E+K*C+ +g[b+52>>2];K=x*G+y*H+K*F+ +g[b+56>>2];g[f+320>>2]=A+B*0.0+z*0.0;g[f+324>>2]=A*0.0+B+z*0.0;g[f+328>>2]=z+(A*0.0+B*0.0);g[f+332>>2]=0.0;g[f+336>>2]=D+E*0.0+C*0.0;g[f+340>>2]=D*0.0+E+C*0.0;g[f+344>>2]=C+(D*0.0+E*0.0);g[f+348>>2]=0.0;g[f+352>>2]=G+H*0.0+F*0.0;g[f+356>>2]=G*0.0+H+F*0.0;g[f+360>>2]=F+(G*0.0+H*0.0);g[f+364>>2]=0.0;g[f+368>>2]=I;g[f+372>>2]=J;g[f+376>>2]=K;g[f+380>>2]=0.0;Kb[o&0](r,L,f+320|0,e)}while((h|0)>0);i=f;return};case 13:{r=c[d+52>>2]|0;K=+Tb[c[(c[d>>2]|0)+92>>2]&15](d);c[f+304>>2]=c[d+28>>2];c[f+308>>2]=c[d+32>>2];c[f+312>>2]=c[d+36>>2];c[f+316>>2]=c[d+40>>2];I=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);J=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);L=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);g[f+304>>2]=I+ +g[f+304>>2];g[f+308>>2]=J+ +g[f+308>>2];g[f+312>>2]=L+ +g[f+312>>2];L=+g[f+304+(r<<2)>>2];o=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Jb[c[(c[o>>2]|0)+80>>2]&0](o,K,L,r,b,e);i=f;return};case 28:{L=+g[d+64>>2];r=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Wb[c[(c[r>>2]|0)+88>>2]&0](r,d+48|0,L,b,e);i=f;return};case 11:{K=+g[d+56>>2];L=+g[d+60>>2];r=c[d+68>>2]|0;o=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Jb[c[(c[o>>2]|0)+84>>2]&0](o,K,L,r,b,e);i=f;return};case 8:{L=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);r=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Kb[c[(c[r>>2]|0)+16>>2]&0](r,L,b,e);i=f;return};default:{a:do{if((h|0)<7){h=c[d+52>>2]|0;if((h|0)==0){if((Hb[c[(c[d>>2]|0)+100>>2]&127](d)|0)<=0){break}h=0;while(1){mc[c[(c[d>>2]|0)+104>>2]&63](d,h,f+208|0,f+192|0);J=+g[f+208>>2];x=+g[b>>2];H=+g[f+212>>2];y=+g[b+4>>2];F=+g[f+216>>2];z=+g[b+8>>2];B=+g[b+16>>2];C=+g[b+20>>2];D=+g[b+24>>2];G=+g[b+32>>2];I=+g[b+36>>2];K=+g[b+40>>2];A=+g[b+48>>2];E=+g[b+52>>2];L=+g[b+56>>2];g[f+176>>2]=J*x+H*y+F*z+A;g[f+180>>2]=J*B+H*C+F*D+E;g[f+184>>2]=J*G+H*I+F*K+L;g[f+188>>2]=0.0;F=+g[f+192>>2];H=+g[f+196>>2];J=+g[f+200>>2];g[f+160>>2]=F*x+H*y+J*z+A;g[f+164>>2]=F*B+H*C+J*D+E;g[f+168>>2]=F*G+H*I+J*K+L;g[f+172>>2]=0.0;r=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;mc[c[(c[r>>2]|0)+8>>2]&63](r,f+176|0,f+160|0,e);h=h+1|0;if((h|0)>=(Hb[c[(c[d>>2]|0)+100>>2]&127](d)|0)){break a}}}if((c[h+28>>2]|0)>0){j=0;do{m=c[h+36>>2]|0;k=c[m+(j*36|0)+4>>2]|0;b:do{if((k|0)>0){n=c[m+(j*36|0)+12>>2]|0;r=n;p=0.0;q=0.0;l=0.0;n=c[n+(k+ -1<<2)>>2]|0;o=0;while(1){m=c[r+(o<<2)>>2]|0;r=c[h+16>>2]|0;p=p+ +g[r+(m<<4)>>2];l=l+ +g[r+(m<<4)+4>>2];q=q+ +g[r+(m<<4)+8>>2];r=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;M=c[(c[r>>2]|0)+8>>2]|0;N=c[h+16>>2]|0;J=+g[N+(n<<4)>>2];x=+g[b>>2];H=+g[N+(n<<4)+4>>2];y=+g[b+4>>2];F=+g[N+(n<<4)+8>>2];z=+g[b+8>>2];B=+g[b+16>>2];C=+g[b+20>>2];D=+g[b+24>>2];G=+g[b+32>>2];I=+g[b+36>>2];K=+g[b+40>>2];A=+g[b+48>>2];E=+g[b+52>>2];L=+g[b+56>>2];g[f+288>>2]=J*x+H*y+F*z+A;g[f+292>>2]=J*B+H*C+F*D+E;g[f+296>>2]=J*G+H*I+F*K+L;g[f+300>>2]=0.0;F=+g[N+(m<<4)>>2];H=+g[N+(m<<4)+4>>2];J=+g[N+(m<<4)+8>>2];g[f+272>>2]=F*x+H*y+J*z+A;g[f+276>>2]=F*B+H*C+J*D+E;g[f+280>>2]=F*G+H*I+J*K+L;g[f+284>>2]=0.0;mc[M&63](r,f+288|0,f+272|0,e);o=o+1|0;n=c[h+36>>2]|0;if((o|0)>=(c[n+(j*36|0)+4>>2]|0)){break b}r=c[n+(j*36|0)+12>>2]|0;n=m}}else{p=0.0;q=0.0;l=0.0}}while(0);p=p*(1.0/+(k|0));l=l*(1.0/+(k|0));q=q*(1.0/+(k|0));N=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;if(((Hb[c[(c[N>>2]|0)+48>>2]&127](N)|0)&16384|0)!=0){g[f+256>>2]=1.0;g[f+260>>2]=1.0;g[f+264>>2]=0.0;g[f+268>>2]=0.0;N=c[h+36>>2]|0;F=+g[N+(j*36|0)+20>>2];H=+g[N+(j*36|0)+24>>2];J=+g[N+(j*36|0)+28>>2];N=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;M=c[(c[N>>2]|0)+8>>2]|0;x=+g[b>>2];y=+g[b+4>>2];z=+g[b+8>>2];B=+g[b+16>>2];C=+g[b+20>>2];D=+g[b+24>>2];G=+g[b+32>>2];I=+g[b+36>>2];K=+g[b+40>>2];A=+g[b+48>>2];E=+g[b+52>>2];L=+g[b+56>>2];g[f+240>>2]=p*x+l*y+q*z+A;g[f+244>>2]=p*B+l*C+q*D+E;g[f+248>>2]=p*G+l*I+q*K+L;g[f+252>>2]=0.0;g[f+224>>2]=(p+F)*x+(l+H)*y+(q+J)*z+A;g[f+228>>2]=(p+F)*B+(l+H)*C+(q+J)*D+E;g[f+232>>2]=(p+F)*G+(l+H)*I+(q+J)*K+L;g[f+236>>2]=0.0;mc[M&63](N,f+240|0,f+224|0,f+256|0)}j=j+1|0}while((j|0)<(c[h+28>>2]|0))}}}while(0);h=c[d+4>>2]|0;if((h+ -21|0)>>>0<9){g[f+144>>2]=999999984306749400.0;g[f+148>>2]=999999984306749400.0;g[f+152>>2]=999999984306749400.0;g[f+156>>2]=0.0;g[f+128>>2]=-999999984306749400.0;g[f+132>>2]=-999999984306749400.0;g[f+136>>2]=-999999984306749400.0;g[f+140>>2]=0.0;h=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;c[f+32>>2]=6008;c[f+36>>2]=6032;c[f+40>>2]=h;c[f+44>>2]=c[e+0>>2];c[f+48>>2]=c[e+4>>2];c[f+52>>2]=c[e+8>>2];c[f+56>>2]=c[e+12>>2];c[f+60>>2]=c[b+0>>2];c[f+64>>2]=c[b+4>>2];c[f+68>>2]=c[b+8>>2];c[f+72>>2]=c[b+12>>2];c[f+76>>2]=c[b+16>>2];c[f+80>>2]=c[b+20>>2];c[f+84>>2]=c[b+24>>2];c[f+88>>2]=c[b+28>>2];c[f+92>>2]=c[b+32>>2];c[f+96>>2]=c[b+36>>2];c[f+100>>2]=c[b+40>>2];c[f+104>>2]=c[b+44>>2];c[f+108>>2]=c[b+48>>2];c[f+112>>2]=c[b+52>>2];c[f+116>>2]=c[b+56>>2];c[f+120>>2]=c[b+60>>2];mc[c[(c[d>>2]|0)+64>>2]&63](d,f+32|0,f+128|0,f+144|0);h=c[d+4>>2]|0}if((h|0)!=3){i=f;return}g[f+16>>2]=999999984306749400.0;g[f+20>>2]=999999984306749400.0;g[f+24>>2]=999999984306749400.0;g[f+28>>2]=0.0;g[f>>2]=-999999984306749400.0;g[f+4>>2]=-999999984306749400.0;g[f+8>>2]=-999999984306749400.0;g[f+12>>2]=0.0;N=Hb[c[(c[a>>2]|0)+20>>2]&127](a)|0;c[f+32>>2]=6008;c[f+36>>2]=6032;c[f+40>>2]=N;c[f+44>>2]=c[e+0>>2];c[f+48>>2]=c[e+4>>2];c[f+52>>2]=c[e+8>>2];c[f+56>>2]=c[e+12>>2];c[f+60>>2]=c[b+0>>2];c[f+64>>2]=c[b+4>>2];c[f+68>>2]=c[b+8>>2];c[f+72>>2]=c[b+12>>2];c[f+76>>2]=c[b+16>>2];c[f+80>>2]=c[b+20>>2];c[f+84>>2]=c[b+24>>2];c[f+88>>2]=c[b+28>>2];c[f+92>>2]=c[b+32>>2];c[f+96>>2]=c[b+36>>2];c[f+100>>2]=c[b+40>>2];c[f+104>>2]=c[b+44>>2];c[f+108>>2]=c[b+48>>2];c[f+112>>2]=c[b+52>>2];c[f+116>>2]=c[b+56>>2];c[f+120>>2]=c[b+60>>2];N=c[d+92>>2]|0;mc[c[(c[N>>2]|0)+8>>2]&63](N,f+36|0,f,f+16|0);i=f;return}}}function jn(a){a=a|0;return}function kn(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0;d=i;i=i+112|0;if(((Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)!=0?(r=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0,((Hb[c[(c[r>>2]|0)+48>>2]&127](r)|0)&8|0)!=0):0)?(e=c[b+24>>2]|0,e=Hb[c[(c[e>>2]|0)+36>>2]&127](e)|0,g[d+96>>2]=1.0,g[d+100>>2]=1.0,g[d+104>>2]=0.0,g[d+108>>2]=0.0,(e|0)>0):0){q=0;do{h=c[b+24>>2]|0;h=Zb[c[(c[h>>2]|0)+40>>2]&31](h,q)|0;j=c[h+748>>2]|0;if((j|0)>0){f=0;do{r=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Eb[c[(c[r>>2]|0)+32>>2]&0](r,h+(f*184|0)+36|0,h+(f*184|0)+68|0,+g[h+(f*184|0)+84>>2],c[h+(f*184|0)+152>>2]|0,d+96|0);f=f+1|0}while((f|0)!=(j|0))}q=q+1|0}while((q|0)!=(e|0))}if((Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)==0){i=d;return}r=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;if(((Hb[c[(c[r>>2]|0)+48>>2]&127](r)|0)&3|0)==0){i=d;return}if((c[b+8>>2]|0)<=0){i=d;return}j=d+84|0;h=d+88|0;f=d+92|0;e=0;do{q=c[(c[b+16>>2]|0)+(e<<2)>>2]|0;if((c[q+204>>2]&32|0)==0){if((Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)!=0?(r=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0,((Hb[c[(c[r>>2]|0)+48>>2]&127](r)|0)&1|0)!=0):0){g[d+80>>2]=1.0;g[j>>2]=1.0;g[h>>2]=1.0;g[f>>2]=0.0;switch(c[q+216>>2]|0){case 3:{g[d+80>>2]=0.0;g[j>>2]=1.0;g[h>>2]=1.0;g[f>>2]=0.0;break};case 4:{g[d+80>>2]=1.0;g[j>>2]=0.0;g[h>>2]=0.0;g[f>>2]=0.0;break};case 1:{g[d+80>>2]=1.0;g[j>>2]=1.0;g[h>>2]=1.0;g[f>>2]=0.0;break};case 2:{g[d+80>>2]=0.0;g[j>>2]=1.0;g[h>>2]=0.0;g[f>>2]=0.0;break};case 5:{g[d+80>>2]=1.0;g[j>>2]=1.0;g[h>>2]=0.0;g[f>>2]=0.0;break};default:{g[d+80>>2]=1.0;g[j>>2]=0.0;g[h>>2]=0.0;g[f>>2]=0.0}}mc[c[(c[b>>2]|0)+28>>2]&63](b,q+4|0,c[q+192>>2]|0,d+80|0)}r=c[b+72>>2]|0;if((r|0)!=0?((Hb[c[(c[r>>2]|0)+48>>2]&127](r)|0)&2|0)!=0:0){g[d+32>>2]=1.0;g[d+36>>2]=0.0;g[d+40>>2]=0.0;g[d+44>>2]=0.0;r=c[q+192>>2]|0;mc[c[(c[r>>2]|0)+8>>2]&63](r,q+4|0,d+64|0,d+48|0);g[d+64>>2]=+g[d+64>>2]+-.019999999552965164;g[d+68>>2]=+g[d+68>>2]+-.019999999552965164;g[d+72>>2]=+g[d+72>>2]+-.019999999552965164;g[d+48>>2]=+g[d+48>>2]+.019999999552965164;g[d+52>>2]=+g[d+52>>2]+.019999999552965164;g[d+56>>2]=+g[d+56>>2]+.019999999552965164;if(((a[b+44>>0]|0)!=0?(c[q+236>>2]|0)==2:0)?(c[q+204>>2]&3|0)==0:0){r=c[q+192>>2]|0;mc[c[(c[r>>2]|0)+8>>2]&63](r,q+68|0,d+16|0,d);p=+g[d+16>>2]+-.019999999552965164;g[d+16>>2]=p;o=+g[d+20>>2]+-.019999999552965164;g[d+20>>2]=o;n=+g[d+24>>2]+-.019999999552965164;g[d+24>>2]=n;m=+g[d>>2]+.019999999552965164;g[d>>2]=m;l=+g[d+4>>2]+.019999999552965164;g[d+4>>2]=l;k=+g[d+8>>2]+.019999999552965164;g[d+8>>2]=k;if(p<+g[d+64>>2]){g[d+64>>2]=p}if(o<+g[d+68>>2]){g[d+68>>2]=o}if(n<+g[d+72>>2]){g[d+72>>2]=n}n=+g[d+28>>2];if(n<+g[d+76>>2]){g[d+76>>2]=n}if(+g[d+48>>2]<m){g[d+48>>2]=m}if(+g[d+52>>2]<l){g[d+52>>2]=l}if(+g[d+56>>2]<k){g[d+56>>2]=k}k=+g[d+12>>2];if(+g[d+60>>2]<k){g[d+60>>2]=k}}r=c[b+72>>2]|0;mc[c[(c[r>>2]|0)+52>>2]&63](r,d+64|0,d+48|0,d+32|0)}}e=e+1|0}while((e|0)<(c[b+8>>2]|0));i=d;return}function ln(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+80|0;t=c[b+8>>2]|0;if((t|0)>0){o=0;do{p=c[(c[b+16>>2]|0)+(o<<2)>>2]|0;if((c[p+236>>2]|0)==1){Fb[c[(c[p>>2]|0)+24>>2]&127](p,d);t=c[b+8>>2]|0}o=o+1|0}while((o|0)<(t|0))}a[n+16>>0]=1;c[n+12>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;a[n+36>>0]=1;c[n+32>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;a[n+56>>0]=1;c[n+52>>2]=0;c[n+44>>2]=0;c[n+48>>2]=0;a[n+76>>0]=1;c[n+72>>2]=0;c[n+64>>2]=0;c[n+68>>2]=0;if((t|0)<=0){nn(n);i=n;return}w=-1;v=0;r=0;u=0;s=0;o=0;while(1){p=c[(c[(c[b+16>>2]|0)+(o<<2)>>2]|0)+192>>2]|0;q=(p+~(p<<15)>>10^p+~(p<<15))*9|0;q=(q>>6^q)+~((q>>6^q)<<11)>>16^(q>>6^q)+~((q>>6^q)<<11);w=q&w;a:do{if(w>>>0<v>>>0?(h=c[r+(w<<2)>>2]|0,!((h|0)==-1)):0){w=c[n+72>>2]|0;x=h;while(1){if((p|0)==(c[w+(x<<3)>>2]|0)){break}x=c[u+(x<<2)>>2]|0;if((x|0)==-1){f=15;break a}}if(!(!((x|0)==-1)?((c[n+52>>2]|0)+(x<<2)|0)!=0:0)){f=15}}else{f=15}}while(0);if((f|0)==15){f=0;t=q&s+ -1;b:do{if(t>>>0<v>>>0?(g=c[r+(t<<2)>>2]|0,!((g|0)==-1)):0){v=c[n+72>>2]|0;w=g;while(1){if((p|0)==(c[v+(w<<3)>>2]|0)){break}w=c[u+(w<<2)>>2]|0;if((w|0)==-1){f=22;break b}}if(!((w|0)==-1)){c[(c[n+52>>2]|0)+(w<<2)>>2]=p}else{f=22}}else{f=22}}while(0);if((f|0)==22){f=0;r=c[n+44>>2]|0;if((r|0)==(s|0)){u=(s|0)==0?1:s<<1;if((s|0)<(u|0)){if((u|0)!=0?(c[4336]=(c[4336]|0)+1,m=cw((u<<2|3)+16|0)|0,(m|0)!=0):0){c[(m+19&-16)+ -4>>2]=m;v=m+19&-16}else{v=0}if((s|0)>0){w=0;do{x=v+(w<<2)|0;if((x|0)!=0){c[x>>2]=c[(c[n+52>>2]|0)+(w<<2)>>2]}w=w+1|0}while((w|0)!=(s|0))}w=c[n+52>>2]|0;if((w|0)!=0){if((a[n+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[w+ -4>>2]|0)}c[n+52>>2]=0}a[n+56>>0]=1;c[n+52>>2]=v;c[n+48>>2]=u;u=s}else{u=s}}else{u=r}v=(c[n+52>>2]|0)+(u<<2)|0;if((v|0)!=0){c[v>>2]=p}c[n+44>>2]=u+1;v=c[n+64>>2]|0;if((v|0)==(c[n+68>>2]|0)?(k=(v|0)==0?1:v<<1,(v|0)<(k|0)):0){if((k|0)!=0?(c[4336]=(c[4336]|0)+1,j=cw((k<<3|3)+16|0)|0,(j|0)!=0):0){c[(j+19&-16)+ -4>>2]=j;u=j+19&-16}else{u=0}if((v|0)>0){x=0;do{w=u+(x<<3)|0;if((w|0)!=0){z=(c[n+72>>2]|0)+(x<<3)|0;y=c[z+4>>2]|0;c[w>>2]=c[z>>2];c[w+4>>2]=y}x=x+1|0}while((x|0)!=(v|0))}v=c[n+72>>2]|0;if((v|0)!=0){if((a[n+76>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[v+ -4>>2]|0)}c[n+72>>2]=0}a[n+76>>0]=1;c[n+72>>2]=u;c[n+68>>2]=k;v=c[n+64>>2]|0}u=(c[n+72>>2]|0)+(v<<3)|0;if((u|0)!=0){c[u>>2]=p;c[u+4>>2]=0}c[n+64>>2]=v+1;u=c[n+48>>2]|0;if((s|0)<(u|0)){s=c[n+4>>2]|0;do{if((s|0)<(u|0)){if((s|0)<=(u|0)){if((c[n+8>>2]|0)<(u|0)){if((u|0)!=0?(c[4336]=(c[4336]|0)+1,e=cw((u<<2|3)+16|0)|0,(e|0)!=0):0){c[(e+19&-16)+ -4>>2]=e;t=e+19&-16}else{t=0}v=c[n+12>>2]|0;if((s|0)>0){x=0;do{w=t+(x<<2)|0;if((w|0)!=0){c[w>>2]=c[v+(x<<2)>>2]}x=x+1|0}while((x|0)!=(s|0))}if((v|0)!=0){if((a[n+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[v+ -4>>2]|0)}c[n+12>>2]=0}a[n+16>>0]=1;c[n+12>>2]=t;c[n+8>>2]=u}else{t=c[n+12>>2]|0}v=s;do{w=t+(v<<2)|0;if((w|0)!=0){c[w>>2]=0}v=v+1|0}while((v|0)!=(u|0))}c[n+4>>2]=u;t=c[n+24>>2]|0;if((t|0)<(u|0)){if((c[n+28>>2]|0)<(u|0)){if((u|0)!=0?(c[4336]=(c[4336]|0)+1,l=cw((u<<2|3)+16|0)|0,(l|0)!=0):0){c[(l+19&-16)+ -4>>2]=l;v=l+19&-16}else{v=0}y=c[n+32>>2]|0;if((t|0)>0){w=0;do{x=v+(w<<2)|0;if((x|0)!=0){c[x>>2]=c[y+(w<<2)>>2]}w=w+1|0}while((w|0)!=(t|0))}if((y|0)!=0){if((a[n+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[y+ -4>>2]|0)}c[n+32>>2]=0}a[n+36>>0]=1;c[n+32>>2]=v;c[n+28>>2]=u}else{v=c[n+32>>2]|0}do{w=v+(t<<2)|0;if((w|0)!=0){c[w>>2]=0}t=t+1|0}while((t|0)!=(u|0))}c[n+24>>2]=u;if((u|0)>0){jw(c[n+12>>2]|0,-1,u<<2|0)|0;jw(c[n+32>>2]|0,-1,u<<2|0)|0}if((s|0)<=0){u=c[n+48>>2]|0;break}t=c[n+72>>2]|0;x=c[n+12>>2]|0;v=c[n+32>>2]|0;u=c[n+48>>2]|0;w=0;do{z=c[t+(w<<3)>>2]|0;z=(z+~(z<<15)>>10^z+~(z<<15))*9|0;z=x+((((z>>6^z)+~((z>>6^z)<<11)>>16^(z>>6^z)+~((z>>6^z)<<11))&u+ -1)<<2)|0;c[v+(w<<2)>>2]=c[z>>2];c[z>>2]=w;w=w+1|0}while((w|0)!=(s|0))}}while(0);s=u;t=q&u+ -1}else{s=u}z=c[n+12>>2]|0;y=z+(t<<2)|0;u=c[n+32>>2]|0;c[u+(r<<2)>>2]=c[y>>2];c[y>>2]=r;r=z}Fb[c[(c[p>>2]|0)+60>>2]&127](p,d);t=c[b+8>>2]|0}o=o+1|0;if((o|0)>=(t|0)){break}w=s+ -1|0;v=c[n+4>>2]|0}nn(n);i=n;return}function mn(a,b){a=a|0;b=b|0;var d=0;d=i;Db[c[(c[b>>2]|0)+32>>2]&255](b);ln(a,b);Db[c[(c[b>>2]|0)+36>>2]&255](b);i=d;return}function nn(b){b=b|0;var d=0,e=0;d=i;e=c[b+72>>2]|0;if((e|0)!=0){if((a[b+76>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+72>>2]=0}a[b+76>>0]=1;c[b+72>>2]=0;c[b+64>>2]=0;c[b+68>>2]=0;e=c[b+52>>2]|0;if((e|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;e=c[b+32>>2]|0;if((e|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;e=c[b+12>>2]|0;if((e|0)==0){a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;e=b+8|0;c[e>>2]=0;i=d;return}if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+12>>2]=0;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;e=b+8|0;c[e>>2]=0;i=d;return}function on(a){a=a|0;return}function pn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function qn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0;d=i;i=i+96|0;p=+g[b>>2];j=+g[a+28>>2];q=+g[b+4>>2];l=+g[a+32>>2];r=+g[b+8>>2];n=+g[a+36>>2];s=+g[a+44>>2];t=+g[a+48>>2];f=+g[a+52>>2];v=+g[a+60>>2];w=+g[a+64>>2];x=+g[a+68>>2];o=+g[a+76>>2];u=+g[a+80>>2];y=+g[a+84>>2];g[d+80>>2]=p*j+q*l+r*n+o;g[d+84>>2]=p*s+q*t+r*f+u;g[d+88>>2]=p*v+q*w+r*x+y;g[d+92>>2]=0.0;h=+g[b+16>>2];k=+g[b+20>>2];m=+g[b+24>>2];g[d+64>>2]=h*j+k*l+m*n+o;g[d+68>>2]=h*s+k*t+m*f+u;g[d+72>>2]=h*v+k*w+m*x+y;g[d+76>>2]=0.0;z=+g[b+32>>2];A=+g[b+36>>2];B=+g[b+40>>2];g[d+48>>2]=z*j+A*l+B*n+o;g[d+52>>2]=z*s+A*t+B*f+u;g[d+56>>2]=z*v+A*w+B*x+y;g[d+60>>2]=0.0;C=(p*j+q*l+r*n+o+(h*j+k*l+m*n+o)+(z*j+A*l+B*n+o))*.3333333432674408;D=(p*s+q*t+r*f+u+(h*s+k*t+m*f+u)+(z*s+A*t+B*f+u))*.3333333432674408;E=(p*v+q*w+r*x+y+(h*v+k*w+m*x+y)+(z*v+A*w+B*x+y))*.3333333432674408;g[d+32>>2]=C;g[d+36>>2]=D;g[d+40>>2]=E;g[d+44>>2]=0.0;e=c[a+8>>2]|0;if(((Hb[c[(c[e>>2]|0)+48>>2]&127](e)|0)&16384|0)==0){b=c[a+8>>2]|0;F=c[b>>2]|0;F=F+8|0;F=c[F>>2]|0;e=a+12|0;mc[F&63](b,d+80|0,d+64|0,e);b=c[a+8>>2]|0;F=c[b>>2]|0;F=F+8|0;F=c[F>>2]|0;mc[F&63](b,d+64|0,d+48|0,e);b=c[a+8>>2]|0;a=c[b>>2]|0;a=a+8|0;a=c[a>>2]|0;mc[a&63](b,d+48|0,d+80|0,e);i=d;return}H=h*j+k*l+m*n+o-(p*j+q*l+r*n+o);G=h*s+k*t+m*f+u-(p*s+q*t+r*f+u);m=h*v+k*w+m*x+y-(p*v+q*w+r*x+y);o=z*j+A*l+B*n+o-(p*j+q*l+r*n+o);u=z*s+A*t+B*f+u-(p*s+q*t+r*f+u);A=z*v+A*w+B*x+y-(p*v+q*w+r*x+y);B=1.0/+Q(+((H*u-G*o)*(H*u-G*o)+((G*A-m*u)*(G*A-m*u)+(m*o-H*A)*(m*o-H*A))));g[d+16>>2]=1.0;g[d+20>>2]=1.0;g[d+24>>2]=0.0;g[d+28>>2]=0.0;e=c[a+8>>2]|0;b=c[(c[e>>2]|0)+8>>2]|0;g[d>>2]=B*(G*A-m*u)+C;g[d+4>>2]=B*(m*o-H*A)+D;g[d+8>>2]=B*(H*u-G*o)+E;g[d+12>>2]=0.0;mc[b&63](e,d+32|0,d,d+16|0);e=c[a+8>>2]|0;b=c[e>>2]|0;b=b+8|0;b=c[b>>2]|0;F=a+12|0;mc[b&63](e,d+80|0,d+64|0,F);e=c[a+8>>2]|0;b=c[e>>2]|0;b=b+8|0;b=c[b>>2]|0;mc[b&63](e,d+64|0,d+48|0,F);e=c[a+8>>2]|0;b=c[e>>2]|0;b=b+8|0;b=c[b>>2]|0;mc[b&63](e,d+48|0,d+80|0,F);i=d;return}function rn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+8>>2]&63](a,b,d,e);i=f;return}function sn(a){a=a|0;var b=0;b=i;dw(a+ -4|0);i=b;return}function tn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a+ -4>>2]|0)+8>>2]&63](a+ -4|0,b,d,e);i=f;return}function un(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function vn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,j=0;d=i;i=i+32|0;e=c[a+184>>2]|0;if(+g[e+4>>2]==0.0){b=0;i=d;return b|0}b=c[b>>2]|0;if(!(Zb[c[(c[e>>2]|0)+8>>2]&31](e,c[b+188>>2]|0)|0)){b=1;i=d;return b|0}h=c[a+192>>2]|0;j=c[b+192>>2]|0;e=c[a+184>>2]|0;f=+g[a+188>>2];c[d>>2]=0;c[d+4>>2]=j;c[d+8>>2]=b;c[d+12>>2]=b+4;c[d+16>>2]=-1;c[d+20>>2]=-1;bn(h,a+36|0,a+100|0,d,e,f);b=1;i=d;return b|0}function wn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function xn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+32|0;e=c[a+216>>2]|0;if(+g[e+4>>2]==0.0){b=0;i=d;return b|0}b=c[b>>2]|0;if(!(Zb[c[(c[e>>2]|0)+8>>2]&31](e,c[b+188>>2]|0)|0)){b=1;i=d;return b|0}f=c[b+192>>2]|0;e=c[a+216>>2]|0;c[d>>2]=0;c[d+4>>2]=f;c[d+8>>2]=b;c[d+12>>2]=b+4;c[d+16>>2]=-1;c[d+20>>2]=-1;_m(a+68|0,a+132|0,d,e);b=1;i=d;return b|0}function yn(a){a=a|0;return}function zn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function An(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+12>>2]|0;a=Zb[c[(c[a>>2]|0)+8>>2]&31](a,b)|0;i=d;return a|0}function Bn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0;e=i;i=i+16|0;c[e>>2]=-1;c[e+4>>2]=c[a+16>>2];if((c[b+4>>2]|0)==0){c[b+4>>2]=e}h=c[a+12>>2]|0;f=+_b[c[(c[h>>2]|0)+12>>2]&7](h,b,d);g[a+4>>2]=+g[(c[a+12>>2]|0)+4>>2];i=e;return+f}function Cn(a){a=a|0;return}function Dn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function En(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0;j=i;i=i+64|0;c[j+48>>2]=f;c[j+52>>2]=h;h=c[a+212>>2]|0;if(!(+g[h+4>>2]>=e)){i=j;return+e}c[j>>2]=c[a+216>>2];c[j+4>>2]=j+48;c[j+8>>2]=c[b+0>>2];c[j+12>>2]=c[b+4>>2];c[j+16>>2]=c[b+8>>2];c[j+20>>2]=c[b+12>>2];c[j+24>>2]=c[d+0>>2];c[j+28>>2]=c[d+4>>2];c[j+32>>2]=c[d+8>>2];c[j+36>>2]=c[d+12>>2];g[j+40>>2]=e;e=+_b[c[(c[h>>2]|0)+12>>2]&7](h,j,0);i=j;return+e}function Fn(a){a=a|0;return}function Gn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Hn(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0;j=i;i=i+64|0;c[j+48>>2]=f;c[j+52>>2]=h;h=c[a+212>>2]|0;if(!(+g[h+4>>2]>=e)){i=j;return+e}c[j>>2]=c[a+216>>2];c[j+4>>2]=j+48;c[j+8>>2]=c[b+0>>2];c[j+12>>2]=c[b+4>>2];c[j+16>>2]=c[b+8>>2];c[j+20>>2]=c[b+12>>2];c[j+24>>2]=c[d+0>>2];c[j+28>>2]=c[d+4>>2];c[j+32>>2]=c[d+8>>2];c[j+36>>2]=c[d+12>>2];g[j+40>>2]=e;e=+_b[c[(c[h>>2]|0)+12>>2]&7](h,j,1);i=j;return+e}function In(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Jn(a){a=a|0;return}function Kn(a){a=a|0;return}function Ln(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Mn(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+20>>2]|0;a=Zb[c[(c[a>>2]|0)+8>>2]&31](a,b)|0;i=d;return a|0}function Nn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0;e=i;i=i+16|0;c[e>>2]=-1;c[e+4>>2]=c[a+24>>2];if((c[b+4>>2]|0)==0){c[b+4>>2]=e}h=c[a+20>>2]|0;f=+_b[c[(c[h>>2]|0)+12>>2]&7](h,b,d);g[a+4>>2]=+g[(c[a+20>>2]|0)+4>>2];i=e;return+f}function On(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Pn(a,b,c){a=a|0;b=b|0;c=c|0;return}function Qn(a,d){a=a|0;d=d|0;var e=0,f=0,h=0;e=i;i=i+128|0;f=c[d+36>>2]|0;d=c[(c[a+8>>2]|0)+24>>2]|0;h=c[d+(f*80|0)+64>>2]|0;$h(e+56|0,c[a+12>>2]|0,d+(f*80|0)|0);d=c[a+4>>2]|0;c[e+32>>2]=0;c[e+36>>2]=h;c[e+40>>2]=d;c[e+44>>2]=e+56;c[e+48>>2]=-1;c[e+52>>2]=f;d=c[a+24>>2]|0;g[e+4>>2]=1.0;c[e+8>>2]=0;b[e+12>>1]=1;b[e+14>>1]=-1;c[e+16>>2]=0;c[e>>2]=6968;c[e+20>>2]=d;c[e+24>>2]=f;g[e+4>>2]=+g[d+4>>2];c[e+16>>2]=c[d+16>>2];_m(c[a+16>>2]|0,c[a+20>>2]|0,e+32|0,e);i=e;return}function Rn(a,b,d){a=a|0;b=b|0;d=+d;var e=0;e=i;Fb[c[(c[a>>2]|0)+12>>2]&127](a,b);i=e;return}function Sn(a,b){a=a|0;b=b|0;return 1}function Tn(a,b){a=a|0;b=b|0;return 1}function Un(a){a=a|0;return}function Vn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Wn(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;h=i;i=i+48|0;c[h+32>>2]=e;c[h+36>>2]=f;n=+g[b>>2];m=+g[b+4>>2];j=+g[b+8>>2];l=+g[a+56>>2]*n+ +g[a+60>>2]*m+ +g[a+64>>2]*j;k=n*+g[a+72>>2]+m*+g[a+76>>2]+j*+g[a+80>>2];j=n*+g[a+88>>2]+m*+g[a+92>>2]+j*+g[a+96>>2];c[h>>2]=c[a+48>>2];c[h+4>>2]=h+32;g[h+8>>2]=l;g[h+12>>2]=k;g[h+16>>2]=j;g[h+20>>2]=0.0;g[h+24>>2]=d;e=c[a+44>>2]|0;d=+_b[c[(c[e>>2]|0)+12>>2]&7](e,h,1);i=h;return+d}function Xn(a){a=a|0;return}function Yn(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Zn(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;h=i;i=i+48|0;c[h+32>>2]=e;c[h+36>>2]=f;n=+g[b>>2];m=+g[b+4>>2];j=+g[b+8>>2];l=+g[a+56>>2]*n+ +g[a+60>>2]*m+ +g[a+64>>2]*j;k=n*+g[a+72>>2]+m*+g[a+76>>2]+j*+g[a+80>>2];j=n*+g[a+88>>2]+m*+g[a+92>>2]+j*+g[a+96>>2];c[h>>2]=c[a+48>>2];c[h+4>>2]=h+32;g[h+8>>2]=l;g[h+12>>2]=k;g[h+16>>2]=j;g[h+20>>2]=0.0;g[h+24>>2]=d;e=c[a+44>>2]|0;d=+_b[c[(c[e>>2]|0)+12>>2]&7](e,h,1);i=h;return+d}function _n(a,b){a=a|0;b=+b;return}function $n(a,b){a=a|0;b=b|0;return}function ao(a,b,c){a=a|0;b=b|0;c=c|0;return}function bo(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function co(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;c[b+8>>2]=0;c[b>>2]=7816;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;g[b+32>>2]=999999984306749400.0;g[b+36>>2]=999999984306749400.0;g[b+40>>2]=999999984306749400.0;g[b+44>>2]=0.0;g[b+48>>2]=-999999984306749400.0;g[b+52>>2]=-999999984306749400.0;g[b+56>>2]=-999999984306749400.0;g[b+60>>2]=0.0;c[b+64>>2]=0;c[b+68>>2]=1;g[b+72>>2]=0.0;g[b+76>>2]=1.0;g[b+80>>2]=1.0;g[b+84>>2]=1.0;g[b+88>>2]=0.0;c[b+4>>2]=31;if(!d){i=e;return}c[4336]=(c[4336]|0)+1;d=cw(79)|0;if((d|0)!=0?(f=d+19&-16,c[f+ -4>>2]=d,(d+19&-16|0)!=0):0){a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;c[(d+19&-16)>>2]=0;c[f+4>>2]=0;c[f+8>>2]=-1;c[f+12>>2]=0;c[f+16>>2]=0;f=d+19&-16}else{f=0}c[b+64>>2]=f;i=e;return}function eo(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=7816;e=c[b+64>>2]|0;if((e|0)!=0?(Bp(e),f=c[b+64>>2]|0,(f|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}e=c[b+24>>2]|0;if((e|0)!=0){if((a[b+28>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+24>>2]=0}a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;if((b|0)==0){i=d;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function fo(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=7816;e=c[b+64>>2]|0;if((e|0)!=0?(Bp(e),f=c[b+64>>2]|0,(f|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}e=c[b+24>>2]|0;if((e|0)!=0){if((a[b+28>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+24>>2]=0}a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;i=d;return}function go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+80|0;c[a+68>>2]=(c[a+68>>2]|0)+1;e=c[a+16>>2]|0;if((e|0)<=0){h=c[a>>2]|0;h=h+68|0;h=c[h>>2]|0;Db[h&255](a);i=d;return}h=e;do{e=e+ -1|0;g=c[a+24>>2]|0;if((c[g+(e*80|0)+64>>2]|0)==(b|0)){c[a+68>>2]=(c[a+68>>2]|0)+1;f=c[a+64>>2]|0;if((f|0)!=0){g=c[g+(e*80|0)+76>>2]|0;Fp(f,g)|0;h=c[f+4>>2]|0;if((h|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[f+4>>2]=g;c[f+12>>2]=(c[f+12>>2]|0)+ -1;h=c[a+16>>2]|0;g=c[a+24>>2]|0}h=h+ -1|0;m=g+(e*80|0)|0;c[d+0>>2]=c[m+0>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];l=g+(e*80|0)+16|0;c[d+16>>2]=c[l+0>>2];c[d+20>>2]=c[l+4>>2];c[d+24>>2]=c[l+8>>2];c[d+28>>2]=c[l+12>>2];k=g+(e*80|0)+32|0;c[d+32>>2]=c[k+0>>2];c[d+36>>2]=c[k+4>>2];c[d+40>>2]=c[k+8>>2];c[d+44>>2]=c[k+12>>2];j=g+(e*80|0)+48|0;c[d+48>>2]=c[j+0>>2];c[d+52>>2]=c[j+4>>2];c[d+56>>2]=c[j+8>>2];c[d+60>>2]=c[j+12>>2];f=g+(e*80|0)+64|0;c[d+64>>2]=c[f+0>>2];c[d+68>>2]=c[f+4>>2];c[d+72>>2]=c[f+8>>2];c[d+76>>2]=c[f+12>>2];n=g+(h*80|0)|0;c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=g+(h*80|0)+16|0;c[l+0>>2]=c[m+0>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];c[l+12>>2]=c[m+12>>2];l=g+(h*80|0)+32|0;c[k+0>>2]=c[l+0>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];k=g+(h*80|0)+48|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];g=g+(h*80|0)+64|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];g=c[a+24>>2]|0;c[g+(h*80|0)+0>>2]=c[d+0>>2];c[g+(h*80|0)+4>>2]=c[d+4>>2];c[g+(h*80|0)+8>>2]=c[d+8>>2];c[g+(h*80|0)+12>>2]=c[d+12>>2];c[g+(h*80|0)+16>>2]=c[d+16>>2];c[g+(h*80|0)+20>>2]=c[d+20>>2];c[g+(h*80|0)+24>>2]=c[d+24>>2];c[g+(h*80|0)+28>>2]=c[d+28>>2];c[g+(h*80|0)+32>>2]=c[d+32>>2];c[g+(h*80|0)+36>>2]=c[d+36>>2];c[g+(h*80|0)+40>>2]=c[d+40>>2];c[g+(h*80|0)+44>>2]=c[d+44>>2];c[g+(h*80|0)+48>>2]=c[d+48>>2];c[g+(h*80|0)+52>>2]=c[d+52>>2];c[g+(h*80|0)+56>>2]=c[d+56>>2];c[g+(h*80|0)+60>>2]=c[d+60>>2];c[g+(h*80|0)+64>>2]=c[d+64>>2];c[g+(h*80|0)+68>>2]=c[d+68>>2];c[g+(h*80|0)+72>>2]=c[d+72>>2];c[g+(h*80|0)+76>>2]=c[d+76>>2];if((c[a+64>>2]|0)!=0){c[(c[(c[a+24>>2]|0)+(e*80|0)+76>>2]|0)+36>>2]=e}h=(c[a+16>>2]|0)+ -1|0;c[a+16>>2]=h}}while((e|0)>0);n=c[a>>2]|0;n=n+68|0;n=c[n>>2]|0;Db[n&255](a);i=d;return}function ho(a){a=a|0;var b=0,d=0,e=0.0,f=0,h=0;b=i;i=i+32|0;g[a+32>>2]=999999984306749400.0;g[a+36>>2]=999999984306749400.0;g[a+40>>2]=999999984306749400.0;g[a+44>>2]=0.0;g[a+48>>2]=-999999984306749400.0;g[a+52>>2]=-999999984306749400.0;g[a+56>>2]=-999999984306749400.0;g[a+60>>2]=0.0;if((c[a+16>>2]|0)<=0){i=b;return}d=0;do{f=c[a+24>>2]|0;h=c[f+(d*80|0)+64>>2]|0;mc[c[(c[h>>2]|0)+8>>2]&63](h,f+(d*80|0)|0,b+16|0,b);e=+g[b+16>>2];if(+g[a+32>>2]>e){g[a+32>>2]=e}e=+g[b>>2];if(+g[a+48>>2]<e){g[a+48>>2]=e}e=+g[b+20>>2];if(+g[a+36>>2]>e){g[a+36>>2]=e}e=+g[b+4>>2];if(+g[a+52>>2]<e){g[a+52>>2]=e}e=+g[b+24>>2];if(+g[a+40>>2]>e){g[a+40>>2]=e}e=+g[b+8>>2];if(+g[a+56>>2]<e){g[a+56>>2]=e}d=d+1|0}while((d|0)<(c[a+16>>2]|0));i=b;return}function io(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;n=i;s=+g[a+48>>2];r=+g[a+32>>2];p=+g[a+52>>2];o=+g[a+36>>2];f=+g[a+56>>2];h=+g[a+40>>2];j=(c[a+16>>2]|0)==0;m=j?0.0:(f+h)*.5;l=j?0.0:(p+o)*.5;k=j?0.0:(s+r)*.5;t=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);q=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);r=(j?0.0:(s-r)*.5)+t;o=(j?0.0:(p-o)*.5)+q;q=(j?0.0:(f-h)*.5)+ +Tb[c[(c[a>>2]|0)+48>>2]&15](a);G=+g[b>>2];A=+P(+G);F=+g[b+4>>2];z=+P(+F);x=+g[b+8>>2];y=+P(+x);E=+g[b+16>>2];w=+P(+E);D=+g[b+20>>2];v=+P(+D);f=+g[b+24>>2];u=+P(+f);C=+g[b+32>>2];h=+P(+C);B=+g[b+36>>2];p=+P(+B);t=+g[b+40>>2];s=+P(+t);x=k*G+l*F+m*x+ +g[b+48>>2];f=k*E+l*D+m*f+ +g[b+52>>2];t=k*C+l*B+m*t+ +g[b+56>>2];g[d>>2]=x-(r*A+o*z+q*y);g[d+4>>2]=f-(r*w+o*v+q*u);g[d+8>>2]=t-(r*h+o*p+q*s);g[d+12>>2]=0.0;g[e>>2]=r*A+o*z+q*y+x;g[e+4>>2]=r*w+o*v+q*u+f;g[e+8>>2]=r*h+o*p+q*s+t;g[e+12>>2]=0.0;i=n;return}function jo(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0;e=i;i=i+96|0;g[e+32>>2]=1.0;c[e+36>>2]=0;c[e+40>>2]=0;c[e+44>>2]=0;c[e+48>>2]=0;g[e+52>>2]=1.0;c[e+56>>2]=0;c[e+60>>2]=0;c[e+64>>2]=0;c[e+68>>2]=0;g[e+72>>2]=1.0;k=e+76|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&63](a,e+32|0,e+16|0,e);h=(+g[e>>2]- +g[e+16>>2])*.5*2.0;f=(+g[e+4>>2]- +g[e+20>>2])*.5*2.0;j=(+g[e+8>>2]- +g[e+24>>2])*.5*2.0;g[d>>2]=b/12.0*(f*f+j*j);g[d+4>>2]=b/12.0*(h*h+j*j);g[d+8>>2]=b/12.0*(h*h+f*f);i=e;return}function ko(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0;k=i;i=i+144|0;if((c[a+16>>2]|0)<=0){p=a+76|0;c[p+0>>2]=c[b+0>>2];c[p+4>>2]=c[b+4>>2];c[p+8>>2]=c[b+8>>2];c[p+12>>2]=c[b+12>>2];p=c[a>>2]|0;p=p+68|0;p=c[p>>2]|0;Db[p&255](a);i=k;return}f=k+32|0;h=k+48|0;j=k+64|0;e=0;do{p=c[a+24>>2]|0;o=p+(e*80|0)|0;c[k+16>>2]=c[o+0>>2];c[k+20>>2]=c[o+4>>2];c[k+24>>2]=c[o+8>>2];c[k+28>>2]=c[o+12>>2];o=p+(e*80|0)+16|0;c[f+0>>2]=c[o+0>>2];c[f+4>>2]=c[o+4>>2];c[f+8>>2]=c[o+8>>2];c[f+12>>2]=c[o+12>>2];o=p+(e*80|0)+32|0;c[h+0>>2]=c[o+0>>2];c[h+4>>2]=c[o+4>>2];c[h+8>>2]=c[o+8>>2];c[h+12>>2]=c[o+12>>2];o=p+(e*80|0)+48|0;c[j+0>>2]=c[o+0>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];c[j+12>>2]=c[o+12>>2];p=c[p+(e*80|0)+64>>2]|0;p=Hb[c[(c[p>>2]|0)+28>>2]&127](p)|0;c[k+0>>2]=c[p+0>>2];c[k+4>>2]=c[p+4>>2];c[k+8>>2]=c[p+8>>2];q=+g[k+4>>2]*+g[b+4>>2]/+g[a+80>>2];r=+g[k+8>>2]*+g[b+8>>2]/+g[a+84>>2];g[k>>2]=+g[k>>2]*+g[b>>2]/+g[a+76>>2];g[k+4>>2]=q;g[k+8>>2]=r;g[k+12>>2]=0.0;p=c[(c[a+24>>2]|0)+(e*80|0)+64>>2]|0;Fb[c[(c[p>>2]|0)+24>>2]&127](p,k);r=+g[k+68>>2]*+g[b+4>>2]/+g[a+80>>2];q=+g[k+72>>2]*+g[b+8>>2]/+g[a+84>>2];g[k+64>>2]=+g[j>>2]*+g[b>>2]/+g[a+76>>2];g[k+68>>2]=r;g[k+72>>2]=q;g[k+76>>2]=0.0;p=c[a+24>>2]|0;o=p+(e*80|0)|0;c[o+0>>2]=c[k+16>>2];c[o+4>>2]=c[k+20>>2];c[o+8>>2]=c[k+24>>2];c[o+12>>2]=c[k+28>>2];o=p+(e*80|0)+16|0;c[o+0>>2]=c[f+0>>2];c[o+4>>2]=c[f+4>>2];c[o+8>>2]=c[f+8>>2];c[o+12>>2]=c[f+12>>2];o=p+(e*80|0)+32|0;c[o+0>>2]=c[h+0>>2];c[o+4>>2]=c[h+4>>2];c[o+8>>2]=c[h+8>>2];c[o+12>>2]=c[h+12>>2];p=p+(e*80|0)+48|0;c[p+0>>2]=c[j+0>>2];c[p+4>>2]=c[j+4>>2];c[p+8>>2]=c[j+8>>2];c[p+12>>2]=c[j+12>>2];if((c[a+64>>2]|0)!=0){l=c[(c[a+24>>2]|0)+(e*80|0)+64>>2]|0;mc[c[(c[l>>2]|0)+8>>2]&63](l,k+16|0,k+128|0,k+112|0);c[k+80>>2]=c[k+128>>2];c[k+84>>2]=c[k+132>>2];c[k+88>>2]=c[k+136>>2];c[k+92>>2]=c[k+140>>2];c[k+96>>2]=c[k+112>>2];c[k+100>>2]=c[k+116>>2];c[k+104>>2]=c[k+120>>2];c[k+108>>2]=c[k+124>>2];l=c[a+64>>2]|0;d=c[(c[a+24>>2]|0)+(e*80|0)+76>>2]|0;o=Fp(l,d)|0;a:do{if((o|0)!=0){m=c[l+8>>2]|0;if(!((m|0)>-1)){o=c[l>>2]|0;break}if((m|0)>0){n=0;while(1){p=c[o+32>>2]|0;n=n+1|0;if((p|0)==0){break a}if((n|0)>=(m|0)){o=p;break}else{o=p}}}}else{o=0}}while(0);c[d+0>>2]=c[k+80>>2];c[d+4>>2]=c[k+84>>2];c[d+8>>2]=c[k+88>>2];c[d+12>>2]=c[k+92>>2];c[d+16>>2]=c[k+96>>2];c[d+20>>2]=c[k+100>>2];c[d+24>>2]=c[k+104>>2];c[d+28>>2]=c[k+108>>2];Ep(l,o,d)}e=e+1|0}while((e|0)<(c[a+16>>2]|0));p=a+76|0;c[p+0>>2]=c[b+0>>2];c[p+4>>2]=c[b+4>>2];c[p+8>>2]=c[b+8>>2];c[p+12>>2]=c[b+12>>2];p=c[a>>2]|0;p=p+68|0;p=c[p>>2]|0;Db[p&255](a);i=k;return}function lo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0;e=i;f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;k=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=k;if((k|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+20>>2]=+g[a+72>>2];f=c[a+16>>2]|0;c[b+16>>2]=f;c[b+12>>2]=0;if((f|0)==0){i=e;return 7920}f=Qb[c[(c[d>>2]|0)+16>>2]&31](d,76,f)|0;k=c[f+8>>2]|0;c[b+12>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,k)|0;if((c[b+16>>2]|0)>0){j=c[a+24>>2]|0;h=0;while(1){g[k+72>>2]=+g[j+(h*80|0)+72>>2];c[k+64>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[j+(h*80|0)+64>>2]|0)|0;if((Zb[c[(c[d>>2]|0)+24>>2]&31](d,c[(c[a+24>>2]|0)+(h*80|0)+64>>2]|0)|0)==0){j=c[(c[d>>2]|0)+16>>2]|0;l=c[(c[a+24>>2]|0)+(h*80|0)+64>>2]|0;l=Hb[c[(c[l>>2]|0)+52>>2]&127](l)|0;l=Qb[j&31](d,l,1)|0;j=c[(c[a+24>>2]|0)+(h*80|0)+64>>2]|0;j=Qb[c[(c[j>>2]|0)+56>>2]&31](j,c[l+8>>2]|0,d)|0;Bb[c[(c[d>>2]|0)+20>>2]&31](d,l,j,1346455635,c[(c[a+24>>2]|0)+(h*80|0)+64>>2]|0)}j=c[a+24>>2]|0;c[k+68>>2]=c[j+(h*80|0)+68>>2];g[k>>2]=+g[j+(h*80|0)>>2];g[k+4>>2]=+g[j+(h*80|0)+4>>2];g[k+8>>2]=+g[j+(h*80|0)+8>>2];g[k+12>>2]=+g[j+(h*80|0)+12>>2];g[k+16>>2]=+g[j+(h*80|0)+16>>2];g[k+20>>2]=+g[j+(h*80|0)+20>>2];g[k+24>>2]=+g[j+(h*80|0)+24>>2];g[k+28>>2]=+g[j+(h*80|0)+28>>2];g[k+32>>2]=+g[j+(h*80|0)+32>>2];g[k+36>>2]=+g[j+(h*80|0)+36>>2];g[k+40>>2]=+g[j+(h*80|0)+40>>2];g[k+44>>2]=+g[j+(h*80|0)+44>>2];g[k+48>>2]=+g[j+(h*80|0)+48>>2];g[k+52>>2]=+g[j+(h*80|0)+52>>2];g[k+56>>2]=+g[j+(h*80|0)+56>>2];g[k+60>>2]=+g[j+(h*80|0)+60>>2];h=h+1|0;if((h|0)>=(c[b+16>>2]|0)){b=d;break}else{k=k+76|0}}}else{b=d}Bb[c[(c[b>>2]|0)+20>>2]&31](d,f,7888,1497453121,c[f+8>>2]|0);i=e;return 7920}function mo(a){a=a|0;return a+76|0}function no(a){a=a|0;return 7984}function oo(a,b){a=a|0;b=+b;g[a+72>>2]=b;return}function po(a){a=a|0;return+(+g[a+72>>2])}function qo(a){a=a|0;return 24}function ro(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0,j=0,k=0.0,l=0,m=0.0,n=0.0;j=i;i=i+48|0;f=+g[b+60>>2]*.5;e=c[b+68>>2]|0;k=+g[d>>2];m=+g[d+4>>2];n=+g[d+8>>2];n=+Q(+(k*k+m*m+n*n));h=c[b+64>>2]|0;if(+g[d+(e<<2)>>2]>n*+g[b+52>>2]){g[j+32+(h<<2)>>2]=0.0;g[j+32+(e<<2)>>2]=f;g[j+32+(c[b+72>>2]<<2)>>2]=0.0;c[a+0>>2]=c[j+32>>2];c[a+4>>2]=c[j+36>>2];c[a+8>>2]=c[j+40>>2];c[a+12>>2]=c[j+44>>2];i=j;return}k=+g[d+(h<<2)>>2];l=c[b+72>>2]|0;m=+g[d+(l<<2)>>2];n=+Q(+(k*k+m*m));if(n>1.1920928955078125e-7){n=+g[b+56>>2]/n;g[j+16+(h<<2)>>2]=k*n;g[j+16+(e<<2)>>2]=-f;g[j+16+(l<<2)>>2]=n*m;c[a+0>>2]=c[j+16>>2];c[a+4>>2]=c[j+20>>2];c[a+8>>2]=c[j+24>>2];c[a+12>>2]=c[j+28>>2];i=j;return}else{g[j+(h<<2)>>2]=0.0;g[j+(e<<2)>>2]=-f;g[j+(l<<2)>>2]=0.0;c[a+0>>2]=c[j+0>>2];c[a+4>>2]=c[j+4>>2];c[a+8>>2]=c[j+8>>2];c[a+12>>2]=c[j+12>>2];i=j;return}}function so(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;ro(a,b,c);i=d;return}function to(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;if((e|0)<=0){i=f;return}g=0;do{h=d+(g<<4)|0;ro(f,a,b+(g<<4)|0);c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];g=g+1|0}while((g|0)!=(e|0));i=f;return}function uo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;ro(a,b,d);if(!(+Tb[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0)){i=e;return}f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];k=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:j;l=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:h;f=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:f;j=1.0/+Q(+(k*k+(f*f+l*l)));h=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=j*f*h+ +g[a>>2];g[a+4>>2]=h*j*l+ +g[a+4>>2];g[a+8>>2]=h*j*k+ +g[a+8>>2];i=e;return}function vo(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0,j=0;j=c[a+68>>2]|0;i=c[a+64>>2]|0;h=c[a+72>>2]|0;e=+g[b+(j<<2)>>2]/+g[a+(j<<2)+12>>2]*+g[a+60>>2];g[a+60>>2]=e;f=+g[a+56>>2]*(+g[b+(i<<2)>>2]/+g[a+(i<<2)+12>>2]+ +g[b+(h<<2)>>2]/+g[a+(h<<2)+12>>2])*.5;g[a+56>>2]=f;g[a+52>>2]=f/+Q(+(e*e+f*f));f=+P(+(+g[b>>2]));e=+P(+(+g[b+4>>2]));d=+P(+(+g[b+8>>2]));g[a+12>>2]=f;g[a+16>>2]=e;g[a+20>>2]=d;g[a+24>>2]=0.0;return}function wo(a){a=a|0;return}function xo(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function yo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+80>>2]&63](a,b,d,e);i=f;return}function zo(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0;e=i;i=i+96|0;g[e+32>>2]=1.0;c[e+36>>2]=0;c[e+40>>2]=0;c[e+44>>2]=0;c[e+48>>2]=0;g[e+52>>2]=1.0;c[e+56>>2]=0;c[e+60>>2]=0;c[e+64>>2]=0;c[e+68>>2]=0;g[e+72>>2]=1.0;l=e+76|0;c[l+0>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&63](a,e+32|0,e+16|0,e);j=(+g[e>>2]- +g[e+16>>2])*.5;h=(+g[e+4>>2]- +g[e+20>>2])*.5;k=(+g[e+8>>2]- +g[e+24>>2])*.5;f=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=b*.0833333283662796*((h+f)*2.0*(h+f)*2.0+(k+f)*2.0*(k+f)*2.0);g[d+4>>2]=b*.0833333283662796*((j+f)*2.0*(j+f)*2.0+(k+f)*2.0*(k+f)*2.0);g[d+8>>2]=b*.0833333283662796*((j+f)*2.0*(j+f)*2.0+(h+f)*2.0*(h+f)*2.0);g[d+12>>2]=0.0;i=e;return}function Ao(a){a=a|0;return 8440}function Bo(a,b){a=a|0;b=b|0;g[a>>2]=0.0;g[a+4>>2]=1.0;g[a+8>>2]=0.0;g[a+12>>2]=0.0;return}function Co(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function Do(a){a=a|0;return 60}function Eo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+68>>2];i=e;return 8424}function Fo(a){a=a|0;return}function Go(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Ho(a){a=a|0;return 8416}function Io(a,b){a=a|0;b=b|0;g[a>>2]=0.0;g[a+4>>2]=0.0;g[a+8>>2]=1.0;g[a+12>>2]=0.0;return}function Jo(a){a=a|0;return}function Ko(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Lo(a){a=a|0;return 8408}function Mo(a,b){a=a|0;b=b|0;g[a>>2]=1.0;g[a+4>>2]=0.0;g[a+8>>2]=0.0;g[a+12>>2]=0.0;return}function No(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0;h=i;i=i+288|0;if((c[b+16>>2]|0)==0){K=c[b+12>>2]|0;b=c[b+20>>2]|0;n=+g[d>>2];q=+g[d+4>>2];u=+g[d+8>>2];k=+g[d+16>>2];r=+g[d+20>>2];j=+g[d+24>>2];m=+g[d+32>>2];s=+g[d+36>>2];l=+g[d+40>>2];F=+g[d+48>>2];E=+g[d+52>>2];D=+g[d+56>>2];J=+g[e>>2];I=+g[e+16>>2];y=+g[e+32>>2];H=+g[e+4>>2];G=+g[e+20>>2];w=+g[e+36>>2];v=+g[e+8>>2];z=+g[e+24>>2];x=+g[e+40>>2];C=-+g[e+48>>2];B=-+g[e+52>>2];p=-+g[e+56>>2];d=c[(c[K>>2]|0)+64>>2]|0;A=-+g[b+48>>2];t=-+g[b+52>>2];o=-+g[b+56>>2];g[h+32>>2]=(n*J+k*I+m*y)*A+(n*H+k*G+m*w)*t+(n*v+k*z+m*x)*o;g[h+36>>2]=(q*J+r*I+s*y)*A+(q*H+r*G+s*w)*t+(q*v+r*z+s*x)*o;g[h+40>>2]=(u*J+j*I+l*y)*A+(u*H+j*G+l*w)*t+(u*v+j*z+l*x)*o;g[h+44>>2]=0.0;ic[d&63](h+48|0,K,h+32|0);o=+g[h+48>>2];t=+g[h+52>>2];A=+g[h+56>>2];y=F*J+E*I+D*y+(J*C+I*B+y*p)+((n*J+k*I+m*y)*o+(q*J+r*I+s*y)*t+(u*J+j*I+l*y)*A);w=F*H+E*G+D*w+(H*C+G*B+w*p)+((n*H+k*G+m*w)*o+(q*H+r*G+s*w)*t+(u*H+j*G+l*w)*A);A=F*v+E*z+D*x+(v*C+z*B+x*p)+((n*v+k*z+m*x)*o+(q*v+r*z+s*x)*t+(u*v+j*z+l*x)*A);x=+g[b+48>>2];l=+g[b+52>>2];z=+g[b+56>>2];j=z*A+(x*y+l*w)- +g[b+64>>2];v=+g[e>>2];u=+g[e+4>>2];t=+g[e+8>>2];s=+g[e+16>>2];r=+g[e+20>>2];q=+g[e+24>>2];o=+g[e+32>>2];m=+g[e+36>>2];k=+g[e+40>>2];n=s*(y-x*j)+(w-l*j)*r+(A-z*j)*q+ +g[e+52>>2];p=(y-x*j)*o+(w-l*j)*m+(A-z*j)*k+ +g[e+56>>2];g[h+16>>2]=t*(A-z*j)+(v*(y-x*j)+u*(w-l*j))+ +g[e+48>>2];g[h+20>>2]=n;g[h+24>>2]=p;g[h+28>>2]=0.0;p=+g[b+48>>2];n=+g[b+52>>2];l=+g[b+56>>2];g[h>>2]=v*p+u*n+t*l;g[h+4>>2]=p*s+n*r+l*q;g[h+8>>2]=p*o+n*m+l*k;g[h+12>>2]=0.0;hc[c[(c[f>>2]|0)+16>>2]&15](f,h,h+16|0,j);i=h;return}else{N=c[b+4>>2]|0;a[N+312>>0]=0;c[N>>2]=0;a[N+356>>0]=1;g[N+292>>2]=999999984306749400.0;g[N+296>>2]=999999984306749400.0;g[N+300>>2]=999999984306749400.0;g[N+304>>2]=0.0;c[N+336>>2]=0;c[N+340>>2]=0;c[N+344>>2]=0;c[N+348>>2]=0;a[N+352>>0]=0;a[N+332>>0]=a[N+332>>0]&-16;N=c[b+12>>2]|0;M=c[b+16>>2]|0;L=c[N+4>>2]|0;K=c[M+4>>2]|0;I=+Tb[c[(c[N>>2]|0)+48>>2]&15](N);O=c[b+16>>2]|0;J=+Tb[c[(c[O>>2]|0)+48>>2]&15](O);O=c[b+4>>2]|0;b=c[b+8>>2]|0;c[h+200>>2]=11040;g[h+204>>2]=0.0;g[h+208>>2]=1.0;g[h+212>>2]=0.0;g[h+216>>2]=0.0;c[h+220>>2]=b;c[h+224>>2]=O;c[h+228>>2]=N;c[h+232>>2]=M;c[h+236>>2]=L;c[h+240>>2]=K;g[h+244>>2]=I;g[h+248>>2]=J;a[h+252>>0]=0;c[h+260>>2]=-1;c[h+272>>2]=1;c[h+276>>2]=1;g[h+192>>2]=999999984306749400.0;c[h+64>>2]=c[d+0>>2];c[h+68>>2]=c[d+4>>2];c[h+72>>2]=c[d+8>>2];c[h+76>>2]=c[d+12>>2];c[h+80>>2]=c[d+16>>2];c[h+84>>2]=c[d+20>>2];c[h+88>>2]=c[d+24>>2];c[h+92>>2]=c[d+28>>2];c[h+96>>2]=c[d+32>>2];c[h+100>>2]=c[d+36>>2];c[h+104>>2]=c[d+40>>2];c[h+108>>2]=c[d+44>>2];c[h+112>>2]=c[d+48>>2];c[h+116>>2]=c[d+52>>2];c[h+120>>2]=c[d+56>>2];c[h+124>>2]=c[d+60>>2];c[h+128>>2]=c[e+0>>2];c[h+132>>2]=c[e+4>>2];c[h+136>>2]=c[e+8>>2];c[h+140>>2]=c[e+12>>2];c[h+144>>2]=c[e+16>>2];c[h+148>>2]=c[e+20>>2];c[h+152>>2]=c[e+24>>2];c[h+156>>2]=c[e+28>>2];c[h+160>>2]=c[e+32>>2];c[h+164>>2]=c[e+36>>2];c[h+168>>2]=c[e+40>>2];c[h+172>>2]=c[e+44>>2];c[h+176>>2]=c[e+48>>2];c[h+180>>2]=c[e+52>>2];c[h+184>>2]=c[e+56>>2];c[h+188>>2]=c[e+60>>2];_q(h+200|0,h+64|0,f,0,0);i=h;return}}function Oo(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0;k=i;i=i+304|0;l=+g[e+48>>2]- +g[d+48>>2];n=+g[e+52>>2]- +g[d+52>>2];m=+g[e+56>>2]- +g[d+56>>2];si(d,e,k+256|0,k+192|0);t=+g[k+192>>2];s=+g[k+256>>2]*t;r=t*+g[k+260>>2];t=t*+g[k+264>>2];g[k+176>>2]=s;g[k+180>>2]=r;g[k+184>>2]=t;g[k+188>>2]=0.0;o=+g[h+48>>2]- +g[f+48>>2];q=+g[h+52>>2]- +g[f+52>>2];p=+g[h+56>>2]- +g[f+56>>2];si(f,h,k+256|0,k+192|0);v=+g[k+192>>2];u=+g[k+256>>2]*v;w=v*+g[k+260>>2];v=v*+g[k+264>>2];g[k+160>>2]=u;g[k+164>>2]=w;g[k+168>>2]=v;g[k+172>>2]=0.0;h=c[b+12>>2]|0;x=+Tb[c[(c[h>>2]|0)+16>>2]&15](h);h=c[b+16>>2]|0;if((h|0)==0){y=0.0}else{y=+Tb[c[(c[h>>2]|0)+16>>2]&15](h)}s=x*+Q(+(s*s+r*r+t*t))+y*+Q(+(u*u+w*w+v*v));if(s+ +Q(+((o-l)*(o-l)+(q-n)*(q-n)+(p-m)*(p-m)))==0.0){e=0;i=k;return e|0}c[k+256>>2]=8528;g[k+292>>2]=999999984306749400.0;a[k+296>>0]=0;No(b,d,f,k+256|0);e=(a[k+296>>0]|0)==0;c[k+144>>2]=c[k+276>>2];c[k+148>>2]=c[k+280>>2];c[k+152>>2]=c[k+284>>2];c[k+156>>2]=c[k+288>>2];if(e){e=0;i=k;return e|0}v=+g[k+260>>2];w=+g[k+264>>2];x=+g[k+268>>2];if(s+((o-l)*v+(q-n)*w+(p-m)*x)<=1.1920928955078125e-7){e=0;i=k;return e|0}u=+g[k+272>>2];t=+g[k+292>>2]+ +g[j+172>>2];r=0.0;h=0;while(1){if(!(t>.0010000000474974513)){d=18;break}e=c[j+168>>2]|0;if((e|0)!=0){z=c[(c[e>>2]|0)+20>>2]|0;g[k+128>>2]=1.0;g[k+132>>2]=1.0;g[k+136>>2]=1.0;g[k+140>>2]=0.0;Ib[z&3](e,k+144|0,.20000000298023224,k+128|0)}u=s+((p-m)*x+((q-n)*w+(o-l)*v));if(u<=1.1920928955078125e-7){j=0;d=19;break}v=r+t/u;if(!(!(v<0.0)&!(v>1.0)&!(v<=r))){j=0;d=19;break}ji(d,l,n,m,k+176|0,v,k+192|0);ji(f,o,q,p,k+160|0,v,k+64|0);e=c[j+168>>2]|0;if((e|0)!=0){z=c[(c[e>>2]|0)+20>>2]|0;g[k+48>>2]=1.0;g[k+52>>2]=0.0;g[k+56>>2]=0.0;g[k+60>>2]=0.0;Ib[z&3](e,k+240|0,.20000000298023224,k+48|0)}Cb[c[c[j>>2]>>2]&15](j,v);c[k>>2]=8528;g[k+36>>2]=999999984306749400.0;a[k+40>>0]=0;No(b,k+192|0,k+64|0,k);if((a[k+40>>0]|0)==0){d=16;break}t=+g[k+36>>2]+ +g[j+172>>2];c[k+144>>2]=c[k+20>>2];c[k+148>>2]=c[k+24>>2];c[k+152>>2]=c[k+28>>2];c[k+156>>2]=c[k+32>>2];e=h+1|0;if((h|0)>63){d=17;break}else{u=+g[k+16>>2];r=v;v=+g[k+4>>2];w=+g[k+8>>2];x=+g[k+12>>2];h=e}}if((d|0)==16){ic[c[(c[j>>2]|0)+8>>2]&63](j,-1,h);z=0;i=k;return z|0}else if((d|0)==17){ic[c[(c[j>>2]|0)+8>>2]&63](j,-2,e);z=0;i=k;return z|0}else if((d|0)==18){g[j+164>>2]=r;g[j+132>>2]=v;g[j+136>>2]=w;g[j+140>>2]=x;g[j+144>>2]=u;c[j+148>>2]=c[k+144>>2];c[j+152>>2]=c[k+148>>2];c[j+156>>2]=c[k+152>>2];c[j+160>>2]=c[k+156>>2];z=1;i=k;return z|0}else if((d|0)==19){i=k;return j|0}return 0}function Po(a){a=a|0;return}function Qo(a){a=a|0;return}function Ro(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function So(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function To(a,b,c){a=a|0;b=b|0;c=c|0;return}function Uo(a,b,c){a=a|0;b=b|0;c=c|0;return}function Vo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0;h=i;if(!(+g[b+36>>2]>f)){i=h;return}a[b+40>>0]=1;c[b+4>>2]=c[d+0>>2];c[b+8>>2]=c[d+4>>2];c[b+12>>2]=c[d+8>>2];c[b+16>>2]=c[d+12>>2];c[b+20>>2]=c[e+0>>2];c[b+24>>2]=c[e+4>>2];c[b+28>>2]=c[e+8>>2];c[b+32>>2]=c[e+12>>2];g[b+36>>2]=f;i=h;return}function Wo(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0;e=+P(+(+g[b>>2]));d=+P(+(+g[b+4>>2]));c=+P(+(+g[b+8>>2]));g[a+12>>2]=e;g[a+16>>2]=d;g[a+20>>2]=c;g[a+24>>2]=0.0;return}function Xo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;f=i;i=i+96|0;h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=0;do{q=f+80+(j<<2)|0;c[f+80>>2]=0;c[f+84>>2]=0;c[f+88>>2]=0;c[f+92>>2]=0;g[q>>2]=1.0;k=c[(c[a>>2]|0)+64>>2]|0;l=+g[f+80>>2];m=+g[f+84>>2];n=+g[f+88>>2];o=l*+g[b+4>>2]+m*+g[b+20>>2]+n*+g[b+36>>2];p=l*+g[b+8>>2]+m*+g[b+24>>2]+n*+g[b+40>>2];g[f+48>>2]=+g[b>>2]*l+ +g[b+16>>2]*m+ +g[b+32>>2]*n;g[f+52>>2]=o;g[f+56>>2]=p;g[f+60>>2]=0.0;ic[k&63](f+64|0,a,f+48|0);p=+g[f+64>>2];o=+g[f+68>>2];n=+g[f+72>>2];m=p*+g[b+16>>2]+o*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];l=p*+g[b+32>>2]+o*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[f+32>>2]=p*+g[b>>2]+o*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[f+36>>2]=m;g[f+40>>2]=l;g[f+44>>2]=0.0;k=f+32+(j<<2)|0;g[e+(j<<2)>>2]=h+ +g[k>>2];g[q>>2]=-1.0;q=c[(c[a>>2]|0)+64>>2]|0;l=+g[f+80>>2];m=+g[f+84>>2];n=+g[f+88>>2];o=l*+g[b+4>>2]+m*+g[b+20>>2]+n*+g[b+36>>2];p=l*+g[b+8>>2]+m*+g[b+24>>2]+n*+g[b+40>>2];g[f>>2]=+g[b>>2]*l+ +g[b+16>>2]*m+ +g[b+32>>2]*n;g[f+4>>2]=o;g[f+8>>2]=p;g[f+12>>2]=0.0;ic[q&63](f+16|0,a,f);p=+g[f+16>>2];o=+g[f+20>>2];n=+g[f+24>>2];m=p*+g[b+16>>2]+o*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];l=p*+g[b+32>>2]+o*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[f+32>>2]=p*+g[b>>2]+o*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[f+36>>2]=m;g[f+40>>2]=l;g[f+44>>2]=0.0;g[d+(j<<2)>>2]=+g[k>>2]-h;j=j+1|0}while((j|0)!=3);i=f;return}function Yo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;ic[c[(c[b>>2]|0)+68>>2]&63](a,b,d);if(!(+Tb[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0)){i=e;return}f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];k=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:j;l=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:h;f=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:f;j=1.0/+Q(+(k*k+(f*f+l*l)));h=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=j*f*h+ +g[a>>2];g[a+4>>2]=h*j*l+ +g[a+4>>2];g[a+8>>2]=h*j*k+ +g[a+8>>2];i=e;return}function Zo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0;h=i;i=i+64|0;n=+g[d>>2];o=+g[d+4>>2];m=+g[d+8>>2];p=n*+g[b+4>>2]+o*+g[b+20>>2]+m*+g[b+36>>2];q=n*+g[b+8>>2]+o*+g[b+24>>2]+m*+g[b+40>>2];g[h+48>>2]=+g[b>>2]*n+ +g[b+16>>2]*o+ +g[b+32>>2]*m;g[h+52>>2]=p;g[h+56>>2]=q;g[h+60>>2]=0.0;ic[c[(c[a>>2]|0)+64>>2]&63](h+32|0,a,h+48|0);q=+g[h+32>>2];p=+g[h+36>>2];m=+g[h+40>>2];o=q*+g[b>>2]+p*+g[b+4>>2]+m*+g[b+8>>2]+ +g[b+48>>2];n=q*+g[b+16>>2]+p*+g[b+20>>2]+m*+g[b+24>>2]+ +g[b+52>>2];m=q*+g[b+32>>2]+p*+g[b+36>>2]+m*+g[b+40>>2]+ +g[b+56>>2];r=c[(c[a>>2]|0)+64>>2]|0;p=-+g[h+52>>2];q=-+g[h+56>>2];g[h>>2]=-+g[h+48>>2];g[h+4>>2]=p;g[h+8>>2]=q;g[h+12>>2]=0.0;ic[r&63](h+16|0,a,h);q=+g[h+16>>2];p=+g[h+20>>2];j=+g[h+24>>2];l=q*+g[b>>2]+p*+g[b+4>>2]+j*+g[b+8>>2]+ +g[b+48>>2];k=q*+g[b+16>>2]+p*+g[b+20>>2]+j*+g[b+24>>2]+ +g[b+52>>2];j=q*+g[b+32>>2]+p*+g[b+36>>2]+j*+g[b+40>>2]+ +g[b+56>>2];g[e>>2]=o*+g[d>>2]+n*+g[d+4>>2]+m*+g[d+8>>2];j=l*+g[d>>2]+k*+g[d+4>>2]+j*+g[d+8>>2];g[f>>2]=j;k=+g[e>>2];if(!(k>j)){i=h;return}g[e>>2]=j;g[f>>2]=k;i=h;return}function _o(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0;e=i;i=i+80|0;switch(c[b+4>>2]|0){case 1:{t=+g[d>>2];u=+g[d+4>>2];j=+g[d+8>>2];f=t*+g[b+56>>2]+u*+g[b+60>>2]+j*+g[b+64>>2];h=t*+g[b+72>>2]+u*+g[b+76>>2]+j*+g[b+80>>2];j=t*+g[b+88>>2]+u*+g[b+92>>2]+j*+g[b+96>>2];if(f<h){d=h<j?2:1}else{d=f<j?2:0}t=+g[b+56+(d<<4)+4>>2];u=+g[b+56+(d<<4)+8>>2];g[a>>2]=+g[b+56+(d<<4)>>2];g[a+4>>2]=t;g[a+8>>2]=u;g[a+12>>2]=0.0;i=e;return};case 13:{c[e+64>>2]=c[b+28>>2];c[e+68>>2]=c[b+32>>2];c[e+72>>2]=c[b+36>>2];c[e+76>>2]=c[b+40>>2];g[e+48>>2]=+g[d>>2];h=+g[d+4>>2];g[e+52>>2]=h;f=+g[d+8>>2];g[e+56>>2]=f;g[e+60>>2]=0.0;w=c[b+52>>2]|0;if((w|0)==2){v=0;b=w;d=1}else if((w|0)==1){h=f;v=0;b=w;d=2}else{h=f;v=1;b=0;d=2}f=+g[e+64+(v<<2)>>2];k=+g[e+64+(w<<2)>>2];l=+g[e+48+(v<<2)>>2];j=+Q(+(l*l+h*h));if(j!=0.0){g[e+32+(v<<2)>>2]=l*(f/j);if(+g[e+48+(b<<2)>>2]<0.0){k=-k}g[e+32+(b<<2)>>2]=k;g[e+32+(d<<2)>>2]=f/j*h;g[a>>2]=+g[e+32>>2];g[a+4>>2]=+g[e+36>>2];g[a+8>>2]=+g[e+40>>2];g[a+12>>2]=0.0;i=e;return}else{g[e+32+(v<<2)>>2]=f;if(+g[e+48+(b<<2)>>2]<0.0){k=-k}g[e+32+(b<<2)>>2]=k;g[e+32+(d<<2)>>2]=0.0;g[a>>2]=+g[e+32>>2];g[a+4>>2]=+g[e+36>>2];g[a+8>>2]=+g[e+40>>2];g[a+12>>2]=0.0;i=e;return}};case 8:{c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;i=e;return};case 0:{f=+g[b+28>>2];h=+g[b+32>>2];h=+g[d+4>>2]>=0.0?h:-h;j=+g[b+36>>2];j=+g[d+8>>2]>=0.0?j:-j;g[a>>2]=+g[d>>2]>=0.0?f:-f;g[a+4>>2]=h;g[a+8>>2]=j;g[a+12>>2]=0.0;i=e;return};case 4:{v=c[b+104>>2]|0;w=c[b+96>>2]|0;h=+g[b+12>>2];f=+g[b+16>>2];j=+g[b+20>>2];k=+g[d>>2]*h;l=+g[d+4>>2]*f;m=+g[d+8>>2]*j;if((w|0)>0){b=0;n=-3.4028234663852886e+38;x=-1;while(1){o=k*+g[v+(b<<4)>>2]+l*+g[v+(b<<4)+4>>2]+m*+g[v+(b<<4)+8>>2];d=o>n;x=d?b:x;b=b+1|0;if((b|0)==(w|0)){break}else{n=d?o:n}}}else{x=-1}t=f*+g[v+(x<<4)+4>>2];u=j*+g[v+(x<<4)+8>>2];g[a>>2]=h*+g[v+(x<<4)>>2];g[a+4>>2]=t;g[a+8>>2]=u;g[a+12>>2]=0.0;i=e;return};case 10:{f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];d=c[b+52>>2]|0;k=+g[b+(d<<2)+28>>2];l=+g[b+(((d+2|0)%3|0)<<2)+28>>2];if(f*f+h*h+j*j<9999999747378752.0e-20){f=1.0;h=0.0;j=0.0}else{u=1.0/+Q(+(f*f+h*h+j*j));f=f*u;h=h*u;j=j*u}c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;g[e+16+(d<<2)>>2]=k;o=l*f;m=l*h;l=l*j;q=+g[b+44>>2];u=f*q;s=h*q;q=j*q;n=+g[e+16>>2]+o-u;t=m+ +g[e+20>>2]-s;r=l+ +g[e+24>>2]-q;p=j*r+(f*n+h*t);if(!(p>-999999984306749400.0)){p=-999999984306749400.0;n=0.0;r=0.0;t=0.0}c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;g[e+(d<<2)>>2]=-k;k=o+ +g[e>>2]-u;m=m+ +g[e+4>>2]-s;l=l+ +g[e+8>>2]-q;b=j*l+(f*k+h*m)>p;g[a>>2]=b?k:n;g[a+4>>2]=b?m:t;g[a+8>>2]=b?l:r;g[a+12>>2]=0.0;i=e;return};case 5:{v=c[b+92>>2]|0;w=c[b+96>>2]|0;f=+g[b+12>>2];h=+g[b+16>>2];j=+g[b+20>>2];k=+g[d>>2]*f;l=+g[d+4>>2]*h;m=+g[d+8>>2]*j;if((w|0)>0){b=0;n=-3.4028234663852886e+38;x=-1;while(1){o=k*+g[v+(b<<4)>>2]+l*+g[v+(b<<4)+4>>2]+m*+g[v+(b<<4)+8>>2];d=o>n;x=d?b:x;b=b+1|0;if((b|0)==(w|0)){break}else{n=d?o:n}}}else{x=-1}t=h*+g[v+(x<<4)+4>>2];u=j*+g[v+(x<<4)+8>>2];g[a>>2]=f*+g[v+(x<<4)>>2];g[a+4>>2]=t;g[a+8>>2]=u;g[a+12>>2]=0.0;i=e;return};default:{ic[c[(c[b>>2]|0)+68>>2]&63](a,b,d);i=e;return}}}function $o(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0;e=i;i=i+32|0;c[e+16>>2]=c[d+0>>2];c[e+20>>2]=c[d+4>>2];c[e+24>>2]=c[d+8>>2];c[e+28>>2]=c[d+12>>2];h=+g[e+16>>2];j=+g[e+20>>2];f=+g[e+24>>2];if(h*h+j*j+f*f<1.4210854715202004e-14){g[e+16>>2]=-1.0;g[e+20>>2]=-1.0;g[e+24>>2]=-1.0;g[e+28>>2]=0.0;h=-1.0;j=-1.0;f=-1.0}k=1.0/+Q(+(h*h+j*j+f*f));g[e+16>>2]=h*k;g[e+20>>2]=j*k;g[e+24>>2]=f*k;_o(e,b,e+16|0);switch(c[b+4>>2]|0){case 0:{f=+g[b+44>>2];break};case 8:{f=+g[b+28>>2]*+g[b+12>>2];break};case 1:{f=+g[b+44>>2];break};case 13:{f=+g[b+44>>2];break};case 11:{f=+g[b+44>>2];break};case 4:case 5:{f=+g[b+44>>2];break};case 10:{f=+g[b+44>>2];break};default:{f=+Tb[c[(c[b>>2]|0)+48>>2]&15](b)}}j=f*+g[e+20>>2]+ +g[e+4>>2];k=f*+g[e+24>>2]+ +g[e+8>>2];g[a>>2]=f*+g[e+16>>2]+ +g[e>>2];g[a+4>>2]=j;g[a+8>>2]=k;g[a+12>>2]=0.0;i=e;return}function ap(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0;d=i;c[a+4>>2]=35;c[a+8>>2]=0;g[a+12>>2]=1.0;g[a+16>>2]=1.0;g[a+20>>2]=1.0;g[a+24>>2]=0.0;g[a+44>>2]=.03999999910593033;c[a>>2]=8752;c[a+52>>2]=1;f=+g[b>>2];h=+g[b+4>>2];e=+g[b+8>>2];if(f<h){j=f<e?0:2}else{j=h<e?1:2}e=+g[b+(j<<2)>>2]*.10000000149011612;if(e<.03999999910593033){l=+ol(a);k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);l=l+ +g[a+28>>2];k=k+ +g[a+32>>2];h=h+ +g[a+36>>2];g[a+44>>2]=e;e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);h=h- +Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=l-e;g[a+32>>2]=k-f;g[a+36>>2]=h;g[a+40>>2]=0.0;j=c[a>>2]|0}else{j=8752|0}h=+Tb[c[j+48>>2]&15](a);k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);l=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=+g[b+4>>2]*+g[a+16>>2]-k;l=+g[b+8>>2]*+g[a+20>>2]-l;g[a+28>>2]=+g[b>>2]*+g[a+12>>2]-h;g[a+32>>2]=k;g[a+36>>2]=l;g[a+40>>2]=0.0;c[a+4>>2]=13;i=d;return}function bp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;f=i;k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);o=k+ +g[a+28>>2];m=k+ +g[a+32>>2];k=k+ +g[a+36>>2];w=+P(+(+g[b>>2]));v=+P(+(+g[b+4>>2]));u=+P(+(+g[b+8>>2]));s=+P(+(+g[b+16>>2]));r=+P(+(+g[b+20>>2]));q=+P(+(+g[b+24>>2]));n=+P(+(+g[b+32>>2]));l=+P(+(+g[b+36>>2]));j=+P(+(+g[b+40>>2]));t=+g[b+48>>2];p=+g[b+52>>2];h=+g[b+56>>2];g[d>>2]=t-(o*w+m*v+k*u);g[d+4>>2]=p-(o*s+m*r+k*q);g[d+8>>2]=h-(o*n+m*l+k*j);g[d+12>>2]=0.0;g[e>>2]=o*w+m*v+k*u+t;g[e+4>>2]=o*s+m*r+k*q+p;g[e+8>>2]=o*n+m*l+k*j+h;g[e+12>>2]=0.0;i=f;return}function cp(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0.0,j=0,k=0.0,l=0.0;e=i;i=i+16|0;c[e+0>>2]=c[a+28>>2];c[e+4>>2]=c[a+32>>2];c[e+8>>2]=c[a+36>>2];c[e+12>>2]=c[a+40>>2];l=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[e>>2]=l+ +g[e>>2];g[e+4>>2]=h+ +g[e+4>>2];g[e+8>>2]=k+ +g[e+8>>2];a=c[a+52>>2]|0;if((a|0)==0){f=0;j=1}else if((a|0)==2){f=2;j=0}else{f=1;j=0}h=+g[e+(j<<2)>>2];k=+g[e+(f<<2)>>2];k=b*.25*h*h+b/12.0*k*k*4.0;if((a|0)==0){g[d>>2]=b*.5*h*h;g[d+4>>2]=k;g[d+8>>2]=k;g[d+12>>2]=0.0;i=e;return}else if((a|0)==2){g[d>>2]=k;g[d+4>>2]=k;g[d+8>>2]=b*.5*h*h;g[d+12>>2]=0.0;i=e;return}else{g[d>>2]=k;g[d+4>>2]=b*.5*h*h;g[d+8>>2]=k;g[d+12>>2]=0.0;i=e;return}}function dp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0;d=i;e=+g[b+32>>2];k=+g[b+28>>2];j=+g[c+4>>2];h=+g[c+8>>2];f=+Q(+(j*j+h*h));if(f!=0.0){g[a+4>>2]=j*(e/f);if(+g[c>>2]<0.0){k=-k}g[a>>2]=k;g[a+8>>2]=h*(e/f);i=d;return}else{g[a+4>>2]=e;if(+g[c>>2]<0.0){k=-k}g[a>>2]=k;g[a+8>>2]=0.0;i=d;return}}function ep(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0;d=i;e=+g[b+28>>2];k=+g[b+36>>2];j=+g[c>>2];h=+g[c+4>>2];f=+Q(+(j*j+h*h));if(f!=0.0){g[a>>2]=j*(e/f);if(+g[c+8>>2]<0.0){k=-k}g[a+8>>2]=k;g[a+4>>2]=h*(e/f);i=d;return}else{g[a>>2]=e;if(+g[c+8>>2]<0.0){k=-k}g[a+8>>2]=k;g[a+4>>2]=0.0;i=d;return}}function fp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0;d=i;e=+g[b+28>>2];k=+g[b+32>>2];j=+g[c>>2];h=+g[c+8>>2];f=+Q(+(j*j+h*h));if(f!=0.0){g[a>>2]=j*(e/f);if(+g[c+4>>2]<0.0){k=-k}g[a+4>>2]=k;g[a+8>>2]=h*(e/f);i=d;return}else{g[a>>2]=e;if(+g[c+4>>2]<0.0){k=-k}g[a+4>>2]=k;g[a+8>>2]=0.0;i=d;return}}function gp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0;e=i;if((d|0)<=0){i=e;return}f=0;do{h=+g[a+28>>2];m=+g[a+32>>2];l=+g[b+(f<<4)>>2];k=+g[b+(f<<4)+8>>2];j=+Q(+(l*l+k*k));if(!(j!=0.0)){if(+g[b+(f<<4)+4>>2]<0.0){m=-m;l=h;h=0.0}else{l=h;h=0.0}}else{if(+g[b+(f<<4)+4>>2]<0.0){m=-m}l=l*(h/j);h=k*(h/j)}g[c+(f<<4)>>2]=l;g[c+(f<<4)+4>>2]=m;g[c+(f<<4)+8>>2]=h;f=f+1|0}while((f|0)!=(d|0));i=e;return}function hp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0;e=i;if((d|0)<=0){i=e;return}f=0;do{h=+g[a+28>>2];m=+g[a+36>>2];l=+g[b+(f<<4)>>2];k=+g[b+(f<<4)+4>>2];j=+Q(+(l*l+k*k));if(!(j!=0.0)){if(+g[b+(f<<4)+8>>2]<0.0){m=-m;l=h;h=0.0}else{l=h;h=0.0}}else{if(+g[b+(f<<4)+8>>2]<0.0){m=-m}l=l*(h/j);h=k*(h/j)}g[c+(f<<4)>>2]=l;g[c+(f<<4)+4>>2]=h;g[c+(f<<4)+8>>2]=m;f=f+1|0}while((f|0)!=(d|0));i=e;return}function ip(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0;f=i;if((d|0)<=0){i=f;return}e=0;do{h=+g[a+32>>2];m=+g[a+28>>2];n=b+(e<<4)|0;l=+g[b+(e<<4)+4>>2];j=+g[b+(e<<4)+8>>2];k=+Q(+(l*l+j*j));if(!(k!=0.0)){if(+g[n>>2]<0.0){m=-m;l=h;h=0.0}else{l=h;h=0.0}}else{if(+g[n>>2]<0.0){m=-m}l=l*(h/k);h=j*(h/k)}g[c+(e<<4)>>2]=m;g[c+(e<<4)+4>>2]=l;g[c+(e<<4)+8>>2]=h;e=e+1|0}while((e|0)!=(d|0));i=f;return}function jp(a){a=a|0;return}function kp(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function lp(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;d=i;m=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);o=(m+ +g[a+28>>2])/+g[a+12>>2];l=(j+ +g[a+32>>2])/+g[a+16>>2];h=(e+ +g[a+36>>2])/+g[a+20>>2];n=+P(+(+g[b>>2]));k=+P(+(+g[b+4>>2]));f=+P(+(+g[b+8>>2]));g[a+12>>2]=n;g[a+16>>2]=k;g[a+20>>2]=f;g[a+24>>2]=0.0;g[a+28>>2]=o*n-m;g[a+32>>2]=l*k-j;g[a+36>>2]=h*f-e;g[a+40>>2]=0.0;i=d;return}function mp(a){a=a|0;return 9232}function np(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;g[a+(c[b+52>>2]<<2)>>2]=1.0;i=d;return}function op(a,b){a=a|0;b=+b;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0;d=i;j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=j+ +g[a+28>>2];f=f+ +g[a+32>>2];k=k+ +g[a+36>>2];g[a+44>>2]=b;h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);b=k- +Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=j-h;g[a+32>>2]=f-e;g[a+36>>2]=b;g[a+40>>2]=0.0;i=d;return}function pp(a){a=a|0;return 60}function qp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+52>>2];i=e;return 9208}function rp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;ic[c[(c[b>>2]|0)+68>>2]&63](a,b,d);if(!(+Tb[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0)){i=e;return}f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];k=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:j;l=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:h;f=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:f;j=1.0/+Q(+(k*k+(f*f+l*l)));h=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=j*f*h+ +g[a>>2];g[a+4>>2]=h*j*l+ +g[a+4>>2];g[a+8>>2]=h*j*k+ +g[a+8>>2];i=e;return}function sp(a){a=a|0;var b=0.0,d=0.0,e=0;e=i;d=+g[a+28>>2];b=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);+Tb[c[(c[a>>2]|0)+48>>2]&15](a);+Tb[c[(c[a>>2]|0)+48>>2]&15](a);i=e;return+(d+b)}function tp(a){a=a|0;return}function up(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function vp(a){a=a|0;return 9192}function wp(a){a=a|0;var b=0.0,d=0.0,e=0;e=i;d=+g[a+32>>2];+Tb[c[(c[a>>2]|0)+48>>2]&15](a);b=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);+Tb[c[(c[a>>2]|0)+48>>2]&15](a);i=e;return+(d+b)}function xp(a){a=a|0;return}function yp(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function zp(a){a=a|0;return 9176}function Ap(a){a=a|0;var b=0.0,d=0.0,e=0;e=i;d=+g[a+28>>2];b=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);+Tb[c[(c[a>>2]|0)+48>>2]&15](a);+Tb[c[(c[a>>2]|0)+48>>2]&15](a);i=e;return+(d+b)}function Bp(b){b=b|0;var d=0,e=0;d=i;e=c[b>>2]|0;if((e|0)!=0){Cp(b,e)}e=c[b+4>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+4>>2]=0;c[b+8>>2]=-1;e=c[b+32>>2]|0;if((e|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+16>>2]=0;e=c[b+52>>2]|0;if((e|0)==0){a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;i=d;return}if((a[b+56>>0]|0)==0){a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;i=d;return}c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);e=c[b+32>>2]|0;a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;if((e|0)==0){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;i=d;return}if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;i=d;return}function Cp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((c[b+40>>2]|0)!=0){Cp(a,c[b+36>>2]|0);Cp(a,c[b+40>>2]|0)}if((c[a>>2]|0)==(b|0)){c[a>>2]=0}e=c[a+4>>2]|0;if((e|0)==0){c[a+4>>2]=b;i=d;return}c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);c[a+4>>2]=b;i=d;return}function Dp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;if((b|0)<0){b=c[a+12>>2]|0}j=c[a>>2]|0;if(!((j|0)!=0&(b|0)>0)){i=d;return}while(1){f=j+40|0;a:do{if((c[f>>2]|0)!=0){e=0;while(1){g=(c[a+16>>2]|0)>>>e&1;k=j+32|0;h=c[k>>2]|0;if(h>>>0>j>>>0){l=(c[h+40>>2]|0)==(j|0)|0;m=c[h+((l^1)<<2)+36>>2]|0;n=c[h+32>>2]|0;if((n|0)==0){c[a>>2]=j}else{c[n+(((c[n+40>>2]|0)==(h|0))<<2)+36>>2]=j}c[m+32>>2]=j;c[h+32>>2]=j;c[k>>2]=n;n=j+36|0;c[h+36>>2]=c[n>>2];c[h+40>>2]=c[f>>2];c[(c[n>>2]|0)+32>>2]=h;c[(c[f>>2]|0)+32>>2]=h;c[j+(l<<2)+36>>2]=h;c[j+((l^1)<<2)+36>>2]=m;c[d+0>>2]=c[h+0>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];c[d+16>>2]=c[h+16>>2];c[d+20>>2]=c[h+20>>2];c[d+24>>2]=c[h+24>>2];c[d+28>>2]=c[h+28>>2];c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];c[h+16>>2]=c[j+16>>2];c[h+20>>2]=c[j+20>>2];c[h+24>>2]=c[j+24>>2];c[h+28>>2]=c[j+28>>2];c[j+0>>2]=c[d+0>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];c[j+16>>2]=c[d+16>>2];c[j+20>>2]=c[d+20>>2];c[j+24>>2]=c[d+24>>2];c[j+28>>2]=c[d+28>>2]}else{h=j}j=c[h+(g<<2)+36>>2]|0;if((c[j+40>>2]|0)==0){break a}f=j+40|0;e=e+1&31}}}while(0);if((Fp(a,j)|0)==0){e=0}else{e=c[a>>2]|0}Ep(a,e,j);c[a+16>>2]=(c[a+16>>2]|0)+1;b=b+ -1|0;if((b|0)==0){break}j=c[a>>2]|0}i=d;return}



function Zu(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;c[b>>2]=16824;e=c[b+56>>2]|0;if((e|0)!=0){if((a[b+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;f=c[b+28>>2]|0;if((f|0)>0){g=0;do{h=c[b+36>>2]|0;l=h+(g*36|0)+4|0;k=h+(g*36|0)+12|0;e=c[k>>2]|0;j=h+(g*36|0)+16|0;if((e|0)!=0){if((a[j>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[k>>2]=0}a[j>>0]=1;c[k>>2]=0;c[l>>2]=0;c[h+(g*36|0)+8>>2]=0;g=g+1|0}while((g|0)!=(f|0))}e=c[b+36>>2]|0;if((e|0)!=0){if((a[b+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;e=c[b+16>>2]|0;if((e|0)==0){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;l=b+12|0;c[l>>2]=0;i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;l=b+12|0;c[l>>2]=0;i=d;return}function _u(a){a=a|0;var b=0,d=0,e=0,f=0,h=0.0,j=0.0,k=0.0,l=0,m=0;b=i;d=c[a+28>>2]|0;if((d|0)<=0){a=0;while(1){a=a+1|0;if((a|0)>=8){d=1;break}}i=b;return d|0}e=c[a+36>>2]|0;k=0.0;h=0.0;j=0.0;f=0;a:while(1){switch(f|0){case 0:{k=+g[a+80>>2]+ +g[a+64>>2];h=+g[a+88>>2]+ +g[a+72>>2];j=+g[a+84>>2]+ +g[a+68>>2];break};case 2:{k=+g[a+80>>2]+ +g[a+64>>2];h=+g[a+88>>2]+ +g[a+72>>2];j=+g[a+68>>2]- +g[a+84>>2];break};case 4:{k=+g[a+64>>2]- +g[a+80>>2];h=+g[a+88>>2]+ +g[a+72>>2];j=+g[a+84>>2]+ +g[a+68>>2];break};case 6:{k=+g[a+64>>2]- +g[a+80>>2];h=+g[a+88>>2]+ +g[a+72>>2];j=+g[a+68>>2]- +g[a+84>>2];break};case 7:{k=+g[a+64>>2]- +g[a+80>>2];h=+g[a+72>>2]- +g[a+88>>2];j=+g[a+68>>2]- +g[a+84>>2];break};case 5:{k=+g[a+64>>2]- +g[a+80>>2];h=+g[a+72>>2]- +g[a+88>>2];j=+g[a+84>>2]+ +g[a+68>>2];break};case 1:{k=+g[a+80>>2]+ +g[a+64>>2];h=+g[a+72>>2]- +g[a+88>>2];j=+g[a+84>>2]+ +g[a+68>>2];break};case 3:{k=+g[a+80>>2]+ +g[a+64>>2];h=+g[a+72>>2]- +g[a+88>>2];j=+g[a+68>>2]- +g[a+84>>2];break};default:{}}l=0;do{m=l;l=l+1|0;if(+g[e+(m*36|0)+32>>2]+(k*+g[e+(m*36|0)+20>>2]+j*+g[e+(m*36|0)+24>>2]+h*+g[e+(m*36|0)+28>>2])>0.0){d=0;a=17;break a}}while((l|0)<(d|0));f=f+1|0;if((f|0)>=8){d=1;a=17;break}}if((a|0)==17){i=b;return d|0}return 0}function $u(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0;k=i;i=i+16|0;g[e>>2]=3.4028234663852886e+38;g[f>>2]=-3.4028234663852886e+38;m=c[a+8>>2]|0;if((m|0)>0){n=0;do{s=c[a+16>>2]|0;r=+g[s+(n<<4)>>2];q=+g[s+(n<<4)+4>>2];l=+g[s+(n<<4)+8>>2];p=r*+g[b>>2]+q*+g[b+4>>2]+l*+g[b+8>>2]+ +g[b+48>>2];o=r*+g[b+16>>2]+q*+g[b+20>>2]+l*+g[b+24>>2]+ +g[b+52>>2];l=r*+g[b+32>>2]+q*+g[b+36>>2]+l*+g[b+40>>2]+ +g[b+56>>2];q=p*+g[d>>2]+o*+g[d+4>>2]+l*+g[d+8>>2];if(q<+g[e>>2]){g[e>>2]=q;g[h>>2]=p;g[h+4>>2]=o;g[h+8>>2]=l;g[h+12>>2]=0.0}if(q>+g[f>>2]){g[f>>2]=q;g[j>>2]=p;g[j+4>>2]=o;g[j+8>>2]=l;g[j+12>>2]=0.0}n=n+1|0}while((n|0)!=(m|0));o=+g[f>>2]}else{o=-3.4028234663852886e+38}l=+g[e>>2];if(!(l>o)){i=k;return}g[e>>2]=o;g[f>>2]=l;c[k+0>>2]=c[h+0>>2];c[k+4>>2]=c[h+4>>2];c[k+8>>2]=c[h+8>>2];c[k+12>>2]=c[h+12>>2];c[h+0>>2]=c[j+0>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];i=k;return}function av(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0.0,k=0,l=0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0.0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;h=i;i=i+176|0;c[b+348>>2]=b+220;c[b+352>>2]=b+252;c[b+356>>2]=b+284;c[b+360>>2]=b+316;c[b+364>>2]=4;c[b+368>>2]=0;c[b+376>>2]=0;z=c[e+4>>2]|0;c[b>>2]=c[e>>2];c[b+4>>2]=z;c[b+8>>2]=c[e+8>>2];c[b+12>>2]=c[e+12>>2];c[b+16>>2]=c[e+16>>2];c[b+20>>2]=c[e+20>>2];c[b+24>>2]=c[e+24>>2];c[b+28>>2]=c[e+28>>2];c[b+32>>2]=c[e+32>>2];c[b+36>>2]=c[e+36>>2];c[b+40>>2]=c[e+40>>2];c[b+44>>2]=c[e+44>>2];c[b+48>>2]=c[e+48>>2];c[b+52>>2]=c[e+52>>2];c[b+56>>2]=c[e+56>>2];c[b+60>>2]=c[e+60>>2];c[b+64>>2]=c[e+64>>2];c[b+68>>2]=c[e+68>>2];c[b+72>>2]=c[e+72>>2];c[b+76>>2]=c[e+76>>2];c[b+80>>2]=c[e+80>>2];c[b+84>>2]=c[e+84>>2];c[b+88>>2]=c[e+88>>2];c[b+92>>2]=c[e+92>>2];c[b+96>>2]=c[e+96>>2];c[b+100>>2]=c[e+100>>2];c[b+104>>2]=c[e+104>>2];c[b+108>>2]=c[e+108>>2];c[b+112>>2]=c[e+112>>2];c[b+116>>2]=c[e+116>>2];z=d[e+120>>0]|d[e+121>>0]<<8|d[e+122>>0]<<16|d[e+123>>0]<<24;B=d[e+124>>0]|d[e+125>>0]<<8|d[e+126>>0]<<16|d[e+127>>0]<<24;a[b+120>>0]=z;a[b+121>>0]=z>>8;a[b+122>>0]=z>>16;a[b+123>>0]=z>>24;a[b+124>>0]=B;a[b+125>>0]=B>>8;a[b+126>>0]=B>>16;a[b+127>>0]=B>>24;g[b+144>>2]=0.0;c[b+180>>2]=0;c[b+128>>2]=c[f+0>>2];c[b+132>>2]=c[f+4>>2];c[b+136>>2]=c[f+8>>2];c[b+140>>2]=c[f+12>>2];n=+g[b+128>>2];t=+g[b+132>>2];s=+g[b+136>>2];if(n*n+t*t+s*s>0.0){m=-n;u=-t;v=-s}else{m=1.0;u=0.0;v=0.0}g[b+164>>2]=0.0;c[b+364>>2]=3;c[b+148>>2]=b+316;c[b+180>>2]=1;dv(b,m,u,v,b+316|0);g[b+164>>2]=1.0;e=(c[b+148>>2]|0)+16|0;c[b+128>>2]=c[e+0>>2];c[b+132>>2]=c[e+4>>2];c[b+136>>2]=c[e+8>>2];c[b+140>>2]=c[e+12>>2];c[h+72>>2]=c[e+0>>2];c[h+76>>2]=c[e+4>>2];c[h+80>>2]=c[e+8>>2];c[h+84>>2]=c[e+12>>2];c[h+56>>2]=c[e+0>>2];c[h+60>>2]=c[e+4>>2];c[h+64>>2]=c[e+8>>2];c[h+68>>2]=c[e+12>>2];c[h+40>>2]=c[e+0>>2];c[h+44>>2]=c[e+4>>2];c[h+48>>2]=c[e+8>>2];c[h+52>>2]=c[e+12>>2];c[h+24>>2]=c[e+0>>2];c[h+28>>2]=c[e+4>>2];c[h+32>>2]=c[e+8>>2];c[h+36>>2]=c[e+12>>2];m=0.0;e=1;f=1;A=n*n+t*t+s*s;a:while(1){l=c[b+368>>2]|0;u=+g[b+128>>2];t=+g[b+132>>2];s=+g[b+136>>2];n=+Q(+(u*u+t*t+s*s));if(n<9999999747378752.0e-20){k=5;break}g[b+(l*36|0)+(c[b+(l*36|0)+180>>2]<<2)+164>>2]=0.0;o=(c[b+364>>2]|0)+ -1|0;c[b+364>>2]=o;c[b+(l*36|0)+(c[b+(l*36|0)+180>>2]<<2)+148>>2]=c[b+(o<<2)+348>>2];o=c[b+(l*36|0)+180>>2]|0;c[b+(l*36|0)+180>>2]=o+1;dv(b,-u,-t,-s,c[b+(l*36|0)+(o<<2)+148>>2]|0);o=c[b+(l*36|0)+180>>2]|0;p=c[b+(l*36|0)+(o+ -1<<2)+148>>2]|0;t=+g[p+16>>2];s=+g[p+20>>2];u=+g[p+24>>2];q=0;do{v=t- +g[h+24+(q<<4)>>2];w=s- +g[h+24+(q<<4)+4>>2];x=u- +g[h+24+(q<<4)+8>>2];q=q+1|0;if(v*v+w*w+x*x<9999999747378752.0e-20){k=9;break a}}while(q>>>0<4);B=h+24+(e<<4)|0;c[B+0>>2]=c[p+16>>2];c[B+4>>2]=c[p+20>>2];c[B+8>>2]=c[p+24>>2];c[B+12>>2]=c[p+28>>2];s=(+g[b+128>>2]*t+ +g[b+132>>2]*s+ +g[b+136>>2]*u)/n;m=s>m?s:m;if(n-m-n*9999999747378752.0e-20<=0.0){k=11;break}c[h>>2]=0;if((o|0)==4){q=c[b+(l*36|0)+148>>2]|0;r=c[b+(l*36|0)+152>>2]|0;p=c[b+(l*36|0)+156>>2]|0;o=c[b+(l*36|0)+160>>2]|0;c[h+152>>2]=q+16;c[h+156>>2]=r+16;c[h+160>>2]=p+16;c[h+164>>2]=o+16;u=+g[q+16>>2];v=+g[o+16>>2];s=+g[q+20>>2];w=+g[o+20>>2];t=+g[q+24>>2];x=+g[o+24>>2];g[h+104>>2]=u-v;g[h+108>>2]=s-w;g[h+112>>2]=t-x;g[h+116>>2]=0.0;D=+g[r+16>>2];F=+g[r+20>>2];A=+g[r+24>>2];g[h+120>>2]=D-v;g[h+124>>2]=F-w;g[h+128>>2]=A-x;g[h+132>>2]=0.0;C=+g[p+16>>2];G=+g[p+20>>2];E=+g[p+24>>2];g[h+136>>2]=C-v;g[h+140>>2]=G-w;g[h+144>>2]=E-x;g[h+148>>2]=0.0;n=(s-w)*(A-x)*(C-v)+(t-x)*(D-v)*(G-w)-(G-w)*(A-x)*(u-v)-(s-w)*(D-v)*(E-x)+(E-x)*(u-v)*(F-w)-(C-v)*(t-x)*(F-w);if(!(!(n*(t*((D-C)*(s-F)-(F-G)*(u-D))+(u*((F-G)*(t-A)-(A-E)*(s-F))+s*((A-E)*(u-D)-(D-C)*(t-A))))<=0.0)|(n!=n|0.0!=0.0|n==0.0))){c[h+92>>2]=0;c[h+96>>2]=0;c[h+100>>2]=0;c[h+88>>2]=0;s=s-w;t=t-x;u=u-v;y=0;A=-1.0;while(1){z=c[16880+(y<<2)>>2]|0;E=+g[h+104+(z<<4)+8>>2];F=+g[h+104+(z<<4)+4>>2];G=+g[h+104+(z<<4)>>2];if(n*((s*E-t*F)*v+w*(t*G-E*u)+(F*u-s*G)*x)>0.0?(j=+hv(c[h+152+(y<<2)>>2]|0,c[h+152+(z<<2)>>2]|0,o+16|0,h+92|0,h+88|0),A<0.0|j<A):0){B=c[h+88>>2]|0;c[h>>2]=((B&2|0)==0?0:1<<z)+(B<<1&8)+((B&1|0)==0?0:1<<y);g[h+8+(y<<2)>>2]=+g[h+92>>2];g[h+8+(z<<2)>>2]=+g[h+96>>2];g[h+8+(c[16880+(z<<2)>>2]<<2)>>2]=0.0;g[h+20>>2]=+g[h+100>>2];A=j}y=y+1|0;if((y|0)==3){break}s=+g[h+104+(y<<4)+4>>2];t=+g[h+104+(y<<4)+8>>2];u=+g[h+104+(y<<4)>>2];v=+g[o+16>>2];w=+g[o+20>>2];x=+g[o+24>>2]}if(A<0.0){c[h>>2]=15;A=+g[p+20>>2];s=+g[r+24>>2];F=+g[o+16>>2];w=+g[p+24>>2];t=+g[r+16>>2];v=+g[o+20>>2];C=+g[p+16>>2];D=+g[o+24>>2];u=+g[r+20>>2];g[h+8>>2]=(A*s*F+w*t*v-v*s*C-A*t*D+D*C*u-F*w*u)/n;x=+g[q+20>>2];G=+g[q+24>>2];E=+g[q+16>>2];g[h+12>>2]=(x*w*F+G*C*v-v*w*E-x*C*D+D*E*A-F*G*A)/n;g[h+16>>2]=(u*G*F+s*E*v-v*G*t-u*E*D+D*t*x-F*s*x)/n;g[h+20>>2]=1.0-((u*G*F+s*E*v-v*G*t-u*E*D+D*t*x-F*s*x)/n+((A*s*F+w*t*v-v*s*C-A*t*D+D*C*u-F*w*u)/n+(x*w*F+G*C*v-v*w*E-x*C*D+D*E*A-F*G*A)/n));A=0.0}}else{A=-1.0}}else if((o|0)==2){A=+gv((c[b+(l*36|0)+148>>2]|0)+16|0,(c[b+(l*36|0)+152>>2]|0)+16|0,h+8|0,h)}else if((o|0)==3){A=+hv((c[b+(l*36|0)+148>>2]|0)+16|0,(c[b+(l*36|0)+152>>2]|0)+16|0,(c[b+(l*36|0)+156>>2]|0)+16|0,h+8|0,h)}if(!(A>=0.0)){k=32;break}c[b+((1-l|0)*36|0)+180>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;c[b+368>>2]=1-l;p=c[b+(l*36|0)+180>>2]|0;y=c[h>>2]|0;if((p|0)!=0){q=0;do{o=b+(l*36|0)+(q<<2)+148|0;r=c[o>>2]|0;if((y&1<<q|0)==0){B=c[b+364>>2]|0;c[b+364>>2]=B+1;c[b+(B<<2)+348>>2]=r}else{c[b+((1-l|0)*36|0)+(c[b+((1-l|0)*36|0)+180>>2]<<2)+148>>2]=r;E=+g[h+8+(q<<2)>>2];B=c[b+((1-l|0)*36|0)+180>>2]|0;c[b+((1-l|0)*36|0)+180>>2]=B+1;g[b+((1-l|0)*36|0)+(B<<2)+164>>2]=E;B=c[o>>2]|0;F=E*+g[B+20>>2];G=E*+g[B+24>>2];g[b+128>>2]=+g[B+16>>2]*E+ +g[b+128>>2];g[b+132>>2]=F+ +g[b+132>>2];g[b+136>>2]=G+ +g[b+136>>2]}q=q+1|0}while((q|0)!=(p|0))}if((y|0)==15){c[b+376>>2]=1}if(!(f>>>0<128)){k=34;break}if((c[b+376>>2]|0)!=0){break}e=e+1&3;f=f+1|0}if((k|0)==5){c[b+376>>2]=1}else if((k|0)==9){B=c[b+368>>2]|0;z=(c[b+(B*36|0)+180>>2]|0)+ -1|0;c[b+(B*36|0)+180>>2]=z;z=c[b+(B*36|0)+(z<<2)+148>>2]|0;B=c[b+364>>2]|0;c[b+364>>2]=B+1;c[b+(B<<2)+348>>2]=z}else if((k|0)==11){B=c[b+368>>2]|0;z=(c[b+(B*36|0)+180>>2]|0)+ -1|0;c[b+(B*36|0)+180>>2]=z;z=c[b+(B*36|0)+(z<<2)+148>>2]|0;B=c[b+364>>2]|0;c[b+364>>2]=B+1;c[b+(B<<2)+348>>2]=z}else if((k|0)==32){B=c[b+368>>2]|0;z=(c[b+(B*36|0)+180>>2]|0)+ -1|0;c[b+(B*36|0)+180>>2]=z;z=c[b+(B*36|0)+(z<<2)+148>>2]|0;B=c[b+364>>2]|0;c[b+364>>2]=B+1;c[b+(B<<2)+348>>2]=z}else if((k|0)==34){c[b+376>>2]=2}c[b+372>>2]=b+((c[b+368>>2]|0)*36|0)+148;k=c[b+376>>2]|0;if((k|0)==1){g[b+144>>2]=0.0;i=h;return k|0}else if((k|0)==0){E=+g[b+128>>2];F=+g[b+132>>2];G=+g[b+136>>2];g[b+144>>2]=+Q(+(E*E+F*F+G*G));i=h;return k|0}else{i=h;return k|0}return 0}function bv(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0;b=i;i=i+32|0;d=c[a+372>>2]|0;p=c[d+32>>2]|0;a:do{if((p|0)==1){q=1;p=0;while(1){r=b+16+(p<<2)|0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;g[r>>2]=1.0;r=d+32|0;g[d+(q<<2)+16>>2]=0.0;q=(c[a+364>>2]|0)+ -1|0;c[a+364>>2]=q;c[d+(c[r>>2]<<2)>>2]=c[a+(q<<2)+348>>2];q=c[r>>2]|0;c[r>>2]=q+1;e=+g[b+16>>2];f=+g[b+20>>2];h=+g[b+24>>2];dv(a,e,f,h,c[d+(q<<2)>>2]|0);if(bv(a)|0){a=1;d=19;break}q=c[a+372>>2]|0;r=(c[q+32>>2]|0)+ -1|0;c[q+32>>2]=r;r=c[q+(r<<2)>>2]|0;q=c[a+364>>2]|0;c[a+364>>2]=q+1;c[a+(q<<2)+348>>2]=r;q=c[a+372>>2]|0;g[q+(c[q+32>>2]<<2)+16>>2]=0.0;r=(c[a+364>>2]|0)+ -1|0;c[a+364>>2]=r;c[q+(c[q+32>>2]<<2)>>2]=c[a+(r<<2)+348>>2];r=c[q+32>>2]|0;c[q+32>>2]=r+1;dv(a,-e,-f,-h,c[q+(r<<2)>>2]|0);if(bv(a)|0){a=1;d=19;break}r=c[a+372>>2]|0;q=(c[r+32>>2]|0)+ -1|0;c[r+32>>2]=q;q=c[r+(q<<2)>>2]|0;r=c[a+364>>2]|0;c[a+364>>2]=r+1;c[a+(r<<2)+348>>2]=q;p=p+1|0;if(!(p>>>0<3)){break a}q=c[a+372>>2]|0;d=q;q=c[q+32>>2]|0}if((d|0)==19){i=b;return a|0}}else if((p|0)==3){r=c[d+4>>2]|0;q=c[d>>2]|0;k=+g[q+16>>2];l=+g[r+16>>2]-k;j=+g[q+20>>2];e=+g[r+20>>2]-j;f=+g[q+24>>2];h=+g[r+24>>2]-f;r=c[d+8>>2]|0;k=+g[r+16>>2]-k;j=+g[r+20>>2]-j;f=+g[r+24>>2]-f;if((e*f-h*j)*(e*f-h*j)+(h*k-l*f)*(h*k-l*f)+(l*j-e*k)*(l*j-e*k)>0.0){g[d+28>>2]=0.0;r=(c[a+364>>2]|0)+ -1|0;c[a+364>>2]=r;c[d+(c[d+32>>2]<<2)>>2]=c[a+(r<<2)+348>>2];r=c[d+32>>2]|0;c[d+32>>2]=r+1;dv(a,e*f-h*j,h*k-l*f,l*j-e*k,c[d+(r<<2)>>2]|0);if(bv(a)|0){r=1;i=b;return r|0}q=c[a+372>>2]|0;r=(c[q+32>>2]|0)+ -1|0;c[q+32>>2]=r;r=c[q+(r<<2)>>2]|0;q=c[a+364>>2]|0;c[a+364>>2]=q+1;c[a+(q<<2)+348>>2]=r;q=c[a+372>>2]|0;g[q+(c[q+32>>2]<<2)+16>>2]=0.0;r=(c[a+364>>2]|0)+ -1|0;c[a+364>>2]=r;c[q+(c[q+32>>2]<<2)>>2]=c[a+(r<<2)+348>>2];r=c[q+32>>2]|0;c[q+32>>2]=r+1;dv(a,-(e*f-h*j),-(h*k-l*f),-(l*j-e*k),c[q+(r<<2)>>2]|0);if(bv(a)|0){r=1;i=b;return r|0}else{r=c[a+372>>2]|0;q=(c[r+32>>2]|0)+ -1|0;c[r+32>>2]=q;q=c[r+(q<<2)>>2]|0;r=c[a+364>>2]|0;c[a+364>>2]=r+1;c[a+(r<<2)+348>>2]=q;break}}}else if((p|0)==2){r=c[d+4>>2]|0;d=c[d>>2]|0;e=+g[r+16>>2]- +g[d+16>>2];f=+g[r+20>>2]- +g[d+20>>2];h=+g[r+24>>2]- +g[d+24>>2];d=0;while(1){r=b+(d<<2)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;g[r>>2]=1.0;j=+g[b+8>>2];k=+g[b+4>>2];l=+g[b>>2];if((f*j-h*k)*(f*j-h*k)+(h*l-e*j)*(h*l-e*j)+(e*k-f*l)*(e*k-f*l)>0.0){q=c[a+372>>2]|0;g[q+(c[q+32>>2]<<2)+16>>2]=0.0;r=(c[a+364>>2]|0)+ -1|0;c[a+364>>2]=r;c[q+(c[q+32>>2]<<2)>>2]=c[a+(r<<2)+348>>2];r=c[q+32>>2]|0;c[q+32>>2]=r+1;dv(a,f*j-h*k,h*l-e*j,e*k-f*l,c[q+(r<<2)>>2]|0);if(bv(a)|0){a=1;d=19;break}q=c[a+372>>2]|0;r=(c[q+32>>2]|0)+ -1|0;c[q+32>>2]=r;r=c[q+(r<<2)>>2]|0;q=c[a+364>>2]|0;c[a+364>>2]=q+1;c[a+(q<<2)+348>>2]=r;q=c[a+372>>2]|0;g[q+(c[q+32>>2]<<2)+16>>2]=0.0;r=(c[a+364>>2]|0)+ -1|0;c[a+364>>2]=r;c[q+(c[q+32>>2]<<2)>>2]=c[a+(r<<2)+348>>2];r=c[q+32>>2]|0;c[q+32>>2]=r+1;dv(a,-(f*j-h*k),-(h*l-e*j),-(e*k-f*l),c[q+(r<<2)>>2]|0);if(bv(a)|0){a=1;d=19;break}r=c[a+372>>2]|0;q=(c[r+32>>2]|0)+ -1|0;c[r+32>>2]=q;q=c[r+(q<<2)>>2]|0;r=c[a+364>>2]|0;c[a+364>>2]=r+1;c[a+(r<<2)+348>>2]=q}d=d+1|0;if(!(d>>>0<3)){break a}}if((d|0)==19){i=b;return a|0}}else if((p|0)==4?(r=c[d>>2]|0,q=c[d+12>>2]|0,o=+g[q+16>>2],l=+g[r+16>>2]-o,m=+g[q+20>>2],f=+g[r+20>>2]-m,n=+g[q+24>>2],j=+g[r+24>>2]-n,r=c[d+4>>2]|0,h=+g[r+16>>2]-o,k=+g[r+20>>2]-m,e=+g[r+24>>2]-n,r=c[d+8>>2]|0,o=+g[r+16>>2]-o,m=+g[r+20>>2]-m,n=+g[r+24>>2]-n,!((0.0!=0.0?1:l*k*n+(f*e*o+j*h*m-l*e*m-f*h*n)-j*k*o!=l*k*n+(f*e*o+j*h*m-l*e*m-f*h*n)-j*k*o)|l*k*n+(f*e*o+j*h*m-l*e*m-f*h*n)-j*k*o==0.0)):0){r=1;i=b;return r|0}}while(0);r=0;i=b;return r|0}function cv(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0;k=i;j=c[b+9288>>2]|0;if((j|0)==0){c[b>>2]=5;s=0;i=k;return s|0}s=c[j+48>>2]|0;if((s|0)!=0){c[s+44>>2]=c[j+44>>2]}s=c[j+44>>2]|0;if((s|0)!=0){c[s+48>>2]=c[j+48>>2]}if((c[b+9288>>2]|0)==(j|0)){c[b+9288>>2]=c[j+48>>2]}c[b+9292>>2]=(c[b+9292>>2]|0)+ -1;c[j+44>>2]=0;c[j+48>>2]=c[b+9280>>2];s=c[b+9280>>2]|0;if((s|0)!=0){c[s+44>>2]=j}c[b+9280>>2]=j;c[b+9284>>2]=(c[b+9284>>2]|0)+1;a[j+55>>0]=0;c[j+20>>2]=d;c[j+24>>2]=e;c[j+28>>2]=f;p=+g[d+16>>2];n=+g[e+16>>2]-p;r=+g[d+20>>2];q=+g[e+20>>2]-r;m=+g[d+24>>2];l=+g[e+24>>2]-m;p=+g[f+16>>2]-p;r=+g[f+20>>2]-r;m=+g[f+24>>2]-m;g[j>>2]=q*m-l*r;g[j+4>>2]=l*p-n*m;g[j+8>>2]=n*r-q*p;g[j+12>>2]=0.0;o=+Q(+((q*m-l*r)*(q*m-l*r)+(l*p-n*m)*(l*p-n*m)+(n*r-q*p)*(n*r-q*p)));do{if(o>9999999747378752.0e-20){if((!(fv(q*m-l*r,l*p-n*m,n*r-q*p,+g[d+16>>2],+g[d+20>>2],+g[d+24>>2],+g[e+16>>2],+g[e+20>>2],+g[e+24>>2],j+16|0)|0)?!(fv(+g[j>>2],+g[j+4>>2],+g[j+8>>2],+g[e+16>>2],+g[e+20>>2],+g[e+24>>2],+g[f+16>>2],+g[f+20>>2],+g[f+24>>2],j+16|0)|0):0)?!(fv(+g[j>>2],+g[j+4>>2],+g[j+8>>2],+g[f+16>>2],+g[f+20>>2],+g[f+24>>2],+g[d+16>>2],+g[d+20>>2],+g[d+24>>2],j+16|0)|0):0){g[j+16>>2]=(+g[d+16>>2]*+g[j>>2]+ +g[d+20>>2]*+g[j+4>>2]+ +g[d+24>>2]*+g[j+8>>2])/o}g[j>>2]=1.0/o*+g[j>>2];g[j+4>>2]=1.0/o*+g[j+4>>2];g[j+8>>2]=1.0/o*+g[j+8>>2];if(h){s=j;i=k;return s|0}if(!(+g[j+16>>2]>=-9999999747378752.0e-21)){c[b>>2]=3;break}else{s=j;i=k;return s|0}}else{c[b>>2]=2}}while(0);h=c[j+48>>2]|0;if((h|0)!=0){c[h+44>>2]=c[j+44>>2]}h=c[j+44>>2]|0;if((h|0)!=0){c[h+48>>2]=c[j+48>>2]}if((c[b+9280>>2]|0)==(j|0)){c[b+9280>>2]=c[j+48>>2]}c[b+9284>>2]=(c[b+9284>>2]|0)+ -1;c[j+44>>2]=0;c[j+48>>2]=c[b+9288>>2];h=c[b+9288>>2]|0;if((h|0)!=0){c[h+44>>2]=j}c[b+9288>>2]=j;c[b+9292>>2]=(c[b+9292>>2]|0)+1;s=0;i=k;return s|0}function dv(a,b,e,f,h){a=a|0;b=+b;e=+e;f=+f;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0.0;j=i;i=i+48|0;n=1.0/+Q(+(b*b+e*e+f*f));g[h>>2]=n*b;g[h+4>>2]=n*e;g[h+8>>2]=n*f;g[h+12>>2]=0.0;l=d[a+120>>0]|d[a+121>>0]<<8|d[a+122>>0]<<16|d[a+123>>0]<<24;m=d[a+124>>0]|d[a+125>>0]<<8|d[a+126>>0]<<16|d[a+127>>0]<<24;k=(c[a>>2]|0)+(m>>1)|0;if((m&1|0)!=0){l=c[(c[k>>2]|0)+l>>2]|0}ic[l&63](j,k,h);e=-+g[h>>2];f=-+g[h+4>>2];b=-+g[h+8>>2];l=d[a+120>>0]|d[a+121>>0]<<8|d[a+122>>0]<<16|d[a+123>>0]<<24;m=d[a+124>>0]|d[a+125>>0]<<8|d[a+126>>0]<<16|d[a+127>>0]<<24;k=(c[a+4>>2]|0)+(m>>1)|0;if((m&1|0)!=0){l=c[(c[k>>2]|0)+l>>2]|0}n=+g[a+24>>2]*e+ +g[a+28>>2]*f+ +g[a+32>>2]*b;o=+g[a+40>>2]*e+ +g[a+44>>2]*f+ +g[a+48>>2]*b;g[j+16>>2]=+g[a+8>>2]*e+ +g[a+12>>2]*f+ +g[a+16>>2]*b;g[j+20>>2]=n;g[j+24>>2]=o;g[j+28>>2]=0.0;ic[l&63](j+32|0,k,j+16|0);o=+g[j+32>>2];e=+g[j+36>>2];f=+g[j+40>>2];b=+g[j+4>>2]-(o*+g[a+72>>2]+e*+g[a+76>>2]+f*+g[a+80>>2]+ +g[a+108>>2]);n=+g[j+8>>2]-(o*+g[a+88>>2]+e*+g[a+92>>2]+f*+g[a+96>>2]+ +g[a+112>>2]);g[h+16>>2]=+g[j>>2]-(o*+g[a+56>>2]+e*+g[a+60>>2]+f*+g[a+64>>2]+ +g[a+104>>2]);g[h+20>>2]=b;g[h+24>>2]=n;g[h+28>>2]=0.0;i=j;return}function ev(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0;l=i;if((d[h+55>>0]|0|0)==(e|0)){j=0;i=l;return j|0}m=c[16880+(j<<2)>>2]|0;if(+g[h>>2]*+g[f+16>>2]+ +g[h+4>>2]*+g[f+20>>2]+ +g[h+8>>2]*+g[f+24>>2]- +g[h+16>>2]<-9999999747378752.0e-21){b=cv(b,c[h+(m<<2)+20>>2]|0,c[h+(j<<2)+20>>2]|0,f,0)|0;if((b|0)==0){j=0;i=l;return j|0}a[b+52>>0]=j;c[b+32>>2]=h;a[h+j+52>>0]=0;c[h+(j<<2)+32>>2]=b;h=c[k>>2]|0;if((h|0)==0){c[k+4>>2]=b}else{a[h+53>>0]=2;c[h+36>>2]=b;a[b+54>>0]=1;c[b+40>>2]=h}c[k>>2]=b;c[k+8>>2]=(c[k+8>>2]|0)+1;j=1;i=l;return j|0}j=c[16864+(j<<2)>>2]|0;a[h+55>>0]=e;if(!(ev(b,e,f,c[h+(m<<2)+32>>2]|0,d[h+m+52>>0]|0,k)|0)){j=0;i=l;return j|0}if(!(ev(b,e,f,c[h+(j<<2)+32>>2]|0,d[h+j+52>>0]|0,k)|0)){j=0;i=l;return j|0}k=c[h+48>>2]|0;if((k|0)!=0){c[k+44>>2]=c[h+44>>2]}k=c[h+44>>2]|0;if((k|0)!=0){c[k+48>>2]=c[h+48>>2]}if((c[b+9280>>2]|0)==(h|0)){c[b+9280>>2]=c[h+48>>2]}c[b+9284>>2]=(c[b+9284>>2]|0)+ -1;c[h+44>>2]=0;c[h+48>>2]=c[b+9288>>2];k=c[b+9288>>2]|0;if((k|0)!=0){c[k+44>>2]=h}c[b+9288>>2]=h;c[b+9292>>2]=(c[b+9292>>2]|0)+1;j=1;i=l;return j|0}function fv(a,b,c,d,e,f,h,j,k,l){a=+a;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;j=+j;k=+k;l=l|0;var m=0;m=i;if(!(((h-d)*b-(j-e)*a)*f+(((j-e)*c-(k-f)*b)*d+((k-f)*a-(h-d)*c)*e)<0.0)){l=0;i=m;return l|0}if((h-d)*d+(j-e)*e+(k-f)*f>0.0){g[l>>2]=+Q(+(d*d+e*e+f*f));l=1;i=m;return l|0}if((h-d)*h+(j-e)*j+(k-f)*k<0.0){g[l>>2]=+Q(+(h*h+j*j+k*k));l=1;i=m;return l|0}else{j=((h*h+j*j+k*k)*(d*d+e*e+f*f)-(h*d+j*e+k*f)*(h*d+j*e+k*f))/((h-d)*(h-d)+(j-e)*(j-e)+(k-f)*(k-f));g[l>>2]=+Q(+(j>0.0?j:0.0));l=1;i=m;return l|0}return 0}function gv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0;k=i;l=+g[a>>2];f=+g[b>>2]-l;m=+g[a+4>>2];h=+g[b+4>>2]-m;n=+g[a+8>>2];j=+g[b+8>>2]-n;if(!(f*f+h*h+j*j>0.0)){n=-1.0;i=k;return+n}l=-(l*f+m*h+n*j)/(f*f+h*h+j*j);if(l>=1.0){g[d>>2]=0.0;g[d+4>>2]=1.0;c[e>>2]=2;l=+g[b>>2];m=+g[b+4>>2];n=+g[b+8>>2];n=l*l+m*m+n*n;i=k;return+n}if(!(l<=0.0)){g[d+4>>2]=l;g[d>>2]=1.0-l;c[e>>2]=3;f=f*l+ +g[a>>2];m=h*l+ +g[a+4>>2];n=j*l+ +g[a+8>>2];n=f*f+m*m+n*n;i=k;return+n}else{g[d>>2]=1.0;g[d+4>>2]=0.0;c[e>>2]=1;l=+g[a>>2];m=+g[a+4>>2];n=+g[a+8>>2];n=l*l+m*m+n*n;i=k;return+n}return 0.0}function hv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;u=i;i=i+80|0;c[u+64>>2]=a;c[u+68>>2]=b;c[u+72>>2]=d;r=+g[a>>2];l=+g[b>>2];s=+g[a+4>>2];n=+g[b+4>>2];t=+g[a+8>>2];p=+g[b+8>>2];g[u+16>>2]=r-l;g[u+20>>2]=s-n;g[u+24>>2]=t-p;g[u+28>>2]=0.0;m=+g[d>>2];o=+g[d+4>>2];q=+g[d+8>>2];g[u+32>>2]=l-m;g[u+36>>2]=n-o;g[u+40>>2]=p-q;g[u+44>>2]=0.0;g[u+48>>2]=m-r;g[u+52>>2]=o-s;g[u+56>>2]=q-t;g[u+60>>2]=0.0;k=(s-n)*(p-q)-(t-p)*(n-o);j=(t-p)*(l-m)-(p-q)*(r-l);h=(n-o)*(r-l)-(s-n)*(l-m);if(!(h*h+(k*k+j*j)>0.0)){F=-1.0;i=u;return+F}c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;B=s-n;x=t-p;C=r-l;D=r;E=s;A=t;z=a;y=0;F=-1.0;while(1){if(D*(h*B-j*x)+E*(k*x-h*C)+(j*C-k*B)*A>0.0?(v=c[16880+(y<<2)>>2]|0,w=+gv(z,c[u+64+(v<<2)>>2]|0,u,u+8|0),F<0.0|w<F):0){z=c[u+8>>2]|0;c[f>>2]=((z&1|0)==0?0:1<<y)+((z&2|0)==0?0:1<<v);g[e+(y<<2)>>2]=+g[u>>2];g[e+(v<<2)>>2]=+g[u+4>>2];g[e+(c[16880+(v<<2)>>2]<<2)>>2]=0.0;F=w}y=y+1|0;if((y|0)==3){break}z=c[u+64+(y<<2)>>2]|0;B=+g[u+16+(y<<4)+4>>2];x=+g[u+16+(y<<4)+8>>2];C=+g[u+16+(y<<4)>>2];D=+g[z>>2];E=+g[z+4>>2];A=+g[z+8>>2]}if(!(F<0.0)){i=u;return+F}D=+Q(+(h*h+(k*k+j*j)));F=(k*+g[a>>2]+j*+g[a+4>>2]+h*+g[a+8>>2])/(h*h+(k*k+j*j));c[f>>2]=7;B=+g[b>>2]-k*F;A=+g[b+4>>2]-j*F;E=+g[b+8>>2]-h*F;E=+Q(+((A*(l-m)-B*(n-o))*(A*(l-m)-B*(n-o))+(((n-o)*E-A*(p-q))*((n-o)*E-A*(p-q))+(B*(p-q)-E*(l-m))*(B*(p-q)-E*(l-m)))))/D;g[e>>2]=E;B=+g[d>>2]-k*F;A=+g[d+4>>2]-j*F;C=+g[d+8>>2]-h*F;D=+Q(+((A*(m-r)-B*(o-s))*(A*(m-r)-B*(o-s))+(((o-s)*C-A*(q-t))*((o-s)*C-A*(q-t))+(B*(q-t)-C*(m-r))*(B*(q-t)-C*(m-r)))))/D;g[e+4>>2]=D;g[e+8>>2]=1.0-(D+E);F=h*F*h*F+(k*F*k*F+j*F*j*F);i=u;return+F}function iv(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=c[b+12>>2]|0;d=c[b+32>>2]|0;if((d|0)>=(f|0)){i=e;return}if((d|0)<=(f|0)){if((c[b+36>>2]|0)<(f|0)){if((f|0)==0){h=d;g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[b+32>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+40>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}h=c[b+40>>2]|0;if((h|0)!=0){if((a[b+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=g;c[b+36>>2]=f}else{g=c[b+40>>2]|0}h=d;do{j=g+(h<<2)|0;if((j|0)!=0){c[j>>2]=0}h=h+1|0}while((h|0)!=(f|0))}c[b+32>>2]=f;g=c[b+52>>2]|0;if((g|0)<(f|0)){if((c[b+56>>2]|0)<(f|0)){if((f|0)==0){h=g;j=0}else{c[4336]=(c[4336]|0)+1;h=cw((f<<2|3)+16|0)|0;if((h|0)==0){j=0}else{c[(h+19&-16)+ -4>>2]=h;j=h+19&-16}h=c[b+52>>2]|0}if((h|0)>0){l=0;do{k=j+(l<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+60>>2]|0)+(l<<2)>>2]}l=l+1|0}while((l|0)!=(h|0))}h=c[b+60>>2]|0;if((h|0)!=0){if((a[b+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=j;c[b+56>>2]=f}else{j=c[b+60>>2]|0}do{h=j+(g<<2)|0;if((h|0)!=0){c[h>>2]=0}g=g+1|0}while((g|0)!=(f|0))}c[b+52>>2]=f;if((f|0)>0){jw(c[b+40>>2]|0,-1,f<<2|0)|0;jw(c[b+60>>2]|0,-1,f<<2|0)|0}if((d|0)<=0){i=e;return}h=c[b+16>>2]|0;g=c[b+40>>2]|0;f=c[b+60>>2]|0;j=0;do{l=c[h+(j*12|0)+4>>2]<<16|c[h+(j*12|0)>>2];l=(l+~(l<<15)>>10^l+~(l<<15))*9|0;l=g+((((l>>6^l)+~((l>>6^l)<<11)>>16^(l>>6^l)+~((l>>6^l)<<11))&(c[b+12>>2]|0)+ -1)<<2)|0;c[f+(j<<2)>>2]=c[l>>2];c[l>>2]=j;j=j+1|0}while((j|0)!=(d|0));i=e;return}function jv(a){a=a|0;var b=0;b=i;kv(a);if((a|0)!=0){dw(a)}i=b;return}function kv(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=16928;e=c[b+60>>2]|0;if((e|0)!=0){if((a[b+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;e=c[b+40>>2]|0;if((e|0)!=0){if((a[b+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;e=c[b+16>>2]|0;if((e|0)==0){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;e=b+12|0;c[e>>2]=0;i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;e=b+12|0;c[e>>2]=0;i=d;return}function lv(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=c[b+16>>2]|0;if((e|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;e=c[b+40>>2]|0;if((e|0)!=0){if((a[b+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;e=c[b+60>>2]|0;if((e|0)!=0){if((a[b+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;if((c[b+12>>2]|0)>=2){iv(b);i=d;return}c[4336]=(c[4336]|0)+1;e=cw(43)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}f=c[b+8>>2]|0;if((f|0)>0){h=0;do{g=e+(h*12|0)|0;if((g|0)!=0){j=(c[b+16>>2]|0)+(h*12|0)|0;c[g+0>>2]=c[j+0>>2];c[g+4>>2]=c[j+4>>2];c[g+8>>2]=c[j+8>>2]}h=h+1|0}while((h|0)!=(f|0))}f=c[b+16>>2]|0;if((f|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=e;c[b+12>>2]=2;iv(b);i=d;return}function mv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;c[4224]=(c[4224]|0)+1;k=((d<<16|b)+~((d<<16|b)<<15)>>10^(d<<16|b)+~((d<<16|b)<<15))*9|0;g=c[a+40>>2]|0;k=g+(((c[a+12>>2]|0)+ -1&((k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11)))<<2)|0;l=c[k>>2]|0;if((l|0)==-1){o=0;i=e;return o|0}h=c[a+16>>2]|0;j=l;while(1){if((c[h+(j*12|0)>>2]|0)==(b|0)?(c[h+(j*12|0)+4>>2]|0)==(d|0):0){break}j=c[(c[a+60>>2]|0)+(j<<2)>>2]|0;if((j|0)==-1){a=0;f=22;break}}if((f|0)==22){i=e;return a|0}if((h+(j*12|0)|0)==0){o=0;i=e;return o|0}d=c[h+(j*12|0)+8>>2]|0;j=(j*12|0)/12|0;b=c[a+60>>2]|0;if((l|0)!=(j|0)){while(1){m=b+(l<<2)|0;n=c[m>>2]|0;if((n|0)==(j|0)){break}else{l=n}}n=c[b+(j<<2)>>2]|0;if((l|0)==-1){f=12}else{c[m>>2]=n}}else{n=c[b+(l<<2)>>2]|0;f=12}if((f|0)==12){c[k>>2]=n}l=(c[a+8>>2]|0)+ -1|0;if((l|0)==(j|0)){c[a+8>>2]=j;o=d;i=e;return o|0}k=c[h+(l*12|0)+4>>2]<<16|c[h+(l*12|0)>>2];k=(k+~(k<<15)>>10^k+~(k<<15))*9|0;k=((k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11))&(c[a+12>>2]|0)+ -1;n=c[g+(k<<2)>>2]|0;if((n|0)!=(l|0)){while(1){m=b+(n<<2)|0;o=c[m>>2]|0;if((o|0)==(l|0)){break}else{n=o}}b=c[b+(l<<2)>>2]|0;if((n|0)==-1){f=20}else{c[m>>2]=b}}else{b=c[b+(l<<2)>>2]|0;f=20}if((f|0)==20){c[g+(k<<2)>>2]=b}c[h+(j*12|0)+0>>2]=c[h+(l*12|0)+0>>2];c[h+(j*12|0)+4>>2]=c[h+(l*12|0)+4>>2];c[h+(j*12|0)+8>>2]=c[h+(l*12|0)+8>>2];o=(c[a+40>>2]|0)+(k<<2)|0;c[(c[a+60>>2]|0)+(j<<2)>>2]=c[o>>2];c[o>>2]=j;c[a+8>>2]=(c[a+8>>2]|0)+ -1;o=d;i=e;return o|0}function nv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;c[4226]=(c[4226]|0)+1;g=((e<<16|d)+~((e<<16|d)<<15)>>10^(e<<16|d)+~((e<<16|d)<<15))*9|0;g=(g>>6^g)+~((g>>6^g)<<11)>>16^(g>>6^g)+~((g>>6^g)<<11);h=c[b+12>>2]|0;k=c[(c[b+40>>2]|0)+((h+ -1&g)<<2)>>2]|0;a:do{if(!((k|0)==-1)){j=c[b+16>>2]|0;while(1){if((c[j+(k*12|0)>>2]|0)==(d|0)?(c[j+(k*12|0)+4>>2]|0)==(e|0):0){break}k=c[(c[b+60>>2]|0)+(k<<2)>>2]|0;if((k|0)==-1){break a}}j=j+(k*12|0)|0;if((j|0)!=0){o=j;i=f;return o|0}}}while(0);j=c[b+8>>2]|0;if((j|0)==(h|0)){k=(h|0)==0?1:h<<1;if((h|0)<(k|0)){if((k|0)==0){m=h;l=0}else{c[4336]=(c[4336]|0)+1;l=cw((k*12|3)+16|0)|0;if((l|0)==0){l=0}else{c[(l+19&-16)+ -4>>2]=l;l=l+19&-16}m=c[b+8>>2]|0}if((m|0)>0){n=0;do{o=l+(n*12|0)|0;if((o|0)!=0){p=(c[b+16>>2]|0)+(n*12|0)|0;c[o+0>>2]=c[p+0>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2]}n=n+1|0}while((n|0)!=(m|0))}m=c[b+16>>2]|0;if((m|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[m+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=l;c[b+12>>2]=k;l=c[b+8>>2]|0}else{l=h;k=h}}else{l=j;k=h}c[b+8>>2]=l+1;l=c[b+16>>2]|0;if((h|0)<(k|0)){iv(b);g=(c[b+12>>2]|0)+ -1&g}else{g=h+ -1&g}if((l+(j*12|0)|0)==0){e=0}else{c[l+(j*12|0)>>2]=d;c[l+(j*12|0)+4>>2]=e;c[l+(j*12|0)+8>>2]=0;e=l+(j*12|0)|0}c[e+8>>2]=0;p=(c[b+40>>2]|0)+(g<<2)|0;c[(c[b+60>>2]|0)+(j<<2)>>2]=c[p>>2];c[p>>2]=j;p=e;i=f;return p|0}function ov(a){a=a|0;return c[a+16>>2]|0}function pv(a,b,c,d,e,f,h,j,k,l,m){a=a|0;b=b|0;c=+c;d=+d;e=+e;f=+f;h=+h;j=+j;k=k|0;l=l|0;m=+m;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;n=i;p=+g[a>>2]*f+ +g[a+16>>2]*h+ +g[a+32>>2]*j;q=+g[a+4>>2]*f+ +g[a+20>>2]*h+ +g[a+36>>2]*j;s=+g[a+8>>2]*f+ +g[a+24>>2]*h+ +g[a+40>>2]*j;o=+g[b>>2]*f+ +g[b+16>>2]*h+ +g[b+32>>2]*j;r=+g[b+4>>2]*f+ +g[b+20>>2]*h+ +g[b+36>>2]*j;t=+g[b+8>>2]*f+ +g[b+24>>2]*h+ +g[b+40>>2]*j;u=+g[k+80>>2];if(p<0.0){u=-u}v=+g[k+84>>2];if(q<0.0){v=-v}w=+g[k+88>>2];if(s<0.0){w=-w}x=+g[l+80>>2];if(o<0.0){x=-x}y=+g[l+84>>2];if(r<0.0){y=-y}z=+g[l+88>>2];if(!(t<0.0)){p=p*u;q=q*v;q=p+q;p=s*w;p=q+p;o=o*x;q=r*y;q=o+q;o=t*z;o=q+o;a=k+96|0;q=+g[a>>2];a=p>q;p=a?p:q;a=l+96|0;q=+g[a>>2];a=o>q;z=a?o:q;z=p+z;o=c*f+d*h+e*j+z;j=z-(c*f+d*h+e*j);a=o<j;z=a?o:j;a=!(z>m);i=n;return a|0}z=-z;p=p*u;q=q*v;q=p+q;p=s*w;p=q+p;o=o*x;q=r*y;q=o+q;o=t*z;o=q+o;a=k+96|0;q=+g[a>>2];a=p>q;p=a?p:q;a=l+96|0;q=+g[a>>2];a=o>q;z=a?o:q;z=p+z;o=c*f+d*h+e*j+z;j=z-(c*f+d*h+e*j);a=o<j;z=a?o:j;a=!(z>m);i=n;return a|0}function qv(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;j=+j;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0.0,R=0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0,Y=0.0,Z=0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0;l=i;i=i+64|0;a[l+48>>0]=1;c[l+44>>2]=0;c[l+36>>2]=0;c[l+40>>2]=0;m=c[f+4>>2]|0;if((m|0)>0){c[4336]=(c[4336]|0)+1;n=cw((m<<4|3)+16|0)|0;if((n|0)==0){t=0}else{c[(n+19&-16)+ -4>>2]=n;t=n+19&-16}a[l+48>>0]=1;c[l+44>>2]=t;c[l+40>>2]=m}else{t=0}r=c[d+28>>2]|0;if((r|0)>0){n=c[d+36>>2]|0;G=+g[e>>2];I=+g[e+4>>2];O=+g[e+8>>2];P=+g[e+16>>2];D=+g[e+20>>2];C=+g[e+24>>2];B=+g[e+32>>2];A=+g[e+36>>2];z=+g[e+40>>2];T=+g[b>>2];E=+g[b+4>>2];Q=+g[b+8>>2];m=-1;S=3.4028234663852886e+38;v=0;while(1){U=+g[n+(v*36|0)+20>>2];V=+g[n+(v*36|0)+24>>2];Y=+g[n+(v*36|0)+28>>2];u=(U*G+V*I+Y*O)*T+(U*P+V*D+Y*C)*E+(U*B+V*A+Y*z)*Q<S;m=u?v:m;v=v+1|0;if((v|0)>=(r|0)){break}else{S=u?(U*G+V*I+Y*O)*T+(U*P+V*D+Y*C)*E+(U*B+V*A+Y*z)*Q:S}}if((m|0)>=0){v=c[n+(m*36|0)+4>>2]|0;if((v|0)>0){w=n+(m*36|0)+12|0;u=n+(m*36|0)+20|0;t=n+(m*36|0)+24|0;r=n+(m*36|0)+28|0;Q=D;S=C;T=B;U=A;V=z;x=0;y=f;f=l+32|0;while(1){Z=c[w>>2]|0;H=c[Z+(x<<2)>>2]|0;F=c[d+16>>2]|0;x=x+1|0;Z=c[Z+(((x|0)==(v|0)?0:x)<<2)>>2]|0;$=+g[F+(H<<4)>>2];aa=$- +g[F+(Z<<4)>>2];_=+g[F+(H<<4)+4>>2];ba=_- +g[F+(Z<<4)+4>>2];Y=+g[F+(H<<4)+8>>2];E=Y- +g[F+(Z<<4)+8>>2];B=aa*G+ba*I+E*O;A=aa*P+ba*Q+E*S;E=aa*T+ba*U+E*V;ba=+g[u>>2];aa=+g[t>>2];C=+g[r>>2];z=G*ba+I*aa+O*C;D=P*ba+Q*aa+S*C;C=T*ba+U*aa+V*C;I=($*G+_*I+Y*O+ +g[e+48>>2])*-(A*C-E*D)+($*P+_*Q+Y*S+ +g[e+52>>2])*-(E*z-B*C)+($*T+_*U+Y*V+ +g[e+56>>2])*-(B*D-A*z);F=y+4|0;H=c[F>>2]|0;if((H|0)>=2){N=y+12|0;W=c[N>>2]|0;T=+g[W+(H+ -1<<4)>>2];U=+g[W+(H+ -1<<4)+4>>2];V=+g[W+(H+ -1<<4)+8>>2];K=f+4|0;M=f+8|0;J=f+12|0;L=f+16|0;Y=T*-(A*C-E*D)+U*-(E*z-B*C)+V*-(B*D-A*z)-I;R=0;while(1){P=+g[W+(R<<4)>>2];G=+g[W+(R<<4)+4>>2];Q=+g[W+(R<<4)+8>>2];S=+g[W+(R<<4)+12>>2];O=P*-(A*C-E*D)+G*-(E*z-B*C)+Q*-(B*D-A*z)-I;do{if(Y<0.0){if(O<0.0){W=c[K>>2]|0;if((W|0)==(c[M>>2]|0)?(s=(W|0)==0?1:W<<1,(W|0)<(s|0)):0){if((s|0)==0){X=0}else{c[4336]=(c[4336]|0)+1;W=cw((s<<4|3)+16|0)|0;if((W|0)==0){X=0}else{c[(W+19&-16)+ -4>>2]=W;X=W+19&-16}W=c[K>>2]|0}if((W|0)>0){Z=0;do{ca=X+(Z<<4)|0;da=(c[J>>2]|0)+(Z<<4)|0;c[ca+0>>2]=c[da+0>>2];c[ca+4>>2]=c[da+4>>2];c[ca+8>>2]=c[da+8>>2];c[ca+12>>2]=c[da+12>>2];Z=Z+1|0}while((Z|0)!=(W|0))}W=c[J>>2]|0;if((W|0)!=0){if((a[L>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[W+ -4>>2]|0)}c[J>>2]=0}a[L>>0]=1;c[J>>2]=X;c[M>>2]=s;W=c[K>>2]|0}da=c[J>>2]|0;g[da+(W<<4)>>2]=P;g[da+(W<<4)+4>>2]=G;g[da+(W<<4)+8>>2]=Q;g[da+(W<<4)+12>>2]=S;c[K>>2]=(c[K>>2]|0)+1;break}else{ba=Y/(Y-O);S=T+(P-T)*ba;T=U+(G-U)*ba;U=V+(Q-V)*ba;W=c[K>>2]|0;if((W|0)==(c[M>>2]|0)?(p=(W|0)==0?1:W<<1,(W|0)<(p|0)):0){if((p|0)==0){X=0}else{c[4336]=(c[4336]|0)+1;W=cw((p<<4|3)+16|0)|0;if((W|0)==0){X=0}else{c[(W+19&-16)+ -4>>2]=W;X=W+19&-16}W=c[K>>2]|0}if((W|0)>0){Z=0;do{da=X+(Z<<4)|0;ca=(c[J>>2]|0)+(Z<<4)|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];Z=Z+1|0}while((Z|0)!=(W|0))}W=c[J>>2]|0;if((W|0)!=0){if((a[L>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[W+ -4>>2]|0)}c[J>>2]=0}a[L>>0]=1;c[J>>2]=X;c[M>>2]=p;W=c[K>>2]|0}da=c[J>>2]|0;g[da+(W<<4)>>2]=S;g[da+(W<<4)+4>>2]=T;g[da+(W<<4)+8>>2]=U;g[da+(W<<4)+12>>2]=0.0;c[K>>2]=(c[K>>2]|0)+1;break}}else{if(O<0.0){ba=Y/(Y-O);T=T+(P-T)*ba;U=U+(G-U)*ba;V=V+(Q-V)*ba;X=c[K>>2]|0;if((X|0)==(c[M>>2]|0)?(o=(X|0)==0?1:X<<1,(X|0)<(o|0)):0){if((o|0)==0){W=0}else{c[4336]=(c[4336]|0)+1;W=cw((o<<4|3)+16|0)|0;if((W|0)==0){W=0}else{c[(W+19&-16)+ -4>>2]=W;W=W+19&-16}X=c[K>>2]|0}if((X|0)>0){Z=0;do{da=W+(Z<<4)|0;ca=(c[J>>2]|0)+(Z<<4)|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];Z=Z+1|0}while((Z|0)!=(X|0))}X=c[J>>2]|0;if((X|0)!=0){if((a[L>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[X+ -4>>2]|0)}c[J>>2]=0}a[L>>0]=1;c[J>>2]=W;c[M>>2]=o;X=c[K>>2]|0}W=c[J>>2]|0;g[W+(X<<4)>>2]=T;g[W+(X<<4)+4>>2]=U;g[W+(X<<4)+8>>2]=V;g[W+(X<<4)+12>>2]=0.0;W=(c[K>>2]|0)+1|0;c[K>>2]=W;if((W|0)==(c[M>>2]|0)?(q=(W|0)==0?1:W<<1,(W|0)<(q|0)):0){if((q|0)==0){X=0}else{c[4336]=(c[4336]|0)+1;W=cw((q<<4|3)+16|0)|0;if((W|0)==0){X=0}else{c[(W+19&-16)+ -4>>2]=W;X=W+19&-16}W=c[K>>2]|0}if((W|0)>0){Z=0;do{da=X+(Z<<4)|0;ca=(c[J>>2]|0)+(Z<<4)|0;c[da+0>>2]=c[ca+0>>2];c[da+4>>2]=c[ca+4>>2];c[da+8>>2]=c[ca+8>>2];c[da+12>>2]=c[ca+12>>2];Z=Z+1|0}while((Z|0)!=(W|0))}W=c[J>>2]|0;if((W|0)!=0){if((a[L>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[W+ -4>>2]|0)}c[J>>2]=0}a[L>>0]=1;c[J>>2]=X;c[M>>2]=q;W=c[K>>2]|0}da=c[J>>2]|0;g[da+(W<<4)>>2]=P;g[da+(W<<4)+4>>2]=G;g[da+(W<<4)+8>>2]=Q;g[da+(W<<4)+12>>2]=S;c[K>>2]=(c[K>>2]|0)+1}}}while(0);R=R+1|0;if((R|0)==(H|0)){break}W=c[N>>2]|0;Y=O;T=P;U=G;V=Q}H=c[F>>2]|0}if((H|0)<0){M=y+8|0;J=y+12|0;if((c[M>>2]|0)<0){K=c[J>>2]|0;L=y+16|0;if((K|0)!=0){if((a[L>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[K+ -4>>2]|0)}c[J>>2]=0}a[L>>0]=1;c[J>>2]=0;c[M>>2]=0}do{da=(c[J>>2]|0)+(H<<4)|0;c[da+0>>2]=c[l+16>>2];c[da+4>>2]=c[l+20>>2];c[da+8>>2]=c[l+24>>2];c[da+12>>2]=c[l+28>>2];H=H+1|0}while((H|0)!=0)}c[F>>2]=0;G=+g[e>>2];I=+g[e+4>>2];O=+g[e+8>>2];P=+g[e+16>>2];D=+g[e+20>>2];C=+g[e+24>>2];B=+g[e+32>>2];A=+g[e+36>>2];z=+g[e+40>>2];if((x|0)>=(v|0)){o=e+56|0;d=e+48|0;e=e+52|0;break}else{da=f;Q=D;S=C;T=B;U=A;V=z;f=y;y=da}}}else{o=e+56|0;d=e+48|0;e=e+52|0;u=n+(m*36|0)+20|0;t=n+(m*36|0)+24|0;r=n+(m*36|0)+28|0}$=+g[u>>2];aa=+g[t>>2];ba=+g[r>>2];E=$*G+aa*I+ba*O;C=$*P+aa*D+ba*C;z=$*B+aa*A+ba*z;A=+g[n+(m*36|0)+32>>2]-(E*+g[d>>2]+C*+g[e>>2]+z*+g[o>>2]);m=f+4|0;o=c[m>>2]|0;if((o|0)>0){n=f+12|0;e=0;do{da=c[n>>2]|0;d=da+(e<<4)|0;B=A+(E*+g[d>>2]+C*+g[da+(e<<4)+4>>2]+z*+g[da+(e<<4)+8>>2]);B=!(B<=h)?B:h;if(B<=j){c[l+0>>2]=c[d+0>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2];c[l+12>>2]=c[d+12>>2];hc[c[(c[k>>2]|0)+16>>2]&15](k,b,l,B);o=c[m>>2]|0}e=e+1|0}while((e|0)<(o|0))}t=c[l+44>>2]|0}}if((t|0)==0){i=l;return}if((a[l+48>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[t+ -4>>2]|0)}c[l+44>>2]=0;i=l;return}function rv(a,b,f,j){a=a|0;b=b|0;f=f|0;j=j|0;var k=0.0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0;n=i;i=i+80|0;f=Hb[c[(c[a>>2]|0)+28>>2]&127](a)|0;m=+g[a+4>>2];k=+g[a+8>>2];l=+g[a+12>>2];if((f|0)<=0){i=n;return}j=0;do{Yb[c[(c[a>>2]|0)+16>>2]&3](a,n+76|0,n+52|0,n+64|0,n+56|0,n+72|0,n+68|0,n+48|0,n+60|0,j);o=c[n+64>>2]|0;do{if((o|0)==1){o=c[n+60>>2]|0;if((o|0)==2){if((c[n+48>>2]|0)>0){o=0}else{break}do{t=c[n+72>>2]|0;r=aa(c[n+68>>2]|0,o)|0;s=c[n+76>>2]|0;u=c[n+56>>2]|0;v=aa(u,c[t+r>>2]|0)|0;q=k*+h[s+(v+8)>>3];p=l*+h[s+(v+16)>>3];g[n>>2]=m*+h[s+v>>3];g[n+4>>2]=q;g[n+8>>2]=p;g[n+12>>2]=0.0;v=aa(u,c[t+(r+4)>>2]|0)|0;p=k*+h[s+(v+8)>>3];q=l*+h[s+(v+16)>>3];g[n+16>>2]=m*+h[s+v>>3];g[n+20>>2]=p;g[n+24>>2]=q;g[n+28>>2]=0.0;r=aa(u,c[t+(r+8)>>2]|0)|0;q=k*+h[s+(r+8)>>3];p=l*+h[s+(r+16)>>3];g[n+32>>2]=m*+h[s+r>>3];g[n+36>>2]=q;g[n+40>>2]=p;g[n+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,n,j,o);o=o+1|0}while((o|0)<(c[n+48>>2]|0))}else if((o|0)==5){if((c[n+48>>2]|0)>0){o=0}else{break}do{s=c[n+72>>2]|0;t=aa(c[n+68>>2]|0,o)|0;u=c[n+76>>2]|0;v=c[n+56>>2]|0;r=aa(d[s+t>>0]|0,v)|0;p=k*+h[u+(r+8)>>3];q=l*+h[u+(r+16)>>3];g[n>>2]=m*+h[u+r>>3];g[n+4>>2]=p;g[n+8>>2]=q;g[n+12>>2]=0.0;r=aa(d[s+(t+1)>>0]|0,v)|0;q=k*+h[u+(r+8)>>3];p=l*+h[u+(r+16)>>3];g[n+16>>2]=m*+h[u+r>>3];g[n+20>>2]=q;g[n+24>>2]=p;g[n+28>>2]=0.0;v=aa(d[s+(t+2)>>0]|0,v)|0;p=k*+h[u+(v+8)>>3];q=l*+h[u+(v+16)>>3];g[n+32>>2]=m*+h[u+v>>3];g[n+36>>2]=p;g[n+40>>2]=q;g[n+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,n,j,o);o=o+1|0}while((o|0)<(c[n+48>>2]|0))}else if((o|0)==3){if((c[n+48>>2]|0)>0){o=0}else{break}do{s=c[n+72>>2]|0;t=aa(c[n+68>>2]|0,o)|0;u=c[n+76>>2]|0;v=c[n+56>>2]|0;r=aa(e[s+t>>1]|0,v)|0;p=k*+h[u+(r+8)>>3];q=l*+h[u+(r+16)>>3];g[n>>2]=m*+h[u+r>>3];g[n+4>>2]=p;g[n+8>>2]=q;g[n+12>>2]=0.0;r=aa(e[s+(t+2)>>1]|0,v)|0;q=k*+h[u+(r+8)>>3];p=l*+h[u+(r+16)>>3];g[n+16>>2]=m*+h[u+r>>3];g[n+20>>2]=q;g[n+24>>2]=p;g[n+28>>2]=0.0;v=aa(e[s+(t+4)>>1]|0,v)|0;p=k*+h[u+(v+8)>>3];q=l*+h[u+(v+16)>>3];g[n+32>>2]=m*+h[u+v>>3];g[n+36>>2]=p;g[n+40>>2]=q;g[n+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,n,j,o);o=o+1|0}while((o|0)<(c[n+48>>2]|0))}else{break}}else if((o|0)==0){o=c[n+60>>2]|0;if((o|0)==2){if((c[n+48>>2]|0)>0){o=0}else{break}do{t=c[n+72>>2]|0;v=aa(c[n+68>>2]|0,o)|0;u=c[n+76>>2]|0;s=c[n+56>>2]|0;r=aa(s,c[t+v>>2]|0)|0;p=k*+g[u+(r+4)>>2];q=l*+g[u+(r+8)>>2];g[n>>2]=m*+g[u+r>>2];g[n+4>>2]=p;g[n+8>>2]=q;g[n+12>>2]=0.0;r=aa(s,c[t+(v+4)>>2]|0)|0;q=k*+g[u+(r+4)>>2];p=l*+g[u+(r+8)>>2];g[n+16>>2]=m*+g[u+r>>2];g[n+20>>2]=q;g[n+24>>2]=p;g[n+28>>2]=0.0;v=aa(s,c[t+(v+8)>>2]|0)|0;p=k*+g[u+(v+4)>>2];q=l*+g[u+(v+8)>>2];g[n+32>>2]=m*+g[u+v>>2];g[n+36>>2]=p;g[n+40>>2]=q;g[n+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,n,j,o);o=o+1|0}while((o|0)<(c[n+48>>2]|0))}else if((o|0)==5){if((c[n+48>>2]|0)>0){o=0}else{break}do{s=c[n+72>>2]|0;t=aa(c[n+68>>2]|0,o)|0;u=c[n+76>>2]|0;v=c[n+56>>2]|0;r=aa(d[s+t>>0]|0,v)|0;p=k*+g[u+(r+4)>>2];q=l*+g[u+(r+8)>>2];g[n>>2]=m*+g[u+r>>2];g[n+4>>2]=p;g[n+8>>2]=q;g[n+12>>2]=0.0;r=aa(d[s+(t+1)>>0]|0,v)|0;q=k*+g[u+(r+4)>>2];p=l*+g[u+(r+8)>>2];g[n+16>>2]=m*+g[u+r>>2];g[n+20>>2]=q;g[n+24>>2]=p;g[n+28>>2]=0.0;v=aa(d[s+(t+2)>>0]|0,v)|0;p=k*+g[u+(v+4)>>2];q=l*+g[u+(v+8)>>2];g[n+32>>2]=m*+g[u+v>>2];g[n+36>>2]=p;g[n+40>>2]=q;g[n+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,n,j,o);o=o+1|0}while((o|0)<(c[n+48>>2]|0))}else if((o|0)==3){if((c[n+48>>2]|0)>0){o=0}else{break}do{s=c[n+72>>2]|0;t=aa(c[n+68>>2]|0,o)|0;u=c[n+76>>2]|0;v=c[n+56>>2]|0;r=aa(e[s+t>>1]|0,v)|0;p=k*+g[u+(r+4)>>2];q=l*+g[u+(r+8)>>2];g[n>>2]=m*+g[u+r>>2];g[n+4>>2]=p;g[n+8>>2]=q;g[n+12>>2]=0.0;r=aa(e[s+(t+2)>>1]|0,v)|0;q=k*+g[u+(r+4)>>2];p=l*+g[u+(r+8)>>2];g[n+16>>2]=m*+g[u+r>>2];g[n+20>>2]=q;g[n+24>>2]=p;g[n+28>>2]=0.0;v=aa(e[s+(t+4)>>1]|0,v)|0;p=k*+g[u+(v+4)>>2];q=l*+g[u+(v+8)>>2];g[n+32>>2]=m*+g[u+v>>2];g[n+36>>2]=p;g[n+40>>2]=q;g[n+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,n,j,o);o=o+1|0}while((o|0)<(c[n+48>>2]|0))}else{break}}}while(0);Fb[c[(c[a>>2]|0)+24>>2]&127](a,j);j=j+1|0}while((j|0)!=(f|0));i=n;return}function sv(d,e,f){d=d|0;e=e|0;f=f|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0;j=i;i=i+32|0;m=Hb[c[(c[d>>2]|0)+28>>2]&127](d)|0;c[e+20>>2]=m;c[e>>2]=0;if((m|0)==0){w=e+4|0;v=d+4|0;x=+g[v>>2];g[w>>2]=x;w=d+8|0;x=+g[w>>2];w=e+8|0;g[w>>2]=x;w=d+12|0;x=+g[w>>2];w=e+12|0;g[w>>2]=x;w=d+16|0;x=+g[w>>2];w=e+16|0;g[w>>2]=x;i=j;return 17152}m=Qb[c[(c[f>>2]|0)+16>>2]&31](f,32,m)|0;o=c[m+8>>2]|0;c[e>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,o)|0;n=Hb[c[(c[d>>2]|0)+28>>2]&127](d)|0;if((n|0)>0){p=0;while(1){Yb[c[(c[d>>2]|0)+16>>2]&3](d,j+28|0,j+4|0,j+16|0,j+8|0,j+24|0,j+20|0,j,j+12|0,p);c[o+24>>2]=c[j>>2];c[o+28>>2]=c[j+4>>2];s=o+8|0;r=o+12|0;t=o+16|0;q=o+4|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;u=c[j+12>>2]|0;if((u|0)==3){s=c[j>>2]|0;if((s|0)!=0){s=Qb[c[(c[f>>2]|0)+16>>2]&31](f,8,s)|0;t=c[s+8>>2]|0;c[r>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,t)|0;v=c[j>>2]|0;if((v|0)>0){r=c[j+24>>2]|0;w=c[j+20>>2]|0;u=0;do{y=aa(w,u)|0;b[t+(u<<3)>>1]=b[r+y>>1]|0;b[t+(u<<3)+2>>1]=b[r+(y+2)>>1]|0;b[t+(u<<3)+4>>1]=b[r+(y+4)>>1]|0;u=u+1|0}while((u|0)<(v|0))}Bb[c[(c[f>>2]|0)+20>>2]&31](f,s,17032,1497453121,c[s+8>>2]|0)}}else if((u|0)==2){r=c[j>>2]|0;if((r|0)!=0){r=Qb[c[(c[f>>2]|0)+16>>2]&31](f,4,r*3|0)|0;t=c[r+8>>2]|0;c[s>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,t)|0;if((c[j>>2]|0)>0){u=c[j+24>>2]|0;s=0;do{w=aa(c[j+20>>2]|0,s)|0;y=s*3|0;c[t+(y<<2)>>2]=c[u+w>>2];c[t+(y+1<<2)>>2]=c[u+(w+4)>>2];c[t+(y+2<<2)>>2]=c[u+(w+8)>>2];s=s+1|0}while((s|0)<(c[j>>2]|0))}Bb[c[(c[f>>2]|0)+20>>2]&31](f,r,17016,1497453121,c[r+8>>2]|0)}}else if((u|0)==5?(l=c[j>>2]|0,(l|0)!=0):0){s=Qb[c[(c[f>>2]|0)+16>>2]&31](f,4,l)|0;r=c[s+8>>2]|0;c[t>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,r)|0;if((c[j>>2]|0)>0){t=0;do{w=c[j+24>>2]|0;y=aa(c[j+20>>2]|0,t)|0;a[r+(t<<2)>>0]=a[w+y>>0]|0;a[r+(t<<2)+1>>0]=a[w+(y+1)>>0]|0;a[r+(t<<2)+2>>0]=a[w+(y+2)>>0]|0;t=t+1|0}while((t|0)<(c[j>>2]|0))}Bb[c[(c[f>>2]|0)+20>>2]&31](f,s,17064,1497453121,c[s+8>>2]|0)}r=c[j+16>>2]|0;if((r|0)==1){r=c[j+4>>2]|0;if((r|0)!=0){s=Qb[c[(c[f>>2]|0)+16>>2]&31](f,32,r)|0;r=c[s+8>>2]|0;c[q>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,r)|0;v=c[j+4>>2]|0;if((v|0)>0){t=c[j+28>>2]|0;u=c[j+8>>2]|0;q=0;do{y=aa(u,q)|0;h[r+(q<<5)>>3]=+h[t+y>>3];h[r+(q<<5)+8>>3]=+h[t+(y+8)>>3];h[r+(q<<5)+16>>3]=+h[t+(y+16)>>3];q=q+1|0}while((q|0)<(v|0))}Bb[c[(c[f>>2]|0)+20>>2]&31](f,s,17112,1497453121,c[s+8>>2]|0)}}else if((r|0)==0?(k=c[j+4>>2]|0,(k|0)!=0):0){t=Qb[c[(c[f>>2]|0)+16>>2]&31](f,16,k)|0;r=c[t+8>>2]|0;c[o>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,r)|0;u=c[j+4>>2]|0;if((u|0)>0){s=c[j+28>>2]|0;v=c[j+8>>2]|0;q=0;do{y=aa(v,q)|0;g[r+(q<<4)>>2]=+g[s+y>>2];g[r+(q<<4)+4>>2]=+g[s+(y+4)>>2];g[r+(q<<4)+8>>2]=+g[s+(y+8)>>2];q=q+1|0}while((q|0)<(u|0))}Bb[c[(c[f>>2]|0)+20>>2]&31](f,t,17088,1497453121,c[t+8>>2]|0)}Fb[c[(c[d>>2]|0)+24>>2]&127](d,p);p=p+1|0;if((p|0)==(n|0)){k=f;break}else{o=o+32|0}}}else{k=f}Bb[c[(c[k>>2]|0)+20>>2]&31](f,m,17136,1497453121,c[m+8>>2]|0);y=e+4|0;w=d+4|0;x=+g[w>>2];g[y>>2]=x;y=d+8|0;x=+g[y>>2];y=e+8|0;g[y>>2]=x;y=d+12|0;x=+g[y>>2];y=e+12|0;g[y>>2]=x;y=d+16|0;x=+g[y>>2];y=e+16|0;g[y>>2]=x;i=j;return 17152}function tv(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=17232;e=c[b+32>>2]|0;if((e|0)==0){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0}else{if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function uv(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=17232;e=c[b+32>>2]|0;if((e|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;i=d;return}function vv(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;a=c[a+32>>2]|0;c[d>>2]=c[a+(k<<5)+12>>2];c[b>>2]=c[a+(k<<5)+16>>2];c[e>>2]=c[a+(k<<5)+28>>2];c[f>>2]=c[a+(k<<5)+20>>2];c[i>>2]=c[a+(k<<5)>>2];c[g>>2]=c[a+(k<<5)+4>>2];c[h>>2]=c[a+(k<<5)+8>>2];c[j>>2]=c[a+(k<<5)+24>>2];return}function wv(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;a=c[a+32>>2]|0;c[d>>2]=c[a+(k<<5)+12>>2];c[b>>2]=c[a+(k<<5)+16>>2];c[e>>2]=c[a+(k<<5)+28>>2];c[f>>2]=c[a+(k<<5)+20>>2];c[i>>2]=c[a+(k<<5)>>2];c[g>>2]=c[a+(k<<5)+4>>2];c[h>>2]=c[a+(k<<5)+8>>2];c[j>>2]=c[a+(k<<5)+24>>2];return}function xv(a){a=a|0;return(c[a+48>>2]|0)==1|0}function yv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;c[a+52>>2]=c[b+0>>2];c[a+56>>2]=c[b+4>>2];c[a+60>>2]=c[b+8>>2];c[a+64>>2]=c[b+12>>2];c[a+68>>2]=c[d+0>>2];c[a+72>>2]=c[d+4>>2];c[a+76>>2]=c[d+8>>2];c[a+80>>2]=c[d+12>>2];c[a+48>>2]=1;i=e;return}function zv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;c[b+0>>2]=c[a+52>>2];c[b+4>>2]=c[a+56>>2];c[b+8>>2]=c[a+60>>2];c[b+12>>2]=c[a+64>>2];c[d+0>>2]=c[a+68>>2];c[d+4>>2]=c[a+72>>2];c[d+8>>2]=c[a+76>>2];c[d+12>>2]=c[a+80>>2];i=e;return}function Av(a,b){a=a|0;b=b|0;return}function Bv(a,b){a=a|0;b=b|0;return}function Cv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=c[g+16>>2]|0;if((j|0)!=(f|0)){l=f-j|0;i=h;return l|0}if((f|0)==0){l=0;i=h;return l|0}l=c[g+8>>2]|0;n=c[g+12>>2]|0;k=xw(l|0,0,a|0,0)|0;j=E;p=xw(n|0,0,a|0,0)|0;m=E;l=xw(l|0,0,b|0,0)|0;a=E;n=xw(n|0,0,b|0,0)|0;o=E;b=lw(p|0,0,l|0,0)|0;l=E;o=lw(m|0,0,n|0,o|0)|0;a=lw(o|0,E|0,a|0,0)|0;l=lw(a|0,E|0,l|0,0)|0;a=E;j=lw(0,b|0,k|0,j|0)|0;k=E;b=lw(l|0,a|0,(k>>>0<b>>>0|(k|0)==(b|0)&j>>>0<0)&1|0,0)|0;a=E;l=c[g>>2]|0;o=c[g+4>>2]|0;n=xw(l|0,0,d|0,0)|0;g=E;m=xw(o|0,0,d|0,0)|0;p=E;l=xw(l|0,0,e|0,0)|0;d=E;o=xw(o|0,0,e|0,0)|0;e=E;l=lw(m|0,0,l|0,0)|0;m=E;e=lw(p|0,0,o|0,e|0)|0;e=lw(e|0,E|0,d|0,0)|0;m=lw(e|0,E|0,m|0,0)|0;e=E;g=lw(0,l|0,n|0,g|0)|0;d=E;l=lw(m|0,e|0,(d>>>0<l>>>0|(d|0)==(l|0)&g>>>0<0)&1|0,0)|0;e=E;if(!(a>>>0<e>>>0|(a|0)==(e|0)&b>>>0<l>>>0)){if(!(a>>>0>e>>>0|(a|0)==(e|0)&b>>>0>l>>>0)){if(k>>>0<d>>>0|(k|0)==(d|0)&j>>>0<g>>>0){a=-1}else{a=(k>>>0>d>>>0|(k|0)==(d|0)&j>>>0>g>>>0)&1}}else{a=1}}else{a=-1}p=aa(a,f)|0;i=h;return p|0}function Dv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=c[a+8>>2]|0;if((d|0)==0){g=c[a+4>>2]|0;if((g|0)==0){c[4336]=(c[4336]|0)+1;d=cw(31)|0;if((d|0)!=0?(e=d+19&-16,c[e+ -4>>2]=d,(d+19&-16|0)!=0):0){h=c[a+12>>2]|0;c[e+4>>2]=h;c[e+8>>2]=0;c[4336]=(c[4336]|0)+1;e=cw((h*24|3)+16|0)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[(d+19&-16)>>2]=e;g=d+19&-16}else{g=0}c[g+8>>2]=c[a>>2];c[a>>2]=g}else{c[a+4>>2]=c[g+8>>2]}h=c[g+4>>2]|0;if((h|0)>0){d=0;e=c[g>>2]|0;do{d=d+1|0;f=e;e=e+24|0;c[f>>2]=(d|0)<(h|0)?e:0}while((d|0)!=(h|0))}d=c[g>>2]|0;c[a+8>>2]=c[d>>2];if((d|0)==0){h=0;i=b;return h|0}}else{c[a+8>>2]=c[d>>2]}c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;h=d;i=b;return h|0}function Ev(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0;f=i;i=i+144|0;do{if((d-b|0)==2){g=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;h=c[g+88>>2]|0;k=c[g+200>>2]|0;l=c[g+92>>2]|0;n=c[g+204>>2]|0;if((h|0)==(k|0)){if((l|0)==(n|0)){if((c[g+96>>2]|0)==(c[g+208>>2]|0)){break}else{m=l}}else{m=n}if((l|0)==(m|0)){k=(c[g+96>>2]|0)>(c[g+208>>2]|0);h=k?g+112|0:g;c[h>>2]=h;c[h+4>>2]=h;c[e>>2]=h;c[e+4>>2]=h;c[e+8>>2]=h;c[e+12>>2]=h;g=k?g:g+112|0}else{n=0;j=9}}else{m=n;n=(l|0)==(n|0);j=9}do{if((j|0)==9){j=l-m|0;c[g>>2]=g+112;c[g+4>>2]=g+112;c[g+112>>2]=g;c[g+116>>2]=g;if((h-k|0)>=0?!((h|0)==(k|0)&(j|0)<0):0){c[e>>2]=g+112;c[e+4>>2]=g}else{c[e>>2]=g;c[e+4>>2]=g+112}if((j|0)<0|n&(h-k|0)<0){c[e+8>>2]=g;c[e+12>>2]=g+112;h=g;g=g+112|0;break}else{c[e+8>>2]=g+112;c[e+12>>2]=g;h=g;g=g+112|0;break}}}while(0);j=Dv(a+48|0)|0;k=Dv(a+48|0)|0;c[j+8>>2]=k;c[k+8>>2]=j;c[j+20>>2]=c[a+100>>2];c[k+20>>2]=c[a+100>>2];c[j+12>>2]=g;c[k+12>>2]=h;c[j+16>>2]=0;c[k+16>>2]=0;k=c[a+116>>2]|0;c[a+116>>2]=k+1;if((k|0)>=(c[a+120>>2]|0)){c[a+120>>2]=k+1}c[j>>2]=j;c[j+4>>2]=j;c[h+8>>2]=j;J=c[j+8>>2]|0;c[J>>2]=J;c[J+4>>2]=J;c[g+8>>2]=J;i=f;return}else if((d-b|0)==1){g=c[(c[a+92>>2]|0)+(b<<2)>>2]|0}else if((d-b|0)==0){c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;i=f;return}else{k=((d-b|0)/2|0)+b|0;x=c[a+92>>2]|0;t=c[x+(k+ -1<<2)>>2]|0;v=c[t+88>>2]|0;w=c[t+92>>2]|0;t=c[t+96>>2]|0;a:do{if((k|0)<(d|0)){y=k;while(1){z=c[x+(y<<2)>>2]|0;if((c[z+88>>2]|0)!=(v|0)){u=y;break a}if((c[z+92>>2]|0)!=(w|0)){u=y;break a}u=y+1|0;if((c[z+96>>2]|0)!=(t|0)){u=y;break a}if((u|0)<(d|0)){y=u}else{break}}}else{u=k}}while(0);Ev(a,b,k,e);c[f+96>>2]=0;c[f+100>>2]=0;c[f+104>>2]=0;c[f+108>>2]=0;Ev(a,u,d,f+96|0);d=f+100|0;v=c[d>>2]|0;if((v|0)==0){i=f;return}if((c[e+4>>2]|0)==0){c[e+0>>2]=c[f+96>>2];c[e+4>>2]=c[f+100>>2];c[e+8>>2]=c[f+104>>2];c[e+12>>2]=c[f+108>>2];i=f;return}c[a+100>>2]=(c[a+100>>2]|0)+ -1;k=c[e+12>>2]|0;b=c[f+104>>2]|0;u=c[k+88>>2]|0;b:do{if((u|0)==(c[b+88>>2]|0)?(c[k+92>>2]|0)==(c[b+92>>2]|0):0){t=c[b+4>>2]|0;if((t|0)==(b|0)){e=c[b+8>>2]|0;if((e|0)!=0){b=c[e+12>>2]|0;u=c[b+88>>2]|0}e=b;x=u+1|0;u=c[b+96>>2]|0;break}j=c[b>>2]|0;c[t>>2]=j;c[j+4>>2]=t;c:do{if((b|0)==(c[f+96>>2]|0)){k=c[j+88>>2]|0;u=c[t+88>>2]|0;do{if((k|0)>=(u|0)){if((k|0)==(u|0)?(c[j+92>>2]|0)<(c[t+92>>2]|0):0){break}c[f+96>>2]=t;break c}}while(0);c[f+96>>2]=j}}while(0);v=c[d>>2]|0;if((b|0)==(v|0)){k=c[j+88>>2]|0;b=c[t+88>>2]|0;do{if((k|0)<=(b|0)){if((k|0)==(b|0)?(c[j+92>>2]|0)>(c[t+92>>2]|0):0){break}c[d>>2]=t;v=t;j=45;break b}}while(0);c[d>>2]=j;v=j;j=45}else{j=45}}else{j=45}}while(0);if((j|0)==45){b=c[f+96>>2]|0;u=0;t=1;w=e+4|0;k=0;j=0;d:while(1){z=c[w>>2]|0;while(1){w=c[z+88>>2]|0;y=aa((c[v+88>>2]|0)-w|0,t)|0;e:do{if((y|0)<=0){if((y|0)>=0){B=c[z+92>>2]|0;x=(u|0)!=0;f:do{if(x){y=z;while(1){A=c[y>>2]|0;if((A|0)==(z|0)){z=y;break f}if((c[A+88>>2]|0)!=(w|0)){z=y;break f}J=B;B=c[A+92>>2]|0;if((B|0)>(J|0)){z=y;break}else{y=A}}}else{y=z;while(1){A=c[y+4>>2]|0;if((A|0)==(z|0)){z=y;break f}if((c[A+88>>2]|0)!=(w|0)){z=y;break f}J=B;B=c[A+92>>2]|0;if((B|0)>(J|0)){z=y;break}else{y=A}}}}while(0);y=c[v+92>>2]|0;if(x){x=v;while(1){A=c[x+4>>2]|0;if((A|0)==(v|0)){break e}if((c[A+88>>2]|0)!=(w|0)){break e}J=y;y=c[A+92>>2]|0;if((y|0)<(J|0)){break e}else{x=A}}}else{x=v;while(1){A=c[x>>2]|0;if((A|0)==(v|0)){break e}if((c[A+88>>2]|0)!=(w|0)){break e}J=y;y=c[A+92>>2]|0;if((y|0)<(J|0)){break e}else{x=A}}}}w=c[v+92>>2]|0;D=c[z+92>>2]|0;if((u|0)==0){while(1){x=c[v>>2]|0;A=(x|0)==(v|0);B=v+88|0;F=D;while(1){G=z+88|0;C=w-F|0;if(!A?(r=c[x+88>>2]|0,p=aa(r-(c[B>>2]|0)|0,t)|0,q=c[x+92>>2]|0,l=q-w|0,(l|0)>-1):0){if((p|0)==0){break}if((p|0)<0?(aa(l,y)|0)<=(aa(p,C)|0):0){break}}D=c[z>>2]|0;if((D|0)==(z|0)){x=v;break e}J=c[D+88>>2]|0;G=aa(J-(c[G>>2]|0)|0,t)|0;H=c[D+92>>2]|0;F=H-F|0;I=y;y=aa((c[B>>2]|0)-J|0,t)|0;if(!((y|0)<0&(F|0)>0)){x=v;break e}if((G|0)==0){F=H;z=D;continue}if((G|0)>=0){x=v;break e}if((aa(F,I)|0)>=(aa(G,C)|0)){x=v;break e}else{F=H;z=D}}D=F;w=q;y=aa(r-(c[G>>2]|0)|0,t)|0;v=x}}else{while(1){B=c[v+4>>2]|0;x=(B|0)==(v|0);A=v+88|0;while(1){G=z+88|0;C=w-D|0;if(!x?(o=c[B+88>>2]|0,s=aa(o-(c[A>>2]|0)|0,t)|0,n=c[B+92>>2]|0,m=n-w|0,(m|0)>-1):0){if((s|0)==0){break}if((s|0)<0?(aa(m,y)|0)<=(aa(s,C)|0):0){break}}F=c[z+4>>2]|0;if((F|0)==(z|0)){x=v;break e}J=c[F+88>>2]|0;H=aa(J-(c[G>>2]|0)|0,t)|0;G=c[F+92>>2]|0;D=G-D|0;I=y;y=aa((c[A>>2]|0)-J|0,t)|0;if(!((y|0)<0&(D|0)>0)){x=v;break e}if((H|0)==0){D=G;z=F;continue}if((H|0)>=0){x=v;break e}if((aa(D,I)|0)>=(aa(H,C)|0)){x=v;break e}else{D=G;z=F}}w=n;y=aa(o-(c[G>>2]|0)|0,t)|0;v=B}}}else{w=(u|0)!=0;x=c[v+92>>2]|0;C=z;while(1){z=v+88|0;F=C+88|0;B=c[C+92>>2]|0;G=x-B|0;A=c[(w?C:C+4|0)>>2]|0;g:do{if((A|0)==(C|0)){B=y;A=C}else{D=y;while(1){I=c[A+88>>2]|0;J=aa(I-(c[F>>2]|0)|0,t)|0;H=B;B=c[A+92>>2]|0;H=B-H|0;if((H|0)>=1){B=D;A=C;break g}if((J|0)!=0){if((J|0)>=0){B=D;A=C;break g}if((aa(H,D)|0)>(aa(J,G)|0)){B=D;A=C;break g}}D=aa((c[z>>2]|0)-I|0,t)|0;F=A+88|0;G=x-B|0;C=c[(w?A:A+4|0)>>2]|0;if((C|0)==(A|0)){B=D;break}else{J=A;A=C;C=J}}}}while(0);D=c[(w?v:v+4|0)>>2]|0;if((D|0)==(v|0)){z=A;x=v;break e}y=c[D+88>>2]|0;C=aa(y-(c[z>>2]|0)|0,t)|0;z=x;x=c[D+92>>2]|0;z=x-z|0;y=aa(y-(c[F>>2]|0)|0,t)|0;if(!((y|0)>0&(z|0)<0)){z=A;x=v;break e}if((C|0)==0){C=A;v=D;continue}if((C|0)>=0){z=A;x=v;break e}if((aa(z,B)|0)>=(aa(C,G)|0)){z=A;x=v;break}else{C=A;v=D}}}}while(0);if((u|0)==0){u=1;t=-1;w=e;k=z;v=b;j=x;continue d}u=u+1|0;if((u|0)==2){break d}else{v=x}}}c[z+4>>2]=x;c[x>>2]=z;c[k>>2]=j;c[j+4>>2]=k;l=c[f+96>>2]|0;if((c[l+88>>2]|0)<(c[(c[e>>2]|0)+88>>2]|0)){c[e>>2]=l}l=c[d>>2]|0;if((c[l+88>>2]|0)>=(c[(c[e+4>>2]|0)+88>>2]|0)){c[e+4>>2]=l}c[e+12>>2]=c[f+108>>2];r=c[j+88>>2]|0;v=c[k+88>>2]|0;b=c[j+92>>2]|0;d=c[k+92>>2]|0;m=c[j+96>>2]|0;u=c[k+96>>2]|0;e=((b-d|0)<0)<<31>>31;s=0-(r-v)|0;q=iw(0,0,s|0,((s|0)<0)<<31>>31|0)|0;q=xw(m-u|0,((m-u|0)<0)<<31>>31|0,q|0,E|0)|0;p=E;o=xw(m-u|0,((m-u|0)<0)<<31>>31|0,b-d|0,e|0)|0;n=E;w=xw(r-v|0,((r-v|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;t=E;l=xw(b-d|0,e|0,b-d|0,e|0)|0;l=iw(w|0,t|0,l|0,E|0)|0;t=E;w=c[k+8>>2]|0;c[f+140>>2]=0;if((w|0)==0){A=0}else{x=iw(0,0,b-d|0,e|0)|0;y=E;A=0;z=w;do{F=c[z+12>>2]|0;C=c[F+88>>2]|0;D=c[F+92>>2]|0;F=c[F+96>>2]|0;H=xw(D-d|0,((D-d|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;J=E;I=xw(C-v|0,((C-v|0)<0)<<31>>31|0,x|0,y|0)|0;do{if((H|0)==(I|0)&(J|0)==(E|0)?(I=xw(C-v|0,((C-v|0)<0)<<31>>31|0,q|0,p|0)|0,H=E,J=xw(D-d|0,((D-d|0)<0)<<31>>31|0,o|0,n|0)|0,H=lw(J|0,E|0,I|0,H|0)|0,I=E,J=xw(F-u|0,((F-u|0)<0)<<31>>31|0,l|0,t|0)|0,J=lw(H|0,I|0,J|0,E|0)|0,I=E,(I|0)>0|(I|0)==0&J>>>0>0):0){if((A|0)!=0){B=(c[A+4>>2]|0)==(z|0);if((c[A>>2]|0)==(z|0)){if(!B){break}I=c[A+12>>2]|0;G=c[(c[z+8>>2]|0)+12>>2]|0;J=c[G+88>>2]|0;H=c[G+92>>2]|0;G=c[G+96>>2]|0;B=(c[I+96>>2]|0)-G|0;H=(aa(F-G|0,(c[I+92>>2]|0)-H|0)|0)-(aa(B,D-H|0)|0)|0;J=(aa(B,C-J|0)|0)-(aa(F-G|0,(c[I+88>>2]|0)-J|0)|0)|0;H=xw(H|0,((H|0)<0)<<31>>31|0,b-d|0,e|0)|0;I=E;J=xw(J|0,((J|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;J=lw(H|0,I|0,J|0,E|0)|0;I=E;B=(I|0)>0|(I|0)==0&J>>>0>0?2:1}else{B=B&1}if((B|0)!=1){break}}c[f+140>>2]=z;A=z}}while(0);z=c[z>>2]|0}while((z|0)!=(w|0))}x=c[j+8>>2]|0;c[f+136>>2]=0;if((x|0)==0){z=0}else{u=iw(0,0,b-d|0,e|0)|0;v=E;z=0;w=x;do{y=c[w+12>>2]|0;C=c[y+88>>2]|0;B=c[y+92>>2]|0;y=c[y+96>>2]|0;H=xw(B-b|0,((B-b|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0;J=E;I=xw(C-r|0,((C-r|0)<0)<<31>>31|0,u|0,v|0)|0;do{if((H|0)==(I|0)&(J|0)==(E|0)?(I=xw(C-r|0,((C-r|0)<0)<<31>>31|0,q|0,p|0)|0,H=E,J=xw(B-b|0,((B-b|0)<0)<<31>>31|0,o|0,n|0)|0,H=lw(J|0,E|0,I|0,H|0)|0,I=E,J=xw(y-m|0,((y-m|0)<0)<<31>>31|0,l|0,t|0)|0,J=lw(H|0,I|0,J|0,E|0)|0,I=E,(I|0)>0|(I|0)==0&J>>>0>0):0){if((z|0)!=0){if((c[z>>2]|0)!=(w|0)){break}if((c[z+4>>2]|0)==(w|0)?(I=c[z+12>>2]|0,G=c[(c[w+8>>2]|0)+12>>2]|0,J=c[G+88>>2]|0,H=c[G+92>>2]|0,G=c[G+96>>2]|0,F=(c[I+96>>2]|0)-G|0,H=(aa(y-G|0,(c[I+92>>2]|0)-H|0)|0)-(aa(F,B-H|0)|0)|0,J=(aa(F,C-J|0)|0)-(aa(y-G|0,(c[I+88>>2]|0)-J|0)|0)|0,H=xw(H|0,((H|0)<0)<<31>>31|0,b-d|0,e|0)|0,I=E,J=xw(J|0,((J|0)<0)<<31>>31|0,s|0,((s|0)<0)<<31>>31|0)|0,J=lw(H|0,I|0,J|0,E|0)|0,I=E,!((I|0)>0|(I|0)==0&J>>>0>0)):0){break}}c[f+136>>2]=w;z=w}}while(0);w=c[w>>2]|0}while((w|0)!=(x|0))}if(!((A|0)==0&(z|0)==0)){Gv(a,k,j,f+140|0,f+136|0);e=c[f+140>>2]|0;if((e|0)!=0){k=c[e+12>>2]|0}e=c[f+136>>2]|0;if((e|0)!=0){j=c[e+12>>2]|0}}e=j;x=c[j+88>>2]|0;u=(c[j+96>>2]|0)+1|0}t=c[e+92>>2]|0;j=t;l=k;p=e;m=0;d=0;z=1;r=0;b=0;s=0;v=0;n=0;q=0;while(1){y=l+88|0;G=(c[p+88>>2]|0)-(c[y>>2]|0)|0;J=l+92|0;o=j-(c[J>>2]|0)|0;F=l+96|0;C=(c[p+96>>2]|0)-(c[F>>2]|0)|0;c[f+120>>2]=G;c[f+124>>2]=o;c[f+128>>2]=C;c[f+132>>2]=-1;y=x-(c[y>>2]|0)|0;J=t-(c[J>>2]|0)|0;F=u-(c[F>>2]|0)|0;D=(aa(C,J)|0)-(aa(o,F)|0)|0;F=(aa(G,F)|0)-(aa(C,y)|0)|0;J=(aa(o,y)|0)-(aa(G,J)|0)|0;c[f+72>>2]=D;c[f+76>>2]=((D|0)<0)<<31>>31;c[f+80>>2]=F;c[f+84>>2]=((F|0)<0)<<31>>31;c[f+88>>2]=J;c[f+92>>2]=((J|0)<0)<<31>>31;y=xw(J|0,((J|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;I=E;H=xw(C|0,((C|0)<0)<<31>>31|0,F|0,((F|0)<0)<<31>>31|0)|0;H=iw(y|0,I|0,H|0,E|0)|0;I=E;C=xw(D|0,((D|0)<0)<<31>>31|0,C|0,((C|0)<0)<<31>>31|0)|0;y=E;J=xw(G|0,((G|0)<0)<<31>>31|0,J|0,((J|0)<0)<<31>>31|0)|0;J=iw(C|0,y|0,J|0,E|0)|0;y=E;F=xw(G|0,((G|0)<0)<<31>>31|0,F|0,((F|0)<0)<<31>>31|0)|0;G=E;o=xw(D|0,((D|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;o=iw(F|0,G|0,o|0,E|0)|0;c[f+48>>2]=H;c[f+52>>2]=I;c[f+56>>2]=J;c[f+60>>2]=y;c[f+64>>2]=o;c[f+68>>2]=E;c[f+24>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;c[f+36>>2]=0;c[f+40>>2]=0;o=Fv(a,0,l,f+120|0,f+72|0,f+48|0,f+24|0)|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;y=Fv(a,1,p,f+120|0,f+72|0,f+48|0,f)|0;if((y|0)==0&((o|0)!=0^1)){j=138;break}if((y|0)==0|(o|0)!=0^1){w=(o|0)!=0?-1:1}else{w=Cv(c[f+24>>2]|0,c[f+28>>2]|0,c[f+32>>2]|0,c[f+36>>2]|0,c[f+40>>2]|0,f)|0}do{if(!z){if((w|0)>-1){if((c[f+16>>2]|0)>=0){j=150;break}if((c[f+8>>2]|0)==0&(c[f+12>>2]|0)==0){j=157;break}else{j=150;break}}if((c[f+40>>2]|0)<0?(c[f+32>>2]|0)==0&(c[f+36>>2]|0)==0:0){c[f+116>>2]=o;c[f+112>>2]=y;w=o;j=179}else{j=150}}else{j=150}}while(0);if((j|0)==150){j=Dv(a+48|0)|0;z=Dv(a+48|0)|0;c[j+8>>2]=z;c[z+8>>2]=j;c[j+20>>2]=c[a+100>>2];c[z+20>>2]=c[a+100>>2];c[j+12>>2]=p;c[z+12>>2]=l;c[j+16>>2]=0;c[z+16>>2]=0;z=c[a+116>>2]|0;c[a+116>>2]=z+1;if((z|0)>=(c[a+120>>2]|0)){c[a+120>>2]=z+1}if((s|0)==0){r=j}else{c[s+4>>2]=j}c[j>>2]=s;z=c[j+8>>2]|0;if((v|0)==0){b=z}else{c[v>>2]=z}c[z+4>>2]=v;s=j;v=z;j=157}do{if((j|0)==157){j=0;c[f+116>>2]=o;c[f+112>>2]=y;if((w|0)!=0){if((w|0)>-1){z=y}else{w=o;j=179;break}}else{Gv(a,l,p,f+116|0,f+112|0);z=c[f+112>>2]|0}if((z|0)==0){z=p}else{t=(q|0)!=0;if(t?(g=c[q>>2]|0,(g|0)!=(y|0)):0){B=g;do{A=B;B=c[B>>2]|0;x=c[A+8>>2]|0;if((B|0)==(A|0)){c[(c[x+12>>2]|0)+8>>2]=0}else{c[B+4>>2]=c[A+4>>2];c[c[A+4>>2]>>2]=B;c[(c[x+12>>2]|0)+8>>2]=B}u=c[x>>2]|0;if((u|0)==(x|0)){c[(c[A+12>>2]|0)+8>>2]=0}else{c[u+4>>2]=c[x+4>>2];c[c[x+4>>2]>>2]=u;c[(c[A+12>>2]|0)+8>>2]=u}c[A+0>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[A+12>>2]=0;c[A+16>>2]=0;c[A>>2]=c[a+56>>2];c[a+56>>2]=A;c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;c[x+12>>2]=0;c[x+16>>2]=0;c[x>>2]=c[a+56>>2];c[a+56>>2]=x;c[a+116>>2]=(c[a+116>>2]|0)+ -1}while((B|0)!=(y|0))}if((v|0)==0){q=z;d=t?d:y}else{if(t){c[q>>2]=b;c[b+4>>2]=q;q=y+4|0}else{d=c[y+4>>2]|0;c[d>>2]=b;c[b+4>>2]=d;d=b;q=y+4|0}c[v>>2]=y;c[q>>2]=v;q=c[f+112>>2]|0;b=0}z=c[q+12>>2]|0;v=0;x=c[p+88>>2]|0;t=c[p+92>>2]|0;u=c[p+96>>2]|0;q=c[q+8>>2]|0}if((w|0)<1){w=c[f+116>>2]|0;p=z;j=179}else{y=l;p=z;o=d}}}while(0);if((j|0)==179){j=0;if((w|0)==0){y=l;o=d}else{t=(n|0)!=0;if(t?(h=c[n+4>>2]|0,(h|0)!=(o|0)):0){x=h;do{A=x+4|0;u=x;x=c[A>>2]|0;z=c[u>>2]|0;y=c[u+8>>2]|0;if((z|0)==(u|0)){c[(c[y+12>>2]|0)+8>>2]=0}else{c[z+4>>2]=x;c[c[A>>2]>>2]=z;c[(c[y+12>>2]|0)+8>>2]=z}z=c[y>>2]|0;if((z|0)==(y|0)){c[(c[u+12>>2]|0)+8>>2]=0}else{c[z+4>>2]=c[y+4>>2];c[c[y+4>>2]>>2]=z;c[(c[u+12>>2]|0)+8>>2]=z}c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;c[u>>2]=c[a+56>>2];c[a+56>>2]=u;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[y+12>>2]=0;c[y+16>>2]=0;c[y>>2]=c[a+56>>2];c[a+56>>2]=y;c[a+116>>2]=(c[a+116>>2]|0)+ -1}while((x|0)!=(o|0))}if((s|0)==0){m=t?m:o}else{if(t){c[r>>2]=n;c[n+4>>2]=r;n=o}else{m=c[o>>2]|0;c[r>>2]=m;c[m+4>>2]=r;m=r;n=o}c[n>>2]=s;c[s+4>>2]=o;w=c[f+116>>2]|0;r=0}y=c[w+12>>2]|0;o=d;s=0;x=c[l+88>>2]|0;t=c[l+92>>2]|0;u=c[l+96>>2]|0;n=c[w+8>>2]|0}}if((y|0)==(k|0)&(p|0)==(e|0)){break}j=c[p+92>>2]|0;l=y;d=o;z=0}if((j|0)==138){h=Dv(a+48|0)|0;g=Dv(a+48|0)|0;c[h+8>>2]=g;c[g+8>>2]=h;c[h+20>>2]=c[a+100>>2];c[g+20>>2]=c[a+100>>2];c[h+12>>2]=p;c[g+12>>2]=l;c[h+16>>2]=0;c[g+16>>2]=0;g=c[a+116>>2]|0;c[a+116>>2]=g+1;if((g|0)>=(c[a+120>>2]|0)){c[a+120>>2]=g+1}c[h>>2]=h;c[h+4>>2]=h;c[l+8>>2]=h;J=c[h+8>>2]|0;c[J>>2]=J;c[J+4>>2]=J;c[p+8>>2]=J;i=f;return}if((n|0)!=0){g=n+4|0;j=c[g>>2]|0;if((j|0)!=(m|0)){do{p=j+4|0;k=j;j=c[p>>2]|0;l=c[k>>2]|0;h=c[k+8>>2]|0;if((l|0)==(k|0)){c[(c[h+12>>2]|0)+8>>2]=0}else{c[l+4>>2]=j;c[c[p>>2]>>2]=l;c[(c[h+12>>2]|0)+8>>2]=l}l=c[h>>2]|0;if((l|0)==(h|0)){c[(c[k+12>>2]|0)+8>>2]=0}else{c[l+4>>2]=c[h+4>>2];c[c[h+4>>2]>>2]=l;c[(c[k+12>>2]|0)+8>>2]=l}c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k>>2]=c[a+56>>2];c[a+56>>2]=k;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h>>2]=c[a+56>>2];c[a+56>>2]=h;c[a+116>>2]=(c[a+116>>2]|0)+ -1}while((j|0)!=(m|0))}if((s|0)!=0){c[r>>2]=n;c[g>>2]=r;c[m>>2]=s;c[s+4>>2]=m}}else{c[r>>2]=s;c[s+4>>2]=r;c[k+8>>2]=s}if((q|0)==0){c[v>>2]=b;c[b+4>>2]=v;c[e+8>>2]=v;i=f;return}g=c[q>>2]|0;if((g|0)!=(o|0)){do{j=g;g=c[g>>2]|0;h=c[j+8>>2]|0;if((g|0)==(j|0)){c[(c[h+12>>2]|0)+8>>2]=0}else{c[g+4>>2]=c[j+4>>2];c[c[j+4>>2]>>2]=g;c[(c[h+12>>2]|0)+8>>2]=g}k=c[h>>2]|0;if((k|0)==(h|0)){c[(c[j+12>>2]|0)+8>>2]=0}else{c[k+4>>2]=c[h+4>>2];c[c[h+4>>2]>>2]=k;c[(c[j+12>>2]|0)+8>>2]=k}c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j>>2]=c[a+56>>2];c[a+56>>2]=j;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h>>2]=c[a+56>>2];c[a+56>>2]=h;c[a+116>>2]=(c[a+116>>2]|0)+ -1}while((g|0)!=(o|0))}if((v|0)==0){i=f;return}c[q>>2]=b;c[b+4>>2]=q;c[v>>2]=o;c[o+4>>2]=v;i=f;return}}while(0);c[g+8>>2]=0;c[g>>2]=g;c[g+4>>2]=g;c[e>>2]=g;c[e+4>>2]=g;c[e+8>>2]=g;c[e+12>>2]=g;i=f;return}function Fv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;k=c[d+8>>2]|0;if((k|0)==0){z=0;i=j;return z|0}l=0;do{do{if((c[k+20>>2]|0)>(c[a+100>>2]|0)){p=c[k+12>>2]|0;r=c[p+88>>2]|0;o=r-(c[d+88>>2]|0)|0;q=c[p+92>>2]|0;m=q-(c[d+92>>2]|0)|0;p=c[p+96>>2]|0;n=p-(c[d+96>>2]|0)|0;v=xw(o|0,((o|0)<0)<<31>>31|0,c[g>>2]|0,c[g+4>>2]|0)|0;u=E;t=xw(m|0,((m|0)<0)<<31>>31|0,c[g+8>>2]|0,c[g+12>>2]|0)|0;u=lw(t|0,E|0,v|0,u|0)|0;v=E;t=xw(n|0,((n|0)<0)<<31>>31|0,c[g+16>>2]|0,c[g+20>>2]|0)|0;t=lw(u|0,v|0,t|0,E|0)|0;v=E;u=xw(c[f>>2]|0,c[f+4>>2]|0,o|0,((o|0)<0)<<31>>31|0)|0;z=E;x=xw(c[f+8>>2]|0,c[f+12>>2]|0,m|0,((m|0)<0)<<31>>31|0)|0;z=lw(x|0,E|0,u|0,z|0)|0;u=E;x=xw(c[f+16>>2]|0,c[f+20>>2]|0,n|0,((n|0)<0)<<31>>31|0)|0;x=lw(z|0,u|0,x|0,E|0)|0;u=E;if((v|0)>0|(v|0)==0&t>>>0>0){s=v;y=1;w=1}else{t=iw(0,0,t|0,v|0)|0;s=(v|0)<0?E:0;y=(v|0)<0?-1:0;t=(v|0)<0?t:0;w=(v|0)<0?-1:0}if(!((u|0)>0|(u|0)==0&x>>>0>0)){if((u|0)<0){w=0-y|0;z=iw(0,0,x|0,u|0)|0;v=E;y=w;u=(x|0)==0&(u|0)==0}else{z=0;v=0;u=1}if((y|0)==0&u){break}else{x=z;u=v}}if((l|0)==0){c[h>>2]=t;c[h+4>>2]=s;c[h+8>>2]=x;c[h+12>>2]=u;c[h+16>>2]=w;l=k;break}v=Cv(t,s,x,u,w,h)|0;if((v|0)<0){c[h>>2]=t;c[h+4>>2]=s;c[h+8>>2]=x;c[h+12>>2]=u;c[h+16>>2]=w;l=k;break}if((v|0)==0){s=(c[l+4>>2]|0)==(k|0);if((c[l>>2]|0)==(k|0)){if(s){y=c[e+8>>2]|0;v=aa(y,m)|0;z=c[e+4>>2]|0;v=v-(aa(z,n)|0)|0;x=c[e>>2]|0;y=(aa(x,n)|0)-(aa(o,y)|0)|0;x=(aa(o,z)|0)-(aa(x,m)|0)|0;n=c[l+12>>2]|0;z=c[(c[k+8>>2]|0)+12>>2]|0;t=c[z+88>>2]|0;s=(c[n+88>>2]|0)-t|0;o=c[z+92>>2]|0;u=(c[n+92>>2]|0)-o|0;z=c[z+96>>2]|0;n=(c[n+96>>2]|0)-z|0;w=(aa(p-z|0,u)|0)-(aa(q-o|0,n)|0)|0;z=(aa(r-t|0,n)|0)-(aa(p-z|0,s)|0)|0;u=(aa(q-o|0,s)|0)-(aa(r-t|0,u)|0)|0;v=xw(w|0,((w|0)<0)<<31>>31|0,v|0,((v|0)<0)<<31>>31|0)|0;w=E;y=xw(z|0,((z|0)<0)<<31>>31|0,y|0,((y|0)<0)<<31>>31|0)|0;z=E;x=xw(u|0,((u|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;x=lw(v|0,w|0,x|0,E|0)|0;z=lw(x|0,E|0,y|0,z|0)|0;y=E;m=(y|0)>0|(y|0)==0&z>>>0>0?2:1}else{m=2}}else{m=s&1}l=(m|0)==2^b?l:k}}}while(0);k=c[k>>2]|0}while((k|0)!=(c[d+8>>2]|0));i=j;return l|0}function Gv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;g=i;i=i+96|0;t=c[e>>2]|0;h=c[f>>2]|0;if((t|0)!=0){j=c[t+12>>2]|0}else{j=b}v=c[j+88>>2]|0;w=c[j+92>>2]|0;x=c[j+96>>2]|0;if((h|0)==0){j=d}else{j=c[h+12>>2]|0}y=c[j+88>>2]|0;z=c[j+92>>2]|0;B=c[j+96>>2]|0;n=c[b+88>>2]|0;k=(c[d+88>>2]|0)-n|0;m=c[b+92>>2]|0;j=(c[d+92>>2]|0)-m|0;o=c[b+96>>2]|0;d=(c[d+96>>2]|0)-o|0;b=c[((t|0)!=0?t:h)+12>>2]|0;p=(c[b+88>>2]|0)-n|0;u=(c[b+92>>2]|0)-m|0;b=(c[b+96>>2]|0)-o|0;l=(aa(u,d)|0)-(aa(b,j)|0)|0;b=(aa(b,k)|0)-(aa(p,d)|0)|0;u=(aa(p,j)|0)-(aa(u,k)|0)|0;p=xw(l|0,((l|0)<0)<<31>>31|0,n|0,((n|0)<0)<<31>>31|0)|0;r=E;C=xw(b|0,((b|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;D=E;G=xw(u|0,((u|0)<0)<<31>>31|0,o|0,((o|0)<0)<<31>>31|0)|0;G=lw(p|0,r|0,G|0,E|0)|0;D=lw(G|0,E|0,C|0,D|0)|0;C=E;G=xw(u|0,((u|0)<0)<<31>>31|0,j|0,((j|0)<0)<<31>>31|0)|0;r=E;o=xw(b|0,((b|0)<0)<<31>>31|0,d|0,((d|0)<0)<<31>>31|0)|0;o=iw(G|0,r|0,o|0,E|0)|0;r=E;G=xw(l|0,((l|0)<0)<<31>>31|0,d|0,((d|0)<0)<<31>>31|0)|0;p=E;q=xw(u|0,((u|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;q=iw(G|0,p|0,q|0,E|0)|0;p=E;G=xw(b|0,((b|0)<0)<<31>>31|0,k|0,((k|0)<0)<<31>>31|0)|0;n=E;m=xw(l|0,((l|0)<0)<<31>>31|0,j|0,((j|0)<0)<<31>>31|0)|0;m=iw(G|0,n|0,m|0,E|0)|0;n=E;G=xw(o|0,r|0,v|0,((v|0)<0)<<31>>31|0)|0;Z=E;F=xw(q|0,p|0,w|0,((w|0)<0)<<31>>31|0)|0;Z=lw(F|0,E|0,G|0,Z|0)|0;G=E;F=xw(m|0,n|0,x|0,((x|0)<0)<<31>>31|0)|0;F=lw(Z|0,G|0,F|0,E|0)|0;G=E;if((t|0)!=0?(c[t+12>>2]|0)!=0:0){A=t;while(1){A=c[(c[A+8>>2]|0)+4>>2]|0;J=A+12|0;K=c[J>>2]|0;I=c[K+88>>2]|0;Y=xw(I|0,((I|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;X=E;H=c[K+92>>2]|0;Z=xw(H|0,((H|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;X=lw(Z|0,E|0,Y|0,X|0)|0;Y=E;K=c[K+96>>2]|0;Z=xw(K|0,((K|0)<0)<<31>>31|0,u|0,((u|0)<0)<<31>>31|0)|0;Z=lw(X|0,Y|0,Z|0,E|0)|0;Y=E;if((Y|0)<(C|0)|(Y|0)==(C|0)&Z>>>0<D>>>0){break}if((c[A+20>>2]|0)==(c[a+100>>2]|0)){break}I=xw(I|0,((I|0)<0)<<31>>31|0,o|0,r|0)|0;Z=E;H=xw(H|0,((H|0)<0)<<31>>31|0,q|0,p|0)|0;Z=lw(H|0,E|0,I|0,Z|0)|0;H=E;I=xw(K|0,((K|0)<0)<<31>>31|0,m|0,n|0)|0;I=lw(Z|0,H|0,I|0,E|0)|0;H=E;if(!((H|0)>(G|0)|(H|0)==(G|0)&I>>>0>F>>>0)){break}c[e>>2]=A;Z=c[J>>2]|0;v=c[Z+88>>2]|0;w=c[Z+92>>2]|0;x=c[Z+96>>2]|0;if((Z|0)==0){F=I;G=H;break}else{G=H;F=I}}A=c[f>>2]|0}else{A=h}H=xw(o|0,r|0,y|0,((y|0)<0)<<31>>31|0)|0;Z=E;I=xw(q|0,p|0,z|0,((z|0)<0)<<31>>31|0)|0;Z=lw(I|0,E|0,H|0,Z|0)|0;H=E;I=xw(m|0,n|0,B|0,((B|0)<0)<<31>>31|0)|0;I=lw(Z|0,H|0,I|0,E|0)|0;H=E;a:do{if((A|0)!=0){if((c[A+12>>2]|0)==0){C=I}else{while(1){J=c[c[A+8>>2]>>2]|0;K=c[J+12>>2]|0;M=c[K+88>>2]|0;Y=xw(M|0,((M|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;X=E;L=c[K+92>>2]|0;Z=xw(L|0,((L|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;X=lw(Z|0,E|0,Y|0,X|0)|0;Y=E;K=c[K+96>>2]|0;Z=xw(K|0,((K|0)<0)<<31>>31|0,u|0,((u|0)<0)<<31>>31|0)|0;Z=lw(X|0,Y|0,Z|0,E|0)|0;Y=E;if((Y|0)<(C|0)|(Y|0)==(C|0)&Z>>>0<D>>>0){C=I;break a}if((c[J+20>>2]|0)==(c[a+100>>2]|0)){C=I;break a}Z=xw(M|0,((M|0)<0)<<31>>31|0,o|0,r|0)|0;Y=E;L=xw(L|0,((L|0)<0)<<31>>31|0,q|0,p|0)|0;Y=lw(L|0,E|0,Z|0,Y|0)|0;Z=E;L=xw(K|0,((K|0)<0)<<31>>31|0,m|0,n|0)|0;L=lw(Y|0,Z|0,L|0,E|0)|0;K=E;if(!((K|0)>(H|0)|(K|0)==(H|0)&L>>>0>I>>>0)){C=I;break a}c[f>>2]=J;Z=c[J+12>>2]|0;y=c[Z+88>>2]|0;z=c[Z+92>>2]|0;B=c[Z+96>>2]|0;if((Z|0)==0){C=L;H=K;A=J;break}else{A=J;H=K;I=L}}}}else{C=I;A=0}}while(0);D=iw(C|0,H|0,F|0,G|0)|0;C=E;if((C|0)>0|(C|0)==0&D>>>0>0){F=iw(0,0,u|0,((u|0)<0)<<31>>31|0)|0;G=E;L=D;K=C;H=v;J=w;I=x;P=y;O=z;N=B;b:while(1){c:while(1){M=(aa(O-J|0,j)|0)+(aa(N-I|0,d)|0)+(aa(P-H|0,k)|0)|0;T=c[e>>2]|0;do{if(((T|0)!=0?(c[T+12>>2]|0)!=0:0)?(s=c[(c[T>>2]|0)+8>>2]|0,(c[s+20>>2]|0)>(c[a+100>>2]|0)):0){R=c[s+12>>2]|0;Q=c[R+88>>2]|0;W=Q-H|0;S=c[R+92>>2]|0;V=S-J|0;R=c[R+96>>2]|0;Z=R-I|0;Y=xw(W|0,((W|0)<0)<<31>>31|0,o|0,r|0)|0;U=E;X=xw(V|0,((V|0)<0)<<31>>31|0,q|0,p|0)|0;U=lw(X|0,E|0,Y|0,U|0)|0;Y=E;X=xw(Z|0,((Z|0)<0)<<31>>31|0,m|0,n|0)|0;X=lw(U|0,Y|0,X|0,E|0)|0;Y=E;Z=(aa(V,j)|0)+(aa(W,k)|0)+(aa(Z,d)|0)|0;if((X|0)==0&(Y|0)==0){if((Z|0)<0){break c}else{break}}if((Y|0)<0){if((Z|0)>0){W=1;U=Z;V=((Z|0)<0)<<31>>31;Z=1}else{U=iw(0,0,Z|0,((Z|0)<0)<<31>>31|0)|0;W=(Z|0)<0?-1:0;U=(Z|0)<0?U:0;V=(Z|0)<0?E:0;Z=(Z|0)<0?-1:0}if(!((Y|0)>0|(Y|0)==0&X>>>0>0)){X=iw(0,0,X|0,Y|0)|0;Y=E;Z=0-W|0}do{if((M|0)<=0){if((M|0)<0){c[g+88>>2]=-1;W=iw(0,0,M|0,((M|0)<0)<<31>>31|0)|0;c[g+72>>2]=W;c[g+76>>2]=E;W=-1;break}else{c[g+88>>2]=0;c[g+72>>2]=0;c[g+76>>2]=0;W=0;break}}else{c[g+88>>2]=1;c[g+72>>2]=M;c[g+76>>2]=((M|0)<0)<<31>>31;W=1}}while(0);do{if(!((K|0)>0|(K|0)==0&L>>>0>0)){if((K|0)<0){c[g+88>>2]=0-W;W=iw(0,0,L|0,K|0)|0;c[g+80>>2]=W;c[g+84>>2]=E;break}else{c[g+80>>2]=0;c[g+84>>2]=0;break}}else{c[g+80>>2]=L;c[g+84>>2]=K}}while(0);if((Cv(U,V,X,Y,Z,g+72|0)|0)>-1){break c}}}}while(0);Q=c[f>>2]|0;if((Q|0)==0){s=117;break b}if((c[Q+12>>2]|0)==0){s=117;break b}Q=c[c[Q+8>>2]>>2]|0;if((c[Q+20>>2]|0)<=(c[a+100>>2]|0)){s=117;break b}S=c[Q+12>>2]|0;R=c[S+88>>2]|0;T=R-P|0;P=c[S+92>>2]|0;U=P-O|0;S=c[S+96>>2]|0;V=S-N|0;Z=xw(T|0,((T|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;X=E;Y=xw(U|0,((U|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;X=lw(Y|0,E|0,Z|0,X|0)|0;Z=E;Y=xw(V|0,((V|0)<0)<<31>>31|0,F|0,G|0)|0;if(!((X|0)==(Y|0)&(Z|0)==(E|0))){s=117;break b}N=xw(T|0,((T|0)<0)<<31>>31|0,o|0,r|0)|0;Y=E;O=xw(U|0,((U|0)<0)<<31>>31|0,q|0,p|0)|0;Y=lw(O|0,E|0,N|0,Y|0)|0;N=E;O=xw(V|0,((V|0)<0)<<31>>31|0,m|0,n|0)|0;O=lw(Y|0,N|0,O|0,E|0)|0;N=E;V=(aa(U,j)|0)+(aa(T,k)|0)+(aa(V,d)|0)|0;R=R-H|0;Y=P-J|0;P=S-I|0;R=xw(R|0,((R|0)<0)<<31>>31|0,o|0,r|0)|0;Z=E;Y=xw(Y|0,((Y|0)<0)<<31>>31|0,q|0,p|0)|0;Z=lw(Y|0,E|0,R|0,Z|0)|0;R=E;P=xw(P|0,((P|0)<0)<<31>>31|0,m|0,n|0)|0;P=lw(Z|0,R|0,P|0,E|0)|0;R=E;if(!((R|0)>0|(R|0)==0&P>>>0>0)){s=117;break b}if((O|0)==0&(N|0)==0){if((V|0)>=0){s=117;break b}}else{if((N|0)>=0){s=117;break b}if((V|0)>0){U=1;T=V;S=((V|0)<0)<<31>>31;V=1}else{S=iw(0,0,V|0,((V|0)<0)<<31>>31|0)|0;U=(V|0)<0?-1:0;T=(V|0)<0?S:0;S=(V|0)<0?E:0;V=(V|0)<0?-1:0}if(!((N|0)>0|(N|0)==0&O>>>0>0)){O=iw(0,0,O|0,N|0)|0;N=E;V=0-U|0}do{if((M|0)<=0){if((M|0)<0){c[g+64>>2]=-1;M=iw(0,0,M|0,((M|0)<0)<<31>>31|0)|0;c[g+48>>2]=M;c[g+52>>2]=E;M=-1;break}else{c[g+64>>2]=0;c[g+48>>2]=0;c[g+52>>2]=0;M=0;break}}else{c[g+64>>2]=1;c[g+48>>2]=M;c[g+52>>2]=((M|0)<0)<<31>>31;M=1}}while(0);do{if(!((K|0)>0|(K|0)==0&L>>>0>0)){if((K|0)<0){c[g+64>>2]=0-M;Z=iw(0,0,L|0,K|0)|0;c[g+56>>2]=Z;c[g+60>>2]=E;break}else{c[g+56>>2]=0;c[g+60>>2]=0;break}}else{c[g+56>>2]=L;c[g+60>>2]=K}}while(0);if((Cv(T,S,O,N,V,g+48|0)|0)<=0){s=117;break b}}c[f>>2]=Q;N=c[Q+12>>2]|0;K=R;L=P;P=c[N+88>>2]|0;O=c[N+92>>2]|0;N=c[N+96>>2]|0}Z=P-Q|0;X=O-S|0;L=N-R|0;Z=xw(Z|0,((Z|0)<0)<<31>>31|0,o|0,r|0)|0;Y=E;X=xw(X|0,((X|0)<0)<<31>>31|0,q|0,p|0)|0;Y=lw(X|0,E|0,Z|0,Y|0)|0;Z=E;L=xw(L|0,((L|0)<0)<<31>>31|0,m|0,n|0)|0;L=lw(Y|0,Z|0,L|0,E|0)|0;c[e>>2]=(T|0)==(t|0)?0:s;K=E;H=Q;J=S;I=R}if((s|0)==117){i=g;return}}if((C|0)>=0){i=g;return}t=iw(0,0,u|0,((u|0)<0)<<31>>31|0)|0;s=E;while(1){F=(aa(z-w|0,j)|0)+(aa(B-x|0,d)|0)+(aa(y-v|0,k)|0)|0;d:do{if((A|0)==0){u=F;A=((F|0)<0)<<31>>31;G=F}else{u=F;J=((F|0)<0)<<31>>31;G=F;while(1){if((c[A+12>>2]|0)==0){A=J;break d}K=c[(c[A+4>>2]|0)+8>>2]|0;if((c[K+20>>2]|0)<=(c[a+100>>2]|0)){A=J;break d}F=c[K+12>>2]|0;I=c[F+88>>2]|0;Z=I-y|0;H=c[F+92>>2]|0;Y=H-z|0;F=c[F+96>>2]|0;Q=F-B|0;P=xw(Z|0,((Z|0)<0)<<31>>31|0,o|0,r|0)|0;X=E;O=xw(Y|0,((Y|0)<0)<<31>>31|0,q|0,p|0)|0;X=lw(O|0,E|0,P|0,X|0)|0;P=E;O=xw(Q|0,((Q|0)<0)<<31>>31|0,m|0,n|0)|0;O=lw(X|0,P|0,O|0,E|0)|0;P=E;Q=(aa(Y,j)|0)+(aa(Z,k)|0)+(aa(Q,d)|0)|0;if((O|0)==0&(P|0)==0){if((Q|0)<=0){A=J;break d}}else{if((P|0)>=0){A=J;break d}if((Q|0)>0){N=1;M=Q;L=((Q|0)<0)<<31>>31;Q=1}else{L=iw(0,0,Q|0,((Q|0)<0)<<31>>31|0)|0;N=(Q|0)<0?-1:0;M=(Q|0)<0?L:0;L=(Q|0)<0?E:0;Q=(Q|0)<0?-1:0}if(!((P|0)>0|(P|0)==0&O>>>0>0)){O=iw(0,0,O|0,P|0)|0;P=E;Q=0-N|0}do{if((G|0)<=0){if((G|0)<0){c[g+40>>2]=-1;N=iw(0,0,u|0,J|0)|0;c[g+24>>2]=N;c[g+28>>2]=E;N=-1;break}else{c[g+40>>2]=0;c[g+24>>2]=0;c[g+28>>2]=0;N=0;break}}else{c[g+40>>2]=1;c[g+24>>2]=u;c[g+28>>2]=J;N=1}}while(0);do{if(!((C|0)>0|(C|0)==0&D>>>0>0)){if((C|0)<0){c[g+40>>2]=0-N;Z=iw(0,0,D|0,C|0)|0;c[g+32>>2]=Z;c[g+36>>2]=E;break}else{c[g+32>>2]=0;c[g+36>>2]=0;break}}else{c[g+32>>2]=D;c[g+36>>2]=C}}while(0);if((Cv(M,L,O,P,Q,g+24|0)|0)>=1){A=J;break d}}u=I-v|0;y=H-w|0;z=F-x|0;C=xw(u|0,((u|0)<0)<<31>>31|0,o|0,r|0)|0;Z=E;D=xw(y|0,((y|0)<0)<<31>>31|0,q|0,p|0)|0;Z=lw(D|0,E|0,C|0,Z|0)|0;C=E;D=xw(z|0,((z|0)<0)<<31>>31|0,m|0,n|0)|0;D=lw(Z|0,C|0,D|0,E|0)|0;C=E;A=(A|0)==(h|0)?0:K;c[f>>2]=A;y=(aa(y,j)|0)+(aa(z,d)|0)+(aa(u,k)|0)|0;if((A|0)==0){u=y;A=((y|0)<0)<<31>>31;G=y;y=I;z=H;B=F;break}else{u=y;J=((y|0)<0)<<31>>31;G=y;y=I;z=H;B=F}}}}while(0);F=c[e>>2]|0;if((F|0)==0){s=117;break}if((c[F+12>>2]|0)==0){s=117;break}F=c[(c[F+8>>2]|0)+4>>2]|0;if((c[F+20>>2]|0)<=(c[a+100>>2]|0)){s=117;break}J=c[F+12>>2]|0;H=c[J+88>>2]|0;K=H-v|0;I=c[J+92>>2]|0;L=I-w|0;J=c[J+96>>2]|0;x=J-x|0;Z=xw(K|0,((K|0)<0)<<31>>31|0,l|0,((l|0)<0)<<31>>31|0)|0;X=E;Y=xw(L|0,((L|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;X=lw(Y|0,E|0,Z|0,X|0)|0;Z=E;Y=xw(x|0,((x|0)<0)<<31>>31|0,t|0,s|0)|0;if(!((X|0)==(Y|0)&(Z|0)==(E|0))){s=117;break}v=xw(K|0,((K|0)<0)<<31>>31|0,o|0,r|0)|0;Y=E;w=xw(L|0,((L|0)<0)<<31>>31|0,q|0,p|0)|0;Y=lw(w|0,E|0,v|0,Y|0)|0;v=E;w=xw(x|0,((x|0)<0)<<31>>31|0,m|0,n|0)|0;w=lw(Y|0,v|0,w|0,E|0)|0;v=E;K=(aa(L,j)|0)+(aa(K,k)|0)+(aa(x,d)|0)|0;x=y-H|0;Y=z-I|0;H=B-J|0;x=xw(x|0,((x|0)<0)<<31>>31|0,o|0,r|0)|0;Z=E;Y=xw(Y|0,((Y|0)<0)<<31>>31|0,q|0,p|0)|0;Z=lw(Y|0,E|0,x|0,Z|0)|0;x=E;H=xw(H|0,((H|0)<0)<<31>>31|0,m|0,n|0)|0;H=lw(Z|0,x|0,H|0,E|0)|0;x=E;if((x|0)>=0){s=117;break}if((w|0)==0&(v|0)==0){if((K|0)<=0){s=117;break}}else{if((v|0)>=0){s=117;break}if((K|0)>0){L=1;J=K;I=((K|0)<0)<<31>>31;K=1}else{I=iw(0,0,K|0,((K|0)<0)<<31>>31|0)|0;L=(K|0)<0?-1:0;J=(K|0)<0?I:0;I=(K|0)<0?E:0;K=(K|0)<0?-1:0}if(!((v|0)>0|(v|0)==0&w>>>0>0)){w=iw(0,0,w|0,v|0)|0;v=E;K=0-L|0}do{if((G|0)<=0){if((G|0)<0){c[g+16>>2]=-1;u=iw(0,0,u|0,A|0)|0;c[g>>2]=u;c[g+4>>2]=E;u=-1;break}else{c[g+16>>2]=0;c[g>>2]=0;c[g+4>>2]=0;u=0;break}}else{c[g+16>>2]=1;c[g>>2]=u;c[g+4>>2]=A;u=1}}while(0);do{if(!((C|0)>0|(C|0)==0&D>>>0>0)){if((C|0)<0){c[g+16>>2]=0-u;Z=iw(0,0,D|0,C|0)|0;c[g+8>>2]=Z;c[g+12>>2]=E;break}else{c[g+8>>2]=0;c[g+12>>2]=0;break}}else{c[g+8>>2]=D;c[g+12>>2]=C}}while(0);if((Cv(J,I,w,v,K,g)|0)>=0){s=117;break}}c[e>>2]=F;Z=c[F+12>>2]|0;A=c[f>>2]|0;D=H;C=x;v=c[Z+88>>2]|0;w=c[Z+92>>2]|0;x=c[Z+96>>2]|0}if((s|0)==117){i=g;return}}function Hv(a){a=a|0;var b=0,d=0,e=0,f=0.0,g=0,h=0,j=0;b=i;i=i+16|0;e=c[a+8>>2]|0;d=c[a+12>>2]|0;if((d|0)>-1|(d|0)==-1&e>>>0>4294967295){f=(+(e>>>0)+4294967296.0*+(d>>>0))*18446744073709552000.0+(+((c[a>>2]|0)>>>0)+4294967296.0*+((c[a+4>>2]|0)>>>0));i=b;return+f}else{j=c[a>>2]|0;h=c[a+4>>2]|0;g=iw(0,0,j|0,h|0)|0;a=E;e=lw((j|0)==0&(h|0)==0&1|0,0,~e|0,~d|0)|0;c[b>>2]=g;c[b+4>>2]=a;c[b+8>>2]=e;c[b+12>>2]=E;f=-+Hv(b);i=b;return+f}return 0.0}function Iv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0;f=i;i=i+256|0;if((e|0)<1){h=c[b+12>>2]|0;if((h|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=c[b+32>>2]|0;if((h|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;h=c[b+52>>2]|0;if((h|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;i=f;return}c[f+88>>2]=0;c[f+92>>2]=0;m=f+96|0;c[m>>2]=0;c[f+100>>2]=256;c[f+104>>2]=0;c[f+108>>2]=0;c[f+112>>2]=0;c[f+116>>2]=256;c[f+120>>2]=0;c[f+124>>2]=0;c[f+128>>2]=0;c[f+132>>2]=256;a[f+152>>0]=1;n=f+148|0;c[n>>2]=0;c[f+140>>2]=0;c[f+144>>2]=0;q=0;x=-1.0000000150474662e+30;z=-1.0000000150474662e+30;C=-1.0000000150474662e+30;A=1.0000000150474662e+30;y=1.0000000150474662e+30;B=1.0000000150474662e+30;r=d;while(1){u=+g[r>>2];v=+g[r+4>>2];w=+g[r+8>>2];A=u<A?u:A;y=v<y?v:y;B=w<B?w:B;x=x<u?u:x;z=z<v?v:z;C=C<w?w:C;q=q+1|0;if((q|0)==(e|0)){break}else{r=r+16|0}}u=x-A;v=z-y;w=C-B;if(u<v){c[f+168>>2]=v<w?2:1;q=u<w?0:2;t=f+168|0}else{c[f+168>>2]=u<w?2:0;q=v<w?1:2;t=f+168|0}c[f+160>>2]=q;r=c[t>>2]|0;if((q|0)==(r|0)){q=((q+1|0)>>>0)%3|0;c[f+160>>2]=q;r=c[t>>2]|0}H=3-r-q|0;c[f+164>>2]=H;if(((H+1|0)%3|0|0)==(c[t>>2]|0)){u=u*9788566967472434.0e-20;v=v*9788566967472434.0e-20;w=w*9788566967472434.0e-20}else{u=u*9788566967472434.0e-20*-1.0;v=v*9788566967472434.0e-20*-1.0;w=w*9788566967472434.0e-20*-1.0}g[f+56>>2]=u;g[f+60>>2]=v;g[f+64>>2]=w;g[f+68>>2]=0.0;if(u!=0.0){u=1.0/u}if(v!=0.0){v=1.0/v}if(w!=0.0){w=1.0/w}g[f+72>>2]=(A+x)*.5;g[f+76>>2]=(y+z)*.5;g[f+80>>2]=(B+C)*.5;g[f+84>>2]=0.0;r=f+248|0;a[r>>0]=1;q=f+244|0;c[q>>2]=0;s=f+236|0;c[s>>2]=0;c[f+240>>2]=0;if((e|0)>0){c[4336]=(c[4336]|0)+1;D=cw((e<<4|3)+16|0)|0;if((D|0)==0){D=0}else{c[(D+19&-16)+ -4>>2]=D;D=D+19&-16}F=c[s>>2]|0;if((F|0)>0){G=0;do{E=D+(G<<4)|0;if((E|0)!=0){H=(c[q>>2]|0)+(G<<4)|0;c[E+0>>2]=c[H+0>>2];c[E+4>>2]=c[H+4>>2];c[E+8>>2]=c[H+8>>2];c[E+12>>2]=c[H+12>>2]}G=G+1|0}while((G|0)!=(F|0))}E=c[q>>2]|0;if((E|0)!=0){if((a[r>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[E+ -4>>2]|0)}c[q>>2]=0}a[r>>0]=1;c[q>>2]=D;c[f+240>>2]=e;E=0;while(1){D=D+(E<<4)|0;if((D|0)!=0){c[D+0>>2]=c[f+216>>2];c[D+4>>2]=c[f+220>>2];c[D+8>>2]=c[f+224>>2];c[D+12>>2]=c[f+228>>2]}E=E+1|0;if((E|0)==(e|0)){break}D=c[q>>2]|0}c[s>>2]=e;D=c[q>>2]|0;y=+g[f+72>>2];z=+g[f+76>>2];x=+g[f+80>>2];E=0;while(1){A=+g[d>>2];g[f+200>>2]=A;B=+g[d+4>>2];g[f+204>>2]=B;C=w*(+g[d+8>>2]-x);g[f+200>>2]=u*(A-y);g[f+204>>2]=v*(B-z);g[f+208>>2]=C;g[f+212>>2]=0.0;c[D+(E<<4)>>2]=~~+g[f+200+(c[f+164>>2]<<2)>>2];c[D+(E<<4)+4>>2]=~~+g[f+200+(c[t>>2]<<2)>>2];c[D+(E<<4)+8>>2]=~~+g[f+200+(c[f+160>>2]<<2)>>2];c[D+(E<<4)+12>>2]=E;E=E+1|0;if((E|0)==(e|0)){break}d=d+16|0}d=c[s>>2]|0;if((d|0)>1){Jv(f+232|0,0,d+ -1|0)}}else{c[s>>2]=e}c[f+92>>2]=c[f+88>>2];c[m>>2]=0;c[f+100>>2]=e;d=c[f+140>>2]|0;if((d|0)<(e|0)){if((c[f+144>>2]|0)<(e|0)){if((e|0)==0){t=d;D=0}else{c[4336]=(c[4336]|0)+1;t=cw((e<<2|3)+16|0)|0;if((t|0)==0){D=0}else{c[(t+19&-16)+ -4>>2]=t;D=t+19&-16}t=c[f+140>>2]|0}if((t|0)>0){E=0;do{F=D+(E<<2)|0;if((F|0)!=0){c[F>>2]=c[(c[n>>2]|0)+(E<<2)>>2]}E=E+1|0}while((E|0)!=(t|0))}t=c[n>>2]|0;if((t|0)!=0){if((a[f+152>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[t+ -4>>2]|0)}c[n>>2]=0}a[f+152>>0]=1;c[n>>2]=D;c[f+144>>2]=e}do{t=(c[n>>2]|0)+(d<<2)|0;if((t|0)!=0){c[t>>2]=0}d=d+1|0}while((d|0)!=(e|0))}c[f+140>>2]=e;if((e|0)>0){d=0;do{t=c[m>>2]|0;if((t|0)==0){F=c[f+92>>2]|0;if((F|0)==0){c[4336]=(c[4336]|0)+1;t=cw(31)|0;if((t|0)!=0?(p=t+19&-16,c[p+ -4>>2]=t,(t+19&-16|0)!=0):0){D=c[f+100>>2]|0;c[p+4>>2]=D;c[p+8>>2]=0;c[4336]=(c[4336]|0)+1;D=cw((D*112|3)+16|0)|0;if((D|0)==0){D=0}else{c[(D+19&-16)+ -4>>2]=D;D=D+19&-16}c[(t+19&-16)>>2]=D;F=t+19&-16}else{F=0}c[F+8>>2]=c[f+88>>2];c[f+88>>2]=F}else{c[f+92>>2]=c[F+8>>2]}G=c[F+4>>2]|0;if((G|0)>0){t=0;D=c[F>>2]|0;do{t=t+1|0;E=D;D=D+112|0;c[E>>2]=(t|0)<(G|0)?D:0}while((t|0)!=(G|0))}t=c[F>>2]|0;c[m>>2]=c[t>>2];if((t|0)==0){t=0}else{o=85}}else{c[m>>2]=c[t>>2];o=85}if((o|0)==85){o=0;H=t+104|0;c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[t+16>>2]=0;c[H>>2]=-1}c[t+8>>2]=0;H=t+88|0;G=(c[q>>2]|0)+(d<<4)|0;c[H+0>>2]=c[G+0>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];c[t+104>>2]=-1;c[(c[n>>2]|0)+(d<<2)>>2]=t;d=d+1|0}while((d|0)<(e|0))}m=c[q>>2]|0;if((m|0)!=0){if((a[r>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[m+ -4>>2]|0)}c[q>>2]=0}a[r>>0]=1;c[q>>2]=0;c[s>>2]=0;c[f+240>>2]=0;c[f+108>>2]=c[f+104>>2];c[f+112>>2]=0;c[f+116>>2]=e*6;c[f+172>>2]=0;c[f+176>>2]=0;c[f+156>>2]=-3;c[f+184>>2]=0;c[f+188>>2]=0;c[f+192>>2]=0;c[f+196>>2]=0;Ev(f+56|0,0,e,f+184|0);c[f+180>>2]=c[f+184>>2];e=c[q>>2]|0;if((e|0)!=0){if((a[r>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[q>>2]=0}m=c[b+4>>2]|0;if((m|0)<0){if((c[b+8>>2]|0)<0){e=c[b+12>>2]|0;if((e|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=0;c[b+8>>2]=0}do{H=(c[b+12>>2]|0)+(m<<4)|0;c[H+0>>2]=c[f+40>>2];c[H+4>>2]=c[f+44>>2];c[H+8>>2]=c[f+48>>2];c[H+12>>2]=c[f+52>>2];m=m+1|0}while((m|0)!=0)}c[b+4>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;m=c[b+24>>2]|0;if((m|0)<0){if((c[b+28>>2]|0)<0){e=c[b+32>>2]|0;if((e|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+28>>2]=0}do{e=(c[b+32>>2]|0)+(m*12|0)|0;if((e|0)!=0){c[e+0>>2]=c[f+24>>2];c[e+4>>2]=c[f+28>>2];c[e+8>>2]=c[f+32>>2]}m=m+1|0}while((m|0)!=0)}c[b+24>>2]=0;n=c[b+44>>2]|0;if((n|0)<0){e=c[b+52>>2]|0;if((c[b+48>>2]|0)<0){if((e|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+48>>2]=0;e=0}do{m=e+(n<<2)|0;if((m|0)!=0){c[m>>2]=0}n=n+1|0}while((n|0)!=0)}c[b+44>>2]=0;e=c[f+180>>2]|0;if((c[e+104>>2]|0)<0){c[e+104>>2]=0;c[4336]=(c[4336]|0)+1;m=cw(23)|0;if((m|0)!=0){c[(m+19&-16)+ -4>>2]=m;s=m+19&-16;if((m+19&-16|0)!=0){c[s>>2]=e}}else{s=0}p=1;t=1;e=0;while(1){m=c[s+(e<<2)>>2]|0;if((c[m+100>>2]|0)>-1){g[f+232+(c[f+164>>2]<<2)>>2]=+(c[m+88>>2]|0);g[f+232+(c[f+168>>2]<<2)>>2]=+(c[m+92>>2]|0);u=+(c[m+96>>2]|0)}else{u=+Hv(m+24|0);u=u/+Hv(m+72|0);g[f+232+(c[f+164>>2]<<2)>>2]=u;u=+Hv(m+40|0);u=u/+Hv(m+72|0);g[f+232+(c[f+168>>2]<<2)>>2]=u;u=+Hv(m+56|0);u=u/+Hv(m+72|0)}g[f+232+(c[f+160>>2]<<2)>>2]=u;w=+g[f+232>>2]*+g[f+56>>2]+ +g[f+72>>2];v=+g[f+236>>2]*+g[f+60>>2]+ +g[f+76>>2];u=+g[f+240>>2]*+g[f+64>>2]+ +g[f+80>>2];o=c[b+4>>2]|0;if((o|0)==(c[b+8>>2]|0)?(l=(o|0)==0?1:o<<1,(o|0)<(l|0)):0){if((l|0)==0){n=0}else{c[4336]=(c[4336]|0)+1;n=cw((l<<4|3)+16|0)|0;if((n|0)==0){n=0}else{c[(n+19&-16)+ -4>>2]=n;n=n+19&-16}o=c[b+4>>2]|0}if((o|0)>0){q=0;do{H=n+(q<<4)|0;G=(c[b+12>>2]|0)+(q<<4)|0;c[H+0>>2]=c[G+0>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];q=q+1|0}while((q|0)!=(o|0))}o=c[b+12>>2]|0;if((o|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[o+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=n;c[b+8>>2]=l;o=c[b+4>>2]|0}H=c[b+12>>2]|0;g[H+(o<<4)>>2]=w;g[H+(o<<4)+4>>2]=v;g[H+(o<<4)+8>>2]=u;g[H+(o<<4)+12>>2]=0.0;c[b+4>>2]=(c[b+4>>2]|0)+1;m=c[m+8>>2]|0;if((m|0)!=0){n=m;o=-1;q=-1;do{r=n+20|0;d=c[r>>2]|0;if((d|0)<0){d=c[b+24>>2]|0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;D=c[b+28>>2]|0;if((d|0)==(D|0)){D=(d|0)==0?1:d<<1;if((d|0)<(D|0)){if((D|0)==0){E=d;F=0}else{c[4336]=(c[4336]|0)+1;E=cw((D*12|3)+16|0)|0;if((E|0)==0){F=0}else{c[(E+19&-16)+ -4>>2]=E;F=E+19&-16}E=c[b+24>>2]|0}if((E|0)>0){H=0;do{G=F+(H*12|0)|0;if((G|0)!=0){I=(c[b+32>>2]|0)+(H*12|0)|0;c[G+0>>2]=c[I+0>>2];c[G+4>>2]=c[I+4>>2];c[G+8>>2]=c[I+8>>2]}H=H+1|0}while((H|0)!=(E|0))}E=c[b+32>>2]|0;if((E|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[E+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=F;c[b+28>>2]=D;E=c[b+24>>2]|0}else{E=d;D=d}}else{E=d}F=(c[b+32>>2]|0)+(E*12|0)|0;if((F|0)==0){F=E;E=D}else{c[F+0>>2]=c[f+12>>2];c[F+4>>2]=c[f+16>>2];c[F+8>>2]=c[f+20>>2];F=c[b+24>>2]|0;E=c[b+28>>2]|0}D=F+1|0;c[b+24>>2]=D;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;if((D|0)==(E|0)){D=(E|0)==0?1:E<<1;if((E|0)<(D|0)){if((D|0)==0){F=0}else{c[4336]=(c[4336]|0)+1;E=cw((D*12|3)+16|0)|0;if((E|0)==0){F=0}else{c[(E+19&-16)+ -4>>2]=E;F=E+19&-16}E=c[b+24>>2]|0}if((E|0)>0){H=0;do{G=F+(H*12|0)|0;if((G|0)!=0){I=(c[b+32>>2]|0)+(H*12|0)|0;c[G+0>>2]=c[I+0>>2];c[G+4>>2]=c[I+4>>2];c[G+8>>2]=c[I+8>>2]}H=H+1|0}while((H|0)!=(E|0))}E=c[b+32>>2]|0;if((E|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[E+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=F;c[b+28>>2]=D;E=c[b+24>>2]|0}}else{E=D}D=c[b+32>>2]|0;F=D+(E*12|0)|0;if((F|0)!=0){c[F+0>>2]=c[f+0>>2];c[F+4>>2]=c[f+4>>2];c[F+8>>2]=c[f+8>>2];E=c[b+24>>2]|0;D=c[b+32>>2]|0}c[b+24>>2]=E+1;c[r>>2]=d;c[(c[n+8>>2]|0)+20>>2]=d+1;c[D+(d*12|0)+4>>2]=1;c[D+((d+1|0)*12|0)+4>>2]=-1;E=c[n+12>>2]|0;F=c[E+104>>2]|0;if((F|0)<0){c[E+104>>2]=p;if((p|0)==(t|0)?(j=(t|0)==0?1:t<<1,(t|0)<(j|0)):0){if((j|0)!=0?(c[4336]=(c[4336]|0)+1,k=cw((j<<2|3)+16|0)|0,(k|0)!=0):0){c[(k+19&-16)+ -4>>2]=k;F=k+19&-16}else{F=0}if((t|0)>0){H=0;do{G=F+(H<<2)|0;if((G|0)!=0){c[G>>2]=c[s+(H<<2)>>2]}H=H+1|0}while((H|0)!=(t|0))}if((s|0)==0){t=j;s=F}else{c[4338]=(c[4338]|0)+1;dw(c[s+ -4>>2]|0);t=j;s=F}}F=s+(p<<2)|0;if((F|0)!=0){c[F>>2]=E}E=p+1|0}else{E=p;p=F}c[D+(d*12|0)+8>>2]=p;c[D+((d+1|0)*12|0)+8>>2]=e;d=c[r>>2]|0;p=E}if((q|0)>-1){c[(c[b+32>>2]|0)+(d*12|0)>>2]=q-d;q=c[r>>2]|0}else{q=d;o=d}n=c[n>>2]|0}while((n|0)!=(m|0));c[(c[b+32>>2]|0)+(o*12|0)>>2]=q-o}m=e+1|0;if((m|0)<(p|0)){e=m}else{break}}if((e|0)>-1){k=0;do{l=c[(c[s+(k<<2)>>2]|0)+8>>2]|0;if((l|0)!=0){j=l;do{e=j+20|0;if((c[e>>2]|0)>-1){n=c[b+44>>2]|0;if((n|0)==(c[b+48>>2]|0)?(h=(n|0)==0?1:n<<1,(n|0)<(h|0)):0){if((h|0)==0){o=0}else{c[4336]=(c[4336]|0)+1;n=cw((h<<2|3)+16|0)|0;if((n|0)==0){o=0}else{c[(n+19&-16)+ -4>>2]=n;o=n+19&-16}n=c[b+44>>2]|0}if((n|0)>0){q=0;do{p=o+(q<<2)|0;if((p|0)!=0){c[p>>2]=c[(c[b+52>>2]|0)+(q<<2)>>2]}q=q+1|0}while((q|0)!=(n|0))}n=c[b+52>>2]|0;if((n|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=o;c[b+48>>2]=h;n=c[b+44>>2]|0}o=(c[b+52>>2]|0)+(n<<2)|0;if((o|0)!=0){c[o>>2]=c[e>>2];n=c[b+44>>2]|0}c[b+44>>2]=n+1;e=j;do{c[e+20>>2]=-1;e=c[(c[e+8>>2]|0)+4>>2]|0}while((e|0)!=(j|0))}j=c[j>>2]|0}while((j|0)!=(l|0))}k=k+1|0}while((k|0)<(m|0))}if((s|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[s+ -4>>2]|0)}}Kv(f+56|0);i=f;return}function Jv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;j=i;i=i+16|0;h=c[a+12>>2]|0;f=c[h+(((d+b|0)/2|0)<<4)>>2]|0;g=c[h+(((d+b|0)/2|0)<<4)+4>>2]|0;e=c[h+(((d+b|0)/2|0)<<4)+8>>2]|0;k=b;l=d;while(1){while(1){m=c[h+(k<<4)+4>>2]|0;if((m|0)>=(g|0)){if((m|0)!=(g|0)){break}m=c[h+(k<<4)>>2]|0;if((m|0)>=(f|0)){if((m|0)!=(f|0)){break}if((c[h+(k<<4)+8>>2]|0)>=(e|0)){break}}}k=k+1|0}while(1){m=c[h+(l<<4)+4>>2]|0;if((g|0)>=(m|0)){if((g|0)!=(m|0)){break}m=c[h+(l<<4)>>2]|0;if((f|0)>=(m|0)){if((f|0)!=(m|0)){break}if((e|0)>=(c[h+(l<<4)+8>>2]|0)){break}}}l=l+ -1|0}if((k|0)<=(l|0)){m=h+(k<<4)|0;c[j+0>>2]=c[m+0>>2];c[j+4>>2]=c[m+4>>2];c[j+8>>2]=c[m+8>>2];c[j+12>>2]=c[m+12>>2];h=h+(l<<4)|0;c[m+0>>2]=c[h+0>>2];c[m+4>>2]=c[h+4>>2];c[m+8>>2]=c[h+8>>2];c[m+12>>2]=c[h+12>>2];m=(c[a+12>>2]|0)+(l<<4)|0;c[m+0>>2]=c[j+0>>2];c[m+4>>2]=c[j+4>>2];c[m+8>>2]=c[j+8>>2];c[m+12>>2]=c[j+12>>2];k=k+1|0;l=l+ -1|0}if((k|0)>(l|0)){break}h=c[a+12>>2]|0}if((l|0)>(b|0)){Jv(a,b,l)}if((k|0)>=(d|0)){i=j;return}Jv(a,k,d);i=j;return}function Kv(b){b=b|0;var d=0,e=0,f=0;d=i;e=c[b+92>>2]|0;if((e|0)!=0){if((a[b+96>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+92>>2]=0}a[b+96>>0]=1;c[b+92>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;e=c[b+64>>2]|0;if((e|0)!=0){do{c[b+64>>2]=c[e+8>>2];f=c[e>>2]|0;if((f|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);e=c[b+64>>2]|0}while((e|0)!=0)}f=c[b+48>>2]|0;if((f|0)!=0){do{c[b+48>>2]=c[f+8>>2];e=c[f>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0);f=c[b+48>>2]|0}while((f|0)!=0)}e=c[b+32>>2]|0;if((e|0)==0){i=d;return}do{c[b+32>>2]=c[e+8>>2];f=c[e>>2]|0;if((f|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);e=c[b+32>>2]|0}while((e|0)!=0);i=d;return}function Lv(a){a=a|0;var b=0,d=0;b=i;do{c[a+4>>2]=0;g[a+8>>2]=0.0;d=c[a+24>>2]|0;if((d|0)!=0){Lv(d)}a=c[a+28>>2]|0}while((a|0)!=0);i=b;return}



function Ep(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=i;if((c[a>>2]|0)==0){c[a>>2]=d;c[d+32>>2]=0;i=e;return}f=c[b+40>>2]|0;if((f|0)!=0){j=+g[d>>2]+ +g[d+16>>2];n=+g[d+4>>2]+ +g[d+20>>2];o=+g[d+8>>2]+ +g[d+24>>2];do{m=c[b+36>>2]|0;s=+P(+(j-(+g[m>>2]+ +g[m+16>>2])))+ +P(+(n-(+g[m+4>>2]+ +g[m+20>>2])))+ +P(+(o-(+g[m+8>>2]+ +g[m+24>>2])));b=c[b+((!(s<+P(+(j-(+g[f>>2]+ +g[f+16>>2])))+ +P(+(n-(+g[f+4>>2]+ +g[f+20>>2])))+ +P(+(o-(+g[f+8>>2]+ +g[f+24>>2]))))&1)<<2)+36>>2]|0;f=c[b+40>>2]|0}while((f|0)!=0)}h=b+32|0;f=c[h>>2]|0;l=c[a+4>>2]|0;if((l|0)==0){c[4336]=(c[4336]|0)+1;k=cw(63)|0;if((k|0)!=0?(c[(k+19&-16)+ -4>>2]=k,(k+19&-16|0)!=0):0){m=(k+19&-16)+0|0;l=m+44|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(l|0));l=k+19&-16}else{l=0}}else{c[a+4>>2]=0}c[l+32>>2]=f;m=l+36|0;c[m>>2]=0;k=l+40|0;c[k>>2]=0;n=+g[d>>2];j=+g[b>>2];j=n<j?n:j;g[l>>2]=j;o=+g[d+16>>2];n=+g[b+16>>2];n=o>n?o:n;g[l+16>>2]=n;p=+g[d+4>>2];o=+g[b+4>>2];p=p<o?p:o;g[l+4>>2]=p;o=+g[d+20>>2];q=+g[b+20>>2];o=o>q?o:q;g[l+20>>2]=o;q=+g[d+8>>2];r=+g[b+8>>2];r=q<r?q:r;g[l+8>>2]=r;s=+g[d+24>>2];q=+g[b+24>>2];q=s>q?s:q;g[l+24>>2]=q;if((f|0)==0){c[m>>2]=b;c[h>>2]=l;c[k>>2]=d;c[d+32>>2]=l;c[a>>2]=l;i=e;return}c[f+(((c[(c[h>>2]|0)+40>>2]|0)==(b|0))<<2)+36>>2]=l;c[m>>2]=b;c[h>>2]=l;c[k>>2]=d;c[d+32>>2]=l;while(1){b=f+4|0;if(((((+g[f>>2]<=j?+g[b>>2]<=p:0)?+g[f+8>>2]<=r:0)?+g[f+16>>2]>=n:0)?+g[f+20>>2]>=o:0)?+g[f+24>>2]>=q:0){d=21;break}a=c[f+36>>2]|0;d=c[f+40>>2]|0;n=+g[a>>2];j=+g[d>>2];j=n<j?n:j;g[f>>2]=j;n=+g[a+16>>2];o=+g[d+16>>2];n=n>o?n:o;g[f+16>>2]=n;o=+g[a+4>>2];p=+g[d+4>>2];p=o<p?o:p;g[b>>2]=p;o=+g[a+20>>2];q=+g[d+20>>2];o=o>q?o:q;g[f+20>>2]=o;r=+g[a+8>>2];q=+g[d+8>>2];r=r<q?r:q;g[f+8>>2]=r;q=+g[a+24>>2];s=+g[d+24>>2];q=q>s?q:s;g[f+24>>2]=q;f=c[f+32>>2]|0;if((f|0)==0){d=21;break}}if((d|0)==21){i=e;return}}function Fp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0.0;d=i;if((c[a>>2]|0)==(b|0)){c[a>>2]=0;x=0;i=d;return x|0}l=c[b+32>>2]|0;m=c[l+32>>2]|0;b=c[l+(((c[l+40>>2]|0)!=(b|0))<<2)+36>>2]|0;if((m|0)==0){c[a>>2]=b;c[b+32>>2]=0;e=c[a+4>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[a+4>>2]=l;x=c[a>>2]|0;i=d;return x|0}c[m+(((c[m+40>>2]|0)==(l|0))<<2)+36>>2]=b;c[b+32>>2]=m;b=c[a+4>>2]|0;if((b|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0)}c[a+4>>2]=l;do{k=+g[m>>2];v=m+4|0;h=+g[v>>2];q=m+8|0;f=+g[q>>2];x=m+16|0;n=+g[x>>2];t=m+20|0;j=+g[t>>2];l=m+24|0;o=+g[l>>2];r=c[m+36>>2]|0;b=c[m+40>>2]|0;s=+g[r>>2];p=+g[b>>2];p=s<p?s:p;g[m>>2]=p;s=+g[r+16>>2];u=+g[b+16>>2];s=s>u?s:u;g[x>>2]=s;u=+g[r+4>>2];w=+g[b+4>>2];u=u<w?u:w;g[v>>2]=u;y=+g[r+20>>2];w=+g[b+20>>2];w=y>w?y:w;g[t>>2]=w;y=+g[r+8>>2];z=+g[b+8>>2];y=y<z?y:z;g[q>>2]=y;z=+g[r+24>>2];A=+g[b+24>>2];z=z>A?z:A;g[l>>2]=z;if(!(k!=p|h!=u|f!=y|n!=s)?!(j!=w|o!=z):0){e=14;break}m=c[m+32>>2]|0}while((m|0)!=0);if((e|0)==14){i=d;return m|0}x=c[a>>2]|0;i=d;return x|0}function Gp(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;c[b>>2]=9256;f=b+4|0;do{a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=-1;c[f+12>>2]=0;c[f+16>>2]=0;f=f+60|0}while((f|0)!=(b+124|0));a[b+193>>0]=0;a[b+194>>0]=1;a[b+192>>0]=(d|0)!=0^1;g[b+140>>2]=0.0;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+168>>2]=0;c[b+172>>2]=0;g[b+176>>2]=0.0;if((d|0)!=0){f=b+136|0;c[f>>2]=d;f=b+188|0;c[f>>2]=0;f=b+180|0;c[f>>2]=0;f=b+184|0;c[f>>2]=0;f=b+124|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=e;return}c[4336]=(c[4336]|0)+1;d=cw(95)|0;if((d|0)!=0?(c[(d+19&-16)+ -4>>2]=d,(d+19&-16|0)!=0):0){wr(d+19&-16);d=d+19&-16}else{d=0}f=b+136|0;c[f>>2]=d;f=b+188|0;c[f>>2]=0;f=b+180|0;c[f>>2]=0;f=b+184|0;c[f>>2]=0;f=b+124|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;i=e;return}function Hp(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=9256;if((a[b+192>>0]|0)!=0?(e=c[b+136>>2]|0,Db[c[c[e>>2]>>2]&255](e),e=c[b+136>>2]|0,(e|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=b+124|0;do{e=e+ -60|0;Bp(e)}while((e|0)!=(b+4|0));if((b|0)==0){i=d;return}dw(b);i=d;return}function Ip(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=9256;if((a[b+192>>0]|0)!=0?(e=c[b+136>>2]|0,Db[c[c[e>>2]>>2]&255](e),e=c[b+136>>2]|0,(e|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=b+124|0;do{e=e+ -60|0;Bp(e)}while((e|0)!=(b+4|0));i=d;return}function Jp(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;m=i;i=i+48|0;c[4336]=(c[4336]|0)+1;g=cw(83)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}c[g>>2]=h;b[g+4>>1]=j;b[g+6>>1]=k;h=g+16|0;c[h+0>>2]=c[e+0>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];c[h+12>>2]=c[e+12>>2];h=g+32|0;c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];c[g+8>>2]=0;h=g+56|0;c[h>>2]=0;j=g+52|0;c[j>>2]=0;c[m+16>>2]=c[e+0>>2];c[m+20>>2]=c[e+4>>2];c[m+24>>2]=c[e+8>>2];c[m+28>>2]=c[e+12>>2];c[m+32>>2]=c[f+0>>2];c[m+36>>2]=c[f+4>>2];c[m+40>>2]=c[f+8>>2];c[m+44>>2]=c[f+12>>2];c[g+60>>2]=c[d+144>>2];e=(c[d+188>>2]|0)+1|0;c[d+188>>2]=e;c[g+12>>2]=e;e=c[d+8>>2]|0;if((e|0)==0){c[4336]=(c[4336]|0)+1;e=cw(63)|0;if((e|0)!=0?(c[(e+19&-16)+ -4>>2]=e,(e+19&-16|0)!=0):0){k=(e+19&-16)+0|0;f=k+44|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(f|0));e=e+19&-16}else{e=0}}else{c[d+8>>2]=0}c[e+32>>2]=0;c[e+36>>2]=g;c[e+40>>2]=0;c[e+0>>2]=c[m+16>>2];c[e+4>>2]=c[m+20>>2];c[e+8>>2]=c[m+24>>2];c[e+12>>2]=c[m+28>>2];c[e+16>>2]=c[m+32>>2];c[e+20>>2]=c[m+36>>2];c[e+24>>2]=c[m+40>>2];c[e+28>>2]=c[m+44>>2];Ep(d+4|0,c[d+4>>2]|0,e);c[d+16>>2]=(c[d+16>>2]|0)+1;c[g+48>>2]=e;e=d+(c[d+144>>2]<<2)+124|0;c[j>>2]=0;c[h>>2]=c[e>>2];f=c[e>>2]|0;if((f|0)!=0){c[f+52>>2]=g}c[e>>2]=g;if((a[d+193>>0]|0)!=0){i=m;return g|0}c[m>>2]=9520;c[m+4>>2]=d;c[m+8>>2]=g;Kp(c[d+4>>2]|0,m+16|0,m);Kp(c[d+64>>2]|0,m+16|0,m);i=m;return g|0}function Kp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;if((a|0)==0){i=f;return}n=+g[b>>2];l=+g[b+4>>2];j=+g[b+8>>2];o=+g[b+16>>2];m=+g[b+20>>2];p=+g[b+24>>2];c[4336]=(c[4336]|0)+1;q=cw(275)|0;if((q|0)!=0){c[(q+19&-16)+ -4>>2]=q;b=q+19&-16;if((q+19&-16|0)!=0){c[b>>2]=a}}else{b=0}t=64;a=1;do{q=a+ -1|0;r=c[b+(q<<2)>>2]|0;do{if(((((+g[r>>2]<=o?+g[r+16>>2]>=n:0)?+g[r+4>>2]<=m:0)?+g[r+20>>2]>=l:0)?+g[r+8>>2]<=p:0)?+g[r+24>>2]>=j:0){if((c[r+40>>2]|0)==0){Fb[c[(c[d>>2]|0)+12>>2]&127](d,r);a=q;break}s=c[r+36>>2]|0;if((q|0)==(t|0)?(k=(t|0)==0?1:t<<1,(a|0)<=(k|0)):0){if((k|0)!=0?(c[4336]=(c[4336]|0)+1,e=cw((k<<2|3)+16|0)|0,(e|0)!=0):0){c[(e+19&-16)+ -4>>2]=e;u=e+19&-16}else{u=0}if((t|0)>0){w=0;do{v=u+(w<<2)|0;if((v|0)!=0){c[v>>2]=c[b+(w<<2)>>2]}w=w+1|0}while((w|0)!=(t|0))}if((b|0)==0){t=k;b=u}else{c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);t=k;b=u}}q=b+(q<<2)|0;if((q|0)!=0){c[q>>2]=s}q=c[r+40>>2]|0;if((a|0)==(t|0)){t=(a|0)==0?1:a<<1;if((a|0)<(t|0)){if((t|0)!=0?(c[4336]=(c[4336]|0)+1,h=cw((t<<2|3)+16|0)|0,(h|0)!=0):0){c[(h+19&-16)+ -4>>2]=h;r=h+19&-16}else{r=0}if((a|0)>0){s=0;do{u=r+(s<<2)|0;if((u|0)!=0){c[u>>2]=c[b+(s<<2)>>2]}s=s+1|0}while((s|0)!=(a|0))}if((b|0)==0){b=r}else{c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);b=r}}else{t=a}}r=b+(a<<2)|0;if((r|0)!=0){c[r>>2]=q}a=a+1|0}else{a=q}}while(0)}while((a|0)>0);if((b|0)==0){i=f;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=f;return}function Lp(a){a=a|0;return}function Mp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if((c[d+60>>2]|0)==2){g=c[d+48>>2]|0;Fp(b+64|0,g)|0;h=c[b+68>>2]|0;if((h|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+68>>2]=g;c[b+76>>2]=(c[b+76>>2]|0)+ -1}else{g=c[d+48>>2]|0;Fp(b+4|0,g)|0;h=c[b+8>>2]|0;if((h|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+8>>2]=g;c[b+16>>2]=(c[b+16>>2]|0)+ -1}h=c[d+52>>2]|0;g=c[d+56>>2]|0;if((h|0)==0){c[b+(c[d+60>>2]<<2)+124>>2]=g}else{c[h+56>>2]=g}g=c[d+56>>2]|0;if((g|0)!=0){c[g+52>>2]=c[d+52>>2]}h=c[b+136>>2]|0;ic[c[(c[h>>2]|0)+16>>2]&63](h,d,e);if((d|0)==0){h=b+194|0;a[h>>0]=1;i=f;return}c[4338]=(c[4338]|0)+1;dw(c[d+ -4>>2]|0);h=b+194|0;a[h>>0]=1;i=f;return}function Np(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=i;c[d+0>>2]=c[b+16>>2];c[d+4>>2]=c[b+20>>2];c[d+8>>2]=c[b+24>>2];c[d+12>>2]=c[b+28>>2];c[e+0>>2]=c[b+32>>2];c[e+4>>2]=c[b+36>>2];c[e+8>>2]=c[b+40>>2];c[e+12>>2]=c[b+44>>2];i=a;return}function Op(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;d=i;i=i+16|0;c[d>>2]=9440;c[d+4>>2]=e;Pp(a+4|0,c[a+4>>2]|0,b,e+4|0,e+20|0,+g[e+32>>2],f,h,d);Pp(a+64|0,c[a+64>>2]|0,b,e+4|0,e+20|0,+g[e+32>>2],f,h,d);i=d;return}function Pp(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=+j;k=k|0;l=l|0;m=m|0;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0;n=i;i=i+32|0;if((d|0)==0){i=n;return}s=c[b+44>>2]|0;if((s|0)<128){if((c[b+48>>2]|0)<128){c[4336]=(c[4336]|0)+1;t=cw(531)|0;if((t|0)==0){t=0}else{c[(t+19&-16)+ -4>>2]=t;t=t+19&-16}v=c[b+44>>2]|0;if((v|0)>0){u=0;do{w=t+(u<<2)|0;if((w|0)!=0){c[w>>2]=c[(c[b+52>>2]|0)+(u<<2)>>2]}u=u+1|0}while((u|0)!=(v|0))}u=c[b+52>>2]|0;if((u|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[u+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=t;c[b+48>>2]=128;t=b+52|0}else{t=b+52|0}while(1){u=(c[t>>2]|0)+(s<<2)|0;if((u|0)!=0){c[u>>2]=0}s=s+1|0;if((s|0)==128){s=b+48|0;break}}}else{s=b+48|0}c[b+44>>2]=128;c[c[b+52>>2]>>2]=d;d=1;v=126;do{t=d+ -1|0;w=c[b+52>>2]|0;u=c[w+(t<<2)>>2]|0;x=+g[u+4>>2]- +g[l+4>>2];y=+g[u+8>>2]- +g[l+8>>2];g[n>>2]=+g[u>>2]- +g[l>>2];g[n+4>>2]=x;g[n+8>>2]=y;g[n+12>>2]=0.0;y=+g[u+20>>2]- +g[k+4>>2];x=+g[u+24>>2]- +g[k+8>>2];g[n+16>>2]=+g[u+16>>2]- +g[k>>2];g[n+20>>2]=y;g[n+24>>2]=x;g[n+28>>2]=0.0;D=c[h>>2]|0;x=+g[e>>2];y=+g[f>>2];A=(+g[n+(D<<4)>>2]-x)*y;x=y*(+g[n+(1-D<<4)>>2]-x);D=c[h+4>>2]|0;y=+g[e+4>>2];E=+g[f+4>>2];z=(+g[n+(D<<4)+4>>2]-y)*E;y=E*(+g[n+(1-D<<4)+4>>2]-y);do{if(((!(A>y|z>x)?(p=z>A?z:A,r=y<x?y:x,D=c[h+8>>2]|0,q=+g[e+8>>2],E=+g[f+8>>2],o=(+g[n+(D<<4)+8>>2]-q)*E,q=E*(+g[n+(1-D<<4)+8>>2]-q),!(p>q|o>r)):0)?(o>p?o:p)<j:0)?(q<r?q:r)>0.0:0){if((c[u+40>>2]|0)==0){Fb[c[(c[m>>2]|0)+12>>2]&127](m,u);d=t;break}if((t|0)>(v|0)){v=c[b+44>>2]|0;if((v|0)<(v<<1|0)){if((c[s>>2]|0)<(v<<1|0)){if((v|0)!=0){c[4336]=(c[4336]|0)+1;w=cw((v<<3|3)+16|0)|0;if((w|0)==0){w=0}else{c[(w+19&-16)+ -4>>2]=w;w=w+19&-16}C=c[b+44>>2]|0;if((C|0)>0){B=0;do{D=w+(B<<2)|0;if((D|0)!=0){c[D>>2]=c[(c[b+52>>2]|0)+(B<<2)>>2]}B=B+1|0}while((B|0)!=(C|0))}}else{w=0}B=c[b+52>>2]|0;if((B|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[B+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=w;c[s>>2]=v<<1;B=v}else{B=v}do{w=w+(B<<2)|0;if((w|0)!=0){c[w>>2]=0}B=B+1|0;w=c[b+52>>2]|0}while((B|0)!=(v<<1|0))}c[b+44>>2]=v<<1;v=(v<<1)+ -2|0}c[w+(t<<2)>>2]=c[u+36>>2];c[(c[b+52>>2]|0)+(d<<2)>>2]=c[u+40>>2];d=d+1|0}else{d=t}}while(0)}while((d|0)!=0);i=n;return}function Qp(a){a=a|0;return}function Rp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+48|0;c[f+32>>2]=9360;c[f+36>>2]=e;c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[f+16>>2]=c[d+0>>2];c[f+20>>2]=c[d+4>>2];c[f+24>>2]=c[d+8>>2];c[f+28>>2]=c[d+12>>2];Kp(c[a+4>>2]|0,f,f+32|0);Kp(c[a+64>>2]|0,f,f+32|0);i=f;return}function Sp(a){a=a|0;return}function Tp(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0.0;h=i;i=i+16|0;r=+g[e>>2];p=+g[e+4>>2];n=+g[e+8>>2];k=+g[e+12>>2];q=+g[f>>2];o=+g[f+4>>2];m=+g[f+8>>2];j=+g[f+12>>2];do{if((c[d+60>>2]|0)==2){D=c[d+48>>2]|0;Fp(b+64|0,D)|0;l=c[b+68>>2]|0;if((l|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[b+68>>2]=D;c[b+76>>2]=(c[b+76>>2]|0)+ -1;l=c[b+8>>2]|0;if((l|0)==0){c[4336]=(c[4336]|0)+1;D=cw(63)|0;if((D|0)!=0?(c[(D+19&-16)+ -4>>2]=D,(D+19&-16|0)!=0):0){E=(D+19&-16)+0|0;l=E+44|0;do{c[E>>2]=0;E=E+4|0}while((E|0)<(l|0));l=D+19&-16}else{l=0}}else{c[b+8>>2]=0}c[l+32>>2]=0;c[l+36>>2]=d;c[l+40>>2]=0;g[l>>2]=r;g[l+4>>2]=p;g[l+8>>2]=n;g[l+12>>2]=k;g[l+16>>2]=q;g[l+20>>2]=o;g[l+24>>2]=m;g[l+28>>2]=j;Ep(b+4|0,c[b+4>>2]|0,l);c[b+16>>2]=(c[b+16>>2]|0)+1;c[d+48>>2]=l;l=1}else{c[b+168>>2]=(c[b+168>>2]|0)+1;l=c[d+48>>2]|0;y=+g[l>>2];if(((((y<=q?(s=+g[l+16>>2],s>=r):0)?(t=+g[l+4>>2],t<=o):0)?(w=+g[l+20>>2],w>=p):0)?(u=+g[l+8>>2],u<=m):0)?(v=+g[l+24>>2],v>=n):0){H=+g[d+16>>2];C=+g[d+20>>2];B=+g[d+24>>2];x=+g[b+140>>2];z=(+g[d+32>>2]-H)*.5*x;A=x*(+g[d+36>>2]-C)*.5;x=x*(+g[d+40>>2]-B)*.5;if(r-H<0.0){z=-z}if(p-C<0.0){A=-A}if(n-B<0.0){x=-x}if(!(!(y<=r)|!(t<=p)|!(u<=n)|!(s>=q)|!(w>=o)|!(v>=m))){l=0;break}if(z>0.0){r=r+-.05000000074505806;q=z+(q+.05000000074505806)}else{r=z+(r+-.05000000074505806);q=q+.05000000074505806}if(A>0.0){p=p+-.05000000074505806;o=A+(o+.05000000074505806)}else{p=A+(p+-.05000000074505806);o=o+.05000000074505806}if(x>0.0){n=n+-.05000000074505806;m=x+(m+.05000000074505806)}else{n=x+(n+-.05000000074505806);m=m+.05000000074505806}F=Fp(b+4|0,l)|0;a:do{if((F|0)!=0){D=c[b+12>>2]|0;if(!((D|0)>-1)){F=c[b+4>>2]|0;break}if((D|0)>0){E=0;while(1){G=c[F+32>>2]|0;E=E+1|0;if((G|0)==0){break a}if((E|0)>=(D|0)){F=G;break}else{F=G}}}}else{F=0}}while(0);g[l>>2]=r;g[l+4>>2]=p;g[l+8>>2]=n;g[l+12>>2]=k;g[l+16>>2]=q;g[l+20>>2]=o;g[l+24>>2]=m;g[l+28>>2]=j;Ep(b+4|0,F,l);c[b+172>>2]=(c[b+172>>2]|0)+1;l=1;break}F=Fp(b+4|0,l)|0;b:do{if((F|0)!=0){D=c[b+12>>2]|0;if(!((D|0)>-1)){F=c[b+4>>2]|0;break}if((D|0)>0){E=0;while(1){G=c[F+32>>2]|0;E=E+1|0;if((G|0)==0){break b}if((E|0)>=(D|0)){F=G;break}else{F=G}}}}else{F=0}}while(0);g[l>>2]=r;g[l+4>>2]=p;g[l+8>>2]=n;g[l+12>>2]=k;g[l+16>>2]=q;g[l+20>>2]=o;g[l+24>>2]=m;g[l+28>>2]=j;Ep(b+4|0,F,l);c[b+172>>2]=(c[b+172>>2]|0)+1;l=1}}while(0);D=c[d+52>>2]|0;E=c[d+56>>2]|0;if((D|0)==0){c[b+(c[d+60>>2]<<2)+124>>2]=E}else{c[D+56>>2]=E}D=c[d+56>>2]|0;if((D|0)!=0){c[D+52>>2]=c[d+52>>2]}c[d+16>>2]=c[e+0>>2];c[d+20>>2]=c[e+4>>2];c[d+24>>2]=c[e+8>>2];c[d+28>>2]=c[e+12>>2];c[d+32>>2]=c[f+0>>2];c[d+36>>2]=c[f+4>>2];c[d+40>>2]=c[f+8>>2];c[d+44>>2]=c[f+12>>2];c[d+60>>2]=c[b+144>>2];f=b+(c[b+144>>2]<<2)+124|0;c[d+52>>2]=0;c[d+56>>2]=c[f>>2];e=c[f>>2]|0;if((e|0)!=0){c[e+52>>2]=d}c[f>>2]=d;if(!l){i=h;return}a[b+194>>0]=1;if((a[b+193>>0]|0)!=0){i=h;return}c[h>>2]=9520;c[h+4>>2]=b;Up(b+64|0,c[b+64>>2]|0,c[d+48>>2]|0,h);Up(b+4|0,c[b+4>>2]|0,c[d+48>>2]|0,h);i=h;return}function Up(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;if((d|0)==0|(e|0)==0){i=h;return}if((c[b+24>>2]|0)<128?(c[b+28>>2]|0)<128:0){c[4336]=(c[4336]|0)+1;j=cw(1043)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}m=c[b+24>>2]|0;if((m|0)>0){l=0;do{k=j+(l<<3)|0;if((k|0)!=0){p=(c[b+32>>2]|0)+(l<<3)|0;q=c[p+4>>2]|0;c[k>>2]=c[p>>2];c[k+4>>2]=q}l=l+1|0}while((l|0)!=(m|0))}k=c[b+32>>2]|0;if((k|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=j;c[b+28>>2]=128;j=b+28|0}else{j=b+28|0}c[b+24>>2]=128;k=c[b+32>>2]|0;c[k>>2]=d;c[k+4>>2]=e;k=1;m=124;do{l=k+ -1|0;n=c[b+32>>2]|0;d=c[n+(l<<3)>>2]|0;e=c[n+(l<<3)+4>>2]|0;if((l|0)>(m|0)){m=c[b+24>>2]|0;if((m|0)<(m<<1|0)?(c[j>>2]|0)<(m<<1|0):0){if((m|0)!=0){c[4336]=(c[4336]|0)+1;n=cw((m<<4|3)+16|0)|0;if((n|0)==0){n=0}else{c[(n+19&-16)+ -4>>2]=n;n=n+19&-16}q=c[b+24>>2]|0;if((q|0)>0){p=0;do{o=n+(p<<3)|0;if((o|0)!=0){s=(c[b+32>>2]|0)+(p<<3)|0;r=c[s+4>>2]|0;c[o>>2]=c[s>>2];c[o+4>>2]=r}p=p+1|0}while((p|0)!=(q|0))}}else{n=0}o=c[b+32>>2]|0;if((o|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[o+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=n;c[j>>2]=m<<1}c[b+24>>2]=m<<1;m=(m<<1)+ -4|0}do{if((d|0)==(e|0)){if((c[d+40>>2]|0)==0){k=l}else{r=c[d+36>>2]|0;s=n+(l<<3)|0;c[s>>2]=r;c[s+4>>2]=r;s=c[d+40>>2]|0;r=(c[b+32>>2]|0)+(k<<3)|0;c[r>>2]=s;c[r+4>>2]=s;r=c[d+40>>2]|0;s=(c[b+32>>2]|0)+(k+1<<3)|0;c[s>>2]=c[d+36>>2];c[s+4>>2]=r;k=k+2|0}}else{if(((((+g[d>>2]<=+g[e+16>>2]?+g[d+16>>2]>=+g[e>>2]:0)?+g[d+4>>2]<=+g[e+20>>2]:0)?+g[d+20>>2]>=+g[e+4>>2]:0)?+g[d+8>>2]<=+g[e+24>>2]:0)?+g[d+24>>2]>=+g[e+8>>2]:0){o=(c[e+40>>2]|0)!=0;if((c[d+40>>2]|0)==0){if(o){s=c[e+36>>2]|0;r=n+(l<<3)|0;c[r>>2]=d;c[r+4>>2]=s;r=c[e+40>>2]|0;s=(c[b+32>>2]|0)+(k<<3)|0;c[s>>2]=d;c[s+4>>2]=r;k=k+1|0;break}else{ic[c[(c[f>>2]|0)+8>>2]&63](f,d,e);k=l;break}}else{l=n+(l<<3)|0;n=c[d+36>>2]|0;if(o){r=c[e+36>>2]|0;c[l>>2]=n;c[l+4>>2]=r;r=c[e+36>>2]|0;s=(c[b+32>>2]|0)+(k<<3)|0;c[s>>2]=c[d+40>>2];c[s+4>>2]=r;s=c[e+40>>2]|0;r=(c[b+32>>2]|0)+(k+1<<3)|0;c[r>>2]=c[d+36>>2];c[r+4>>2]=s;r=c[e+40>>2]|0;s=(c[b+32>>2]|0)+(k+2<<3)|0;c[s>>2]=c[d+40>>2];c[s+4>>2]=r;k=k+3|0;break}else{c[l>>2]=n;c[l+4>>2]=e;s=(c[b+32>>2]|0)+(k<<3)|0;c[s>>2]=c[d+40>>2];c[s+4>>2]=e;k=k+1|0;break}}}else{k=l}}}while(0)}while((k|0)!=0);i=h;return}function Vp(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;Dp(b+4|0,((aa(c[b+152>>2]|0,c[b+16>>2]|0)|0)/100|0)+1|0);if((c[b+164>>2]|0)!=0){k=((aa(c[b+148>>2]|0,c[b+76>>2]|0)|0)/100|0)+1|0;Dp(b+64|0,k);k=(c[b+164>>2]|0)-k|0;c[b+164>>2]=(k|0)<0?0:k}l=((c[b+144>>2]|0)+1|0)%2|0;c[b+144>>2]=l;l=c[b+(l<<2)+124>>2]|0;if((l|0)!=0){do{m=l+56|0;k=l;l=c[m>>2]|0;n=c[k+52>>2]|0;if((n|0)==0){c[b+(c[k+60>>2]<<2)+124>>2]=l}else{c[n+56>>2]=l}n=c[m>>2]|0;if((n|0)!=0){c[n+52>>2]=c[k+52>>2]}c[k+52>>2]=0;c[m>>2]=c[b+132>>2];m=c[b+132>>2]|0;if((m|0)!=0){c[m+52>>2]=k}c[b+132>>2]=k;m=c[k+48>>2]|0;Fp(b+4|0,m)|0;n=c[b+8>>2]|0;if((n|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0)}c[b+8>>2]=m;c[b+16>>2]=(c[b+16>>2]|0)+ -1;c[e+16>>2]=c[k+16>>2];c[e+20>>2]=c[k+20>>2];c[e+24>>2]=c[k+24>>2];c[e+28>>2]=c[k+28>>2];c[e+32>>2]=c[k+32>>2];c[e+36>>2]=c[k+36>>2];c[e+40>>2]=c[k+40>>2];c[e+44>>2]=c[k+44>>2];m=c[b+68>>2]|0;if((m|0)==0){c[4336]=(c[4336]|0)+1;n=cw(63)|0;if((n|0)!=0?(c[(n+19&-16)+ -4>>2]=n,(n+19&-16|0)!=0):0){m=(n+19&-16)+0|0;o=m+44|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(o|0));m=n+19&-16}else{m=0}}else{c[b+68>>2]=0}c[m+32>>2]=0;c[m+36>>2]=k;c[m+40>>2]=0;c[m+0>>2]=c[e+16>>2];c[m+4>>2]=c[e+20>>2];c[m+8>>2]=c[e+24>>2];c[m+12>>2]=c[e+28>>2];c[m+16>>2]=c[e+32>>2];c[m+20>>2]=c[e+36>>2];c[m+24>>2]=c[e+40>>2];c[m+28>>2]=c[e+44>>2];Ep(b+64|0,c[b+64>>2]|0,m);c[b+76>>2]=(c[b+76>>2]|0)+1;c[k+48>>2]=m;c[k+60>>2]=2}while((l|0)!=0);c[b+164>>2]=c[b+76>>2];a[b+194>>0]=1}c[e>>2]=9520;c[e+4>>2]=b;if((a[b+193>>0]|0)!=0?(Up(b+4|0,c[b+4>>2]|0,c[b+64>>2]|0,e),(a[b+193>>0]|0)!=0):0){q=c[b+4>>2]|0;Up(b+4|0,q,q,e)}do{if((a[b+194>>0]|0)!=0?(h=c[b+136>>2]|0,h=Hb[c[(c[h>>2]|0)+28>>2]&127](h)|0,j=c[h+4>>2]|0,(j|0)>0):0){l=(aa(c[b+156>>2]|0,j)|0)/100|0;k=c[b+160>>2]|0;k=(k|0)>(l|0)?k:l;l=(j|0)<(k|0)?j:k;if((l|0)>0){k=0;do{p=((c[b+184>>2]|0)+k|0)%(j|0)|0;o=c[h+12>>2]|0;n=c[o+(p<<4)>>2]|0;p=c[o+(p<<4)+4>>2]|0;o=c[n+48>>2]|0;m=c[p+48>>2]|0;if(!(((((+g[o>>2]<=+g[m+16>>2]?+g[o+16>>2]>=+g[m>>2]:0)?+g[o+4>>2]<=+g[m+20>>2]:0)?+g[o+20>>2]>=+g[m+4>>2]:0)?+g[o+8>>2]<=+g[m+24>>2]:0)?+g[o+24>>2]>=+g[m+8>>2]:0)){j=c[b+136>>2]|0;Lb[c[(c[j>>2]|0)+12>>2]&31](j,n,p,d)|0;j=c[h+4>>2]|0;k=k+ -1|0;l=l+ -1|0}k=k+1|0}while((k|0)<(l|0));if((j|0)<=0){c[b+184>>2]=0;break}}c[b+184>>2]=((c[b+184>>2]|0)+l|0)%(j|0)|0}}while(0);c[b+180>>2]=(c[b+180>>2]|0)+1;c[b+160>>2]=1;a[b+194>>0]=0;h=c[b+168>>2]|0;if((h|0)==0){g[b+176>>2]=0.0;j=c[b+172>>2]|0}else{j=c[b+172>>2]|0;g[b+176>>2]=+(j>>>0)/+(h>>>0)}c[b+172>>2]=j>>>1;c[b+168>>2]=h>>>1;q=c[b+136>>2]|0;if(!(Hb[c[(c[q>>2]|0)+56>>2]&127](q)|0)){i=e;return}h=c[b+136>>2]|0;h=Hb[c[(c[h>>2]|0)+28>>2]&127](h)|0;l=c[h+4>>2]|0;if((l|0)>1){Lk(h,0,l+ -1|0);o=0;m=0;j=0;k=0;f=45}else{m=0;o=0;j=0;k=0}while(1){if((f|0)==45){l=c[h+4>>2]|0}if((j|0)>=(l|0)){break}n=c[h+12>>2]|0;l=n+(j<<4)|0;f=c[l>>2]|0;n=n+(j<<4)+4|0;p=c[n>>2]|0;if((f|0)==(m|0)){if((p|0)==(o|0)){f=55}else{f=49}}else{m=f;f=49}if((f|0)==49){f=0;o=c[m+48>>2]|0;q=c[p+48>>2]|0;if(((((+g[o>>2]<=+g[q+16>>2]?+g[o+16>>2]>=+g[q>>2]:0)?+g[o+4>>2]<=+g[q+20>>2]:0)?+g[o+20>>2]>=+g[q+4>>2]:0)?+g[o+8>>2]<=+g[q+24>>2]:0)?+g[o+24>>2]>=+g[q+8>>2]:0){o=p}else{o=p;f=55}}if((f|0)==55){q=c[b+136>>2]|0;ic[c[(c[q>>2]|0)+32>>2]&63](q,l,d);c[l>>2]=0;c[n>>2]=0;k=k+1|0}j=j+1|0;f=45}if((l|0)>1){Lk(h,0,l+ -1|0);l=c[h+4>>2]|0}b=l-k|0;if((k|0)<0){if((c[h+8>>2]|0)<(b|0)){if((l|0)==(k|0)){d=0}else{c[4336]=(c[4336]|0)+1;d=cw((b<<4|3)+16|0)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}k=c[h+4>>2]|0}if((k|0)>0){f=0;do{q=c[h+12>>2]|0;c[d+(f<<4)>>2]=c[q+(f<<4)>>2];c[d+(f<<4)+4>>2]=c[q+(f<<4)+4>>2];c[d+(f<<4)+8>>2]=c[q+(f<<4)+8>>2];c[d+(f<<4)+12>>2]=c[q+(f<<4)+12>>2];f=f+1|0}while((f|0)!=(k|0))}f=c[h+12>>2]|0;if((f|0)!=0){if((a[h+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[h+12>>2]=0}a[h+16>>0]=1;c[h+12>>2]=d;c[h+8>>2]=b;d=h+12|0}else{d=h+12|0}do{p=(c[d>>2]|0)+(l<<4)|0;l=l+1|0;q=(l|0)==(b|0);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0}while(!q)}c[h+4>>2]=b;i=e;return}function Wp(a){a=a|0;return c[a+136>>2]|0}function Xp(a){a=a|0;return c[a+136>>2]|0}function Yp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;e=i;f=c[a+4>>2]|0;a=c[a+64>>2]|0;do{if((f|0)==0){if((a|0)==0){h=0.0;n=0.0;q=0.0;r=0.0;m=0.0;k=0.0;j=0.0;l=0.0}else{h=+g[a>>2];n=+g[a+4>>2];q=+g[a+8>>2];r=+g[a+12>>2];m=+g[a+16>>2];k=+g[a+20>>2];j=+g[a+24>>2];l=+g[a+28>>2]}}else{h=+g[f>>2];if((a|0)==0){n=+g[f+4>>2];q=+g[f+8>>2];r=+g[f+12>>2];m=+g[f+16>>2];k=+g[f+20>>2];j=+g[f+24>>2];l=+g[f+28>>2];break}else{t=+g[a>>2];m=+g[f+16>>2];p=+g[a+16>>2];s=+g[f+4>>2];n=+g[a+4>>2];l=+g[f+20>>2];k=+g[a+20>>2];r=+g[f+8>>2];q=+g[a+8>>2];j=+g[f+24>>2];o=+g[a+24>>2];h=h<t?h:t;n=s<n?s:n;q=r<q?r:q;r=0.0;m=m>p?m:p;k=l>k?l:k;j=j>o?j:o;l=0.0;break}}}while(0);g[b>>2]=h;g[b+4>>2]=n;g[b+8>>2]=q;g[b+12>>2]=r;g[d>>2]=m;g[d+4>>2]=k;g[d+8>>2]=j;g[d+12>>2]=l;i=e;return}function Zp(b,d){b=b|0;d=d|0;var e=0;d=i;if((c[b+16>>2]|0)!=(0-(c[b+76>>2]|0)|0)){i=d;return}e=c[b+4>>2]|0;if((e|0)!=0){Cp(b+4|0,e)}e=c[b+8>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+8>>2]=0;c[b+12>>2]=-1;e=c[b+36>>2]|0;if((e|0)!=0){if((a[b+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;c[b+20>>2]=0;e=c[b+64>>2]|0;if((e|0)!=0){Cp(b+64|0,e)}e=c[b+68>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+68>>2]=0;c[b+72>>2]=-1;e=c[b+96>>2]|0;if((e|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;c[b+80>>2]=0;a[b+193>>0]=0;a[b+194>>0]=1;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+124>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;c[b+176>>2]=0;c[b+180>>2]=0;c[b+184>>2]=0;c[b+188>>2]=0;i=d;return}function _p(a){a=a|0;return}function $p(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function aq(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+4>>2]|0;Zb[c[(c[a>>2]|0)+8>>2]&31](a,c[b+36>>2]|0)|0;i=d;return}function bq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function cq(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+4>>2]|0;Zb[c[(c[a>>2]|0)+8>>2]&31](a,c[b+36>>2]|0)|0;i=d;return}function dq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function eq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((b|0)==(d|0)){i=e;return}f=c[(c[a+4>>2]|0)+136>>2]|0;Qb[c[(c[f>>2]|0)+8>>2]&31](f,c[b+36>>2]|0,c[d+36>>2]|0)|0;d=(c[a+4>>2]|0)+160|0;c[d>>2]=(c[d>>2]|0)+1;i=e;return}function fq(a,b){a=a|0;b=b|0;var d=0;d=i;ic[c[(c[a>>2]|0)+8>>2]&63](a,b,c[(c[a+8>>2]|0)+48>>2]|0);i=d;return}function gq(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;c[b>>2]=9600;c[4336]=(c[4336]|0)+1;m=cw(379)|0;if((m|0)==0){m=0}else{c[(m+19&-16)+ -4>>2]=m;m=m+19&-16}g[m+308>>2]=9999999747378752.0e-20;n=m+332|0;a[n>>0]=a[n>>0]&-16;c[b+24>>2]=m;m=(c[d+20>>2]|0)==0;c[4336]=(c[4336]|0)+1;n=cw(23)|0;if((n|0)==0){o=0}else{c[(n+19&-16)+ -4>>2]=n;o=n+19&-16}n=(o|0)==0;if(m){if(n){o=0}else{c[o>>2]=12224}c[b+28>>2]=o}else{if(n){o=0}else{c[o>>2]=10896}c[b+28>>2]=o}c[4336]=(c[4336]|0)+1;m=cw(43)|0;if((m|0)!=0?(l=m+19&-16,c[l+ -4>>2]=m,(m+19&-16|0)!=0):0){n=c[b+24>>2]|0;o=c[b+28>>2]|0;a[l+4>>0]=0;c[(m+19&-16)>>2]=16120;c[l+16>>2]=0;c[l+20>>2]=3;c[l+12>>2]=n;c[l+8>>2]=o;l=m+19&-16}else{l=0}c[b+32>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10608;l=l+19&-16}else{l=0}c[b+36>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10504;l=l+19&-16}else{l=0}c[b+40>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10416;l=l+19&-16}else{l=0}c[b+44>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10320;l=l+19&-16}else{l=0}c[b+48>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10224;l=l+19&-16}else{l=0}c[b+52>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10144;l=l+19&-16}else{l=0}c[b+56>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=10048;l=l+19&-16}else{l=0}c[b+60>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=9952;l=l+19&-16}else{l=0}c[b+76>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=9952;l=l+19&-16}else{l=0}c[b+80>>2]=l;a[l+4>>0]=1;c[4336]=(c[4336]|0)+1;l=cw(27)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){a[(l+19&-16)+4>>0]=0;c[(l+19&-16)>>2]=9864;l=l+19&-16}else{l=0}c[b+72>>2]=l;c[4336]=(c[4336]|0)+1;l=cw(35)|0;if((l|0)!=0?(k=l+19&-16,c[k+ -4>>2]=l,(l+19&-16|0)!=0):0){a[k+4>>0]=0;c[(l+19&-16)>>2]=9728;c[k+8>>2]=1;c[k+12>>2]=0;k=l+19&-16}else{k=0}c[b+88>>2]=k;c[4336]=(c[4336]|0)+1;k=cw(35)|0;if((k|0)!=0?(j=k+19&-16,c[j+ -4>>2]=k,(k+19&-16|0)!=0):0){a[j+4>>0]=0;c[(k+19&-16)>>2]=9728;c[j+8>>2]=1;c[j+12>>2]=0;j=k+19&-16}else{j=0}c[b+84>>2]=j;a[j+4>>0]=1;j=c[d+16>>2]|0;j=(j|0)<36?36:j;j=(j|0)>80?j:80;j=(j|0)>44?j:44;k=c[d>>2]|0;if((k|0)==0){a[b+12>>0]=1;c[4336]=(c[4336]|0)+1;k=cw(39)|0;if((k|0)!=0?(h=k+19&-16,c[h+ -4>>2]=k,(k+19&-16|0)!=0):0){l=c[d+8>>2]|0;c[(k+19&-16)>>2]=772;c[h+4>>2]=l;c[4336]=(c[4336]|0)+1;l=cw((l*772|3)+16|0)|0;if((l|0)==0){m=0}else{c[(l+19&-16)+ -4>>2]=l;m=l+19&-16}c[h+16>>2]=m;c[h+12>>2]=m;l=c[h+4>>2]|0;c[h+8>>2]=l;if((l+ -1|0)!=0){o=c[(k+19&-16)>>2]|0;n=l+ -1|0;h=m;do{p=h;h=h+o|0;c[p>>2]=h;n=n+ -1|0}while((n|0)!=0);m=m+(aa(o,l+ -1|0)|0)|0}c[m>>2]=0;h=k+19&-16}else{h=0}c[b+8>>2]=h}else{a[b+12>>0]=0;c[b+8>>2]=k}h=c[d+4>>2]|0;if((h|0)!=0){a[b+20>>0]=0;c[b+16>>2]=h;i=e;return}a[b+20>>0]=1;c[4336]=(c[4336]|0)+1;h=cw(39)|0;if((h|0)!=0?(f=h+19&-16,c[f+ -4>>2]=h,(h+19&-16|0)!=0):0){d=c[d+12>>2]|0;c[(h+19&-16)>>2]=j;c[f+4>>2]=d;d=aa(d,j)|0;c[4336]=(c[4336]|0)+1;d=cw(d+19|0)|0;if((d|0)==0){j=0}else{c[(d+19&-16)+ -4>>2]=d;j=d+19&-16}c[f+16>>2]=j;c[f+12>>2]=j;d=c[f+4>>2]|0;c[f+8>>2]=d;if((d+ -1|0)!=0){l=c[(h+19&-16)>>2]|0;k=d+ -1|0;f=j;do{p=f;f=f+l|0;c[p>>2]=f;k=k+ -1|0}while((k|0)!=0);j=j+(aa(l,d+ -1|0)|0)|0}c[j>>2]=0;f=h+19&-16}else{f=0}c[b+16>>2]=f;i=e;return}function hq(a){a=a|0;var b=0;b=i;iq(a);if((a|0)==0){i=b;return}dw(a);i=b;return}function iq(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=9600;if((a[b+20>>0]|0)!=0){e=c[b+16>>2]|0;f=c[e+16>>2]|0;if((f|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0);e=c[b+16>>2]|0}if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}}if((a[b+12>>0]|0)!=0){e=c[b+8>>2]|0;f=c[e+16>>2]|0;if((f|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0);e=c[b+8>>2]|0}if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}}e=c[b+32>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+32>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+36>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+36>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+40>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+40>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+44>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+44>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+48>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+48>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+52>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+52>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+56>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+56>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+60>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+60>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+76>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+76>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+80>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+80>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+72>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+72>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+88>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+88>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+84>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+84>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+24>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}f=c[b+28>>2]|0;Db[c[c[f>>2]>>2]&255](f);b=c[b+28>>2]|0;if((b|0)==0){i=d;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=d;return}function jq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;do{if(!((b|0)==8&(d|0)==8)){if((b|0)==8&(d|0)==1){a=a+76|0;break}if((b|0)==1&(d|0)==8){a=a+80|0;break}if((d|b|0)==0){a=a+72|0;break}if((b|0)<20&(d|0)==28){a=a+88|0;break}if((d|0)<20&(b|0)==28){a=a+84|0;break}if((b|0)<20){if((d|0)<20){a=a+32|0;break}if((d+ -21|0)>>>0<9){a=a+36|0;break}}else{if((d|0)<20?(b+ -21|0)>>>0<9:0){a=a+40|0;break}}if((b|0)==31){if((d|0)==31){a=a+48|0;break}else{a=a+44|0;break}}else{if((d|0)==31){a=a+52|0;break}else{a=a+56|0;break}}}else{a=a+60|0}}while(0);i=e;return c[a>>2]|0}function kq(a){a=a|0;return c[a+8>>2]|0}function lq(a){a=a|0;return c[a+16>>2]|0}function mq(a){a=a|0;return c[a+24>>2]|0}function nq(a){a=a|0;return}function oq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function pq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;h=c[d>>2]|0;h=Zb[c[(c[h>>2]|0)+56>>2]&31](h,28)|0;if((a[b+4>>0]|0)==0){if((h|0)==0){f=0;i=g;return f|0}j=c[b+8>>2]|0;b=c[b+12>>2]|0;d=c[d>>2]|0;c[h+4>>2]=d;c[h>>2]=16736;a[h+8>>0]=0;c[h+12>>2]=0;a[h+16>>0]=0;c[h+20>>2]=j;c[h+24>>2]=b;if(!(Qb[c[(c[d>>2]|0)+24>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0)){j=h;i=g;return j|0}j=c[h+4>>2]|0;c[h+12>>2]=Qb[c[(c[j>>2]|0)+12>>2]&31](j,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[h+8>>0]=1;j=h;i=g;return j|0}else{if((h|0)==0){j=0;i=g;return j|0}k=c[b+8>>2]|0;b=c[b+12>>2]|0;j=c[d>>2]|0;c[h+4>>2]=j;c[h>>2]=16736;a[h+8>>0]=0;c[h+12>>2]=0;a[h+16>>0]=1;c[h+20>>2]=k;c[h+24>>2]=b;if(!(Qb[c[(c[j>>2]|0)+24>>2]&31](j,c[f+8>>2]|0,c[e+8>>2]|0)|0)){k=h;i=g;return k|0}k=c[h+4>>2]|0;c[h+12>>2]=Qb[c[(c[k>>2]|0)+12>>2]&31](k,c[f+8>>2]|0,c[e+8>>2]|0)|0;a[h+8>>0]=1;k=h;i=g;return k|0}return 0}function qq(a){a=a|0;return}function rq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function sq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,16)|0;if((g|0)==0){g=0;i=b;return g|0}d=c[d>>2]|0;c[g+4>>2]=d;c[g>>2]=15224;a[g+8>>0]=0;c[g+12>>2]=0;if(!(Qb[c[(c[d>>2]|0)+24>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0)){i=b;return g|0}d=c[g+4>>2]|0;c[g+12>>2]=Qb[c[(c[d>>2]|0)+12>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[g+8>>0]=1;i=b;return g|0}function tq(a){a=a|0;return}function uq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function vq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;h=c[d>>2]|0;h=Zb[c[(c[h>>2]|0)+56>>2]&31](h,20)|0;if((h|0)==0){b=0;i=g;return b|0}j=c[d+4>>2]|0;b=a[b+4>>0]|0;d=c[d>>2]|0;c[h+4>>2]=d;c[h>>2]=14392;a[h+8>>0]=0;c[h+12>>2]=j;a[h+16>>0]=b;if((j|0)!=0){j=h;i=g;return j|0}c[h+12>>2]=Qb[c[(c[d>>2]|0)+12>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[h+8>>0]=1;j=h;i=g;return j|0}function wq(a){a=a|0;return}function xq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function yq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,16)|0;if((g|0)==0){g=0;i=b;return g|0}d=c[d>>2]|0;c[g+4>>2]=d;c[g>>2]=14304;a[g+8>>0]=0;c[g+12>>2]=0;c[g+12>>2]=Qb[c[(c[d>>2]|0)+12>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[g+8>>0]=1;i=b;return g|0}function zq(a){a=a|0;return}function Aq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Bq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=i;d=c[b>>2]|0;d=Zb[c[(c[d>>2]|0)+56>>2]&31](d,8)|0;if((d|0)==0){e=0;i=a;return e|0}c[d+4>>2]=c[b>>2];c[d>>2]=10728;e=d;i=a;return e|0}function Cq(a){a=a|0;return}function Dq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Eq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,44)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=15368;a[g+24>>0]=1;c[g+20>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;a[g+28>>0]=1;c[g+32>>2]=c[d+4>>2];a[g+36>>0]=0;c[g+40>>2]=c[(c[f+4>>2]|0)+68>>2];Wt(g,e,f);i=b;return g|0}function Fq(a){a=a|0;return}function Gq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Hq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;h=i;b=c[d>>2]|0;b=Zb[c[(c[b>>2]|0)+56>>2]&31](b,48)|0;if((b|0)==0){m=0;i=h;return m|0}c[b+4>>2]=c[d>>2];c[b>>2]=15536;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+32>>2]=c[d+4>>2];a[b+36>>0]=0;c[4336]=(c[4336]|0)+1;d=cw(87)|0;if((d|0)!=0?(g=d+19&-16,c[g+ -4>>2]=d,(d+19&-16|0)!=0):0){c[(d+19&-16)>>2]=16928;a[g+20>>0]=1;c[g+16>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;a[g+24>>0]=0;a[g+44>>0]=1;c[g+40>>2]=0;c[g+32>>2]=0;c[g+36>>2]=0;a[g+64>>0]=1;c[g+60>>2]=0;c[g+52>>2]=0;c[g+56>>2]=0;c[4336]=(c[4336]|0)+1;j=cw(43)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}k=c[g+8>>2]|0;if((k|0)>0){l=0;do{m=j+(l*12|0)|0;if((m|0)!=0){n=(c[g+16>>2]|0)+(l*12|0)|0;c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2]}l=l+1|0}while((l|0)!=(k|0))}k=c[g+16>>2]|0;if((k|0)!=0){if((a[g+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0)}c[g+16>>2]=0}a[g+20>>0]=1;c[g+16>>2]=j;c[g+12>>2]=2;iv(d+19&-16);g=d+19&-16}else{g=0}c[b+8>>2]=g;c[b+40>>2]=c[(c[e+4>>2]|0)+68>>2];c[b+44>>2]=c[(c[f+4>>2]|0)+68>>2];n=b;i=h;return n|0}function Iq(a){a=a|0;return}function Jq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Kq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,44)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=15368;a[g+24>>0]=1;c[g+20>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;a[g+28>>0]=0;c[g+32>>2]=c[d+4>>2];a[g+36>>0]=0;c[g+40>>2]=c[(c[e+4>>2]|0)+68>>2];Wt(g,e,f);i=b;return g|0}function Lq(a){a=a|0;return}function Mq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Nq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,80)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=15760;a[g+8>>0]=1;d=c[d>>2]|0;c[g+12>>2]=15792;c[g+60>>2]=d;c[g+64>>2]=0;c[g+16>>2]=f;c[g+20>>2]=e;e=Qb[c[(c[d>>2]|0)+12>>2]&31](d,c[f+8>>2]|0,c[e+8>>2]|0)|0;c[g+76>>2]=e;f=c[g+60>>2]|0;Fb[c[(c[f>>2]|0)+20>>2]&127](f,e);i=b;return g|0}function Oq(a){a=a|0;return}function Pq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Qq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=i;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,80)|0;if((g|0)==0){g=0;i=b;return g|0}c[g+4>>2]=c[d>>2];c[g>>2]=15760;a[g+8>>0]=0;d=c[d>>2]|0;c[g+12>>2]=15792;c[g+60>>2]=d;c[g+64>>2]=0;c[g+16>>2]=e;c[g+20>>2]=f;f=Qb[c[(c[d>>2]|0)+12>>2]&31](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;c[g+76>>2]=f;e=c[g+60>>2]|0;Fb[c[(c[e>>2]|0)+20>>2]&127](e,f);i=b;return g|0}function Rq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return}function Sq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function Tq(a){a=a|0;return}function Uq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Vq(a,b){a=a|0;b=b|0;return}function Wq(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0.0;k=i;i=i+288|0;u=c[b+4>>2]|0;a[u+312>>0]=0;c[u>>2]=0;a[u+356>>0]=1;g[u+292>>2]=999999984306749400.0;g[u+296>>2]=999999984306749400.0;g[u+300>>2]=999999984306749400.0;g[u+304>>2]=0.0;c[u+336>>2]=0;c[u+340>>2]=0;c[u+344>>2]=0;c[u+348>>2]=0;a[u+352>>0]=0;a[u+332>>0]=a[u+332>>0]&-16;n=+g[e+48>>2]- +g[d+48>>2]-(+g[h+48>>2]- +g[f+48>>2]);m=+g[e+52>>2]- +g[d+52>>2]-(+g[h+52>>2]- +g[f+52>>2]);l=+g[e+56>>2]- +g[d+56>>2]-(+g[h+56>>2]- +g[f+56>>2]);c[k+216>>2]=8528;g[k+252>>2]=999999984306749400.0;a[k+256>>0]=0;u=c[b+8>>2]|0;t=c[b+12>>2]|0;b=c[b+4>>2]|0;c[k+136>>2]=11040;g[k+140>>2]=0.0;g[k+144>>2]=1.0;g[k+148>>2]=0.0;g[k+152>>2]=0.0;c[k+156>>2]=0;c[k+160>>2]=b;c[k+164>>2]=u;c[k+168>>2]=t;c[k+172>>2]=c[u+4>>2];c[k+176>>2]=c[t+4>>2];g[k+180>>2]=+Tb[c[(c[u>>2]|0)+48>>2]&15](u);g[k+184>>2]=+Tb[c[(c[t>>2]|0)+48>>2]&15](t);a[k+188>>0]=0;c[k+196>>2]=-1;c[k+208>>2]=1;c[k+212>>2]=1;g[k+128>>2]=999999984306749400.0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];c[k+16>>2]=c[d+16>>2];c[k+20>>2]=c[d+20>>2];c[k+24>>2]=c[d+24>>2];c[k+28>>2]=c[d+28>>2];c[k+32>>2]=c[d+32>>2];c[k+36>>2]=c[d+36>>2];c[k+40>>2]=c[d+40>>2];c[k+44>>2]=c[d+44>>2];c[k+48>>2]=c[d+48>>2];c[k+52>>2]=c[d+52>>2];c[k+56>>2]=c[d+56>>2];c[k+60>>2]=c[d+60>>2];c[k+64>>2]=c[f+0>>2];c[k+68>>2]=c[f+4>>2];c[k+72>>2]=c[f+8>>2];c[k+76>>2]=c[f+12>>2];c[k+80>>2]=c[f+16>>2];c[k+84>>2]=c[f+20>>2];c[k+88>>2]=c[f+24>>2];c[k+92>>2]=c[f+28>>2];c[k+96>>2]=c[f+32>>2];c[k+100>>2]=c[f+36>>2];c[k+104>>2]=c[f+40>>2];c[k+108>>2]=c[f+44>>2];c[k+112>>2]=c[f+48>>2];c[k+116>>2]=c[f+52>>2];c[k+120>>2]=c[f+56>>2];c[k+124>>2]=c[f+60>>2];_q(k+136|0,k,k+216|0,0,0);t=(a[k+256>>0]|0)==0;b=k+236|0;c[k+264>>2]=c[b+0>>2];c[k+268>>2]=c[b+4>>2];c[k+272>>2]=c[b+8>>2];c[k+276>>2]=c[b+12>>2];if(t){u=0;i=k;return u|0}q=+g[k+252>>2];o=+g[k+220>>2];p=+g[k+224>>2];r=+g[k+228>>2];s=+g[k+232>>2];do{if(q>.0010000000474974513){s=q;q=0.0;t=1;while(1){if((t|0)>32){j=0;e=13;break}v=q;q=q-s/(l*r+(m*p+n*o));if(!(!(q<0.0)&!(q>1.0)&!(q<=v))){j=0;e=13;break}Cb[c[c[j>>2]>>2]&15](j,q);v=1.0-q;g[k+48>>2]=v*+g[d+48>>2]+q*+g[e+48>>2];g[k+52>>2]=v*+g[d+52>>2]+q*+g[e+52>>2];g[k+56>>2]=v*+g[d+56>>2]+q*+g[e+56>>2];g[k+112>>2]=v*+g[f+48>>2]+q*+g[h+48>>2];g[k+116>>2]=v*+g[f+52>>2]+q*+g[h+52>>2];g[k+120>>2]=v*+g[f+56>>2]+q*+g[h+56>>2];_q(k+136|0,k,k+216|0,0,0);if((a[k+256>>0]|0)==0){j=0;e=13;break}s=+g[k+252>>2];if(s<0.0){e=8;break}c[k+264>>2]=c[b+0>>2];c[k+268>>2]=c[b+4>>2];c[k+272>>2]=c[b+8>>2];c[k+276>>2]=c[b+12>>2];o=+g[k+220>>2];p=+g[k+224>>2];r=+g[k+228>>2];if(!(s>.0010000000474974513)){e=10;break}else{t=t+1|0}}if((e|0)==8){g[j+164>>2]=q;r=+g[k+224>>2];s=+g[k+228>>2];v=+g[k+232>>2];g[j+132>>2]=+g[k+220>>2];g[j+136>>2]=r;g[j+140>>2]=s;g[j+144>>2]=v;c[j+148>>2]=c[b+0>>2];c[j+152>>2]=c[b+4>>2];c[j+156>>2]=c[b+8>>2];c[j+160>>2]=c[b+12>>2];u=1;i=k;return u|0}else if((e|0)==10){s=+g[k+232>>2];break}else if((e|0)==13){i=k;return j|0}}else{q=0.0}}while(0);if(l*r+(m*p+n*o)>=-+g[j+172>>2]){u=0;i=k;return u|0}g[j+164>>2]=q;g[j+132>>2]=o;g[j+136>>2]=p;g[j+140>>2]=r;g[j+144>>2]=s;c[j+148>>2]=c[k+264>>2];c[j+152>>2]=c[k+268>>2];c[j+156>>2]=c[k+272>>2];c[j+160>>2]=c[k+276>>2];u=1;i=k;return u|0}function Xq(a){a=a|0;return}function Yq(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Zq(b,e,f,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0,z=0,A=0.0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0;b=i;i=i+10240|0;E=+g[k+52>>2]- +g[j+52>>2];U=+g[k+56>>2]- +g[j+56>>2];g[b>>2]=+g[k+48>>2]- +g[j+48>>2];g[b+4>>2]=E;g[b+8>>2]=U;g[b+12>>2]=0.0;c[b+10088>>2]=f;c[b+10092>>2]=h;U=+g[k>>2];E=+g[j>>2];T=+g[k+16>>2];R=+g[j+16>>2];S=+g[k+32>>2];D=+g[j+32>>2];O=+g[j+4>>2];C=+g[j+20>>2];N=+g[j+36>>2];w=+g[j+8>>2];X=+g[j+24>>2];V=+g[j+40>>2];F=+g[k+4>>2];G=+g[k+20>>2];J=+g[k+36>>2];K=+g[k+8>>2];L=+g[k+24>>2];M=+g[k+40>>2];g[b+10096>>2]=U*E+T*R+S*D;g[b+10100>>2]=U*O+T*C+S*N;g[b+10104>>2]=U*w+T*X+S*V;g[b+10108>>2]=0.0;g[b+10112>>2]=E*F+R*G+D*J;g[b+10116>>2]=O*F+C*G+N*J;g[b+10120>>2]=w*F+X*G+V*J;g[b+10124>>2]=0.0;g[b+10128>>2]=E*K+R*L+D*M;g[b+10132>>2]=O*K+C*L+N*M;g[b+10136>>2]=w*K+X*L+V*M;g[b+10140>>2]=0.0;V=+g[k+48>>2]- +g[j+48>>2];X=+g[k+52>>2]- +g[j+52>>2];w=+g[k+56>>2]- +g[j+56>>2];N=+g[j>>2];C=+g[k>>2];O=+g[j+16>>2];D=+g[k+16>>2];R=+g[j+32>>2];E=+g[k+32>>2];S=+g[j+4>>2];T=+g[j+20>>2];U=+g[j+36>>2];W=+g[j+8>>2];x=+g[j+24>>2];u=+g[j+40>>2];g[b+10144>>2]=N*C+O*D+R*E;g[b+10148>>2]=N*F+O*G+R*J;g[b+10152>>2]=N*K+O*L+R*M;g[b+10156>>2]=0.0;g[b+10160>>2]=C*S+D*T+E*U;g[b+10164>>2]=F*S+G*T+J*U;g[b+10168>>2]=K*S+L*T+M*U;g[b+10172>>2]=0.0;g[b+10176>>2]=C*W+D*x+E*u;g[b+10180>>2]=F*W+G*x+J*u;g[b+10184>>2]=K*W+L*x+M*u;g[b+10188>>2]=0.0;g[b+10192>>2]=V*N+X*O+w*R;g[b+10196>>2]=V*S+X*T+w*U;g[b+10200>>2]=V*W+X*x+w*u;g[b+10204>>2]=0.0;c[b+10208>>2]=61;c[b+10212>>2]=0;c[b+10072>>2]=0;c[b+9836>>2]=0;c[b+9840>>2]=0;c[b+9844>>2]=0;c[b+9848>>2]=0;c[b+10084>>2]=2;c[b+10076>>2]=0;g[b+9852>>2]=0.0;u=+g[b>>2];w=+g[b+4>>2];x=+g[b+8>>2];g[b+9328>>2]=-u;g[b+9332>>2]=-w;g[b+9336>>2]=-x;g[b+9340>>2]=0.0;do{if((av(b+9708|0,b+10088|0,b+9328|0)|0)==1){o=b+9296|0;q=b+9304|0;r=b+9308|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[b+16>>2]=9;e=b+56|0;c[b+9292>>2]=0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;v=0;do{t=128-v+ -1|0;c[b+16+(t*56|0)+2152>>2]=0;s=c[q>>2]|0;c[b+16+(t*56|0)+2156>>2]=s;if((s|0)!=0){c[s+44>>2]=b+16+(t*56|0)+2108}c[q>>2]=b+16+(t*56|0)+2108;c[r>>2]=(c[r>>2]|0)+1;v=v+1|0}while((v|0)!=128);s=c[b+10080>>2]|0;if((c[s+32>>2]|0)>>>0>1?bv(b+9708|0)|0:0){t=c[o>>2]|0;if((t|0)!=0){y=c[b+9300>>2]|0;v=c[r>>2]|0;do{z=t+48|0;H=c[z>>2]|0;B=t+44|0;if((H|0)!=0){c[H+44>>2]=c[B>>2]}H=c[B>>2]|0;if((H|0)!=0){c[H+48>>2]=c[z>>2]}if((c[o>>2]|0)==(t|0)){c[o>>2]=c[z>>2]}y=y+ -1|0;c[B>>2]=0;c[z>>2]=c[q>>2];z=c[q>>2]|0;if((z|0)!=0){c[z+44>>2]=t}c[q>>2]=t;v=v+1|0;t=c[o>>2]|0}while((t|0)!=0);c[b+9300>>2]=y;c[r>>2]=v}c[b+16>>2]=0;c[b+9292>>2]=0;z=c[s>>2]|0;y=c[s+12>>2]|0;X=+g[y+16>>2];N=+g[z+16>>2]-X;R=+g[y+20>>2];S=+g[z+20>>2]-R;U=+g[y+24>>2];V=+g[z+24>>2]-U;y=c[s+4>>2]|0;T=+g[y+16>>2]-X;W=+g[y+20>>2]-R;O=+g[y+24>>2]-U;v=c[s+8>>2]|0;X=+g[v+16>>2]-X;R=+g[v+20>>2]-R;U=+g[v+24>>2]-U;if(N*W*U+(S*O*X+V*T*R-N*O*R-S*T*U)-V*W*X<0.0){c[s>>2]=y;c[s+4>>2]=z;X=+g[s+16>>2];g[s+16>>2]=+g[s+20>>2];g[s+20>>2]=X;t=y;y=z}else{t=z}t=cv(b+16|0,t,y,v,1)|0;y=cv(b+16|0,c[s+4>>2]|0,c[s>>2]|0,c[s+12>>2]|0,1)|0;z=cv(b+16|0,c[s+8>>2]|0,c[s+4>>2]|0,c[s+12>>2]|0,1)|0;B=cv(b+16|0,c[s>>2]|0,c[s+8>>2]|0,c[s+12>>2]|0,1)|0;if((c[b+9300>>2]|0)==4){v=c[o>>2]|0;C=+g[v+16>>2];s=c[v+48>>2]|0;if((s|0)!=0){u=C*C;H=v;while(1){w=+g[s+16>>2];v=w*w<u;H=v?s:H;s=c[s+48>>2]|0;if((s|0)==0){break}else{u=v?w*w:u}}v=H;C=+g[H+16>>2]}u=+g[v>>2];x=+g[v+4>>2];A=+g[v+8>>2];w=+g[v+12>>2];H=c[v+20>>2]|0;I=c[v+24>>2]|0;P=c[v+28>>2]|0;a[t+52>>0]=0;c[t+32>>2]=y;a[y+52>>0]=0;c[y+32>>2]=t;a[t+53>>0]=0;c[t+36>>2]=z;a[z+52>>0]=1;c[z+32>>2]=t;a[t+54>>0]=0;c[t+40>>2]=B;a[B+52>>0]=2;c[B+32>>2]=t;a[y+53>>0]=2;c[y+36>>2]=B;a[B+54>>0]=1;c[B+40>>2]=y;a[y+54>>0]=1;c[y+40>>2]=z;a[z+53>>0]=2;c[z+36>>2]=y;a[z+54>>0]=1;c[z+40>>2]=B;a[B+53>>0]=2;c[B+36>>2]=z;c[b+16>>2]=0;s=0;B=H;z=I;y=P;t=1;while(1){H=c[b+9292>>2]|0;if(!(H>>>0<64)){p=48;break}c[b+10216>>2]=0;c[b+10220>>2]=0;c[b+10224>>2]=0;c[b+9292>>2]=H+1;a[v+55>>0]=t;I=v+4|0;P=v+8|0;dv(b+9708|0,+g[v>>2],+g[I>>2],+g[P>>2],b+16+(H<<5)+60|0);if(+g[v>>2]*+g[b+16+(H<<5)+76>>2]+ +g[I>>2]*+g[b+16+(H<<5)+80>>2]+ +g[P>>2]*+g[b+16+(H<<5)+84>>2]- +g[v+16>>2]>9999999747378752.0e-20){I=0;P=1}else{p=47;break}do{P=P&(ev(b+16|0,t,b+16+(H<<5)+60|0,c[v+(I<<2)+32>>2]|0,d[v+I+52>>0]|0,b+10216|0)|0);I=I+1|0}while(!(I>>>0>2|P^1));if(!P){p=46;break}if(!((c[b+10224>>2]|0)>>>0>2)){p=46;break}B=c[b+10216>>2]|0;z=c[b+10220>>2]|0;a[B+53>>0]=2;c[B+36>>2]=z;a[z+54>>0]=1;c[z+40>>2]=B;z=v+48|0;B=c[z>>2]|0;y=v+44|0;if((B|0)!=0){c[B+44>>2]=c[y>>2]}B=c[y>>2]|0;if((B|0)!=0){c[B+48>>2]=c[z>>2]}if((c[o>>2]|0)==(v|0)){c[o>>2]=c[z>>2]}c[b+9300>>2]=(c[b+9300>>2]|0)+ -1;c[y>>2]=0;c[z>>2]=c[q>>2];y=c[q>>2]|0;if((y|0)!=0){c[y+44>>2]=v}c[q>>2]=v;c[r>>2]=(c[r>>2]|0)+1;v=c[o>>2]|0;C=+g[v+16>>2];y=c[v+48>>2]|0;if((y|0)!=0){u=C*C;z=v;while(1){w=+g[y+16>>2];v=w*w<u;z=v?y:z;y=c[y+48>>2]|0;if((y|0)==0){break}else{u=v?w*w:u}}v=z;C=+g[z+16>>2]}u=+g[v>>2];x=+g[v+4>>2];A=+g[v+8>>2];w=+g[v+12>>2];B=c[v+20>>2]|0;z=c[v+24>>2]|0;y=c[v+28>>2]|0;s=s+1|0;if(!(s>>>0<255)){break}else{t=t+1|0}}if((p|0)==46){c[b+16>>2]=4}else if((p|0)==47){c[b+16>>2]=7}else if((p|0)==48){c[b+16>>2]=6}T=C*u;R=C*x;V=C*A;g[e>>2]=u;g[b+60>>2]=x;g[b+64>>2]=A;g[b+68>>2]=w;g[b+72>>2]=C;c[b+52>>2]=3;c[b+20>>2]=B;c[b+24>>2]=z;c[b+28>>2]=y;H=z+16|0;U=+g[H>>2]-T;I=z+20|0;N=+g[I>>2]-R;P=z+24|0;S=+g[P>>2]-V;v=y+16|0;M=+g[v>>2]-T;z=y+20|0;O=+g[z>>2]-R;y=y+24|0;W=+g[y>>2]-V;W=+Q(+((U*O-N*M)*(U*O-N*M)+((N*W-S*O)*(N*W-S*O)+(S*M-U*W)*(S*M-U*W))));g[b+36>>2]=W;U=+g[v>>2]-T;M=+g[z>>2]-R;S=+g[y>>2]-V;y=B+16|0;O=+g[y>>2]-T;z=B+20|0;N=+g[z>>2]-R;B=B+24|0;X=+g[B>>2]-V;X=+Q(+((U*N-M*O)*(U*N-M*O)+((M*X-S*N)*(M*X-S*N)+(S*O-U*X)*(S*O-U*X))));g[b+40>>2]=X;U=+g[y>>2]-T;O=+g[z>>2]-R;S=+g[B>>2]-V;T=+g[H>>2]-T;R=+g[I>>2]-R;V=+g[P>>2]-V;V=+Q(+((U*R-O*T)*(U*R-O*T)+((O*V-S*R)*(O*V-S*R)+(S*T-U*V)*(S*T-U*V))));g[b+36>>2]=W/(V+(W+X));g[b+40>>2]=X/(V+(W+X));g[b+44>>2]=V/(V+(W+X));if((c[b+16>>2]|0)==9){w=0.0;u=0.0;A=0.0;C=0.0;D=0.0;E=0.0;F=0.0;x=0.0;G=0.0;e=0;break}if((c[b+52>>2]|0)==0){A=0.0;C=0.0;x=0.0}else{o=b+52|0;p=54}}else{p=49}}else{p=49}if((p|0)==49){c[b+16>>2]=8;g[e>>2]=u;g[b+60>>2]=w;g[b+64>>2]=x;g[b+68>>2]=0.0;A=+Q(+(u*u+w*w+x*x));if(A>0.0){x=1.0/A*x;w=1.0/A*w;u=1.0/A*u}else{x=0.0;w=0.0;u=1.0}g[e>>2]=u;g[b+60>>2]=w;g[b+64>>2]=x;g[b+68>>2]=0.0;g[b+72>>2]=0.0;c[b+52>>2]=1;c[b+20>>2]=c[s>>2];g[b+36>>2]=1.0;o=b+52|0;p=54}if((p|0)==54){x=0.0;u=0.0;w=0.0;p=0;while(1){r=c[b+10208>>2]|0;P=c[b+10212>>2]|0;q=(c[b+10088>>2]|0)+(P>>1)|0;if((P&1|0)!=0){r=c[(c[q>>2]|0)+r>>2]|0}ic[r&63](b+9312|0,q,c[b+16+(p<<2)+4>>2]|0);X=+g[b+16+(p<<2)+20>>2];x=x+ +g[b+9312>>2]*X;u=u+X*+g[b+9316>>2];w=w+X*+g[b+9320>>2];p=p+1|0;if(!(p>>>0<(c[o>>2]|0)>>>0)){A=w;C=u;break}}}Y=+g[j>>2];J=+g[j+4>>2];K=+g[j+8>>2];M=+g[j+16>>2];N=+g[j+20>>2];O=+g[j+24>>2];S=+g[j+32>>2];U=+g[j+36>>2];W=+g[j+40>>2];L=+g[j+48>>2];D=+g[j+52>>2];E=+g[j+56>>2];F=+g[e>>2];V=+g[b+72>>2];X=+g[b+60>>2];G=+g[b+64>>2];R=x-F*V;T=C-V*X;V=A-V*G;w=x*Y+C*J+A*K+L;u=x*M+C*N+A*O+D;A=x*S+C*U+A*W+E;C=R*Y+T*J+V*K+L;D=R*M+T*N+V*O+D;E=R*S+T*U+V*W+E;F=-F;x=-X;G=-G;e=1}else{w=0.0;u=0.0;A=0.0;C=0.0;D=0.0;E=0.0;F=0.0;x=0.0;G=0.0;e=0}}while(0);if(e){g[m>>2]=w;g[m+4>>2]=u;g[m+8>>2]=A;g[m+12>>2]=0.0;g[n>>2]=C;g[n+4>>2]=D;g[n+8>>2]=E;g[n+12>>2]=0.0;g[l>>2]=F;g[l+4>>2]=x;g[l+8>>2]=G;g[l+12>>2]=0.0;P=1;i=b;return P|0}c[b+9708>>2]=f;c[b+9712>>2]=h;x=+g[k>>2];L=+g[j>>2];A=+g[k+16>>2];M=+g[j+16>>2];C=+g[k+32>>2];N=+g[j+32>>2];O=+g[j+4>>2];R=+g[j+20>>2];S=+g[j+36>>2];U=+g[j+8>>2];W=+g[j+24>>2];Y=+g[j+40>>2];D=+g[k+4>>2];E=+g[k+20>>2];F=+g[k+36>>2];G=+g[k+8>>2];J=+g[k+24>>2];K=+g[k+40>>2];g[b+9716>>2]=x*L+A*M+C*N;g[b+9720>>2]=x*O+A*R+C*S;g[b+9724>>2]=x*U+A*W+C*Y;g[b+9728>>2]=0.0;g[b+9732>>2]=L*D+M*E+N*F;g[b+9736>>2]=O*D+R*E+S*F;g[b+9740>>2]=U*D+W*E+Y*F;g[b+9744>>2]=0.0;g[b+9748>>2]=L*G+M*J+N*K;g[b+9752>>2]=O*G+R*J+S*K;g[b+9756>>2]=U*G+W*J+Y*K;g[b+9760>>2]=0.0;T=+g[k+48>>2]- +g[j+48>>2];V=+g[k+52>>2]- +g[j+52>>2];X=+g[k+56>>2]- +g[j+56>>2];g[b+9764>>2]=x*L+A*M+C*N;g[b+9768>>2]=L*D+M*E+N*F;g[b+9772>>2]=L*G+M*J+N*K;g[b+9776>>2]=0.0;g[b+9780>>2]=x*O+A*R+C*S;g[b+9784>>2]=O*D+R*E+S*F;g[b+9788>>2]=O*G+R*J+S*K;g[b+9792>>2]=0.0;g[b+9796>>2]=x*U+A*W+C*Y;g[b+9800>>2]=U*D+W*E+Y*F;g[b+9804>>2]=U*G+W*J+Y*K;g[b+9808>>2]=0.0;g[b+9812>>2]=T*L+V*M+X*N;g[b+9816>>2]=T*O+V*R+X*S;g[b+9820>>2]=T*U+V*W+X*Y;g[b+9824>>2]=0.0;c[b+9828>>2]=62;c[b+9832>>2]=0;c[b+9692>>2]=0;c[b+9456>>2]=0;c[b+9460>>2]=0;c[b+9464>>2]=0;c[b+9468>>2]=0;c[b+9704>>2]=2;c[b+9696>>2]=0;g[b+9472>>2]=0.0;if((av(b+9328|0,b+9708|0,b)|0)!=0){P=0;i=b;return P|0}h=c[b+9700>>2]|0;if((c[h+32>>2]|0)==0){u=0.0;w=0.0;x=0.0;A=0.0;C=0.0;E=0.0}else{x=0.0;w=0.0;u=0.0;E=0.0;C=0.0;A=0.0;f=0;do{D=+g[h+(f<<2)+16>>2];e=c[b+9828>>2]|0;P=c[b+9832>>2]|0;k=(c[b+9708>>2]|0)+(P>>1)|0;if((P&1|0)!=0){e=c[(c[k>>2]|0)+e>>2]|0}ic[e&63](b+9312|0,k,c[h+(f<<2)>>2]|0);x=x+D*+g[b+9312>>2];w=w+D*+g[b+9316>>2];u=u+D*+g[b+9320>>2];k=c[(c[b+9700>>2]|0)+(f<<2)>>2]|0;F=-+g[k>>2];J=-+g[k+4>>2];G=-+g[k+8>>2];k=c[b+9828>>2]|0;P=c[b+9832>>2]|0;h=(c[b+9712>>2]|0)+(P>>1)|0;if((P&1|0)!=0){k=c[(c[h>>2]|0)+k>>2]|0}X=+g[b+9732>>2]*F+ +g[b+9736>>2]*J+ +g[b+9740>>2]*G;W=+g[b+9748>>2]*F+ +g[b+9752>>2]*J+ +g[b+9756>>2]*G;g[b+10088>>2]=+g[b+9716>>2]*F+ +g[b+9720>>2]*J+ +g[b+9724>>2]*G;g[b+10092>>2]=X;g[b+10096>>2]=W;g[b+10100>>2]=0.0;ic[k&63](b+10216|0,h,b+10088|0);W=+g[b+10216>>2];X=+g[b+10220>>2];Y=+g[b+10224>>2];E=E+D*(W*+g[b+9764>>2]+X*+g[b+9768>>2]+Y*+g[b+9772>>2]+ +g[b+9812>>2]);C=C+D*(W*+g[b+9780>>2]+X*+g[b+9784>>2]+Y*+g[b+9788>>2]+ +g[b+9816>>2]);A=A+D*(W*+g[b+9796>>2]+X*+g[b+9800>>2]+Y*+g[b+9804>>2]+ +g[b+9820>>2]);f=f+1|0;h=c[b+9700>>2]|0}while(f>>>0<(c[h+32>>2]|0)>>>0)}J=+g[j>>2];K=+g[j+4>>2];L=+g[j+8>>2];N=+g[j+16>>2];O=+g[j+20>>2];R=+g[j+24>>2];D=+g[j+32>>2];F=+g[j+36>>2];G=+g[j+40>>2];M=+g[j+48>>2];S=+g[j+52>>2];V=+g[j+56>>2];U=x-E;T=w-C;X=u-A;W=+Q(+(U*U+T*T+X*X));Y=1.0/(W>9999999747378752.0e-20?W:1.0);g[m>>2]=x*J+w*K+u*L+M;g[m+4>>2]=x*N+w*O+u*R+S;g[m+8>>2]=x*D+w*F+u*G+V;g[m+12>>2]=0.0;g[n>>2]=E*J+C*K+A*L+M;g[n+4>>2]=E*N+C*O+A*R+S;g[n+8>>2]=E*D+C*F+A*G+V;g[n+12>>2]=0.0;g[l>>2]=Y*U;g[l+4>>2]=Y*T;g[l+8>>2]=Y*X;g[l+12>>2]=0.0;P=0;i=b;return P|0}function _q(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0;h=i;i=i+288|0;g[b+56>>2]=0.0;p=h+276|0;q=h+280|0;c[h+272>>2]=0;c[h+276>>2]=0;c[h+280>>2]=0;c[h+284>>2]=0;c[h+208>>2]=c[d+0>>2];c[h+212>>2]=c[d+4>>2];c[h+216>>2]=c[d+8>>2];c[h+220>>2]=c[d+12>>2];c[h+224>>2]=c[d+16>>2];c[h+228>>2]=c[d+20>>2];c[h+232>>2]=c[d+24>>2];c[h+236>>2]=c[d+28>>2];c[h+240>>2]=c[d+32>>2];c[h+244>>2]=c[d+36>>2];c[h+248>>2]=c[d+40>>2];c[h+252>>2]=c[d+44>>2];N=h+256|0;c[N+0>>2]=c[d+48>>2];c[N+4>>2]=c[d+52>>2];c[N+8>>2]=c[d+56>>2];c[N+12>>2]=c[d+60>>2];c[h+144>>2]=c[d+64>>2];c[h+148>>2]=c[d+68>>2];c[h+152>>2]=c[d+72>>2];c[h+156>>2]=c[d+76>>2];c[h+160>>2]=c[d+80>>2];c[h+164>>2]=c[d+84>>2];c[h+168>>2]=c[d+88>>2];c[h+172>>2]=c[d+92>>2];c[h+176>>2]=c[d+96>>2];c[h+180>>2]=c[d+100>>2];c[h+184>>2]=c[d+104>>2];c[h+188>>2]=c[d+108>>2];O=h+192|0;c[O+0>>2]=c[d+112>>2];c[O+4>>2]=c[d+116>>2];c[O+8>>2]=c[d+120>>2];c[O+12>>2]=c[d+124>>2];r=+g[N>>2];s=+g[O>>2];t=+g[h+260>>2];u=+g[h+196>>2];n=+g[h+264>>2];o=+g[h+200>>2];g[N>>2]=r-(r+s)*.5;g[h+260>>2]=t-(t+u)*.5;g[h+264>>2]=n-(n+o)*.5;g[O>>2]=s-(r+s)*.5;g[h+196>>2]=u-(t+u)*.5;g[h+200>>2]=o-(n+o)*.5;if(((c[(c[b+28>>2]|0)+4>>2]|0)+ -17|0)>>>0<2){y=((c[(c[b+32>>2]|0)+4>>2]|0)+ -17|0)>>>0<2}else{y=0}w=+g[b+44>>2];v=+g[b+48>>2];c[2756]=(c[2756]|0)+1;D=(a[b+52>>0]|0)==0;v=D?v:0.0;c[b+64>>2]=0;g[b+4>>2]=0.0;g[b+8>>2]=1.0;g[b+12>>2]=0.0;g[b+16>>2]=0.0;c[b+68>>2]=0;c[b+60>>2]=-1;w=(D?w:0.0)+v;O=c[b+24>>2]|0;a[O+312>>0]=0;c[O>>2]=0;a[O+356>>0]=1;g[O+292>>2]=999999984306749400.0;g[O+296>>2]=999999984306749400.0;g[O+300>>2]=999999984306749400.0;g[O+304>>2]=0.0;c[O+336>>2]=0;c[O+340>>2]=0;c[O+344>>2]=0;c[O+348>>2]=0;a[O+352>>0]=0;a[O+332>>0]=a[O+332>>0]&-16;A=+g[b+4>>2];B=+g[b+8>>2];F=+g[b+12>>2];a:do{if(y){z=999999984306749400.0;while(1){K=-A;L=-B;E=-F;M=+g[d+4>>2]*K+ +g[d+20>>2]*L+ +g[d+36>>2]*E;C=+g[d+8>>2]*K+ +g[d+24>>2]*L+ +g[d+40>>2]*E;g[h+128>>2]=+g[d>>2]*K+ +g[d+16>>2]*L+ +g[d+32>>2]*E;g[h+132>>2]=M;g[h+136>>2]=C;g[h+140>>2]=0.0;C=A*+g[d+68>>2]+B*+g[d+84>>2]+F*+g[d+100>>2];M=A*+g[d+72>>2]+B*+g[d+88>>2]+F*+g[d+104>>2];g[h+112>>2]=+g[d+64>>2]*A+ +g[d+80>>2]*B+ +g[d+96>>2]*F;g[h+116>>2]=C;g[h+120>>2]=M;g[h+124>>2]=0.0;_o(h+96|0,c[b+28>>2]|0,h+128|0);_o(h+80|0,c[b+32>>2]|0,h+112|0);F=+g[h+96>>2];M=+g[h+100>>2];C=+g[h+104>>2];A=F*+g[h+208>>2]+M*+g[h+212>>2]+C*+g[h+216>>2]+ +g[h+256>>2];C=F*+g[h+224>>2]+M*+g[h+228>>2]+C*+g[h+232>>2]+ +g[h+260>>2];M=+g[h+80>>2];F=+g[h+84>>2];E=+g[h+88>>2];B=M*+g[h+144>>2]+F*+g[h+148>>2]+E*+g[h+152>>2]+ +g[h+192>>2];E=M*+g[h+160>>2]+F*+g[h+164>>2]+E*+g[h+168>>2]+ +g[h+196>>2];F=+g[b+4>>2]*(A-B)+ +g[b+8>>2]*(C-E)+ +g[b+12>>2]*0.0;if(F>0.0?F*F>z*+g[d+128>>2]:0){j=22;break a}y=c[b+24>>2]|0;D=c[y>>2]|0;if((D|0)>0){G=+g[y+308>>2];O=0;N=0;do{K=A-B- +g[y+(N<<4)+4>>2];L=C-E- +g[y+(N<<4)+8>>2];M=0.0- +g[y+(N<<4)+12>>2];O=O|K*K+L*L+M*M<=G;N=N+1|0}while((N|0)!=(D|0))}else{O=0}if((+g[y+304>>2]==0.0?+g[y+300>>2]==0.0:0)?C-E==+g[y+296>>2]:0){N=A-B==+g[y+292>>2]}else{N=0}if(N|O){j=31;break a}H=z-F;if(H<=z*9.999999974752427e-7){j=33;break a}g[y+292>>2]=A-B;g[y+296>>2]=C-E;g[y+300>>2]=0.0;g[y+304>>2]=0.0;a[y+356>>0]=1;g[y+(D<<4)+4>>2]=A-B;g[y+(D<<4)+8>>2]=C-E;g[y+(D<<4)+12>>2]=0.0;g[y+(D<<4)+16>>2]=0.0;N=c[y>>2]|0;g[y+(N<<4)+84>>2]=A;g[y+(N<<4)+88>>2]=C;g[y+(N<<4)+92>>2]=0.0;g[y+(N<<4)+96>>2]=0.0;N=c[y>>2]|0;g[y+(N<<4)+164>>2]=B;g[y+(N<<4)+168>>2]=E;g[y+(N<<4)+172>>2]=0.0;g[y+(N<<4)+176>>2]=0.0;c[y>>2]=(c[y>>2]|0)+1;N=c[b+24>>2]|0;O=Jt(N)|0;A=+g[N+276>>2];B=+g[N+280>>2];F=+g[N+284>>2];E=+g[N+288>>2];if(!O){j=35;break a}C=z;z=A*A+B*B+F*F;if(z<9.999999974752427e-7){z=C;j=37;break a}if(C-z<=C*1.1920928955078125e-7){j=39;break a}g[b+4>>2]=A;g[b+8>>2]=B;g[b+12>>2]=F;g[b+16>>2]=E;O=c[b+64>>2]|0;c[b+64>>2]=O+1;if((O|0)>1e3){z=0.0;y=0;A=0.0;B=0.0;C=0.0;break a}if((c[c[b+24>>2]>>2]|0)==4){j=42;break}}}else{z=999999984306749400.0;while(1){G=-A;E=-B;C=-F;H=+g[d+4>>2]*G+ +g[d+20>>2]*E+ +g[d+36>>2]*C;M=+g[d+8>>2]*G+ +g[d+24>>2]*E+ +g[d+40>>2]*C;g[h+128>>2]=+g[d>>2]*G+ +g[d+16>>2]*E+ +g[d+32>>2]*C;g[h+132>>2]=H;g[h+136>>2]=M;g[h+140>>2]=0.0;M=A*+g[d+68>>2]+B*+g[d+84>>2]+F*+g[d+100>>2];H=A*+g[d+72>>2]+B*+g[d+88>>2]+F*+g[d+104>>2];g[h+112>>2]=+g[d+64>>2]*A+ +g[d+80>>2]*B+ +g[d+96>>2]*F;g[h+116>>2]=M;g[h+120>>2]=H;g[h+124>>2]=0.0;_o(h+96|0,c[b+28>>2]|0,h+128|0);_o(h+80|0,c[b+32>>2]|0,h+112|0);H=+g[h+96>>2];M=+g[h+100>>2];F=+g[h+104>>2];B=H*+g[h+208>>2]+M*+g[h+212>>2]+F*+g[h+216>>2]+ +g[h+256>>2];C=H*+g[h+224>>2]+M*+g[h+228>>2]+F*+g[h+232>>2]+ +g[h+260>>2];F=H*+g[h+240>>2]+M*+g[h+244>>2]+F*+g[h+248>>2]+ +g[h+264>>2];M=+g[h+80>>2];H=+g[h+84>>2];E=+g[h+88>>2];A=M*+g[h+144>>2]+H*+g[h+148>>2]+E*+g[h+152>>2]+ +g[h+192>>2];G=M*+g[h+160>>2]+H*+g[h+164>>2]+E*+g[h+168>>2]+ +g[h+196>>2];E=M*+g[h+176>>2]+H*+g[h+180>>2]+E*+g[h+184>>2]+ +g[h+200>>2];H=+g[b+4>>2]*(B-A)+ +g[b+8>>2]*(C-G)+ +g[b+12>>2]*(F-E);if(H>0.0?H*H>z*+g[d+128>>2]:0){j=22;break a}D=c[b+24>>2]|0;y=c[D>>2]|0;if((y|0)>0){I=+g[D+308>>2];O=0;N=0;do{K=B-A- +g[D+(N<<4)+4>>2];L=C-G- +g[D+(N<<4)+8>>2];M=F-E- +g[D+(N<<4)+12>>2];O=O|K*K+L*L+M*M<=I;N=N+1|0}while((N|0)!=(y|0))}else{O=0}if((+g[D+304>>2]==0.0?F-E==+g[D+300>>2]:0)?C-G==+g[D+296>>2]:0){N=B-A==+g[D+292>>2]}else{N=0}if(N|O){j=31;break a}H=z-H;if(H<=z*9.999999974752427e-7){j=33;break a}g[D+292>>2]=B-A;g[D+296>>2]=C-G;g[D+300>>2]=F-E;g[D+304>>2]=0.0;a[D+356>>0]=1;g[D+(y<<4)+4>>2]=B-A;g[D+(y<<4)+8>>2]=C-G;g[D+(y<<4)+12>>2]=F-E;g[D+(y<<4)+16>>2]=0.0;N=c[D>>2]|0;g[D+(N<<4)+84>>2]=B;g[D+(N<<4)+88>>2]=C;g[D+(N<<4)+92>>2]=F;g[D+(N<<4)+96>>2]=0.0;N=c[D>>2]|0;g[D+(N<<4)+164>>2]=A;g[D+(N<<4)+168>>2]=G;g[D+(N<<4)+172>>2]=E;g[D+(N<<4)+176>>2]=0.0;c[D>>2]=(c[D>>2]|0)+1;N=c[b+24>>2]|0;O=Jt(N)|0;A=+g[N+276>>2];B=+g[N+280>>2];F=+g[N+284>>2];E=+g[N+288>>2];if(!O){j=35;break a}C=z;z=A*A+B*B+F*F;if(z<9.999999974752427e-7){z=C;j=37;break a}if(C-z<=C*1.1920928955078125e-7){j=39;break a}g[b+4>>2]=A;g[b+8>>2]=B;g[b+12>>2]=F;g[b+16>>2]=E;O=c[b+64>>2]|0;c[b+64>>2]=O+1;if((O|0)>1e3){z=0.0;y=0;A=0.0;B=0.0;C=0.0;break a}if((c[c[b+24>>2]>>2]|0)==4){j=42;break}}}}while(0);if((j|0)==22){c[b+68>>2]=10;j=43}else if((j|0)==31){c[b+68>>2]=1;j=43}else if((j|0)==33){c[b+68>>2]=!(H<=0.0)?11:2;j=43}else if((j|0)==35){c[b+68>>2]=3;j=43}else if((j|0)==37){g[b+4>>2]=A;g[b+8>>2]=B;g[b+12>>2]=F;g[b+16>>2]=E;c[b+68>>2]=6;j=43}else if((j|0)==39){c[b+68>>2]=12;j=43}else if((j|0)==42){c[b+68>>2]=13;z=0.0;y=0;A=0.0;B=0.0;C=0.0}do{if((j|0)==43){O=c[b+24>>2]|0;Jt(O)|0;A=+g[O+260>>2];B=+g[O+264>>2];C=+g[O+268>>2];c[h+272>>2]=c[b+4>>2];c[h+276>>2]=c[b+8>>2];c[h+280>>2]=c[b+12>>2];c[h+284>>2]=c[b+16>>2];G=+g[b+4>>2];F=+g[b+8>>2];E=+g[b+12>>2];if(G*G+F*F+E*E<1.0e-4){c[b+68>>2]=5}if(G*G+F*F+E*E>1.4210854715202004e-14){L=1.0/+Q(+(G*G+F*F+E*E));g[h+272>>2]=L*+g[h+272>>2];g[p>>2]=L*+g[p>>2];g[q>>2]=L*+g[q>>2];M=v/+Q(+z);c[b+60>>2]=1;z=1.0/L-w;y=1;A=M*G+A;B=M*F+B;C=M*E+C;break}else{c[b+60>>2]=2;z=0.0;y=0;break}}}while(0);if(((c[b+72>>2]|0)!=0?(c[b+20>>2]|0)!=0:0)?(c[b+68>>2]|0)!=0:0){N=w+z<.01}else{N=0}D=y^1;do{if(N|D?(x=c[b+20>>2]|0,(x|0)!=0):0){c[2754]=(c[2754]|0)+1;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;if(!(Gb[c[(c[x>>2]|0)+8>>2]&3](x,c[b+24>>2]|0,c[b+28>>2]|0,c[b+32>>2]|0,h+208|0,h+144|0,b+4|0,h+64|0,h+48|0,f)|0)){J=+g[b+4>>2];H=+g[b+8>>2];F=+g[b+12>>2];if(!(J*J+H*H+F*F>0.0)){j=66;break}I=+g[h+48>>2];K=+g[h+64>>2]-I;G=+g[h+52>>2];L=+g[h+68>>2]-G;E=+g[h+56>>2];M=+g[h+72>>2]-E;w=+Q(+(K*K+L*L+M*M))-w;if(w<z|D){c[h+272>>2]=c[b+4>>2];c[h+276>>2]=c[b+8>>2];c[h+280>>2]=c[b+12>>2];c[h+284>>2]=c[b+16>>2];C=+g[h+272>>2];B=+g[p>>2];A=+g[q>>2];z=1.0/+Q(+(C*C+B*B+A*A));g[h+272>>2]=C*z;g[p>>2]=B*z;g[q>>2]=A*z;c[b+60>>2]=6;z=w;A=v*J+I;B=v*H+G;C=v*F+E;break}c[b+60>>2]=5;if(y){break}i=h;return}E=+g[h+48>>2];L=+g[h+64>>2];w=+g[h+52>>2];K=+g[h+68>>2];v=+g[h+56>>2];J=+g[h+72>>2];if(!((E-L)*(E-L)+(w-K)*(w-K)+(v-J)*(v-J)<=1.4210854715202004e-14)){H=0.0;M=(E-L)*(E-L)+(w-K)*(w-K)+(v-J)*(v-J);G=E-L;F=v-J;I=w-K}else{G=+g[b+4>>2];I=+g[b+8>>2];F=+g[b+12>>2];H=+g[b+16>>2];M=G*G+I*I+F*F}if(!(M>1.4210854715202004e-14)){c[b+60>>2]=9;if(y){break}i=h;return}M=1.0/+Q(+M);J=-+Q(+((L-E)*(L-E)+(K-w)*(K-w)+(J-v)*(J-v)));if(z>J|D){g[h+272>>2]=G*M;g[p>>2]=I*M;g[q>>2]=F*M;g[h+284>>2]=H;c[b+60>>2]=3;z=J;A=E;B=w;C=v;break}c[b+60>>2]=8;if(!y){i=h;return}}else{j=66}}while(0);if((j|0)==66){if(!y){i=h;return}}if(!(z<0.0)?!(z*z<+g[d+128>>2]):0){i=h;return}if((c[b+76>>2]|0)!=0?(O=c[b+28>>2]|0,mc[c[(c[O>>2]|0)+8>>2]&63](O,h+208|0,h+32|0,h+16|0),K=(+g[h+16>>2]+ +g[h+32>>2])*.5,L=(+g[h+20>>2]+ +g[h+36>>2])*.5,M=(+g[h+24>>2]+ +g[h+40>>2])*.5,O=c[b+32>>2]|0,mc[c[(c[O>>2]|0)+8>>2]&63](O,h+144|0,h+32|0,h+16|0),k=+g[h+272>>2],l=+g[p>>2],m=+g[q>>2],(K-(+g[h+32>>2]+ +g[h+16>>2])*.5)*k+(L-(+g[h+36>>2]+ +g[h+20>>2])*.5)*l+(M-(+g[h+40>>2]+ +g[h+24>>2])*.5)*m<0.0):0){g[h+272>>2]=k*-1.0;g[p>>2]=l*-1.0;g[q>>2]=m*-1.0}c[b+4>>2]=c[h+272>>2];c[b+8>>2]=c[h+276>>2];c[b+12>>2]=c[h+280>>2];c[b+16>>2]=c[h+284>>2];g[b+56>>2]=z;O=c[(c[e>>2]|0)+16>>2]|0;g[h>>2]=(r+s)*.5+A;g[h+4>>2]=(t+u)*.5+B;g[h+8>>2]=(n+o)*.5+C;g[h+12>>2]=0.0;hc[O&15](e,h+272|0,h,z);i=h;return}function $q(a){a=a|0;return}function ar(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function br(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0.0,B=0.0;j=i;i=i+192|0;h=c[b+4>>2]|0;if(+g[h+752>>2]<f){i=j;return}k=c[h+740>>2]|0;m=(c[b+8>>2]|0)+8|0;l=c[m>>2]|0;q=+g[e>>2];s=+g[d>>2]*f+q;o=+g[e+4>>2];r=+g[d+4>>2]*f+o;p=+g[e+8>>2];t=+g[d+8>>2]*f+p;if((k|0)!=(l|0)){n=c[b+12>>2]|0;y=c[n+8>>2]|0;B=s- +g[y+52>>2];v=r- +g[y+56>>2];u=t- +g[y+60>>2];A=q- +g[l+52>>2];z=o- +g[l+56>>2];w=p- +g[l+60>>2];o=B*+g[y+4>>2]+v*+g[y+20>>2]+u*+g[y+36>>2];p=B*+g[y+8>>2]+v*+g[y+24>>2]+u*+g[y+40>>2];q=B*+g[y+12>>2]+v*+g[y+28>>2]+u*+g[y+44>>2];u=A*+g[l+12>>2]+z*+g[l+28>>2]+w*+g[l+44>>2];v=A*+g[l+8>>2]+z*+g[l+24>>2]+w*+g[l+40>>2];w=A*+g[l+4>>2]+z*+g[l+20>>2]+w*+g[l+36>>2]}else{z=s- +g[k+52>>2];v=r- +g[k+56>>2];u=t- +g[k+60>>2];n=c[b+12>>2]|0;y=c[n+8>>2]|0;A=q- +g[y+52>>2];B=o- +g[y+56>>2];w=p- +g[y+60>>2];o=z*+g[k+4>>2]+v*+g[k+20>>2]+u*+g[k+36>>2];p=z*+g[k+8>>2]+v*+g[k+24>>2]+u*+g[k+40>>2];q=z*+g[k+12>>2]+v*+g[k+28>>2]+u*+g[k+44>>2];u=A*+g[y+12>>2]+B*+g[y+28>>2]+w*+g[y+44>>2];v=A*+g[y+8>>2]+B*+g[y+24>>2]+w*+g[y+40>>2];w=A*+g[y+4>>2]+B*+g[y+20>>2]+w*+g[y+36>>2]}g[j>>2]=o;g[j+4>>2]=p;g[j+8>>2]=q;g[j+12>>2]=0.0;g[j+16>>2]=w;g[j+20>>2]=v;g[j+24>>2]=u;g[j+28>>2]=0.0;c[j+64>>2]=c[d+0>>2];c[j+68>>2]=c[d+4>>2];c[j+72>>2]=c[d+8>>2];c[j+76>>2]=c[d+12>>2];g[j+80>>2]=f;g[j+84>>2]=0.0;g[j+88>>2]=0.0;g[j+92>>2]=0.0;c[j+112>>2]=0;a[j+116>>0]=0;c[j+120>>2]=0;c[j+124>>2]=0;c[j+128>>2]=0;c[j+132>>2]=0;c[j+136>>2]=0;c[j+140>>2]=0;c[j+144>>2]=0;c[j+148>>2]=0;g[j+48>>2]=s;g[j+52>>2]=r;g[j+56>>2]=t;g[j+60>>2]=0.0;c[j+32>>2]=c[e+0>>2];c[j+36>>2]=c[e+4>>2];c[j+40>>2]=c[e+8>>2];c[j+44>>2]=c[e+12>>2];r=+g[h+752>>2];e=c[h+748>>2]|0;if((e|0)>0){d=0;y=-1;f=r*r;while(1){s=+g[h+(d*184|0)+4>>2]-o;r=+g[h+(d*184|0)+8>>2]-p;t=+g[h+(d*184|0)+12>>2]-q;x=s*s+r*r+t*t<f;y=x?d:y;d=d+1|0;if((d|0)==(e|0)){break}else{f=x?s*s+r*r+t*t:f}}}else{y=-1}m=c[m>>2]|0;n=c[n+8>>2]|0;o=+g[m+224>>2]*+g[n+224>>2];o=o<-10.0?-10.0:o;g[j+84>>2]=o>10.0?10.0:o;g[j+92>>2]=+g[m+228>>2]*+g[n+228>>2];o=+g[m+232>>2]*+g[n+232>>2];o=o<-10.0?-10.0:o;g[j+88>>2]=o>10.0?10.0:o;o=+g[j+72>>2];if(+P(+o)>.7071067690849304){z=+g[j+68>>2];B=1.0/+Q(+(o*o+z*z));g[j+152>>2]=0.0;g[j+156>>2]=-(B*o);g[j+160>>2]=B*z;g[j+168>>2]=(o*o+z*z)*B;A=+g[j+64>>2];g[j+172>>2]=-(A*B*z);g[j+176>>2]=A*-(B*o)}else{z=+g[j+64>>2];A=+g[j+68>>2];B=1.0/+Q(+(z*z+A*A));g[j+152>>2]=-(A*B);g[j+156>>2]=B*z;g[j+160>>2]=0.0;g[j+168>>2]=-(o*B*z);g[j+172>>2]=o*-(A*B);g[j+176>>2]=(z*z+A*A)*B}if((k|0)!=(l|0)){c[j+96>>2]=c[b+20>>2];c[j+100>>2]=c[b+16>>2];c[j+104>>2]=c[b+28>>2];c[j+108>>2]=c[b+24>>2]}else{c[j+96>>2]=c[b+16>>2];c[j+100>>2]=c[b+20>>2];c[j+104>>2]=c[b+24>>2];c[j+108>>2]=c[b+28>>2]}if((y|0)>-1){x=h+(y*184|0)+152|0;d=c[x>>2]|0;m=h+(y*184|0)+124|0;z=+g[m>>2];n=h+(y*184|0)+128|0;A=+g[n>>2];e=h+(y*184|0)+132|0;B=+g[e>>2];b=h+(y*184|0)+116|0;l=c[b>>2]|0;mw(h+(y*184|0)+4|0,j|0,184)|0;c[b>>2]=l;g[m>>2]=z;g[n>>2]=A;g[e>>2]=B;c[x>>2]=d;i=j;return}else{Wr(h,j)|0;i=j;return}}function cr(b,d,e,f,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0;b=i;i=i+4256|0;if(((c[e+4>>2]|0)+ -17|0)>>>0<2){r=((c[f+4>>2]|0)+ -17|0)>>>0<2}else{r=0}o=0;do{dr();v=+g[11216+(o<<4)>>2];w=+g[11220+(o<<4)>>2];x=+g[11224+(o<<4)>>2];z=+g[h+4>>2]*-v+ +g[h+20>>2]*-w+ +g[h+36>>2]*-x;y=+g[h+8>>2]*-v+ +g[h+24>>2]*-w+ +g[h+40>>2]*-x;g[b+1280+(o<<4)>>2]=+g[h>>2]*-v+ +g[h+16>>2]*-w+ +g[h+32>>2]*-x;g[b+1280+(o<<4)+4>>2]=z;g[b+1280+(o<<4)+8>>2]=y;g[b+1280+(o<<4)+12>>2]=0.0;y=v*+g[j+4>>2]+w*+g[j+20>>2]+x*+g[j+36>>2];z=v*+g[j+8>>2]+w*+g[j+24>>2]+x*+g[j+40>>2];g[b+288+(o<<4)>>2]=v*+g[j>>2]+w*+g[j+16>>2]+x*+g[j+32>>2];g[b+288+(o<<4)+4>>2]=y;g[b+288+(o<<4)+8>>2]=z;g[b+288+(o<<4)+12>>2]=0.0;o=o+1|0}while((o|0)!=42);o=Hb[c[(c[e>>2]|0)+84>>2]&127](e)|0;if((o|0)>0){A=0;B=42;while(1){ic[c[(c[e>>2]|0)+88>>2]&63](e,A,b+272|0);y=+g[b+272>>2];z=+g[b+276>>2];x=+g[b+280>>2];w=y*+g[h+16>>2]+z*+g[h+20>>2]+x*+g[h+24>>2];v=y*+g[h+32>>2]+z*+g[h+36>>2]+x*+g[h+40>>2];g[b+272>>2]=+g[h>>2]*y+ +g[h+4>>2]*z+ +g[h+8>>2]*x;g[b+276>>2]=w;g[b+280>>2]=v;g[b+284>>2]=0.0;dr();C=11216+(B<<4)|0;c[C+0>>2]=c[b+272>>2];c[C+4>>2]=c[b+276>>2];c[C+8>>2]=c[b+280>>2];c[C+12>>2]=c[b+284>>2];v=+g[b+272>>2];w=+g[b+276>>2];x=+g[b+280>>2];z=+g[h+4>>2]*-v+ +g[h+20>>2]*-w+ +g[h+36>>2]*-x;y=+g[h+8>>2]*-v+ +g[h+24>>2]*-w+ +g[h+40>>2]*-x;g[b+1280+(B<<4)>>2]=+g[h>>2]*-v+ +g[h+16>>2]*-w+ +g[h+32>>2]*-x;g[b+1280+(B<<4)+4>>2]=z;g[b+1280+(B<<4)+8>>2]=y;g[b+1280+(B<<4)+12>>2]=0.0;y=v*+g[j+4>>2]+w*+g[j+20>>2]+x*+g[j+36>>2];z=v*+g[j+8>>2]+w*+g[j+24>>2]+x*+g[j+40>>2];g[b+288+(B<<4)>>2]=+g[j>>2]*v+ +g[j+16>>2]*w+ +g[j+32>>2]*x;g[b+288+(B<<4)+4>>2]=y;g[b+288+(B<<4)+8>>2]=z;g[b+288+(B<<4)+12>>2]=0.0;A=A+1|0;if((A|0)==(o|0)){break}else{B=B+1|0}}o=o+42|0}else{o=42}A=Hb[c[(c[f>>2]|0)+84>>2]&127](f)|0;if((A|0)>0){B=0;C=o;while(1){ic[c[(c[f>>2]|0)+88>>2]&63](f,B,b+256|0);y=+g[b+256>>2];z=+g[b+260>>2];x=+g[b+264>>2];w=y*+g[j+16>>2]+z*+g[j+20>>2]+x*+g[j+24>>2];v=y*+g[j+32>>2]+z*+g[j+36>>2]+x*+g[j+40>>2];g[b+256>>2]=+g[j>>2]*y+ +g[j+4>>2]*z+ +g[j+8>>2]*x;g[b+260>>2]=w;g[b+264>>2]=v;g[b+268>>2]=0.0;dr();D=11216+(C<<4)|0;c[D+0>>2]=c[b+256>>2];c[D+4>>2]=c[b+260>>2];c[D+8>>2]=c[b+264>>2];c[D+12>>2]=c[b+268>>2];v=+g[b+256>>2];w=+g[b+260>>2];x=+g[b+264>>2];z=+g[h+4>>2]*-v+ +g[h+20>>2]*-w+ +g[h+36>>2]*-x;y=+g[h+8>>2]*-v+ +g[h+24>>2]*-w+ +g[h+40>>2]*-x;g[b+1280+(C<<4)>>2]=+g[h>>2]*-v+ +g[h+16>>2]*-w+ +g[h+32>>2]*-x;g[b+1280+(C<<4)+4>>2]=z;g[b+1280+(C<<4)+8>>2]=y;g[b+1280+(C<<4)+12>>2]=0.0;y=v*+g[j+4>>2]+w*+g[j+20>>2]+x*+g[j+36>>2];z=v*+g[j+8>>2]+w*+g[j+24>>2]+x*+g[j+40>>2];g[b+288+(C<<4)>>2]=+g[j>>2]*v+ +g[j+16>>2]*w+ +g[j+32>>2]*x;g[b+288+(C<<4)+4>>2]=y;g[b+288+(C<<4)+8>>2]=z;g[b+288+(C<<4)+12>>2]=0.0;B=B+1|0;if((B|0)==(A|0)){break}else{C=C+1|0}}o=A+o|0}mc[c[(c[e>>2]|0)+76>>2]&63](e,b+1280|0,b+3264|0,o);mc[c[(c[f>>2]|0)+76>>2]&63](f,b+288|0,b+2272|0,o);if((o|0)>0){if(r){r=0;v=999999984306749400.0;x=0.0;p=0.0;w=0.0;while(1){dr();u=+g[11216+(r<<4)>>2];t=+g[11220+(r<<4)>>2];s=+g[11228+(r<<4)>>2];if(u*u+t*t+0.0>.01?(y=+g[b+3264+(r<<4)>>2],z=+g[b+3264+(r<<4)+4>>2],q=+g[b+3264+(r<<4)+8>>2],G=+g[b+2272+(r<<4)>>2],F=+g[b+2272+(r<<4)+4>>2],E=+g[b+2272+(r<<4)+8>>2],q=u*(G*+g[j>>2]+F*+g[j+4>>2]+E*+g[j+8>>2]+ +g[j+48>>2]-(y*+g[h>>2]+z*+g[h+4>>2]+q*+g[h+8>>2]+ +g[h+48>>2]))+t*(G*+g[j+16>>2]+F*+g[j+20>>2]+E*+g[j+24>>2]+ +g[j+52>>2]-(y*+g[h+16>>2]+z*+g[h+20>>2]+q*+g[h+24>>2]+ +g[h+52>>2]))+0.0,q<v):0){v=q}else{u=x;t=p;s=w}r=r+1|0;if((r|0)==(o|0)){p=0.0;q=s;break}else{x=u;p=t;w=s}}}else{w=0.0;r=0;v=999999984306749400.0;u=0.0;t=0.0;s=0.0;while(1){dr();y=+g[11216+(r<<4)>>2];x=+g[11220+(r<<4)>>2];z=+g[11224+(r<<4)>>2];q=+g[11228+(r<<4)>>2];if(y*y+x*x+z*z>.01?(F=+g[b+3264+(r<<4)>>2],G=+g[b+3264+(r<<4)+4>>2],p=+g[b+3264+(r<<4)+8>>2],I=+g[b+2272+(r<<4)>>2],H=+g[b+2272+(r<<4)+4>>2],E=+g[b+2272+(r<<4)+8>>2],p=y*(I*+g[j>>2]+H*+g[j+4>>2]+E*+g[j+8>>2]+ +g[j+48>>2]-(F*+g[h>>2]+G*+g[h+4>>2]+p*+g[h+8>>2]+ +g[h+48>>2]))+x*(I*+g[j+16>>2]+H*+g[j+20>>2]+E*+g[j+24>>2]+ +g[j+52>>2]-(F*+g[h+16>>2]+G*+g[h+20>>2]+p*+g[h+24>>2]+ +g[h+52>>2]))+z*(I*+g[j+32>>2]+H*+g[j+36>>2]+E*+g[j+40>>2]+ +g[j+56>>2]-(F*+g[h+32>>2]+G*+g[h+36>>2]+p*+g[h+40>>2]+ +g[h+56>>2])),p<v):0){w=z;v=p;u=y;t=x}else{q=s}r=r+1|0;if((r|0)==(o|0)){p=w;break}else{s=q}}}}else{p=0.0;v=999999984306749400.0;u=0.0;t=0.0;q=0.0}switch(c[e+4>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:{break};default:{+Tb[c[(c[e>>2]|0)+48>>2]&15](e)}}switch(c[f+4>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:{break};default:{+Tb[c[(c[f>>2]|0)+48>>2]&15](f)}}if(v<0.0){D=0;i=b;return D|0}switch(c[e+4>>2]|0){case 1:{s=+g[e+44>>2];break};case 13:{s=+g[e+44>>2];break};case 11:{s=+g[e+44>>2];break};case 10:{s=+g[e+44>>2];break};case 4:case 5:{s=+g[e+44>>2];break};case 8:{s=+g[e+28>>2]*+g[e+12>>2];break};case 0:{s=+g[e+44>>2];break};default:{s=+Tb[c[(c[e>>2]|0)+48>>2]&15](e)}}o=c[f+4>>2]|0;switch(o|0){case 8:{o=8;w=+g[f+28>>2]*+g[f+12>>2];break};case 0:{o=0;w=+g[f+44>>2];break};case 1:{o=1;w=+g[f+44>>2];break};case 13:{o=13;w=+g[f+44>>2];break};case 11:{o=11;w=+g[f+44>>2];break};case 10:{o=10;w=+g[f+44>>2];break};case 4:case 5:{w=+g[f+44>>2];break};default:{w=+Tb[c[(c[f>>2]|0)+48>>2]&15](f);o=c[f+4>>2]|0}}s=v+(s+w+.5);c[b+176>>2]=11040;g[b+180>>2]=0.0;g[b+184>>2]=1.0;g[b+188>>2]=0.0;g[b+192>>2]=0.0;c[b+196>>2]=0;c[b+200>>2]=d;c[b+204>>2]=e;c[b+208>>2]=f;c[b+212>>2]=c[e+4>>2];c[b+216>>2]=o;g[b+220>>2]=+Tb[c[(c[e>>2]|0)+48>>2]&15](e);g[b+224>>2]=+Tb[c[(c[f>>2]|0)+48>>2]&15](f);a[b+228>>0]=0;c[b+236>>2]=-1;c[b+248>>2]=1;c[b+252>>2]=1;G=+g[h+48>>2]+u*s;H=t*s+ +g[h+52>>2];I=p*s+ +g[h+56>>2];c[b+44>>2]=c[h+0>>2];c[b+48>>2]=c[h+4>>2];c[b+52>>2]=c[h+8>>2];c[b+56>>2]=c[h+12>>2];c[b+60>>2]=c[h+16>>2];c[b+64>>2]=c[h+20>>2];c[b+68>>2]=c[h+24>>2];c[b+72>>2]=c[h+28>>2];c[b+76>>2]=c[h+32>>2];c[b+80>>2]=c[h+36>>2];c[b+84>>2]=c[h+40>>2];c[b+88>>2]=c[h+44>>2];g[b+92>>2]=G;g[b+96>>2]=H;g[b+100>>2]=I;g[b+104>>2]=0.0;c[b+108>>2]=c[j+0>>2];c[b+112>>2]=c[j+4>>2];c[b+116>>2]=c[j+8>>2];c[b+120>>2]=c[j+12>>2];c[b+124>>2]=c[j+16>>2];c[b+128>>2]=c[j+20>>2];c[b+132>>2]=c[j+24>>2];c[b+136>>2]=c[j+28>>2];c[b+140>>2]=c[j+32>>2];c[b+144>>2]=c[j+36>>2];c[b+148>>2]=c[j+40>>2];c[b+152>>2]=c[j+44>>2];c[b+156>>2]=c[j+48>>2];c[b+160>>2]=c[j+52>>2];c[b+164>>2]=c[j+56>>2];c[b+168>>2]=c[j+60>>2];g[b+172>>2]=999999984306749400.0;c[b>>2]=12304;a[b+40>>0]=0;g[b+180>>2]=-u;g[b+184>>2]=-t;g[b+188>>2]=-p;g[b+192>>2]=0.0;_q(b+176|0,b+44|0,b,n,0);s=s- +g[b+36>>2];d=a[b+40>>0]|0;if(!(d<<24>>24==0)){H=+g[b+24>>2]-t*s;I=+g[b+28>>2]-p*s;g[l>>2]=+g[b+20>>2]-u*s;g[l+4>>2]=H;g[l+8>>2]=I;g[l+12>>2]=0.0;c[m+0>>2]=c[b+20>>2];c[m+4>>2]=c[b+24>>2];c[m+8>>2]=c[b+28>>2];c[m+12>>2]=c[b+32>>2];g[k>>2]=u;g[k+4>>2]=t;g[k+8>>2]=p;g[k+12>>2]=q}D=d<<24>>24!=0;i=b;return D|0}function dr(){var b=0;b=i;if((a[12208]|0)!=0){i=b;return}if((Ya(12208)|0)==0){i=b;return}g[2804]=0.0;g[11220>>2]=-0.0;g[11224>>2]=-1.0;g[11228>>2]=0.0;g[11232>>2]=.7236080169677734;g[11236>>2]=-.5257250070571899;g[11240>>2]=-.44721901416778564;g[11244>>2]=0.0;g[11248>>2]=-.2763879895210266;g[11252>>2]=-.8506489992141724;g[11256>>2]=-.44721901416778564;g[11260>>2]=0.0;g[11264>>2]=-.8944259881973267;g[11268>>2]=-0.0;g[11272>>2]=-.4472160041332245;g[11276>>2]=0.0;g[11280>>2]=-.2763879895210266;g[11284>>2]=.8506489992141724;g[11288>>2]=-.44721999764442444;g[11292>>2]=0.0;g[11296>>2]=.7236080169677734;g[11300>>2]=.5257250070571899;g[11304>>2]=-.44721901416778564;g[11308>>2]=0.0;g[11312>>2]=.2763879895210266;g[11316>>2]=-.8506489992141724;g[11320>>2]=.44721999764442444;g[11324>>2]=0.0;g[11328>>2]=-.7236080169677734;g[11332>>2]=-.5257250070571899;g[11336>>2]=.44721901416778564;g[11340>>2]=0.0;g[11344>>2]=-.7236080169677734;g[11348>>2]=.5257250070571899;g[11352>>2]=.44721901416778564;g[11356>>2]=0.0;g[11360>>2]=.2763879895210266;g[11364>>2]=.8506489992141724;g[11368>>2]=.44721901416778564;g[11372>>2]=0.0;g[11376>>2]=.8944259881973267;g[11380>>2]=0.0;g[11384>>2]=.4472160041332245;g[11388>>2]=0.0;g[11392>>2]=-0.0;g[11396>>2]=0.0;g[11400>>2]=1.0;g[11404>>2]=0.0;g[11408>>2]=.4253230094909668;g[11412>>2]=-.3090110123157501;g[11416>>2]=-.8506540060043335;g[11420>>2]=0.0;g[11424>>2]=-.16245600581169128;g[11428>>2]=-.49999499320983887;g[11432>>2]=-.8506540060043335;g[11436>>2]=0.0;g[11440>>2]=.2628690004348755;g[11444>>2]=-.8090119957923889;g[11448>>2]=-.525738000869751;g[11452>>2]=0.0;g[11456>>2]=.4253230094909668;g[11460>>2]=.3090110123157501;g[11464>>2]=-.8506540060043335;g[11468>>2]=0.0;g[11472>>2]=.8506479859352112;g[11476>>2]=-0.0;g[11480>>2]=-.5257359743118286;g[11484>>2]=0.0;g[11488>>2]=-.5257300138473511;g[11492>>2]=-0.0;g[11496>>2]=-.8506519794464111;g[11500>>2]=0.0;g[11504>>2]=-.6881899833679199;g[11508>>2]=-.49999698996543884;g[11512>>2]=-.5257359743118286;g[11516>>2]=0.0;g[11520>>2]=-.16245600581169128;g[11524>>2]=.49999499320983887;g[11528>>2]=-.8506540060043335;g[11532>>2]=0.0;g[11536>>2]=-.6881899833679199;g[11540>>2]=.49999698996543884;g[11544>>2]=-.5257359743118286;g[11548>>2]=0.0;g[11552>>2]=.2628690004348755;g[11556>>2]=.8090119957923889;g[11560>>2]=-.525738000869751;g[11564>>2]=0.0;g[11568>>2]=.9510579705238342;g[11572>>2]=.3090130090713501;g[11576>>2]=0.0;g[11580>>2]=0.0;g[11584>>2]=.9510579705238342;g[11588>>2]=-.3090130090713501;g[11592>>2]=0.0;g[11596>>2]=0.0;g[11600>>2]=.5877860188484192;g[11604>>2]=-.80901700258255;g[11608>>2]=0.0;g[11612>>2]=0.0;g[11616>>2]=0.0;g[11620>>2]=-1.0;g[11624>>2]=0.0;g[11628>>2]=0.0;g[11632>>2]=-.5877860188484192;g[11636>>2]=-.80901700258255;g[11640>>2]=0.0;g[11644>>2]=0.0;g[11648>>2]=-.9510579705238342;g[11652>>2]=-.3090130090713501;g[11656>>2]=-0.0;g[11660>>2]=0.0;g[11664>>2]=-.9510579705238342;g[11668>>2]=.3090130090713501;g[11672>>2]=-0.0;g[11676>>2]=0.0;g[11680>>2]=-.5877860188484192;g[11684>>2]=.80901700258255;g[11688>>2]=-0.0;g[11692>>2]=0.0;g[11696>>2]=-0.0;g[11700>>2]=1.0;g[11704>>2]=-0.0;g[11708>>2]=0.0;g[11712>>2]=.5877860188484192;g[11716>>2]=.80901700258255;g[11720>>2]=-0.0;g[11724>>2]=0.0;g[11728>>2]=.6881899833679199;g[11732>>2]=-.49999698996543884;g[11736>>2]=.5257359743118286;g[11740>>2]=0.0;g[11744>>2]=-.2628690004348755;g[11748>>2]=-.8090119957923889;g[11752>>2]=.525738000869751;g[11756>>2]=0.0;g[11760>>2]=-.8506479859352112;g[11764>>2]=0.0;g[11768>>2]=.5257359743118286;g[11772>>2]=0.0;g[11776>>2]=-.2628690004348755;g[11780>>2]=.8090119957923889;g[11784>>2]=.525738000869751;g[11788>>2]=0.0;g[11792>>2]=.6881899833679199;g[11796>>2]=.49999698996543884;g[11800>>2]=.5257359743118286;g[11804>>2]=0.0;g[11808>>2]=.5257300138473511;g[11812>>2]=0.0;g[11816>>2]=.8506519794464111;g[11820>>2]=0.0;g[11824>>2]=.16245600581169128;g[11828>>2]=-.49999499320983887;g[11832>>2]=.8506540060043335;g[11836>>2]=0.0;g[11840>>2]=-.4253230094909668;g[11844>>2]=-.3090110123157501;g[11848>>2]=.8506540060043335;g[11852>>2]=0.0;g[11856>>2]=-.4253230094909668;g[11860>>2]=.3090110123157501;g[11864>>2]=.8506540060043335;g[11868>>2]=0.0;g[11872>>2]=.16245600581169128;g[11876>>2]=.49999499320983887;g[11880>>2]=.8506540060043335;g[11884>>2]=0.0;bb(12208);i=b;return}function er(a){a=a|0;return}function fr(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function gr(a){a=a|0;return}function hr(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function ir(a,b,c){a=a|0;b=b|0;c=c|0;return}function jr(a,b,c){a=a|0;b=b|0;c=c|0;return}function kr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0;h=i;c[b+4>>2]=c[d+0>>2];c[b+8>>2]=c[d+4>>2];c[b+12>>2]=c[d+8>>2];c[b+16>>2]=c[d+12>>2];c[b+20>>2]=c[e+0>>2];c[b+24>>2]=c[e+4>>2];c[b+28>>2]=c[e+8>>2];c[b+32>>2]=c[e+12>>2];g[b+36>>2]=f;a[b+40>>0]=1;i=h;return}function lr(a){a=a|0;var b=0;b=i;is(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function mr(a){a=a|0;var b=0;b=i;is(a);i=b;return}function nr(d,e,f,h,j){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0;k=i;i=i+176|0;a[d+60>>0]=f&1;if(f){t=+g[h>>2]+-1.0;s=+g[h+4>>2]+-1.0;r=+g[h+8>>2]+-1.0;g[d+4>>2]=t;g[d+8>>2]=s;g[d+12>>2]=r;g[d+16>>2]=0.0;o=+g[j>>2]+1.0;m=+g[j+4>>2]+1.0;l=+g[j+8>>2]+1.0;g[d+20>>2]=o;g[d+24>>2]=m;g[d+28>>2]=l;g[d+32>>2]=0.0;g[d+36>>2]=65533.0/(o-t);g[d+40>>2]=65533.0/(m-s);g[d+44>>2]=65533.0/(l-r);g[d+48>>2]=0.0;a[d+60>>0]=1;n=t+ +(~~((t-t)*(65533.0/(o-t)))&65535&65534&65535)/(65533.0/(o-t))+-1.0;p=s+ +(~~((s-s)*(65533.0/(m-s)))&65535&65534&65535)/(65533.0/(m-s))+-1.0;q=r+ +(~~((r-r)*(65533.0/(l-r)))&65535&65534&65535)/(65533.0/(l-r))+-1.0;if(n<t){g[d+4>>2]=n}else{n=t}if(p<s){g[d+8>>2]=p}else{p=s}if(q<r){g[d+12>>2]=q}else{q=r}t=n+ +((~~((o-n)*(65533.0/(o-t))+1.0)&65535|1)&65535)/(65533.0/(o-t))+1.0;s=p+ +((~~((m-p)*(65533.0/(m-s))+1.0)&65535|1)&65535)/(65533.0/(m-s))+1.0;r=q+ +((~~((l-q)*(65533.0/(l-r))+1.0)&65535|1)&65535)/(65533.0/(l-r))+1.0;if(o<t){g[d+20>>2]=t;o=t}if(m<s){g[d+24>>2]=s;m=s}if(l<r){g[d+28>>2]=r;l=r}g[d+36>>2]=65533.0/(o-n);g[d+40>>2]=65533.0/(m-p);g[d+44>>2]=65533.0/(l-q);g[d+48>>2]=0.0;c[k+152>>2]=12744;c[k+156>>2]=d+104;c[k+160>>2]=d;mc[c[(c[e>>2]|0)+8>>2]&63](e,k+152|0,d+4|0,d+20|0);e=c[d+108>>2]|0;c[k+136>>2]=0;c[k+140>>2]=0;c[k+144>>2]=0;c[k+148>>2]=0;j=c[d+128>>2]|0;if((j|0)<(e<<1|0)){if((c[d+132>>2]|0)<(e<<1|0)){if((e|0)==0){f=j;h=0}else{c[4336]=(c[4336]|0)+1;h=cw(e<<5|19)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}f=c[d+128>>2]|0}if((f|0)>0){u=0;do{x=h+(u<<4)|0;w=(c[d+136>>2]|0)+(u<<4)|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];u=u+1|0}while((u|0)!=(f|0))}f=c[d+136>>2]|0;if((f|0)!=0){if((a[d+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=h;c[d+132>>2]=e<<1;h=d+136|0}else{h=d+136|0}do{x=(c[h>>2]|0)+(j<<4)|0;c[x+0>>2]=c[k+136>>2];c[x+4>>2]=c[k+140>>2];c[x+8>>2]=c[k+144>>2];c[x+12>>2]=c[k+148>>2];j=j+1|0}while((j|0)!=(e<<1|0))}c[d+128>>2]=e<<1}else{c[k+128>>2]=12608;c[k+132>>2]=d+64;g[k+112>>2]=-999999984306749400.0;g[k+116>>2]=-999999984306749400.0;g[k+120>>2]=-999999984306749400.0;g[k+124>>2]=0.0;g[k+96>>2]=999999984306749400.0;g[k+100>>2]=999999984306749400.0;g[k+104>>2]=999999984306749400.0;g[k+108>>2]=0.0;mc[c[(c[e>>2]|0)+8>>2]&63](e,k+128|0,k+112|0,k+96|0);e=c[d+68>>2]|0;f=k+32|0;h=f+64|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(h|0));j=c[d+88>>2]|0;if((j|0)<(e<<1|0)){if((c[d+92>>2]|0)<(e<<1|0)){if((e|0)==0){v=j;w=0}else{c[4336]=(c[4336]|0)+1;h=cw(e<<7|19)|0;if((h|0)==0){w=0}else{c[(h+19&-16)+ -4>>2]=h;w=h+19&-16}v=c[d+88>>2]|0}if((v|0)>0){x=0;do{f=w+(x<<6)+0|0;u=(c[d+96>>2]|0)+(x<<6)+0|0;h=f+64|0;do{c[f>>2]=c[u>>2];f=f+4|0;u=u+4|0}while((f|0)<(h|0));x=x+1|0}while((x|0)!=(v|0))}h=c[d+96>>2]|0;if((h|0)!=0){if((a[d+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[d+96>>2]=0}a[d+100>>0]=1;c[d+96>>2]=w;c[d+92>>2]=e<<1;v=d+96|0}else{v=d+96|0}do{f=(c[v>>2]|0)+(j<<6)+0|0;u=k+32|0;h=f+64|0;do{c[f>>2]=c[u>>2];f=f+4|0;u=u+4|0}while((f|0)<(h|0));j=j+1|0}while((j|0)!=(e<<1|0))}c[d+88>>2]=e<<1}c[d+56>>2]=0;gs(d,0,e);if((a[d+60>>0]|0)!=0?(c[d+152>>2]|0)==0:0){if((c[d+156>>2]|0)==0){c[4336]=(c[4336]|0)+1;e=cw(51)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}h=c[d+152>>2]|0;if((h|0)>0){j=0;do{x=e+(j<<5)|0;w=(c[d+160>>2]|0)+(j<<5)|0;c[x+0>>2]=c[w+0>>2];c[x+4>>2]=c[w+4>>2];c[x+8>>2]=c[w+8>>2];c[x+12>>2]=c[w+12>>2];c[x+16>>2]=c[w+16>>2];c[x+20>>2]=c[w+20>>2];c[x+24>>2]=c[w+24>>2];c[x+28>>2]=c[w+28>>2];j=j+1|0}while((j|0)!=(h|0))}j=c[d+160>>2]|0;if((j|0)!=0){if((a[d+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=e;c[d+156>>2]=1;j=(c[d+152>>2]|0)+1|0}else{j=1;e=c[d+160>>2]|0}c[d+152>>2]=j;c[e+0>>2]=c[k+0>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];c[e+16>>2]=c[k+16>>2];c[e+20>>2]=c[k+20>>2];c[e+24>>2]=c[k+24>>2];c[e+28>>2]=c[k+28>>2];j=c[d+160>>2]|0;e=c[d+136>>2]|0;b[j>>1]=b[e>>1]|0;b[j+2>>1]=b[e+2>>1]|0;b[j+4>>1]=b[e+4>>1]|0;b[j+6>>1]=b[e+6>>1]|0;b[j+8>>1]=b[e+8>>1]|0;b[j+10>>1]=b[e+10>>1]|0;c[j+12>>2]=0;e=c[e+12>>2]|0;c[j+16>>2]=(e|0)>-1?1:0-e|0}c[d+168>>2]=c[d+152>>2];e=c[d+116>>2]|0;if((e|0)!=0){if((a[d+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[d+116>>2]=0}a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;e=c[d+76>>2]|0;if((e|0)==0){a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;x=d+72|0;c[x>>2]=0;i=k;return}if((a[d+80>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[d+76>>2]=0;a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;x=d+72|0;c[x>>2]=0;i=k;return}function or(a){a=a|0;return 84}function pr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;ms(a,b,c,d)|0;i=e;return 1}function qr(a){a=a|0;return}function rr(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function sr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+32|0;o=+g[d>>2];k=o<999999984306749400.0?o:999999984306749400.0;p=+g[d+4>>2];l=p<999999984306749400.0?p:999999984306749400.0;q=+g[d+8>>2];m=q<999999984306749400.0?q:999999984306749400.0;r=+g[d+12>>2];n=r<0.0?r:0.0;o=o>-999999984306749400.0?o:-999999984306749400.0;p=p>-999999984306749400.0?p:-999999984306749400.0;q=q>-999999984306749400.0?q:-999999984306749400.0;r=r>0.0?r:0.0;v=+g[d+16>>2];k=v<k?v:k;s=+g[d+20>>2];l=s<l?s:l;t=+g[d+24>>2];m=t<m?t:m;u=+g[d+28>>2];n=u<n?u:n;o=o<v?v:o;p=p<s?s:p;q=q<t?t:q;r=r<u?u:r;s=+g[d+32>>2];k=s<k?s:k;t=+g[d+36>>2];l=t<l?t:l;u=+g[d+40>>2];m=u<m?u:m;v=+g[d+44>>2];n=v<n?v:n;o=o<s?s:o;p=p<t?t:p;q=q<u?u:q;r=r<v?v:r;b=c[b+4>>2]|0;w=c[b+4>>2]|0;if((w|0)==(c[b+8>>2]|0)?(j=(w|0)==0?1:w<<1,(w|0)<(j|0)):0){if((j|0)==0){d=0}else{c[4336]=(c[4336]|0)+1;d=cw(j<<6|19)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}w=c[b+4>>2]|0}if((w|0)>0){z=0;do{A=d+(z<<6)+0|0;x=(c[b+12>>2]|0)+(z<<6)+0|0;y=A+64|0;do{c[A>>2]=c[x>>2];A=A+4|0;x=x+4|0}while((A|0)<(y|0));z=z+1|0}while((z|0)!=(w|0))}w=c[b+12>>2]|0;if((w|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[w+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=d;c[b+8>>2]=j;w=c[b+4>>2]|0}A=c[b+12>>2]|0;g[A+(w<<6)>>2]=k;g[A+(w<<6)+4>>2]=l;g[A+(w<<6)+8>>2]=m;g[A+(w<<6)+12>>2]=n;g[A+(w<<6)+16>>2]=o;g[A+(w<<6)+20>>2]=p;g[A+(w<<6)+24>>2]=q;g[A+(w<<6)+28>>2]=r;c[A+(w<<6)+32>>2]=-1;c[A+(w<<6)+36>>2]=e;c[A+(w<<6)+40>>2]=f;A=A+(w<<6)+44|0;c[A+0>>2]=c[h+0>>2];c[A+4>>2]=c[h+4>>2];c[A+8>>2]=c[h+8>>2];c[A+12>>2]=c[h+12>>2];c[A+16>>2]=c[h+16>>2];c[b+4>>2]=(c[b+4>>2]|0)+1;i=h;return}function tr(a){a=a|0;return}function ur(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function vr(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0;j=i;o=+g[e>>2];t=o<999999984306749400.0?o:999999984306749400.0;r=+g[e+4>>2];q=r<999999984306749400.0?r:999999984306749400.0;u=+g[e+8>>2];n=u<999999984306749400.0?u:999999984306749400.0;o=o>-999999984306749400.0?o:-999999984306749400.0;r=r>-999999984306749400.0?r:-999999984306749400.0;u=u>-999999984306749400.0?u:-999999984306749400.0;x=+g[e+16>>2];t=x<t?x:t;w=+g[e+20>>2];q=w<q?w:q;y=+g[e+24>>2];n=y<n?y:n;o=o<x?x:o;r=r<w?w:r;u=u<y?y:u;x=+g[e+32>>2];t=x<t?x:t;w=+g[e+36>>2];q=w<q?w:q;y=+g[e+40>>2];n=y<n?y:n;o=o<x?x:o;r=r<w?w:r;u=u<y?y:u;if(o-t<.0020000000949949026){t=t+-.0010000000474974513;o=o+.0010000000474974513}if(r-q<.0020000000949949026){q=q+-.0010000000474974513;r=r+.0010000000474974513}if(u-n<.0020000000949949026){n=n+-.0010000000474974513;u=u+.0010000000474974513}e=c[d+8>>2]|0;E=+g[e+4>>2];C=+g[e+8>>2];x=+g[e+12>>2];D=+g[e+36>>2];w=+g[e+40>>2];y=+g[e+44>>2];e=~~((t-E)*D)&65535&65534;l=~~((q-C)*w)&65535&65534;m=~~((n-x)*y)&65535&65534;p=(~~((o-E)*D+1.0)&65535|1)&65535;s=(~~((r-C)*w+1.0)&65535|1)&65535;v=(~~((u-x)*y+1.0)&65535|1)&65535;d=c[d+4>>2]|0;A=c[d+4>>2]|0;if((A|0)==(c[d+8>>2]|0)?(k=(A|0)==0?1:A<<1,(A|0)<(k|0)):0){if((k|0)==0){z=0}else{c[4336]=(c[4336]|0)+1;z=cw((k<<4|3)+16|0)|0;if((z|0)==0){z=0}else{c[(z+19&-16)+ -4>>2]=z;z=z+19&-16}A=c[d+4>>2]|0}if((A|0)>0){B=0;do{F=z+(B<<4)|0;G=(c[d+12>>2]|0)+(B<<4)|0;c[F+0>>2]=c[G+0>>2];c[F+4>>2]=c[G+4>>2];c[F+8>>2]=c[G+8>>2];c[F+12>>2]=c[G+12>>2];B=B+1|0}while((B|0)!=(A|0))}A=c[d+12>>2]|0;if((A|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[A+ -4>>2]|0)}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=z;c[d+8>>2]=k;A=c[d+4>>2]|0}G=c[d+12>>2]|0;b[G+(A<<4)>>1]=e;b[G+(A<<4)+2>>1]=l;b[G+(A<<4)+4>>1]=m;b[G+(A<<4)+6>>1]=p;b[G+(A<<4)+8>>1]=s;b[G+(A<<4)+10>>1]=v;c[G+(A<<4)+12>>2]=f<<21|h;c[d+4>>2]=(c[d+4>>2]|0)+1;i=j;return}function wr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;c[b>>2]=12920;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+24>>2]=0;a[b+28>>0]=0;a[b+48>>0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;a[b+68>>0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;c[b+72>>2]=0;c[4336]=(c[4336]|0)+1;e=cw(51)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}f=c[b+8>>2]|0;if((f|0)>0){g=0;do{h=c[b+16>>2]|0;c[e+(g<<4)>>2]=c[h+(g<<4)>>2];c[e+(g<<4)+4>>2]=c[h+(g<<4)+4>>2];c[e+(g<<4)+8>>2]=c[h+(g<<4)+8>>2];c[e+(g<<4)+12>>2]=c[h+(g<<4)+12>>2];g=g+1|0}while((g|0)!=(f|0))}f=c[b+16>>2]|0;if((f|0)==0){a[b+20>>0]=1;c[b+16>>2]=e;c[b+12>>2]=2;xr(b);i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=e;c[b+12>>2]=2;xr(b);i=d;return}



function os(d,e){d=d|0;e=e|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+112|0;g[d+20>>2]=+h[e+32>>3];g[d+24>>2]=+h[e+40>>3];g[d+28>>2]=+h[e+48>>3];g[d+32>>2]=+h[e+56>>3];g[d+4>>2]=+h[e>>3];g[d+8>>2]=+h[e+8>>3];g[d+12>>2]=+h[e+16>>3];g[d+16>>2]=+h[e+24>>3];g[d+36>>2]=+h[e+64>>3];g[d+40>>2]=+h[e+72>>3];g[d+44>>2]=+h[e+80>>3];g[d+48>>2]=+h[e+88>>3];c[d+56>>2]=c[e+96>>2];a[d+60>>0]=(c[e+100>>2]|0)!=0|0;j=c[e+104>>2]|0;m=f+48|0;n=m+64|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));k=c[d+88>>2]|0;if((k|0)<(j|0)){if((c[d+92>>2]|0)<(j|0)){if((j|0)==0){o=k;p=0}else{c[4336]=(c[4336]|0)+1;l=cw(j<<6|19)|0;if((l|0)==0){p=0}else{c[(l+19&-16)+ -4>>2]=l;p=l+19&-16}o=c[d+88>>2]|0}if((o|0)>0){q=0;do{m=p+(q<<6)+0|0;l=(c[d+96>>2]|0)+(q<<6)+0|0;n=m+64|0;do{c[m>>2]=c[l>>2];m=m+4|0;l=l+4|0}while((m|0)<(n|0));q=q+1|0}while((q|0)!=(o|0))}l=c[d+96>>2]|0;if((l|0)!=0){if((a[d+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[d+96>>2]=0}a[d+100>>0]=1;c[d+96>>2]=p;c[d+92>>2]=j;o=d+96|0}else{o=d+96|0}do{m=(c[o>>2]|0)+(k<<6)+0|0;l=f+48|0;n=m+64|0;do{c[m>>2]=c[l>>2];m=m+4|0;l=l+4|0}while((m|0)<(n|0));k=k+1|0}while((k|0)!=(j|0))}c[d+88>>2]=j;if((j|0)>0){m=c[d+96>>2]|0;l=0;k=c[e+112>>2]|0;while(1){g[m+(l<<6)+16>>2]=+h[k+32>>3];g[m+(l<<6)+20>>2]=+h[k+40>>3];g[m+(l<<6)+24>>2]=+h[k+48>>3];g[m+(l<<6)+28>>2]=+h[k+56>>3];g[m+(l<<6)>>2]=+h[k>>3];g[m+(l<<6)+4>>2]=+h[k+8>>3];g[m+(l<<6)+8>>2]=+h[k+16>>3];g[m+(l<<6)+12>>2]=+h[k+24>>3];c[m+(l<<6)+32>>2]=c[k+64>>2];c[m+(l<<6)+36>>2]=c[k+68>>2];c[m+(l<<6)+40>>2]=c[k+72>>2];l=l+1|0;if((l|0)==(j|0)){break}else{k=k+80|0}}}j=c[e+108>>2]|0;c[f+32>>2]=0;c[f+36>>2]=0;c[f+40>>2]=0;c[f+44>>2]=0;k=c[d+128>>2]|0;if((k|0)<(j|0)){if((c[d+132>>2]|0)<(j|0)){if((j|0)==0){l=k;m=0}else{c[4336]=(c[4336]|0)+1;l=cw((j<<4|3)+16|0)|0;if((l|0)==0){m=0}else{c[(l+19&-16)+ -4>>2]=l;m=l+19&-16}l=c[d+128>>2]|0}if((l|0)>0){n=0;do{q=m+(n<<4)|0;p=(c[d+136>>2]|0)+(n<<4)|0;c[q+0>>2]=c[p+0>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];c[q+12>>2]=c[p+12>>2];n=n+1|0}while((n|0)!=(l|0))}l=c[d+136>>2]|0;if((l|0)!=0){if((a[d+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=m;c[d+132>>2]=j;l=d+136|0}else{l=d+136|0}do{q=(c[l>>2]|0)+(k<<4)|0;c[q+0>>2]=c[f+32>>2];c[q+4>>2]=c[f+36>>2];c[q+8>>2]=c[f+40>>2];c[q+12>>2]=c[f+44>>2];k=k+1|0}while((k|0)!=(j|0))}c[d+128>>2]=j;if((j|0)>0){k=c[d+136>>2]|0;m=0;l=c[e+116>>2]|0;while(1){c[k+(m<<4)+12>>2]=c[l+12>>2];b[k+(m<<4)+6>>1]=b[l+6>>1]|0;b[k+(m<<4)+8>>1]=b[l+8>>1]|0;b[k+(m<<4)+10>>1]=b[l+10>>1]|0;b[k+(m<<4)>>1]=b[l>>1]|0;b[k+(m<<4)+2>>1]=b[l+2>>1]|0;b[k+(m<<4)+4>>1]=b[l+4>>1]|0;m=m+1|0;if((m|0)==(j|0)){break}else{l=l+16|0}}}c[d+144>>2]=c[e+120>>2];j=c[e+124>>2]|0;k=c[d+152>>2]|0;if((k|0)<(j|0)){if((c[d+156>>2]|0)<(j|0)){if((j|0)==0){l=k;m=0}else{c[4336]=(c[4336]|0)+1;l=cw(j<<5|19)|0;if((l|0)==0){m=0}else{c[(l+19&-16)+ -4>>2]=l;m=l+19&-16}l=c[d+152>>2]|0}if((l|0)>0){n=0;do{q=m+(n<<5)|0;p=(c[d+160>>2]|0)+(n<<5)|0;c[q+0>>2]=c[p+0>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];c[q+12>>2]=c[p+12>>2];c[q+16>>2]=c[p+16>>2];c[q+20>>2]=c[p+20>>2];c[q+24>>2]=c[p+24>>2];c[q+28>>2]=c[p+28>>2];n=n+1|0}while((n|0)!=(l|0))}l=c[d+160>>2]|0;if((l|0)!=0){if((a[d+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=m;c[d+156>>2]=j;l=d+160|0}else{l=d+160|0}do{q=(c[l>>2]|0)+(k<<5)|0;c[q+0>>2]=c[f+0>>2];c[q+4>>2]=c[f+4>>2];c[q+8>>2]=c[f+8>>2];c[q+12>>2]=c[f+12>>2];c[q+16>>2]=c[f+16>>2];c[q+20>>2]=c[f+20>>2];c[q+24>>2]=c[f+24>>2];c[q+28>>2]=c[f+28>>2];k=k+1|0}while((k|0)!=(j|0))}c[d+152>>2]=j;if((j|0)<=0){i=f;return}k=c[d+160>>2]|0;d=0;e=c[e+128>>2]|0;while(1){b[k+(d<<5)+6>>1]=b[e+14>>1]|0;b[k+(d<<5)+8>>1]=b[e+16>>1]|0;b[k+(d<<5)+10>>1]=b[e+18>>1]|0;b[k+(d<<5)>>1]=b[e+8>>1]|0;b[k+(d<<5)+2>>1]=b[e+10>>1]|0;b[k+(d<<5)+4>>1]=b[e+12>>1]|0;c[k+(d<<5)+12>>2]=c[e>>2];c[k+(d<<5)+16>>2]=c[e+4>>2];d=d+1|0;if((d|0)==(j|0)){break}else{e=e+20|0}}i=f;return}function ps(a,e,f){a=a|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;g[e+16>>2]=+g[a+20>>2];g[e+20>>2]=+g[a+24>>2];g[e+24>>2]=+g[a+28>>2];g[e+28>>2]=+g[a+32>>2];g[e>>2]=+g[a+4>>2];g[e+4>>2]=+g[a+8>>2];g[e+8>>2]=+g[a+12>>2];g[e+12>>2]=+g[a+16>>2];g[e+32>>2]=+g[a+36>>2];g[e+36>>2]=+g[a+40>>2];g[e+40>>2]=+g[a+44>>2];g[e+44>>2]=+g[a+48>>2];c[e+48>>2]=c[a+56>>2];c[e+52>>2]=d[a+60>>0]|0;c[e+56>>2]=c[a+88>>2];if((c[a+88>>2]|0)!=0){n=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+96>>2]|0)|0;c[e+64>>2]=n;if((n|0)!=0){n=c[a+88>>2]|0;j=Qb[c[(c[f>>2]|0)+16>>2]&31](f,48,n)|0;if((n|0)>0){k=c[a+96>>2]|0;m=0;l=c[j+8>>2]|0;while(1){g[l+16>>2]=+g[k+(m<<6)+16>>2];g[l+20>>2]=+g[k+(m<<6)+20>>2];g[l+24>>2]=+g[k+(m<<6)+24>>2];g[l+28>>2]=+g[k+(m<<6)+28>>2];g[l>>2]=+g[k+(m<<6)>>2];g[l+4>>2]=+g[k+(m<<6)+4>>2];g[l+8>>2]=+g[k+(m<<6)+8>>2];g[l+12>>2]=+g[k+(m<<6)+12>>2];c[l+32>>2]=c[k+(m<<6)+32>>2];c[l+36>>2]=c[k+(m<<6)+36>>2];c[l+40>>2]=c[k+(m<<6)+40>>2];m=m+1|0;if((m|0)==(n|0)){break}else{l=l+48|0}}}else{k=c[a+96>>2]|0}Bb[c[(c[f>>2]|0)+20>>2]&31](f,j,13608,1497453121,k)}}else{c[e+64>>2]=0}c[e+60>>2]=c[a+128>>2];if((c[a+128>>2]|0)!=0){n=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+136>>2]|0)|0;c[e+68>>2]=n;if((n|0)!=0){k=c[a+128>>2]|0;j=Qb[c[(c[f>>2]|0)+16>>2]&31](f,16,k)|0;if((k|0)>0){l=c[a+136>>2]|0;n=0;m=c[j+8>>2]|0;while(1){c[m+12>>2]=c[l+(n<<4)+12>>2];b[m+6>>1]=b[l+(n<<4)+6>>1]|0;b[m+8>>1]=b[l+(n<<4)+8>>1]|0;b[m+10>>1]=b[l+(n<<4)+10>>1]|0;b[m>>1]=b[l+(n<<4)>>1]|0;b[m+2>>1]=b[l+(n<<4)+2>>1]|0;b[m+4>>1]=b[l+(n<<4)+4>>1]|0;n=n+1|0;if((n|0)==(k|0)){break}else{m=m+16|0}}}else{l=c[a+136>>2]|0}Bb[c[(c[f>>2]|0)+20>>2]&31](f,j,13632,1497453121,l)}}else{c[e+68>>2]=0}c[e+76>>2]=c[a+144>>2];c[e+80>>2]=c[a+152>>2];if((c[a+152>>2]|0)==0){c[e+72>>2]=0;i=h;return 13680}n=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+160>>2]|0)|0;c[e+72>>2]=n;if((n|0)==0){i=h;return 13680}j=c[a+152>>2]|0;e=Qb[c[(c[f>>2]|0)+16>>2]&31](f,20,j)|0;if((j|0)>0){a=c[a+160>>2]|0;l=0;k=c[e+8>>2]|0;while(1){b[k+14>>1]=b[a+(l<<5)+6>>1]|0;b[k+16>>1]=b[a+(l<<5)+8>>1]|0;b[k+18>>1]=b[a+(l<<5)+10>>1]|0;b[k+8>>1]=b[a+(l<<5)>>1]|0;b[k+10>>1]=b[a+(l<<5)+2>>1]|0;b[k+12>>1]=b[a+(l<<5)+4>>1]|0;c[k>>2]=c[a+(l<<5)+12>>2];c[k+4>>2]=c[a+(l<<5)+16>>2];l=l+1|0;if((l|0)==(j|0)){break}else{k=k+20|0}}}else{a=c[a+160>>2]|0}Bb[c[(c[f>>2]|0)+20>>2]&31](f,e,13656,1497453121,a);i=h;return 13680}function qs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0;f=i;i=i+32|0;C=+g[b+16>>2];s=+g[b>>2];B=+g[b+20>>2];u=+g[b+4>>2];y=+g[b+24>>2];x=+g[b+8>>2];v=+g[b+32>>2];o=+g[b+36>>2];p=+g[b+40>>2];m=(B-u)*(p-x)-(y-x)*(o-u);k=(y-x)*(v-s)-(C-s)*(p-x);l=(C-s)*(o-u)-(B-u)*(v-s);g[f+16>>2]=m;g[f+20>>2]=k;g[f+24>>2]=l;g[f+28>>2]=0.0;z=+g[a+4>>2];w=+g[a+8>>2];q=+g[a+12>>2];h=m*z+k*w+l*q-(s*m+u*k+x*l);A=+g[a+20>>2];t=+g[a+24>>2];r=+g[a+28>>2];if(h*(m*A+k*t+l*r-(s*m+u*k+x*l))>=0.0){i=f;return}b=c[a+36>>2]|0;if(!((b&1|0)==0|!(h<=0.0))){i=f;return}j=h/(h-(m*A+k*t+l*r-(s*m+u*k+x*l)));if(!(j<+g[a+40>>2])){i=f;return}n=(m*m+k*k+l*l)*-9999999747378752.0e-20;s=s-(A*j+z*(1.0-j));u=u-(t*j+w*(1.0-j));x=x-(r*j+q*(1.0-j));C=C-(A*j+z*(1.0-j));B=B-(t*j+w*(1.0-j));y=y-(r*j+q*(1.0-j));if(!(l*(s*B-u*C)+(m*(u*y-x*B)+k*(x*C-s*y))>=n)){i=f;return}v=v-(A*j+z*(1.0-j));o=o-(t*j+w*(1.0-j));p=p-(r*j+q*(1.0-j));if(!(l*(C*o-B*v)+(m*(B*p-y*o)+k*(y*v-C*p))>=n)){i=f;return}if(!(l*(u*v-s*o)+(m*(x*o-u*p)+k*(s*p-x*v))>=n)){i=f;return}n=1.0/+Q(+(m*m+k*k+l*l));g[f+16>>2]=m*n;g[f+20>>2]=k*n;g[f+24>>2]=l*n;D=c[(c[a>>2]|0)+12>>2]|0;if((b&2|0)!=0|!(h<=0.0)){g[a+40>>2]=+ec[D&3](a,f+16|0,j,d,e);i=f;return}else{g[f>>2]=-(m*n);g[f+4>>2]=-(k*n);g[f+8>>2]=-(l*n);g[f+12>>2]=0.0;g[a+40>>2]=+ec[D&3](a,f,j,d,e);i=f;return}}function rs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;h=i;i=i+672|0;c[h+576>>2]=0;g[h+580>>2]=1.0;g[h+584>>2]=1.0;g[h+588>>2]=1.0;g[h+592>>2]=0.0;c[h+620>>2]=0;c[h+568>>2]=13864;c[h+572>>2]=1;c[h+624>>2]=c[d+0>>2];c[h+628>>2]=c[d+4>>2];c[h+632>>2]=c[d+8>>2];c[h+636>>2]=c[d+12>>2];c[h+640>>2]=c[d+16>>2];c[h+644>>2]=c[d+20>>2];c[h+648>>2]=c[d+24>>2];c[h+652>>2]=c[d+28>>2];c[h+656>>2]=c[d+32>>2];c[h+660>>2]=c[d+36>>2];c[h+664>>2]=c[d+40>>2];c[h+668>>2]=c[d+44>>2];g[h+612>>2]=+g[b+204>>2];g[h+516>>2]=9999999747378752.0e-20;a[h+540>>0]=0;c[h+200>>2]=10896;d=c[b+4>>2]|0;c[h+176>>2]=8456;c[h+180>>2]=h+208;c[h+184>>2]=h+200;c[h+188>>2]=d;c[h+192>>2]=h+568;c[h+196>>2]=0;c[h>>2]=7744;c[h+168>>2]=0;g[h+164>>2]=1.0;g[h+172>>2]=+g[b+208>>2];if((Oo(h+176|0,b+8|0,b+72|0,b+136|0,b+136|0,h)|0?(j=+g[h+132>>2],l=+g[h+136>>2],m=+g[h+140>>2],j*j+l*l+m*m>9999999747378752.0e-20):0)?(k=+g[h+164>>2],k<+g[b+200>>2]):0){n=1.0/+Q(+(j*j+l*l+m*m));g[h+132>>2]=j*n;g[h+136>>2]=l*n;g[h+140>>2]=m*n;+Vb[c[(c[b>>2]|0)+12>>2]&3](b,h+132|0,h+148|0,k,e,f)}c[h+568>>2]=13384;e=c[h+620>>2]|0;if((e|0)==0){i=h;return}Db[c[c[e>>2]>>2]&255](e);e=c[h+620>>2]|0;if((e|0)==0){i=h;return}c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);i=h;return}function ss(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=13384;d=c[a+52>>2]|0;if((d|0)==0){i=b;return}Db[c[c[d>>2]>>2]&255](d);a=c[a+52>>2]|0;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function ts(a){a=a|0;return}function us(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function vs(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=13384;d=c[a+52>>2]|0;if((d|0)!=0){Db[c[c[d>>2]>>2]&255](d);d=c[a+52>>2]|0;if((d|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[d+ -4>>2]|0)}if((a|0)==0){i=b;return}}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function ws(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+80>>2]&63](a,b,d,e);i=f;return}function xs(a,b,d){a=a|0;b=+b;d=d|0;a=i;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;i=a;return}function ys(a){a=a|0;return 14032}function zs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;l=+g[d>>2];k=+g[d+4>>2];f=+g[d+8>>2];j=l*+g[b+56>>2]+k*+g[b+60>>2]+f*+g[b+64>>2];h=l*+g[b+72>>2]+k*+g[b+76>>2]+f*+g[b+80>>2];f=l*+g[b+88>>2]+k*+g[b+92>>2]+f*+g[b+96>>2];if(j<h){d=h<f?2:1;d=b+(d<<4)+56|0;c[a+0>>2]=c[d+0>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];i=e;return}else{d=j<f?2:0;d=b+(d<<4)+56|0;c[a+0>>2]=c[d+0>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];i=e;return}}function As(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0;h=i;if((e|0)<=0){i=h;return}f=0;do{p=+g[b+(f<<4)>>2];o=+g[b+(f<<4)+4>>2];k=+g[b+(f<<4)+8>>2];m=p*+g[a+56>>2]+o*+g[a+60>>2]+k*+g[a+64>>2];l=p*+g[a+72>>2]+o*+g[a+76>>2]+k*+g[a+80>>2];k=p*+g[a+88>>2]+o*+g[a+92>>2]+k*+g[a+96>>2];j=d+(f<<4)|0;if(m<l){n=l<k?2:1}else{n=m<k?2:0}n=a+(n<<4)+56|0;c[j+0>>2]=c[n+0>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];c[j+12>>2]=c[n+12>>2];f=f+1|0}while((f|0)!=(e|0));i=h;return}function Bs(a){a=a|0;return 2}function Cs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0,j=0.0,k=0.0,l=0.0,m=0.0;h=i;k=+g[a+56>>2];f=+g[a+72>>2]-k;j=+g[a+60>>2];e=+g[a+76>>2]-j;l=+g[a+64>>2];d=+g[a+80>>2]-l;k=+g[a+88>>2]-k;j=+g[a+92>>2]-j;l=+g[a+96>>2]-l;g[c+12>>2]=0.0;m=1.0/+Q(+((f*j-e*k)*(f*j-e*k)+((e*l-d*j)*(e*l-d*j)+(d*k-f*l)*(d*k-f*l))));g[c>>2]=m*(e*l-d*j);g[c+4>>2]=m*(d*k-f*l);g[c+8>>2]=(f*j-e*k)*m;if((b|0)==0){i=h;return}g[c>>2]=m*(e*l-d*j)*-1.0;g[c+4>>2]=m*(d*k-f*l)*-1.0;g[c+8>>2]=(f*j-e*k)*m*-1.0;i=h;return}function Ds(a){a=a|0;return 3}function Es(a){a=a|0;return 3}function Fs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;ic[c[(c[a>>2]|0)+108>>2]&63](a,b,d);ic[c[(c[a>>2]|0)+108>>2]&63](a,(b+1|0)%3|0,e);i=f;return}function Gs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;c[d+0>>2]=c[a+(b<<4)+56>>2];c[d+4>>2]=c[a+(b<<4)+60>>2];c[d+8>>2]=c[a+(b<<4)+64>>2];c[d+12>>2]=c[a+(b<<4)+68>>2];i=e;return}function Hs(a){a=a|0;return 1}function Is(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+124>>2]&63](a,e,b,d);i=f;return}function Js(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0.0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=i;i=i+32|0;n=+g[a+56>>2];r=+g[a+72>>2]-n;m=+g[a+60>>2];p=+g[a+76>>2]-m;l=+g[a+64>>2];s=+g[a+80>>2]-l;o=+g[a+88>>2]-n;q=+g[a+92>>2]-m;f=+g[a+96>>2]-l;j=1.0/+Q(+((r*q-p*o)*(r*q-p*o)+((p*f-s*q)*(p*f-s*q)+(s*o-r*f)*(s*o-r*f))));h=j*(p*f-s*q);f=j*(s*o-r*f);j=(r*q-p*o)*j;l=+g[b>>2]*h+ +g[b+4>>2]*f+j*+g[b+8>>2]-(h*n+f*m+j*l);if(!(l>=-d)|!(l<=d)){k=0;i=e;return k|0}k=0;while(1){mc[c[(c[a>>2]|0)+104>>2]&63](a,k,e+16|0,e);n=+g[e+16>>2];s=+g[e>>2]-n;p=+g[e+20>>2];o=+g[e+4>>2]-p;m=+g[e+24>>2];r=+g[e+8>>2]-m;q=1.0/+Q(+((f*s-h*o)*(f*s-h*o)+((j*o-f*r)*(j*o-f*r)+(h*r-j*s)*(h*r-j*s))));k=k+1|0;if(+g[b>>2]*q*(j*o-f*r)+ +g[b+4>>2]*q*(h*r-j*s)+(f*s-h*o)*q*+g[b+8>>2]-(m*(f*s-h*o)*q+(n*q*(j*o-f*r)+p*q*(h*r-j*s)))<-d){b=0;a=5;break}if((k|0)>=3){b=1;a=5;break}}if((a|0)==5){i=e;return b|0}return 0}function Ks(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;b=i;h=+g[a+56>>2];l=+g[a+72>>2]-h;k=+g[a+60>>2];j=+g[a+76>>2]-k;m=+g[a+64>>2];n=+g[a+80>>2]-m;h=+g[a+88>>2]-h;k=+g[a+92>>2]-k;m=+g[a+96>>2]-m;g[d+12>>2]=0.0;f=1.0/+Q(+((l*k-j*h)*(l*k-j*h)+((j*m-n*k)*(j*m-n*k)+(n*h-l*m)*(n*h-l*m))));g[d>>2]=f*(j*m-n*k);g[d+4>>2]=f*(n*h-l*m);g[d+8>>2]=(l*k-j*h)*f;c[e+0>>2]=c[a+56>>2];c[e+4>>2]=c[a+60>>2];c[e+8>>2]=c[a+64>>2];c[e+12>>2]=c[a+68>>2];i=b;return}function Ls(a){a=a|0;var b=0;b=i;Ms(a);if((a|0)==0){i=b;return}dw(a);i=b;return}function Ms(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=14056;e=c[b+56>>2]|0;if((e|0)!=0){if((a[b+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;e=c[b+36>>2]|0;if((e|0)!=0){if((a[b+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;e=c[b+16>>2]|0;if((e|0)==0){e=b+12|0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[e>>2]=0;i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0;e=b+12|0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[e>>2]=0;i=d;return}function Ns(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;if((c[d+8>>2]|0)>0){h=c[d+16>>2]|0;j=0;f=0;do{k=c[h+(j<<2)>>2]|0;if((c[k+204>>2]&3|0)==0){c[k+208>>2]=f;f=f+1|0}c[k+212>>2]=-1;g[k+244>>2]=1.0;j=j+1|0}while((j|0)<(c[d+8>>2]|0))}else{f=0}h=c[b+8>>2]|0;if((h|0)<(f|0)){if((c[b+12>>2]|0)<(f|0)){if((f|0)==0){j=h;k=0}else{c[4336]=(c[4336]|0)+1;j=cw((f<<3|3)+16|0)|0;if((j|0)==0){k=0}else{c[(j+19&-16)+ -4>>2]=j;k=j+19&-16}j=c[b+8>>2]|0}if((j|0)>0){l=0;do{m=k+(l<<3)|0;if((m|0)!=0){o=(c[b+16>>2]|0)+(l<<3)|0;n=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=n}l=l+1|0}while((l|0)!=(j|0))}j=c[b+16>>2]|0;if((j|0)!=0){if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=k;c[b+12>>2]=f;j=b+16|0}else{j=b+16|0}do{k=(c[j>>2]|0)+(h<<3)|0;if((k|0)!=0){c[k>>2]=0;c[k+4>>2]=0}h=h+1|0}while((h|0)!=(f|0))}c[b+8>>2]=f;if((f|0)>0){j=c[b+16>>2]|0;h=0;do{c[j+(h<<3)>>2]=h;c[j+(h<<3)+4>>2]=1;h=h+1|0}while((h|0)!=(f|0))}f=c[d+68>>2]|0;f=Hb[c[(c[f>>2]|0)+36>>2]&127](f)|0;d=Hb[c[(c[f>>2]|0)+36>>2]&127](f)|0;if((d|0)==0){i=e;return}h=Hb[c[(c[f>>2]|0)+20>>2]&127](f)|0;if((d|0)<=0){i=e;return}f=0;do{k=c[c[h+(f<<4)>>2]>>2]|0;j=c[c[h+(f<<4)+4>>2]>>2]|0;if(((k|0)!=0?!((j|0)==0?1:(c[k+204>>2]&7|0)!=0):0)?(c[j+204>>2]&7|0)==0:0){l=c[k+208>>2]|0;k=c[j+208>>2]|0;j=c[b+16>>2]|0;m=c[j+(l<<3)>>2]|0;if((m|0)!=(l|0)){n=j+(l<<3)|0;do{l=j+(m<<3)|0;c[n>>2]=c[l>>2];l=c[l>>2]|0;n=j+(l<<3)|0;m=c[n>>2]|0}while((l|0)!=(m|0))}m=c[j+(k<<3)>>2]|0;if((m|0)!=(k|0)){n=j+(k<<3)|0;do{k=j+(m<<3)|0;c[n>>2]=c[k>>2];k=c[k>>2]|0;n=j+(k<<3)|0;m=c[n>>2]|0}while((k|0)!=(m|0))}if((l|0)!=(k|0)){c[j+(l<<3)>>2]=k;o=j+(k<<3)+4|0;c[o>>2]=(c[o>>2]|0)+(c[j+(l<<3)+4>>2]|0)}}f=f+1|0}while((f|0)!=(d|0));i=e;return}function Os(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;if((c[b+8>>2]|0)<=0){i=f;return}d=c[b+16>>2]|0;e=0;g=0;do{h=c[d+(e<<2)>>2]|0;if((c[h+204>>2]&3|0)==0){j=c[a+16>>2]|0;l=j+(g<<3)|0;k=c[l>>2]|0;if((k|0)==(g|0)){m=g}else{do{m=j+(k<<3)|0;c[l>>2]=c[m>>2];m=c[m>>2]|0;l=j+(m<<3)|0;k=c[l>>2]|0}while((m|0)!=(k|0))}c[h+208>>2]=m;c[j+(g<<3)+4>>2]=e;c[h+212>>2]=-1;g=g+1|0}else{c[h+208>>2]=-1;c[h+212>>2]=-2}e=e+1|0}while((e|0)<(c[b+8>>2]|0));i=f;return}function Ps(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;while(1){f=c[a+12>>2]|0;g=c[f+(((b+d|0)/2|0)<<2)>>2]|0;l=b;k=d;while(1){h=c[(c[g+740>>2]|0)+208>>2]|0;if((h|0)>-1){while(1){j=c[f+(l<<2)>>2]|0;m=c[(c[j+740>>2]|0)+208>>2]|0;if(!((m|0)>-1)){m=c[(c[j+744>>2]|0)+208>>2]|0}if((m|0)<(h|0)){l=l+1|0}else{break}}}else{m=c[(c[g+744>>2]|0)+208>>2]|0;while(1){j=c[f+(l<<2)>>2]|0;n=c[(c[j+740>>2]|0)+208>>2]|0;if(!((n|0)>-1)){n=c[(c[j+744>>2]|0)+208>>2]|0}if((n|0)<(m|0)){l=l+1|0}else{break}}}if((h|0)>-1){while(1){m=c[f+(k<<2)>>2]|0;n=c[(c[m+740>>2]|0)+208>>2]|0;if(!((n|0)>-1)){n=c[(c[m+744>>2]|0)+208>>2]|0}if((h|0)<(n|0)){k=k+ -1|0}else{break}}}else{h=c[(c[g+744>>2]|0)+208>>2]|0;while(1){m=c[f+(k<<2)>>2]|0;n=c[(c[m+740>>2]|0)+208>>2]|0;if(!((n|0)>-1)){n=c[(c[m+744>>2]|0)+208>>2]|0}if((h|0)<(n|0)){k=k+ -1|0}else{break}}}if((l|0)<=(k|0)){c[f+(l<<2)>>2]=m;c[(c[a+12>>2]|0)+(k<<2)>>2]=j;l=l+1|0;k=k+ -1|0}if((l|0)>(k|0)){break}f=c[a+12>>2]|0}if((k|0)>(b|0)){Ps(a,b,k)}if((l|0)<(d|0)){b=l}else{break}}i=e;return}function Qs(a,b,d){a=a|0;b=b|0;d=d|0;d=i;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;i=d;return}function Rs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;a=i;if((e|0)>0){b=0}else{i=a;return}do{g=d+(b<<4)|0;b=b+1|0;f=(b|0)==(e|0);c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0}while(!f);i=a;return}function Ss(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;ic[c[(c[b>>2]|0)+68>>2]&63](a,b,d);f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];k=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:j;l=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:h;f=f*f+h*h+j*j<1.4210854715202004e-14?-1.0:f;j=1.0/+Q(+(k*k+(f*f+l*l)));h=+Tb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=j*f*h+ +g[a>>2];g[a+4>>2]=h*j*l+ +g[a+4>>2];g[a+8>>2]=h*j*k+ +g[a+8>>2];i=e;return}function Ts(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0;f=i;k=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);m=+g[b+52>>2]-j;l=+g[b+56>>2]-h;g[d>>2]=+g[b+48>>2]-k;g[d+4>>2]=m;g[d+8>>2]=l;g[d+12>>2]=0.0;j=j+ +g[b+52>>2];h=h+ +g[b+56>>2];g[e>>2]=k+ +g[b+48>>2];g[e+4>>2]=j;g[e+8>>2]=h;g[e+12>>2]=0.0;i=f;return}function Us(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;b=b*.4000000059604645*+Tb[c[(c[a>>2]|0)+48>>2]&15](a);b=b*+Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=b;g[d+4>>2]=b;g[d+8>>2]=b;g[d+12>>2]=0.0;i=e;return}function Vs(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=14304;if((a[b+8>>0]|0)==0){dw(b);i=d;return}e=c[b+12>>2]|0;if((e|0)==0){dw(b);i=d;return}f=c[b+4>>2]|0;Fb[c[(c[f>>2]|0)+16>>2]&127](f,e);dw(b);i=d;return}function Ws(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=14304;if((a[b+8>>0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Fb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function Xs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0.0;e=i;i=i+32|0;a=c[a+12>>2]|0;if((a|0)==0){i=e;return}c[f+4>>2]=a;o=c[b+4>>2]|0;p=c[d+4>>2]|0;b=c[b+12>>2]|0;d=c[d+12>>2]|0;m=+g[b+48>>2]- +g[d+48>>2];n=+g[b+52>>2]- +g[d+52>>2];l=+g[b+56>>2]- +g[d+56>>2];j=+Q(+(m*m+n*n+l*l));h=+g[p+28>>2]*+g[p+12>>2];k=+g[o+28>>2]*+g[o+12>>2]+h;if(j>k){if((c[a+748>>2]|0)==0){i=e;return}d=c[a+740>>2]|0;b=c[(c[f+8>>2]|0)+8>>2]|0;if((d|0)==(b|0)){Xr(a,d+4|0,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0);i=e;return}else{Xr(a,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0,b+4|0);i=e;return}}g[e+16>>2]=1.0;g[e+20>>2]=0.0;g[e+24>>2]=0.0;g[e+28>>2]=0.0;if(j>1.1920928955078125e-7){g[e+16>>2]=m*(1.0/j);g[e+20>>2]=n*(1.0/j);g[e+24>>2]=l*(1.0/j);g[e+28>>2]=0.0;m=m*(1.0/j);n=n*(1.0/j);l=l*(1.0/j)}else{m=1.0;n=0.0;l=0.0}q=h*n+ +g[d+52>>2];n=h*l+ +g[d+56>>2];g[e>>2]=h*m+ +g[d+48>>2];g[e+4>>2]=q;g[e+8>>2]=n;g[e+12>>2]=0.0;hc[c[(c[f>>2]|0)+16>>2]&15](f,e+16|0,e,j-k);a=c[f+4>>2]|0;if((c[a+748>>2]|0)==0){i=e;return}d=c[a+740>>2]|0;b=c[(c[f+8>>2]|0)+8>>2]|0;if((d|0)==(b|0)){Xr(a,d+4|0,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0);i=e;return}else{Xr(a,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0,b+4|0);i=e;return}}function Ys(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function Zs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((c[b+12>>2]|0)==0){i=e;return}if((a[b+8>>0]|0)==0){i=e;return}h=c[d+4>>2]|0;if((h|0)==(c[d+8>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[d+4>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[d+12>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[d+12>>2]|0;if((j|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=g;c[d+8>>2]=f}f=(c[d+12>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=c[b+12>>2]}c[d+4>>2]=h+1;i=e;return}function _s(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=14392;if((a[b+8>>0]|0)==0){dw(b);i=d;return}e=c[b+12>>2]|0;if((e|0)==0){dw(b);i=d;return}f=c[b+4>>2]|0;Fb[c[(c[f>>2]|0)+16>>2]&127](f,e);dw(b);i=d;return}function $s(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=14392;if((a[b+8>>0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Fb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function at(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0;j=i;i=i+160|0;k=c[b+12>>2]|0;if((k|0)==0){i=j;return}l=(a[b+16>>0]|0)!=0;m=l?e:d;e=l?d:e;o=c[m+4>>2]|0;d=c[e+4>>2]|0;c[h+4>>2]=k;n=+g[(c[b+12>>2]|0)+752>>2];c[j+136>>2]=15096;c[j+140>>2]=o;c[j+144>>2]=d;g[j+148>>2]=n;g[j+128>>2]=999999984306749400.0;m=c[m+12>>2]|0;c[j+0>>2]=c[m+0>>2];c[j+4>>2]=c[m+4>>2];c[j+8>>2]=c[m+8>>2];c[j+12>>2]=c[m+12>>2];c[j+16>>2]=c[m+16>>2];c[j+20>>2]=c[m+20>>2];c[j+24>>2]=c[m+24>>2];c[j+28>>2]=c[m+28>>2];c[j+32>>2]=c[m+32>>2];c[j+36>>2]=c[m+36>>2];c[j+40>>2]=c[m+40>>2];c[j+44>>2]=c[m+44>>2];c[j+48>>2]=c[m+48>>2];c[j+52>>2]=c[m+52>>2];c[j+56>>2]=c[m+56>>2];c[j+60>>2]=c[m+60>>2];m=c[e+12>>2]|0;c[j+64>>2]=c[m+0>>2];c[j+68>>2]=c[m+4>>2];c[j+72>>2]=c[m+8>>2];c[j+76>>2]=c[m+12>>2];c[j+80>>2]=c[m+16>>2];c[j+84>>2]=c[m+20>>2];c[j+88>>2]=c[m+24>>2];c[j+92>>2]=c[m+28>>2];c[j+96>>2]=c[m+32>>2];c[j+100>>2]=c[m+36>>2];c[j+104>>2]=c[m+40>>2];c[j+108>>2]=c[m+44>>2];c[j+112>>2]=c[m+48>>2];c[j+116>>2]=c[m+52>>2];c[j+120>>2]=c[m+56>>2];c[j+124>>2]=c[m+60>>2];Lt(j+136|0,j,h,c[f+20>>2]|0,l);if((a[b+8>>0]|0)==0){i=j;return}k=c[h+4>>2]|0;if((c[k+748>>2]|0)==0){i=j;return}b=c[k+740>>2]|0;f=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(f|0)){Xr(k,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Xr(k,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,f+4|0);i=j;return}}function bt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function ct(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((c[b+12>>2]|0)==0){i=e;return}if((a[b+8>>0]|0)==0){i=e;return}h=c[d+4>>2]|0;if((h|0)==(c[d+8>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[d+4>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[d+12>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[d+12>>2]|0;if((j|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=g;c[d+8>>2]=f}f=(c[d+12>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=c[b+12>>2]}c[d+4>>2]=h+1;i=e;return}function dt(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0,da=0,ea=0.0,fa=0,ga=0.0;k=i;i=i+128|0;fa=c[b+4>>2]|0;a[fa+312>>0]=0;c[fa>>2]=0;a[fa+356>>0]=1;g[fa+292>>2]=999999984306749400.0;g[fa+296>>2]=999999984306749400.0;g[fa+300>>2]=999999984306749400.0;g[fa+304>>2]=0.0;c[fa+336>>2]=0;c[fa+340>>2]=0;c[fa+344>>2]=0;c[fa+348>>2]=0;a[fa+352>>0]=0;a[fa+332>>0]=a[fa+332>>0]&-16;O=+g[d+48>>2];V=+g[d+52>>2];R=+g[d+56>>2];Y=+g[f+48>>2];W=+g[f+52>>2];P=+g[f+56>>2];D=+g[d>>2];p=+g[d+4>>2];r=+g[d+8>>2];E=+g[d+16>>2];z=+g[d+20>>2];s=+g[d+24>>2];w=+g[d+32>>2];q=+g[d+36>>2];t=+g[d+40>>2];u=+g[f>>2];x=+g[f+4>>2];A=+g[f+8>>2];v=+g[f+16>>2];y=+g[f+20>>2];B=+g[f+24>>2];F=+g[f+32>>2];o=+g[f+36>>2];C=+g[f+40>>2];m=+g[e+48>>2]-O-(+g[h+48>>2]-Y);l=+g[e+52>>2]-V-(+g[h+52>>2]-W);n=+g[e+56>>2]-R-(+g[h+56>>2]-P);fa=c[b+8>>2]|0;da=c[(c[fa>>2]|0)+64>>2]|0;g[k+96>>2]=D*-m+E*-l+w*-n;g[k+100>>2]=p*-m+z*-l+q*-n;g[k+104>>2]=r*-m+s*-l+t*-n;g[k+108>>2]=0.0;ic[da&63](k+112|0,fa,k+96|0);aa=+g[k+112>>2];ea=+g[k+116>>2];X=+g[k+120>>2];Z=aa*+g[d>>2]+ea*+g[d+4>>2]+X*+g[d+8>>2]+ +g[d+48>>2];_=aa*+g[d+16>>2]+ea*+g[d+20>>2]+X*+g[d+24>>2]+ +g[d+52>>2];X=aa*+g[d+32>>2]+ea*+g[d+36>>2]+X*+g[d+40>>2]+ +g[d+56>>2];fa=c[b+12>>2]|0;da=c[(c[fa>>2]|0)+64>>2]|0;ea=m*+g[f+4>>2]+l*+g[f+20>>2]+n*+g[f+36>>2];aa=m*+g[f+8>>2]+l*+g[f+24>>2]+n*+g[f+40>>2];g[k+64>>2]=m*+g[f>>2]+l*+g[f+16>>2]+n*+g[f+32>>2];g[k+68>>2]=ea;g[k+72>>2]=aa;g[k+76>>2]=0.0;ic[da&63](k+80|0,fa,k+64|0);aa=+g[k+80>>2];ea=+g[k+84>>2];$=+g[k+88>>2];Z=Z-(aa*+g[f>>2]+ea*+g[f+4>>2]+$*+g[f+8>>2]+ +g[f+48>>2]);_=_-(aa*+g[f+16>>2]+ea*+g[f+20>>2]+$*+g[f+24>>2]+ +g[f+52>>2]);$=X-(aa*+g[f+32>>2]+ea*+g[f+36>>2]+$*+g[f+40>>2]+ +g[f+56>>2]);a:do{if(Z*Z+_*_+$*$>9999999747378752.0e-20){S=0.0;U=0.0;X=0.0;T=0.0;H=0.0;G=32;aa=0.0;while(1){fa=G;G=G+ -1|0;if((fa|0)==0){break a}fa=c[b+8>>2]|0;da=c[(c[fa>>2]|0)+64>>2]|0;I=-Z;ga=-_;ea=-$;g[k+32>>2]=D*I+E*ga+w*ea;g[k+36>>2]=p*I+z*ga+q*ea;g[k+40>>2]=r*I+s*ga+t*ea;g[k+44>>2]=0.0;ic[da&63](k+48|0,fa,k+32|0);ea=+g[k+48>>2];ga=+g[k+52>>2];I=+g[k+56>>2];J=O+(D*ea+p*ga+r*I);L=V+(E*ea+z*ga+s*I);I=R+(w*ea+q*ga+t*I);fa=c[b+12>>2]|0;da=c[(c[fa>>2]|0)+64>>2]|0;g[k>>2]=u*Z+v*_+F*$;g[k+4>>2]=x*Z+y*_+o*$;g[k+8>>2]=A*Z+B*_+C*$;g[k+12>>2]=0.0;ic[da&63](k+16|0,fa,k);ga=+g[k+16>>2];ea=+g[k+20>>2];M=+g[k+24>>2];K=Y+(u*ga+x*ea+A*M);N=W+(v*ga+y*ea+B*M);M=P+(F*ga+o*ea+C*M);ea=Z*(J-K)+_*(L-N)+$*(I-M);if(H>1.0){j=0;h=24;break}if(ea>0.0){O=m*Z+l*_+n*$;if(O>=-1.4210854715202004e-14){j=0;h=24;break}H=H-ea/O;R=(1.0-H)*+g[d+56>>2]+H*+g[e+56>>2];V=(1.0-H)*+g[d+52>>2]+H*+g[e+52>>2];O=+g[d+48>>2]*(1.0-H)+H*+g[e+48>>2];P=(1.0-H)*+g[f+56>>2]+H*+g[h+56>>2];W=(1.0-H)*+g[f+52>>2]+H*+g[h+52>>2];Y=(1.0-H)*+g[f+48>>2]+H*+g[h+48>>2];T=aa;X=$;U=_;S=Z}ba=c[b+4>>2]|0;ca=c[ba>>2]|0;if((ca|0)>0){Z=+g[ba+308>>2];fa=0;da=0;do{aa=J-K- +g[ba+(da<<4)+4>>2];ea=L-N- +g[ba+(da<<4)+8>>2];ga=I-M- +g[ba+(da<<4)+12>>2];fa=fa|aa*aa+ea*ea+ga*ga<=Z;da=da+1|0}while((da|0)!=(ca|0))}else{fa=0}if((+g[ba+304>>2]==0.0?I-M==+g[ba+300>>2]:0)?L-N==+g[ba+296>>2]:0){da=J-K==+g[ba+292>>2]}else{da=0}if(!(da|fa)){g[ba+292>>2]=J-K;g[ba+296>>2]=L-N;g[ba+300>>2]=I-M;g[ba+304>>2]=0.0;a[ba+356>>0]=1;g[ba+(ca<<4)+4>>2]=J-K;g[ba+(ca<<4)+8>>2]=L-N;g[ba+(ca<<4)+12>>2]=I-M;g[ba+(ca<<4)+16>>2]=0.0;fa=c[ba>>2]|0;g[ba+(fa<<4)+84>>2]=J;g[ba+(fa<<4)+88>>2]=L;g[ba+(fa<<4)+92>>2]=I;g[ba+(fa<<4)+96>>2]=0.0;fa=c[ba>>2]|0;g[ba+(fa<<4)+164>>2]=K;g[ba+(fa<<4)+168>>2]=N;g[ba+(fa<<4)+172>>2]=M;g[ba+(fa<<4)+176>>2]=0.0;c[ba>>2]=(c[ba>>2]|0)+1;ba=c[b+4>>2]|0}fa=Jt(ba)|0;Z=+g[ba+276>>2];_=+g[ba+280>>2];$=+g[ba+284>>2];if(!fa){break a}if(!(Z*Z+_*_+$*$>9999999747378752.0e-20)){break a}else{aa=+g[ba+288>>2]}}if((h|0)==24){i=k;return j|0}}else{T=0.0;X=0.0;U=0.0;S=0.0;H=0.0}}while(0);g[j+164>>2]=H;o=X*X+(U*U+S*S);if(!(o>=1.4210854715202004e-14)){c[j+132>>2]=0;c[j+136>>2]=0;c[j+140>>2]=0;c[j+144>>2]=0;o=0.0;q=0.0;p=0.0}else{p=1.0/+Q(+o);o=S*p;q=U*p;p=X*p;g[j+132>>2]=o;g[j+136>>2]=q;g[j+140>>2]=p;g[j+144>>2]=T}if(m*o+l*q+n*p>=-+g[j+172>>2]){fa=0;i=k;return fa|0}fa=c[b+4>>2]|0;Jt(fa)|0;nw(j+148|0,fa+260|0,16)|0;fa=1;i=k;return fa|0}function et(a){a=a|0;return}function ft(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function gt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0;f=i;g[b+4>>2]=1.0;g[b+8>>2]=1.0;g[b+12>>2]=1.0;g[b+16>>2]=0.0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+48>>2]=0;c[b>>2]=14632;a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;a[b+164>>0]=d&1;a[b+165>>0]=e&1;g[b+168>>2]=0.0;c[4336]=(c[4336]|0)+1;e=cw(51)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}d=c[b+24>>2]|0;if((d|0)>0){h=0;do{j=e+(h<<5)|0;k=(c[b+32>>2]|0)+(h<<5)|0;c[j+0>>2]=c[k+0>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];c[j+16>>2]=c[k+16>>2];c[j+20>>2]=c[k+20>>2];c[j+24>>2]=c[k+24>>2];c[j+28>>2]=c[k+28>>2];h=h+1|0}while((h|0)!=(d|0))}d=c[b+32>>2]|0;if((d|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[d+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=e;c[b+28>>2]=1;k=c[b+24>>2]|0;c[e+(k<<5)>>2]=0;c[e+(k<<5)+4>>2]=0;c[e+(k<<5)+8>>2]=12;c[e+(k<<5)+12>>2]=0;c[e+(k<<5)+16>>2]=0;c[e+(k<<5)+20>>2]=16;c[e+(k<<5)+24>>2]=2;c[e+(k<<5)+28>>2]=0;c[b+24>>2]=(c[b+24>>2]|0)+1;if((a[b+164>>0]|0)==0){e=c[b+32>>2]|0;c[e>>2]=(c[b+148>>2]|0)/3|0;c[e+4>>2]=0;e=c[b+32>>2]|0;c[e+24>>2]=3;c[e+8>>2]=6}else{e=c[b+32>>2]|0;c[e>>2]=(c[b+128>>2]|0)/3|0;c[e+4>>2]=0;e=c[b+32>>2]|0;c[e+24>>2]=2;c[e+8>>2]=12}if((a[b+165>>0]|0)==0){c[e+12>>2]=(c[b+108>>2]|0)/3|0;c[e+16>>2]=0;c[(c[b+32>>2]|0)+20>>2]=12;i=f;return}else{c[e+12>>2]=c[b+88>>2];c[e+16>>2]=0;c[(c[b+32>>2]|0)+20>>2]=16;i=f;return}}function ht(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;if((a[d+164>>0]|0)==0){j=c[d+148>>2]|0;if((j|0)==(c[d+152>>2]|0)?(g=(j|0)==0?1:j<<1,(j|0)<(g|0)):0){if((g|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;h=cw((g<<1)+19|0)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}j=c[d+148>>2]|0}if((j|0)>0){l=0;do{k=h+(l<<1)|0;if((k|0)!=0){b[k>>1]=b[(c[d+156>>2]|0)+(l<<1)>>1]|0}l=l+1|0}while((l|0)!=(j|0))}k=c[d+156>>2]|0;if((k|0)!=0){if((a[d+160>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0);j=c[d+148>>2]|0}c[d+156>>2]=0}a[d+160>>0]=1;c[d+156>>2]=h;c[d+152>>2]=g}g=c[d+156>>2]|0;h=g+(j<<1)|0;if((h|0)!=0){b[h>>1]=e}c[d+148>>2]=j+1;c[(c[d+32>>2]|0)+4>>2]=g;i=f;return}else{j=c[d+128>>2]|0;if((j|0)==(c[d+132>>2]|0)?(h=(j|0)==0?1:j<<1,(j|0)<(h|0)):0){if((h|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((h<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}j=c[d+128>>2]|0}if((j|0)>0){k=0;do{l=g+(k<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[d+136>>2]|0)+(k<<2)>>2]}k=k+1|0}while((k|0)!=(j|0))}j=c[d+136>>2]|0;if((j|0)!=0){if((a[d+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=g;c[d+132>>2]=h;j=c[d+128>>2]|0}g=c[d+136>>2]|0;h=g+(j<<2)|0;if((h|0)!=0){c[h>>2]=e;j=c[d+128>>2]|0}c[d+128>>2]=j+1;c[(c[d+32>>2]|0)+4>>2]=g;i=f;return}}function it(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0.0,s=0.0,t=0.0;f=i;if((a[b+165>>0]|0)!=0){a:do{if(e?(j=c[b+88>>2]|0,(j|0)>0):0){n=c[b+96>>2]|0;o=+g[d>>2];p=+g[d+4>>2];l=+g[d+8>>2];m=+g[b+168>>2];k=0;while(1){t=+g[n+(k<<4)>>2]-o;s=+g[n+(k<<4)+4>>2]-p;r=+g[n+(k<<4)+8>>2]-l;e=k;k=k+1|0;if(t*t+s*s+r*r<=m){break}if((k|0)>=(j|0)){break a}}i=f;return e|0}}while(0);j=(c[b+32>>2]|0)+12|0;c[j>>2]=(c[j>>2]|0)+1;j=c[b+88>>2]|0;if((j|0)==(c[b+92>>2]|0)?(h=(j|0)==0?1:j<<1,(j|0)<(h|0)):0){if((h|0)==0){k=0}else{c[4336]=(c[4336]|0)+1;j=cw((h<<4|3)+16|0)|0;if((j|0)==0){k=0}else{c[(j+19&-16)+ -4>>2]=j;k=j+19&-16}j=c[b+88>>2]|0}if((j|0)>0){e=0;do{q=k+(e<<4)|0;n=(c[b+96>>2]|0)+(e<<4)|0;c[q+0>>2]=c[n+0>>2];c[q+4>>2]=c[n+4>>2];c[q+8>>2]=c[n+8>>2];c[q+12>>2]=c[n+12>>2];e=e+1|0}while((e|0)!=(j|0))}j=c[b+96>>2]|0;if((j|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=k;c[b+92>>2]=h;j=c[b+88>>2]|0}q=(c[b+96>>2]|0)+(j<<4)|0;c[q+0>>2]=c[d+0>>2];c[q+4>>2]=c[d+4>>2];c[q+8>>2]=c[d+8>>2];c[q+12>>2]=c[d+12>>2];q=c[b+88>>2]|0;c[b+88>>2]=q+1;c[(c[b+32>>2]|0)+16>>2]=c[b+96>>2];i=f;return q|0}k=c[b+108>>2]|0;b:do{if((k|0)>0&e){j=c[b+116>>2]|0;m=+g[d>>2];o=+g[d+4>>2];l=+g[d+8>>2];p=+g[b+168>>2];h=0;while(1){r=+g[j+(h<<2)>>2]-m;s=+g[j+(h+1<<2)>>2]-o;t=+g[j+(h+2<<2)>>2]-l;e=h+3|0;if(r*r+s*s+t*t<=p){break}if((e|0)<(k|0)){h=e}else{h=d;break b}}q=(h|0)/3|0;i=f;return q|0}else{h=d}}while(0);j=c[b+112>>2]|0;if((k|0)==(j|0)){j=(k|0)==0?1:k<<1;if((k|0)<(j|0)){if((j|0)==0){e=0}else{c[4336]=(c[4336]|0)+1;k=cw((j<<2|3)+16|0)|0;if((k|0)==0){e=0}else{c[(k+19&-16)+ -4>>2]=k;e=k+19&-16}k=c[b+108>>2]|0}if((k|0)>0){q=0;do{n=e+(q<<2)|0;if((n|0)!=0){g[n>>2]=+g[(c[b+116>>2]|0)+(q<<2)>>2]}q=q+1|0}while((q|0)!=(k|0))}n=c[b+116>>2]|0;if((n|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0);k=c[b+108>>2]|0}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=e;c[b+112>>2]=j;e=k}else{e=k;j=k}}else{e=k}k=c[b+116>>2]|0;n=k+(e<<2)|0;if((n|0)!=0){g[n>>2]=+g[h>>2]}e=e+1|0;c[b+108>>2]=e;if((e|0)==(j|0)){h=(j|0)==0?1:j<<1;if((j|0)<(h|0)){if((h|0)==0){k=0}else{c[4336]=(c[4336]|0)+1;j=cw((h<<2|3)+16|0)|0;if((j|0)==0){k=0}else{c[(j+19&-16)+ -4>>2]=j;k=j+19&-16}j=c[b+108>>2]|0}if((j|0)>0){n=0;do{e=k+(n<<2)|0;if((e|0)!=0){g[e>>2]=+g[(c[b+116>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(j|0))}e=c[b+116>>2]|0;if((e|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);j=c[b+108>>2]|0}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=k;c[b+112>>2]=h;e=j}else{e=j;h=j}}else{h=j}j=k+(e<<2)|0;if((j|0)!=0){g[j>>2]=+g[d+4>>2]}j=e+1|0;c[b+108>>2]=j;if((j|0)==(h|0)){j=(h|0)==0?1:h<<1;if((h|0)<(j|0)){if((j|0)==0){k=0}else{c[4336]=(c[4336]|0)+1;h=cw((j<<2|3)+16|0)|0;if((h|0)==0){k=0}else{c[(h+19&-16)+ -4>>2]=h;k=h+19&-16}h=c[b+108>>2]|0}if((h|0)>0){e=0;do{n=k+(e<<2)|0;if((n|0)!=0){g[n>>2]=+g[(c[b+116>>2]|0)+(e<<2)>>2]}e=e+1|0}while((e|0)!=(h|0))}e=c[b+116>>2]|0;if((e|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0);h=c[b+108>>2]|0}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=k;c[b+112>>2]=j}}else{h=j}j=k+(h<<2)|0;if((j|0)!=0){g[j>>2]=+g[d+8>>2]}c[b+108>>2]=h+1;q=c[b+32>>2]|0;c[q+12>>2]=(c[q+12>>2]|0)+1;c[q+16>>2]=k;q=((c[b+108>>2]|0)/3|0)+ -1|0;i=f;return q|0}function jt(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0;e=i;if((a[b+165>>0]|0)!=0){if((c[b+92>>2]|0)>=(d|0)){i=e;return}if((d|0)!=0?(c[4336]=(c[4336]|0)+1,h=cw((d<<4|3)+16|0)|0,(h|0)!=0):0){c[(h+19&-16)+ -4>>2]=h;f=h+19&-16}else{f=0}h=c[b+88>>2]|0;if((h|0)>0){j=0;do{k=f+(j<<4)|0;l=(c[b+96>>2]|0)+(j<<4)|0;c[k+0>>2]=c[l+0>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];j=j+1|0}while((j|0)!=(h|0))}h=c[b+96>>2]|0;if((h|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=f;c[b+92>>2]=d;i=e;return}if((c[b+112>>2]|0)>=(d|0)){i=e;return}if((d|0)!=0?(c[4336]=(c[4336]|0)+1,f=cw((d<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}else{f=0}h=c[b+108>>2]|0;if((h|0)>0){k=0;do{j=f+(k<<2)|0;if((j|0)!=0){g[j>>2]=+g[(c[b+116>>2]|0)+(k<<2)>>2]}k=k+1|0}while((k|0)!=(h|0))}h=c[b+116>>2]|0;if((h|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=f;c[b+112>>2]=d;i=e;return}function kt(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;if((a[d+164>>0]|0)==0){if((c[d+152>>2]|0)>=(e|0)){i=f;return}if((e|0)!=0?(c[4336]=(c[4336]|0)+1,h=cw((e<<1)+19|0)|0,(h|0)!=0):0){c[(h+19&-16)+ -4>>2]=h;g=h+19&-16}else{g=0}h=c[d+148>>2]|0;if((h|0)>0){k=0;do{j=g+(k<<1)|0;if((j|0)!=0){b[j>>1]=b[(c[d+156>>2]|0)+(k<<1)>>1]|0}k=k+1|0}while((k|0)!=(h|0))}h=c[d+156>>2]|0;if((h|0)!=0){if((a[d+160>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[d+156>>2]=0}a[d+160>>0]=1;c[d+156>>2]=g;c[d+152>>2]=e;i=f;return}else{if((c[d+132>>2]|0)>=(e|0)){i=f;return}if((e|0)!=0?(c[4336]=(c[4336]|0)+1,g=cw((e<<2|3)+16|0)|0,(g|0)!=0):0){c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}else{g=0}k=c[d+128>>2]|0;if((k|0)>0){j=0;do{h=g+(j<<2)|0;if((h|0)!=0){c[h>>2]=c[(c[d+136>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(k|0))}h=c[d+136>>2]|0;if((h|0)!=0){if((a[d+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=g;c[d+132>>2]=e;i=f;return}}function lt(a){a=a|0;var b=0;b=i;rt(a);i=b;return}function mt(a){a=a|0;var b=0;b=i;rt(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function nt(a,b){a=a|0;b=b|0;return}function ot(a,b){a=a|0;b=b|0;return}function pt(a){a=a|0;return c[a+24>>2]|0}function qt(a){a=a|0;return 28}function rt(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=14632;e=c[b+156>>2]|0;if((e|0)!=0){if((a[b+160>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+156>>2]=0}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;e=c[b+136>>2]|0;if((e|0)!=0){if((a[b+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;e=c[b+116>>2]|0;if((e|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;e=c[b+96>>2]|0;if((e|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;c[b>>2]=17232;e=c[b+32>>2]|0;if((e|0)==0){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;e=b+28|0;c[e>>2]=0;i=d;return}if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;e=b+28|0;c[e>>2]=0;i=d;return}function st(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function tt(a){a=a|0;return}function ut(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0;f=i;q=(+g[a+32>>2]- +g[a+16>>2])*.5;n=(+g[a+36>>2]- +g[a+20>>2])*.5;k=(+g[a+40>>2]- +g[a+24>>2])*.5;p=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);m=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);k=k+ +Tb[c[(c[a>>2]|0)+48>>2]&15](a);D=(+g[a+32>>2]+ +g[a+16>>2])*.5;B=(+g[a+36>>2]+ +g[a+20>>2])*.5;z=(+g[a+40>>2]+ +g[a+24>>2])*.5;H=+g[b>>2];y=+P(+H);G=+g[b+4>>2];x=+P(+G);v=+g[b+8>>2];w=+P(+v);F=+g[b+16>>2];u=+P(+F);E=+g[b+20>>2];t=+P(+E);r=+g[b+24>>2];s=+P(+r);C=+g[b+32>>2];o=+P(+C);A=+g[b+36>>2];l=+P(+A);h=+g[b+40>>2];j=+P(+h);v=D*H+B*G+z*v+ +g[b+48>>2];r=D*F+B*E+z*r+ +g[b+52>>2];h=D*C+B*A+z*h+ +g[b+56>>2];g[d>>2]=v-((q+p)*y+(n+m)*x+k*w);g[d+4>>2]=r-((q+p)*u+(n+m)*t+k*s);g[d+8>>2]=h-((q+p)*o+(n+m)*l+k*j);g[d+12>>2]=0.0;g[e>>2]=(q+p)*y+(n+m)*x+k*w+v;g[e+4>>2]=(q+p)*u+(n+m)*t+k*s+r;g[e+8>>2]=(q+p)*o+(n+m)*l+k*j+h;g[e+12>>2]=0.0;i=f;return}function vt(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+48|0;e=(c[a+48>>2]|0)+4|0;c[e+0>>2]=c[b+0>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[d+32>>2]=0;c[d+36>>2]=0;c[d+40>>2]=0;c[d+44>>2]=0;g[d+32>>2]=1.0;ic[c[(c[a>>2]|0)+68>>2]&63](d+16|0,a,d+32|0);g[a+32>>2]=+g[d+16>>2]+ +g[a+12>>2];g[d+32>>2]=-1.0;ic[c[(c[a>>2]|0)+68>>2]&63](d,a,d+32|0);c[d+16>>2]=c[d+0>>2];c[d+20>>2]=c[d+4>>2];c[d+24>>2]=c[d+8>>2];c[d+28>>2]=c[d+12>>2];g[a+16>>2]=+g[d+16>>2]- +g[a+12>>2];c[d+32>>2]=0;c[d+36>>2]=0;c[d+40>>2]=0;c[d+44>>2]=0;g[d+36>>2]=1.0;ic[c[(c[a>>2]|0)+68>>2]&63](d+16|0,a,d+32|0);g[a+36>>2]=+g[d+20>>2]+ +g[a+12>>2];g[d+36>>2]=-1.0;ic[c[(c[a>>2]|0)+68>>2]&63](d,a,d+32|0);c[d+16>>2]=c[d+0>>2];c[d+20>>2]=c[d+4>>2];c[d+24>>2]=c[d+8>>2];c[d+28>>2]=c[d+12>>2];g[a+20>>2]=+g[d+20>>2]- +g[a+12>>2];c[d+32>>2]=0;c[d+36>>2]=0;c[d+40>>2]=0;c[d+44>>2]=0;g[d+40>>2]=1.0;ic[c[(c[a>>2]|0)+68>>2]&63](d+16|0,a,d+32|0);g[a+40>>2]=+g[d+24>>2]+ +g[a+12>>2];g[d+40>>2]=-1.0;ic[c[(c[a>>2]|0)+68>>2]&63](d,a,d+32|0);c[d+16>>2]=c[d+0>>2];c[d+20>>2]=c[d+4>>2];c[d+24>>2]=c[d+8>>2];c[d+28>>2]=c[d+12>>2];g[a+24>>2]=+g[d+24>>2]- +g[a+12>>2];i=d;return}function wt(a){a=a|0;return(c[a+48>>2]|0)+4|0}function xt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+48|0;c[f>>2]=14952;c[f+4>>2]=b;c[f+8>>2]=c[d+0>>2];c[f+12>>2]=c[d+4>>2];c[f+16>>2]=c[d+8>>2];c[f+20>>2]=c[d+12>>2];c[f+24>>2]=c[e+0>>2];c[f+28>>2]=c[e+4>>2];c[f+32>>2]=c[e+8>>2];c[f+36>>2]=c[e+12>>2];b=c[a+48>>2]|0;mc[c[(c[b>>2]|0)+8>>2]&63](b,f,d,e);i=f;return}function yt(a,b,d){a=a|0;b=+b;d=d|0;a=i;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;i=a;return}function zt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;i=i+176|0;c[e+160>>2]=0;c[e+164>>2]=0;c[e+168>>2]=0;c[e+172>>2]=0;c[e+136>>2]=0;c[e+140>>2]=0;c[e+144>>2]=0;c[e+148>>2]=0;c[e+152>>2]=0;c[e+32>>2]=14888;c[e+36>>2]=0;c[e+40>>2]=0;c[e+44>>2]=0;c[e+48>>2]=0;g[e+52>>2]=1.0;c[e+56>>2]=c[e+160>>2];c[e+60>>2]=c[e+164>>2];c[e+64>>2]=c[e+168>>2];c[e+68>>2]=0;g[e+72>>2]=1.0;c[e+76>>2]=0;c[e+80>>2]=0;c[e+84>>2]=0;c[e+88>>2]=0;g[e+92>>2]=1.0;g[e+96>>2]=0.0;c[e+100>>2]=c[e+140>>2];c[e+104>>2]=c[e+144>>2];c[e+108>>2]=c[e+148>>2];c[e+112>>2]=c[e+152>>2];g[e+116>>2]=-999999984306749400.0;l=+g[d>>2];k=+g[d+4>>2];j=+g[d+8>>2];h=l*+g[e+56>>2]+k+j*0.0;f=l*+g[e+60>>2]+k*0.0+j;g[e+120>>2]=l+k*0.0+j*0.0;g[e+124>>2]=h;g[e+128>>2]=f;g[e+132>>2]=0.0;g[e+16>>2]=999999984306749400.0;g[e+20>>2]=999999984306749400.0;g[e+24>>2]=999999984306749400.0;g[e+28>>2]=0.0;d=c[(c[b>>2]|0)+64>>2]|0;g[e>>2]=-999999984306749400.0;g[e+4>>2]=-999999984306749400.0;g[e+8>>2]=-999999984306749400.0;g[e+12>>2]=0.0;mc[d&63](b,e+32|0,e,e+16|0);c[a+0>>2]=c[e+36>>2];c[a+4>>2]=c[e+40>>2];c[a+8>>2]=c[e+44>>2];c[a+12>>2]=c[e+48>>2];i=e;return}function At(a){a=a|0;return}function Bt(a){a=a|0;return 14864}function Ct(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Dt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;f=+g[a+88>>2];j=+g[a+92>>2];h=+g[a+96>>2];k=f*+g[b>>2]+j*+g[b+4>>2]+h*+g[b+8>>2];l=+g[a+84>>2];if(k>l){g[a+84>>2]=k;c[a+4>>2]=c[b+0>>2];c[a+8>>2]=c[b+4>>2];c[a+12>>2]=c[b+8>>2];c[a+16>>2]=c[b+12>>2]}else{k=l}l=f*+g[b+16>>2]+j*+g[b+20>>2]+h*+g[b+24>>2];if(l>k){g[a+84>>2]=l;c[a+4>>2]=c[b+16>>2];c[a+8>>2]=c[b+20>>2];c[a+12>>2]=c[b+24>>2];c[a+16>>2]=c[b+28>>2];k=l}f=f*+g[b+32>>2]+j*+g[b+36>>2]+h*+g[b+40>>2];if(!(f>k)){i=e;return}g[a+84>>2]=f;c[a+4>>2]=c[b+32>>2];c[a+8>>2]=c[b+36>>2];c[a+12>>2]=c[b+40>>2];c[a+16>>2]=c[b+44>>2];i=e;return}function Et(a){a=a|0;return}function Ft(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Gt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0;f=i;k=+g[b>>2];l=+g[b+16>>2];j=k<l?k:l;h=+g[b+32>>2];if((j<h?j:h)>+g[a+24>>2]){i=f;return}m=k>l?b:b+16|0;if(+g[(+g[m>>2]>h?m:b+32|0)>>2]<+g[a+8>>2]){i=f;return}l=+g[b+8>>2];j=+g[b+24>>2];k=l<j?l:j;h=+g[b+40>>2];if((k<h?k:h)>+g[a+32>>2]){i=f;return}m=l>j?b+8|0:b+24|0;if(+g[(+g[m>>2]>h?m:b+40|0)>>2]<+g[a+16>>2]){i=f;return}k=+g[b+4>>2];l=+g[b+20>>2];j=k<l?k:l;h=+g[b+36>>2];if((j<h?j:h)>+g[a+28>>2]){i=f;return}m=k>l?b+4|0:b+20|0;if(+g[(+g[m>>2]>h?m:b+36|0)>>2]<+g[a+12>>2]){i=f;return}m=c[a+4>>2]|0;mc[c[(c[m>>2]|0)+8>>2]&63](m,b,d,e);i=f;return}function Ht(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;while(1){f=c[a+12>>2]|0;g=c[f+(((b+d|0)/2|0)<<3)>>2]|0;k=b;h=d;while(1){while(1){l=k+1|0;if((c[f+(k<<3)>>2]|0)<(g|0)){k=l}else{j=h;break}}while(1){m=f+(j<<3)|0;h=j+ -1|0;if((g|0)<(c[m>>2]|0)){j=h}else{break}}if((k|0)>(j|0)){h=j}else{k=f+(k<<3)|0;n=c[k>>2]|0;f=c[k+4>>2]|0;o=c[m+4>>2]|0;c[k>>2]=c[m>>2];c[k+4>>2]=o;k=(c[a+12>>2]|0)+(j<<3)|0;c[k>>2]=n;c[k+4>>2]=f;k=l}if((k|0)>(h|0)){break}f=c[a+12>>2]|0}if((h|0)>(b|0)){Ht(a,b,h)}if((k|0)<(d|0)){b=k}else{break}}i=e;return}function It(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;h=c[b>>2]|0;if((h|0)>3){g=a[d>>0]|0;if((g&8)==0){c[b>>2]=h+ -1;f=b+(h+ -1<<4)+4|0;c[b+52>>2]=c[f+0>>2];c[b+56>>2]=c[f+4>>2];c[b+60>>2]=c[f+8>>2];c[b+64>>2]=c[f+12>>2];f=b+(h+ -1<<4)+84|0;c[b+132>>2]=c[f+0>>2];c[b+136>>2]=c[f+4>>2];c[b+140>>2]=c[f+8>>2];c[b+144>>2]=c[f+12>>2];f=b+(h+ -1<<4)+164|0;c[b+212>>2]=c[f+0>>2];c[b+216>>2]=c[f+4>>2];c[b+220>>2]=c[f+8>>2];c[b+224>>2]=c[f+12>>2];h=h+ -1|0;f=4}else{f=6}}else{f=4}if((f|0)==4){if((h|0)>2){g=a[d>>0]|0;f=6}else{g=h}}if((f|0)==6){if((g&4)==0){g=h+ -1|0;c[b>>2]=g;c[b+36>>2]=c[b+(g<<4)+4>>2];c[b+40>>2]=c[b+(g<<4)+8>>2];c[b+44>>2]=c[b+(g<<4)+12>>2];c[b+48>>2]=c[b+(g<<4)+16>>2];c[b+116>>2]=c[b+(g<<4)+84>>2];c[b+120>>2]=c[b+(g<<4)+88>>2];c[b+124>>2]=c[b+(g<<4)+92>>2];c[b+128>>2]=c[b+(g<<4)+96>>2];c[b+196>>2]=c[b+(g<<4)+164>>2];c[b+200>>2]=c[b+(g<<4)+168>>2];c[b+204>>2]=c[b+(g<<4)+172>>2];c[b+208>>2]=c[b+(g<<4)+176>>2]}else{g=h}}if((g|0)>1){h=a[d>>0]|0;if((h&2)==0){g=g+ -1|0;c[b>>2]=g;c[b+20>>2]=c[b+(g<<4)+4>>2];c[b+24>>2]=c[b+(g<<4)+8>>2];c[b+28>>2]=c[b+(g<<4)+12>>2];c[b+32>>2]=c[b+(g<<4)+16>>2];c[b+100>>2]=c[b+(g<<4)+84>>2];c[b+104>>2]=c[b+(g<<4)+88>>2];c[b+108>>2]=c[b+(g<<4)+92>>2];c[b+112>>2]=c[b+(g<<4)+96>>2];c[b+180>>2]=c[b+(g<<4)+164>>2];c[b+184>>2]=c[b+(g<<4)+168>>2];c[b+188>>2]=c[b+(g<<4)+172>>2];c[b+192>>2]=c[b+(g<<4)+176>>2];f=11}else{d=h}}else{f=11}do{if((f|0)==11){if((g|0)>0){d=a[d>>0]|0;break}else{i=e;return}}}while(0);if(!((d&1)==0)){i=e;return}h=g+ -1|0;c[b>>2]=h;c[b+4>>2]=c[b+(h<<4)+4>>2];c[b+8>>2]=c[b+(h<<4)+8>>2];c[b+12>>2]=c[b+(h<<4)+12>>2];c[b+16>>2]=c[b+(h<<4)+16>>2];c[b+84>>2]=c[b+(h<<4)+84>>2];c[b+88>>2]=c[b+(h<<4)+88>>2];c[b+92>>2]=c[b+(h<<4)+92>>2];c[b+96>>2]=c[b+(h<<4)+96>>2];c[b+164>>2]=c[b+(h<<4)+164>>2];c[b+168>>2]=c[b+(h<<4)+168>>2];c[b+172>>2]=c[b+(h<<4)+172>>2];c[b+176>>2]=c[b+(h<<4)+176>>2];i=e;return}function Jt(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0.0,L=0.0,M=0,N=0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0,T=0;d=i;i=i+80|0;if((a[b+356>>0]|0)==0){T=a[b+312>>0]|0;T=T<<24>>24!=0;i=d;return T|0}c[b+336>>2]=0;c[b+340>>2]=0;c[b+344>>2]=0;c[b+348>>2]=0;a[b+352>>0]=0;J=a[b+332>>0]|0;a[b+332>>0]=J&-16;a[b+356>>0]=0;switch(c[b>>2]|0){case 1:{c[b+244>>2]=c[b+84>>2];c[b+248>>2]=c[b+88>>2];c[b+252>>2]=c[b+92>>2];c[b+256>>2]=c[b+96>>2];c[b+260>>2]=c[b+164>>2];c[b+264>>2]=c[b+168>>2];c[b+268>>2]=c[b+172>>2];c[b+272>>2]=c[b+176>>2];Q=+g[b+248>>2]- +g[b+264>>2];R=+g[b+252>>2]- +g[b+268>>2];g[b+276>>2]=+g[b+244>>2]- +g[b+260>>2];g[b+280>>2]=Q;g[b+284>>2]=R;g[b+288>>2]=0.0;c[b+336>>2]=0;c[b+340>>2]=0;c[b+344>>2]=0;c[b+348>>2]=0;a[b+352>>0]=0;a[b+332>>0]=J&-16;g[b+336>>2]=1.0;g[b+340>>2]=0.0;g[b+344>>2]=0.0;g[b+348>>2]=0.0;a[b+312>>0]=1;T=1;T=T<<24>>24!=0;i=d;return T|0};case 0:{a[b+312>>0]=0;T=0;T=T<<24>>24!=0;i=d;return T|0};case 4:{c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;j=d+48|0;a[j>>0]=0;c[b+316>>2]=c[d+0>>2];c[b+320>>2]=c[d+4>>2];c[b+324>>2]=c[d+8>>2];c[b+328>>2]=c[d+12>>2];a[b+332>>0]=J|15;G=+g[b+20>>2];P=+g[b+4>>2];C=+g[b+24>>2];Q=+g[b+8>>2];E=+g[b+28>>2];O=+g[b+12>>2];F=+g[b+36>>2];L=+g[b+40>>2];I=+g[b+44>>2];H=+g[b+52>>2];K=+g[b+56>>2];D=+g[b+60>>2];R=(H-P)*((C-Q)*(I-O)-(E-O)*(L-Q))+(K-Q)*((E-O)*(F-P)-(G-P)*(I-O))+((G-P)*(L-Q)-(C-Q)*(F-P))*(D-O);if(R*R<9.99999905104687e-9){N=-1}else{N=R*(((E-O)*(F-P)-(G-P)*(I-O))*(0.0-Q)+((C-Q)*(I-O)-(E-O)*(L-Q))*(0.0-P)+((G-P)*(L-Q)-(C-Q)*(F-P))*(0.0-O))<0.0|0}R=(G-P)*((L-Q)*(D-O)-(I-O)*(K-Q))+(C-Q)*((I-O)*(H-P)-(F-P)*(D-O))+((F-P)*(K-Q)-(L-Q)*(H-P))*(E-O);if(R*R<9.99999905104687e-9){M=-1}else{M=R*(((I-O)*(H-P)-(F-P)*(D-O))*(0.0-Q)+((L-Q)*(D-O)-(I-O)*(K-Q))*(0.0-P)+((F-P)*(K-Q)-(L-Q)*(H-P))*(0.0-O))<0.0|0}R=(F-P)*((K-Q)*(E-O)-(D-O)*(C-Q))+(L-Q)*((D-O)*(G-P)-(H-P)*(E-O))+((H-P)*(C-Q)-(K-Q)*(G-P))*(I-O);if(R*R<9.99999905104687e-9){J=-1}else{J=R*(((D-O)*(G-P)-(H-P)*(E-O))*(0.0-Q)+((K-Q)*(E-O)-(D-O)*(C-Q))*(0.0-P)+((H-P)*(C-Q)-(K-Q)*(G-P))*(0.0-O))<0.0|0}O=(P-G)*((K-C)*(I-E)-(D-E)*(L-C))+(Q-C)*((D-E)*(F-G)-(H-G)*(I-E))+((H-G)*(L-C)-(K-C)*(F-G))*(O-E);if(O*O<9.99999905104687e-9){S=-1}else{S=O*(((D-E)*(F-G)-(H-G)*(I-E))*(0.0-C)+((K-C)*(I-E)-(D-E)*(L-C))*(0.0-G)+((H-G)*(L-C)-(K-C)*(F-G))*(0.0-E))<0.0|0}if((M|N|J|S|0)<0){a[b+352>>0]=1;a[b+312>>0]=0;T=0;T=T<<24>>24!=0;i=d;return T|0}T=(N|0)!=0;N=(M|0)==0;J=(J|0)==0;M=(S|0)==0;if(N&(T^1)&J&M){a[b+312>>0]=1;c[b+276>>2]=0;c[b+280>>2]=0;c[b+284>>2]=0;c[b+288>>2]=0;T=1;T=T<<24>>24!=0;i=d;return T|0}if(T?(Kt(d,b+4|0,b+20|0,b+36|0,d+32|0),B=+g[d+32>>2],w=+g[d+36>>2],x=+g[d+40>>2],y=B- +g[d>>2],z=w- +g[d+4>>2],A=x- +g[d+8>>2],y*y+z*z+A*A<3.4028234663852886e+38):0){R=+g[d+44>>2];g[b+316>>2]=B;g[b+320>>2]=w;g[b+324>>2]=x;g[b+328>>2]=R;T=a[j>>0]|0;a[b+332>>0]=T&1|a[b+332>>0]&-16|T&2|T&4;R=+g[d+56>>2];w=+g[d+60>>2];g[b+336>>2]=+g[d+52>>2];g[b+340>>2]=R;g[b+344>>2]=w;g[b+348>>2]=0.0;w=y*y+z*z+A*A}else{w=3.4028234663852886e+38}if(!N?(Kt(d,b+4|0,b+36|0,b+52|0,d+32|0),r=+g[d+32>>2],u=+g[d+36>>2],q=+g[d+40>>2],v=r- +g[d>>2],s=u- +g[d+4>>2],t=q- +g[d+8>>2],v*v+s*s+t*t<w):0){R=+g[d+44>>2];g[b+316>>2]=r;g[b+320>>2]=u;g[b+324>>2]=q;g[b+328>>2]=R;T=a[j>>0]|0;a[b+332>>0]=T<<1&4|(T&1|a[b+332>>0]&-16)|T<<1&8;R=+g[d+56>>2];w=+g[d+60>>2];g[b+336>>2]=+g[d+52>>2];g[b+340>>2]=0.0;g[b+344>>2]=R;g[b+348>>2]=w;w=v*v+s*s+t*t}if(!J?(Kt(d,b+4|0,b+52|0,b+20|0,d+32|0),k=+g[d+32>>2],l=+g[d+36>>2],m=+g[d+40>>2],n=k- +g[d>>2],o=l- +g[d+4>>2],p=m- +g[d+8>>2],n*n+o*o+p*p<w):0){R=+g[d+44>>2];g[b+316>>2]=k;g[b+320>>2]=l;g[b+324>>2]=m;g[b+328>>2]=R;T=a[j>>0]|0;a[b+332>>0]=(T&255)>>>1&2|(T&1|a[b+332>>0]&-16)|T<<2&8;R=+g[d+60>>2];w=+g[d+56>>2];g[b+336>>2]=+g[d+52>>2];g[b+340>>2]=R;g[b+344>>2]=0.0;g[b+348>>2]=w;w=n*n+o*o+p*p}if(!M?(Kt(d,b+20|0,b+52|0,b+36|0,d+32|0),f=+g[d+32>>2],e=+g[d+36>>2],h=+g[d+40>>2],P=f- +g[d>>2],Q=e- +g[d+4>>2],R=h- +g[d+8>>2],P*P+Q*Q+R*R<w):0){P=+g[d+44>>2];g[b+316>>2]=f;g[b+320>>2]=e;g[b+324>>2]=h;g[b+328>>2]=P;T=a[j>>0]|0;a[b+332>>0]=T<<1&2|a[b+332>>0]&-16|T&4|T<<2&8;P=+g[d+52>>2];Q=+g[d+60>>2];R=+g[d+56>>2];g[b+336>>2]=0.0;g[b+340>>2]=P;g[b+344>>2]=Q;g[b+348>>2]=R}G=+g[b+336>>2];H=+g[b+340>>2];I=+g[b+344>>2];R=+g[b+348>>2];K=+g[b+84>>2]*G+ +g[b+100>>2]*H+ +g[b+116>>2]*I+ +g[b+132>>2]*R;O=G*+g[b+88>>2]+H*+g[b+104>>2]+I*+g[b+120>>2]+R*+g[b+136>>2];Q=G*+g[b+92>>2]+H*+g[b+108>>2]+I*+g[b+124>>2]+R*+g[b+140>>2];g[b+244>>2]=K;g[b+248>>2]=O;g[b+252>>2]=Q;g[b+256>>2]=0.0;L=+g[b+164>>2]*G+ +g[b+180>>2]*H+ +g[b+196>>2]*I+ +g[b+212>>2]*R;P=G*+g[b+168>>2]+H*+g[b+184>>2]+I*+g[b+200>>2]+R*+g[b+216>>2];R=G*+g[b+172>>2]+H*+g[b+188>>2]+I*+g[b+204>>2]+R*+g[b+220>>2];g[b+260>>2]=L;g[b+264>>2]=P;g[b+268>>2]=R;g[b+272>>2]=0.0;g[b+276>>2]=K-L;g[b+280>>2]=O-P;g[b+284>>2]=Q-R;g[b+288>>2]=0.0;It(b,b+332|0);if((+g[b+336>>2]>=0.0?+g[b+340>>2]>=0.0:0)?+g[b+344>>2]>=0.0:0){j=+g[b+348>>2]>=0.0|0}else{j=0}a[b+312>>0]=j;T=j;T=T<<24>>24!=0;i=d;return T|0};case 2:{k=+g[b+4>>2];f=+g[b+8>>2];m=+g[b+12>>2];e=+g[b+20>>2]-k;h=+g[b+24>>2]-f;l=+g[b+28>>2]-m;do{if((0.0-k)*e+(0.0-f)*h+(0.0-m)*l>0.0){if((0.0-k)*e+(0.0-f)*h+(0.0-m)*l<e*e+h*h+l*l){a[b+332>>0]=J&-16|3;e=((0.0-k)*e+(0.0-f)*h+(0.0-m)*l)/(e*e+h*h+l*l);break}else{a[b+332>>0]=J&-16|2;e=1.0;break}}else{a[b+332>>0]=J&-16|1;e=0.0}}while(0);g[b+336>>2]=1.0-e;g[b+340>>2]=e;g[b+344>>2]=0.0;g[b+348>>2]=0.0;K=+g[b+84>>2];O=+g[b+88>>2];Q=+g[b+92>>2];K=K+e*(+g[b+100>>2]-K);O=O+e*(+g[b+104>>2]-O);Q=Q+e*(+g[b+108>>2]-Q);g[b+244>>2]=K;g[b+248>>2]=O;g[b+252>>2]=Q;g[b+256>>2]=0.0;L=+g[b+164>>2];P=+g[b+168>>2];R=+g[b+172>>2];L=L+e*(+g[b+180>>2]-L);P=P+e*(+g[b+184>>2]-P);R=R+e*(+g[b+188>>2]-R);g[b+260>>2]=L;g[b+264>>2]=P;g[b+268>>2]=R;g[b+272>>2]=0.0;g[b+276>>2]=K-L;g[b+280>>2]=O-P;g[b+284>>2]=Q-R;g[b+288>>2]=0.0;It(b,b+332|0);if((+g[b+336>>2]>=0.0?+g[b+340>>2]>=0.0:0)?+g[b+344>>2]>=0.0:0){j=+g[b+348>>2]>=0.0|0}else{j=0}a[b+312>>0]=j;T=j;T=T<<24>>24!=0;i=d;return T|0};case 3:{c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;Kt(d+16|0,b+4|0,b+20|0,b+36|0,b+316|0);H=+g[b+336>>2];I=+g[b+340>>2];R=+g[b+344>>2];K=+g[b+84>>2]*H+ +g[b+100>>2]*I+ +g[b+116>>2]*R;O=H*+g[b+88>>2]+I*+g[b+104>>2]+R*+g[b+120>>2];Q=H*+g[b+92>>2]+I*+g[b+108>>2]+R*+g[b+124>>2];g[b+244>>2]=K;g[b+248>>2]=O;g[b+252>>2]=Q;g[b+256>>2]=0.0;L=+g[b+164>>2]*H+ +g[b+180>>2]*I+ +g[b+196>>2]*R;P=H*+g[b+168>>2]+I*+g[b+184>>2]+R*+g[b+200>>2];R=H*+g[b+172>>2]+I*+g[b+188>>2]+R*+g[b+204>>2];g[b+260>>2]=L;g[b+264>>2]=P;g[b+268>>2]=R;g[b+272>>2]=0.0;g[b+276>>2]=K-L;g[b+280>>2]=O-P;g[b+284>>2]=Q-R;g[b+288>>2]=0.0;It(b,b+332|0);if((+g[b+336>>2]>=0.0?+g[b+340>>2]>=0.0:0)?+g[b+344>>2]>=0.0:0){j=+g[b+348>>2]>=0.0|0}else{j=0}a[b+312>>0]=j;T=j;T=T<<24>>24!=0;i=d;return T|0};default:{a[b+312>>0]=0;T=0;T=T<<24>>24!=0;i=d;return T|0}}return 0}function Kt(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;r=i;o=a[h+16>>0]&-16;a[h+16>>0]=o;l=+g[e>>2];k=+g[d>>2];n=+g[e+4>>2];m=+g[d+4>>2];p=+g[e+8>>2];j=+g[d+8>>2];q=+g[f>>2];s=+g[f+4>>2];t=+g[f+8>>2];u=+g[b>>2];v=+g[b+4>>2];y=+g[b+8>>2];w=(l-k)*(u-k)+(n-m)*(v-m)+(p-j)*(y-j);x=(q-k)*(u-k)+(s-m)*(v-m)+(t-j)*(y-j);if(!(!(w<=0.0)|!(x<=0.0))){c[h+0>>2]=c[d+0>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];a[h+16>>0]=o|1;g[h+20>>2]=1.0;g[h+24>>2]=0.0;g[h+28>>2]=0.0;g[h+32>>2]=0.0;i=r;return}z=(l-k)*(u-l)+(n-m)*(v-n)+(p-j)*(y-p);A=(q-k)*(u-l)+(s-m)*(v-n)+(t-j)*(y-p);if(!(!(z>=0.0)|!(A<=z))){c[h+0>>2]=c[e+0>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];c[h+12>>2]=c[e+12>>2];a[h+16>>0]=o|2;g[h+20>>2]=0.0;g[h+24>>2]=1.0;g[h+28>>2]=0.0;g[h+32>>2]=0.0;i=r;return}if(!((w>=0.0?!(w*A-z*x<=0.0):1)|!(z<=0.0))){g[h>>2]=k+(l-k)*(w/(w-z));g[h+4>>2]=m+(n-m)*(w/(w-z));g[h+8>>2]=j+(p-j)*(w/(w-z));g[h+12>>2]=0.0;a[h+16>>0]=o|3;g[h+20>>2]=1.0-w/(w-z);g[h+24>>2]=w/(w-z);g[h+28>>2]=0.0;g[h+32>>2]=0.0;i=r;return}B=(l-k)*(u-q)+(n-m)*(v-s)+(p-j)*(y-t);u=(q-k)*(u-q)+(s-m)*(v-s)+(t-j)*(y-t);if(!(!(u>=0.0)|!(B<=u))){c[h+0>>2]=c[f+0>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];a[h+16>>0]=o|4;g[h+20>>2]=0.0;g[h+24>>2]=0.0;g[h+28>>2]=1.0;g[h+32>>2]=0.0;i=r;return}if(!((x>=0.0?!(B*x-w*u<=0.0):1)|!(u<=0.0))){g[h>>2]=k+(q-k)*(x/(x-u));g[h+4>>2]=m+(s-m)*(x/(x-u));g[h+8>>2]=j+(t-j)*(x/(x-u));g[h+12>>2]=0.0;a[h+16>>0]=o|5;g[h+20>>2]=1.0-x/(x-u);g[h+24>>2]=0.0;g[h+28>>2]=x/(x-u);g[h+32>>2]=0.0;i=r;return}if((z*u-B*A<=0.0?A-z>=0.0:0)?B-u>=0.0:0){B=(A-z)/(A-z+(B-u));g[h>>2]=l+(q-l)*B;g[h+4>>2]=n+(s-n)*B;g[h+8>>2]=p+(t-p)*B;g[h+12>>2]=0.0;a[h+16>>0]=o|6;g[h+20>>2]=0.0;g[h+24>>2]=1.0-B;g[h+28>>2]=B;g[h+32>>2]=0.0;i=r;return}v=1.0/(w*A-z*x+(z*u-B*A+(B*x-w*u)));y=(B*x-w*u)*v;B=(w*A-z*x)*v;g[h>>2]=(q-k)*B+(k+(l-k)*y);g[h+4>>2]=(s-m)*B+(m+(n-m)*y);g[h+8>>2]=(t-j)*B+((p-j)*y+j);g[h+12>>2]=0.0;a[h+16>>0]=o|7;g[h+20>>2]=1.0-y-B;g[h+24>>2]=y;g[h+28>>2]=B;g[h+32>>2]=0.0;i=r;return}function Lt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0;e=i;i=i+96|0;p=+g[b+48>>2]- +g[b+112>>2];h=+g[b+52>>2]- +g[b+116>>2];j=+g[b+56>>2]- +g[b+120>>2];o=p*+g[b+64>>2]+h*+g[b+80>>2]+j*+g[b+96>>2];m=p*+g[b+68>>2]+h*+g[b+84>>2]+j*+g[b+100>>2];j=p*+g[b+72>>2]+h*+g[b+88>>2]+j*+g[b+104>>2];r=c[a+8>>2]|0;t=c[a+4>>2]|0;h=+g[t+28>>2]*+g[t+12>>2];p=h+ +g[a+12>>2];B=+g[r+72>>2];u=+g[r+56>>2];A=+g[r+76>>2];s=+g[r+60>>2];z=+g[r+80>>2];w=+g[r+64>>2];y=+g[r+88>>2];v=+g[r+92>>2];x=+g[r+96>>2];l=(A-s)*(x-w)-(z-w)*(v-s);k=(z-w)*(y-u)-(B-u)*(x-w);C=(B-u)*(v-s)-(A-s)*(y-u);n=1.0/+Q(+(C*C+(l*l+k*k)));q=(o-u)*n*l+n*k*(m-s)+n*C*(j-w);if(q<0.0){q=q*-1.0;l=n*l*-1.0;k=n*k*-1.0;n=n*C*-1.0}else{l=n*l;k=n*k;n=n*C}if(!(q<p)){i=e;return}C=(j-w)*((B-u)*k-(A-s)*l)+((o-u)*((A-s)*n-(z-w)*k)+(m-s)*((z-w)*l-(B-u)*n));z=(j-z)*((y-B)*k-(v-A)*l)+((o-B)*((v-A)*n-(x-z)*k)+(m-A)*((x-z)*l-(y-B)*n));s=(j-x)*((u-y)*k-(s-v)*l)+((o-y)*((s-v)*n-(w-x)*k)+(m-v)*((w-x)*l-(u-y)*n));if(!(C>0.0&z>0.0&s>0.0)?!(C<=0.0)|!(z<=0.0)|!(s<=0.0):0){if((Hb[c[(c[r>>2]|0)+100>>2]&127](r)|0)<=0){i=e;return}t=0;r=0;s=0.0;q=0.0;u=0.0;do{F=c[a+8>>2]|0;mc[c[(c[F>>2]|0)+104>>2]&63](F,r,e+80|0,e+64|0);B=+g[e+80>>2];v=+g[e+84>>2];z=+g[e+88>>2];A=+g[e+64>>2]-B;w=+g[e+68>>2]-v;y=+g[e+72>>2]-z;do{if((o-B)*A+(m-v)*w+(j-z)*y>0.0){if((o-B)*A+(m-v)*w+(j-z)*y<A*A+w*w+y*y){x=((o-B)*A+(m-v)*w+(j-z)*y)/(A*A+w*w+y*y);C=o-B-A*x;D=m-v-w*x;E=j-z-y*x;break}else{C=o-B-A;D=m-v-w;E=j-z-y;x=1.0;break}}else{C=o-B;D=m-v;E=j-z;x=0.0}}while(0);if(E*E+(D*D+C*C)<p*p){t=1;s=B+A*x;q=z+y*x;u=v+w*x}r=r+1|0;F=c[a+8>>2]|0}while((r|0)<(Hb[c[(c[F>>2]|0)+100>>2]&127](F)|0));if((t&1)==0){i=e;return}else{v=p*p;p=q}}else{v=p*p;s=o-l*q;p=j-n*q;u=m-k*q}o=o-s;m=m-u;j=j-p;if(!(o*o+m*m+j*j<v)){i=e;return}if(o*o+m*m+j*j>1.1920928955078125e-7){n=+Q(+(o*o+m*m+j*j));h=h-n;l=o*(1.0/n);k=m*(1.0/n);n=j*(1.0/n)}h=-h;if(f){z=+g[b+64>>2];A=+g[b+68>>2];B=+g[b+72>>2];C=z*l+A*k+B*n;o=+g[b+80>>2];q=+g[b+84>>2];v=+g[b+88>>2];D=l*o+k*q+n*v;w=+g[b+96>>2];x=+g[b+100>>2];y=+g[b+104>>2];E=l*w+k*x+n*y;g[e+48>>2]=-C;g[e+52>>2]=-D;g[e+56>>2]=-E;g[e+60>>2]=0.0;D=s*o+u*q+p*v+ +g[b+116>>2]+D*h;E=s*w+u*x+p*y+ +g[b+120>>2]+E*h;g[e+32>>2]=s*z+u*A+p*B+ +g[b+112>>2]+C*h;g[e+36>>2]=D;g[e+40>>2]=E;g[e+44>>2]=0.0;hc[c[(c[d>>2]|0)+16>>2]&15](d,e+48|0,e+32|0,h);i=e;return}else{F=c[(c[d>>2]|0)+16>>2]|0;A=+g[b+64>>2];B=+g[b+68>>2];C=+g[b+72>>2];w=+g[b+80>>2];x=+g[b+84>>2];D=+g[b+88>>2];y=+g[b+96>>2];z=+g[b+100>>2];E=+g[b+104>>2];g[e+16>>2]=A*l+B*k+C*n;g[e+20>>2]=l*w+k*x+n*D;g[e+24>>2]=l*y+k*z+n*E;g[e+28>>2]=0.0;D=s*w+u*x+p*D+ +g[b+116>>2];E=s*y+u*z+p*E+ +g[b+120>>2];g[e>>2]=s*A+u*B+p*C+ +g[b+112>>2];g[e+4>>2]=D;g[e+8>>2]=E;g[e+12>>2]=0.0;hc[F&15](d,e+16|0,e,h);i=e;return}}function Mt(a){a=a|0;return}function Nt(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Ot(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=15224;if((a[b+8>>0]|0)==0){dw(b);i=d;return}e=c[b+12>>2]|0;if((e|0)==0){dw(b);i=d;return}f=c[b+4>>2]|0;Fb[c[(c[f>>2]|0)+16>>2]&127](f,e);dw(b);i=d;return}function Pt(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=15224;if((a[b+8>>0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Fb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function Qt(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+144|0;k=c[b+12>>2]|0;if((k|0)==0){i=j;return}m=c[d+4>>2]|0;l=c[e+4>>2]|0;c[h+4>>2]=k;g[j+140>>2]=999999984306749400.0;k=c[d+12>>2]|0;c[j+12>>2]=c[k+0>>2];c[j+16>>2]=c[k+4>>2];c[j+20>>2]=c[k+8>>2];c[j+24>>2]=c[k+12>>2];c[j+28>>2]=c[k+16>>2];c[j+32>>2]=c[k+20>>2];c[j+36>>2]=c[k+24>>2];c[j+40>>2]=c[k+28>>2];c[j+44>>2]=c[k+32>>2];c[j+48>>2]=c[k+36>>2];c[j+52>>2]=c[k+40>>2];c[j+56>>2]=c[k+44>>2];c[j+60>>2]=c[k+48>>2];c[j+64>>2]=c[k+52>>2];c[j+68>>2]=c[k+56>>2];c[j+72>>2]=c[k+60>>2];e=c[e+12>>2]|0;c[j+76>>2]=c[e+0>>2];c[j+80>>2]=c[e+4>>2];c[j+84>>2]=c[e+8>>2];c[j+88>>2]=c[e+12>>2];c[j+92>>2]=c[e+16>>2];c[j+96>>2]=c[e+20>>2];c[j+100>>2]=c[e+24>>2];c[j+104>>2]=c[e+28>>2];c[j+108>>2]=c[e+32>>2];c[j+112>>2]=c[e+36>>2];c[j+116>>2]=c[e+40>>2];c[j+120>>2]=c[e+44>>2];c[j+124>>2]=c[e+48>>2];c[j+128>>2]=c[e+52>>2];c[j+132>>2]=c[e+56>>2];c[j+136>>2]=c[e+60>>2];c[j>>2]=15304;c[j+4>>2]=m;c[j+8>>2]=l;Tt(j,j+12|0,h,c[f+20>>2]|0,0);if((a[b+8>>0]|0)==0){i=j;return}d=c[h+4>>2]|0;if((c[d+748>>2]|0)==0){i=j;return}k=c[d+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;if((k|0)==(e|0)){Xr(d,k+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Xr(d,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,e+4|0);i=j;return}}function Rt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function St(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((c[b+12>>2]|0)==0){i=e;return}if((a[b+8>>0]|0)==0){i=e;return}h=c[d+4>>2]|0;if((h|0)==(c[d+8>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[d+4>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[d+12>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[d+12>>2]|0;if((j|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=g;c[d+8>>2]=f}f=(c[d+12>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=c[b+12>>2]}c[d+4>>2]=h+1;i=e;return}function Tt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0,sa=0,ta=0,ua=0,va=0.0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0;e=i;i=i+656|0;g[e+48>>2]=+g[b>>2];g[e>>2]=+g[b+64>>2];f=e+52|0;g[f>>2]=+g[b+4>>2];g[e+4>>2]=+g[b+68>>2];g[e+56>>2]=+g[b+8>>2];g[e+8>>2]=+g[b+72>>2];g[e+64>>2]=+g[b+16>>2];g[e+16>>2]=+g[b+80>>2];g[e+68>>2]=+g[b+20>>2];g[e+20>>2]=+g[b+84>>2];g[e+72>>2]=+g[b+24>>2];g[e+24>>2]=+g[b+88>>2];g[e+80>>2]=+g[b+32>>2];g[e+32>>2]=+g[b+96>>2];g[e+84>>2]=+g[b+36>>2];g[e+36>>2]=+g[b+100>>2];g[e+88>>2]=+g[b+40>>2];g[e+40>>2]=+g[b+104>>2];Da=c[a+4>>2]|0;H=+g[Da+28>>2];D=+g[Da+32>>2];B=+g[Da+36>>2];G=+Tb[c[(c[Da>>2]|0)+48>>2]&15](Da);F=+Tb[c[(c[Da>>2]|0)+48>>2]&15](Da);B=(B+ +Tb[c[(c[Da>>2]|0)+48>>2]&15](Da))*2.0;Da=c[a+8>>2]|0;z=+g[Da+28>>2];x=+g[Da+32>>2];r=+g[Da+36>>2];y=+Tb[c[(c[Da>>2]|0)+48>>2]&15](Da);w=+Tb[c[(c[Da>>2]|0)+48>>2]&15](Da);r=(r+ +Tb[c[(c[Da>>2]|0)+48>>2]&15](Da))*2.0;R=+g[b+112>>2]- +g[b+48>>2];S=+g[b+116>>2]- +g[b+52>>2];T=+g[b+120>>2]- +g[b+56>>2];l=+g[e+48>>2];j=+g[e+64>>2];k=+g[e+80>>2];I=+g[f>>2];J=+g[e+68>>2];K=+g[e+84>>2];E=+g[e+56>>2];C=+g[e+72>>2];A=+g[e+88>>2];g[e+548>>2]=(H+G)*2.0*.5;g[e+552>>2]=(D+F)*2.0*.5;g[e+556>>2]=B*.5;g[e+536>>2]=(z+y)*2.0*.5;g[e+540>>2]=(x+w)*2.0*.5;g[e+544>>2]=r*.5;q=+g[e>>2];v=+g[e+16>>2];s=+g[e+32>>2];o=+g[e+4>>2];u=+g[e+20>>2];t=+g[e+36>>2];p=+g[e+8>>2];n=+g[e+24>>2];m=+g[e+40>>2];X=+P(+(l*q+j*v+k*s));W=+P(+(l*o+j*u+k*t));O=+P(+(l*p+j*n+k*m));Z=+P(+(q*I+v*J+s*K));U=+P(+(o*I+u*J+t*K));N=+P(+(p*I+n*J+m*K));M=+P(+(q*E+v*C+s*A));L=+P(+(o*E+u*C+t*A));V=+P(+(p*E+n*C+m*A));$=+P(+(R*l+S*j+T*k))-(r*.5*O+((H+G)*2.0*.5+X*(z+y)*2.0*.5+W*(x+w)*2.0*.5));if($>0.0){i=e;return}if($>-3.4028234663852886e+38){ga=1;a=R*l+S*j+T*k<0.0|0;fa=e+48|0}else{ga=0;a=0;fa=0;$=-3.4028234663852886e+38}_=+P(+(R*I+S*J+T*K))-((D+F)*2.0*.5+Z*(z+y)*2.0*.5+U*(x+w)*2.0*.5+N*r*.5);if(_>0.0){i=e;return}if(_>$){ga=2;a=R*I+S*J+T*K<0.0|0;fa=f}else{_=$}$=+P(+(R*E+S*C+T*A))-(B*.5+M*(z+y)*2.0*.5+L*(x+w)*2.0*.5+V*r*.5);if($>0.0){i=e;return}if($>_){ga=3;a=R*E+S*C+T*A<0.0|0;fa=e+56|0;_=$}$=+P(+(R*q+S*v+T*s))-((z+y)*2.0*.5+(X*(H+G)*2.0*.5+Z*(D+F)*2.0*.5+M*B*.5));if($>0.0){i=e;return}if($>_){ga=4;a=R*q+S*v+T*s<0.0|0;fa=e}else{$=_}_=+P(+(R*o+S*u+T*t))-((x+w)*2.0*.5+(W*(H+G)*2.0*.5+U*(D+F)*2.0*.5+L*B*.5));if(_>0.0){i=e;return}if(_>$){ga=5;a=R*o+S*u+T*t<0.0|0;fa=e+4|0}else{_=$}qa=+P(+(R*p+S*n+T*m))-(r*.5+(O*(H+G)*2.0*.5+N*(D+F)*2.0*.5+V*B*.5));if(qa>0.0){i=e;return}if(qa>_){ga=6;a=R*p+S*n+T*m<0.0|0;fa=e+8|0}else{qa=_}ba=(R*E+S*C+T*A)*(q*I+v*J+s*K)-(R*I+S*J+T*K)*(q*E+v*C+s*A);_=+P(+ba)-((M+9999999747378752.0e-21)*(D+F)*2.0*.5+(Z+9999999747378752.0e-21)*B*.5+(O+9999999747378752.0e-21)*(x+w)*2.0*.5+(W+9999999747378752.0e-21)*r*.5);if(_>1.1920928955078125e-7){i=e;return}da=(q*E+v*C+s*A)*(q*E+v*C+s*A)+0.0;aa=(q*I+v*J+s*K)*(q*I+v*J+s*K);$=+Q(+(aa+da));if($>1.1920928955078125e-7?_/$*1.0499999523162842>qa:0){ga=7;oa=0.0/$;na=-(q*E+v*C+s*A)/$;ma=(q*I+v*J+s*K)/$;a=ba<0.0|0;fa=0;qa=_/$}else{oa=0.0;na=0.0;ma=0.0}ca=(R*E+S*C+T*A)*(o*I+u*J+t*K)-(R*I+S*J+T*K)*(o*E+u*C+t*A);ba=+P(+ca)-((L+9999999747378752.0e-21)*(D+F)*2.0*.5+(U+9999999747378752.0e-21)*B*.5+(O+9999999747378752.0e-21)*(z+y)*2.0*.5+(X+9999999747378752.0e-21)*r*.5);if(ba>1.1920928955078125e-7){i=e;return}ea=(o*E+u*C+t*A)*(o*E+u*C+t*A)+0.0;$=(o*I+u*J+t*K)*(o*I+u*J+t*K);_=+Q(+($+ea));if(_>1.1920928955078125e-7?ba/_*1.0499999523162842>qa:0){ga=8;oa=0.0/_;na=-(o*E+u*C+t*A)/_;ma=(o*I+u*J+t*K)/_;a=ca<0.0|0;fa=0;qa=ba/_}va=(R*E+S*C+T*A)*(p*I+n*J+m*K)-(R*I+S*J+T*K)*(p*E+n*C+m*A);pa=+P(+va)-((V+9999999747378752.0e-21)*(D+F)*2.0*.5+(N+9999999747378752.0e-21)*B*.5+(W+9999999747378752.0e-21)*(z+y)*2.0*.5+(X+9999999747378752.0e-21)*(x+w)*2.0*.5);if(pa>1.1920928955078125e-7){i=e;return}ba=(p*E+n*C+m*A)*(p*E+n*C+m*A)+0.0;_=(p*I+n*J+m*K)*(p*I+n*J+m*K);ca=+Q(+(_+ba));if(ca>1.1920928955078125e-7?pa/ca*1.0499999523162842>qa:0){ga=9;oa=0.0/ca;na=-(p*E+n*C+m*A)/ca;ma=(p*I+n*J+m*K)/ca;a=va<0.0|0;fa=0;qa=pa/ca}va=(R*l+S*j+T*k)*(q*E+v*C+s*A)-(R*E+S*C+T*A)*(l*q+j*v+k*s);pa=+P(+va)-((M+9999999747378752.0e-21)*(H+G)*2.0*.5+(X+9999999747378752.0e-21)*B*.5+(N+9999999747378752.0e-21)*(x+w)*2.0*.5+(U+9999999747378752.0e-21)*r*.5);if(pa>1.1920928955078125e-7){i=e;return}ca=(l*q+j*v+k*s)*(l*q+j*v+k*s);da=+Q(+(ca+da));if(da>1.1920928955078125e-7?pa/da*1.0499999523162842>qa:0){ga=10;oa=(q*E+v*C+s*A)/da;na=0.0/da;ma=-(l*q+j*v+k*s)/da;a=va<0.0|0;fa=0;qa=pa/da}va=(R*l+S*j+T*k)*(o*E+u*C+t*A)-(R*E+S*C+T*A)*(l*o+j*u+k*t);pa=+P(+va)-((L+9999999747378752.0e-21)*(H+G)*2.0*.5+(W+9999999747378752.0e-21)*B*.5+(N+9999999747378752.0e-21)*(z+y)*2.0*.5+(Z+9999999747378752.0e-21)*r*.5);if(pa>1.1920928955078125e-7){i=e;return}da=(l*o+j*u+k*t)*(l*o+j*u+k*t);ea=+Q(+(da+ea));if(ea>1.1920928955078125e-7?pa/ea*1.0499999523162842>qa:0){ga=11;oa=(o*E+u*C+t*A)/ea;na=0.0/ea;ma=-(l*o+j*u+k*t)/ea;a=va<0.0|0;fa=0;qa=pa/ea}va=(R*l+S*j+T*k)*(p*E+n*C+m*A)-(R*E+S*C+T*A)*(l*p+j*n+k*m);pa=+P(+va)-((V+9999999747378752.0e-21)*(H+G)*2.0*.5+(O+9999999747378752.0e-21)*B*.5+(U+9999999747378752.0e-21)*(z+y)*2.0*.5+(Z+9999999747378752.0e-21)*(x+w)*2.0*.5);if(pa>1.1920928955078125e-7){i=e;return}ea=(l*p+j*n+k*m)*(l*p+j*n+k*m);ba=+Q(+(ea+ba));if(ba>1.1920928955078125e-7?pa/ba*1.0499999523162842>qa:0){ga=12;oa=(p*E+n*C+m*A)/ba;na=0.0/ba;ma=-(l*p+j*n+k*m)/ba;a=va<0.0|0;fa=0;qa=pa/ba}ba=(R*I+S*J+T*K)*(l*q+j*v+k*s)-(R*l+S*j+T*k)*(q*I+v*J+s*K);X=+P(+ba)-((Z+9999999747378752.0e-21)*(H+G)*2.0*.5+(X+9999999747378752.0e-21)*(D+F)*2.0*.5+(V+9999999747378752.0e-21)*(x+w)*2.0*.5+(L+9999999747378752.0e-21)*r*.5);if(X>1.1920928955078125e-7){i=e;return}Z=+Q(+(ca+aa+0.0));if(Z>1.1920928955078125e-7?X/Z*1.0499999523162842>qa:0){ga=13;oa=-(q*I+v*J+s*K)/Z;na=(l*q+j*v+k*s)/Z;ma=0.0/Z;a=ba<0.0|0;fa=0;qa=X/Z}X=(R*I+S*J+T*K)*(l*o+j*u+k*t)-(R*l+S*j+T*k)*(o*I+u*J+t*K);U=+P(+X)-((U+9999999747378752.0e-21)*(H+G)*2.0*.5+(W+9999999747378752.0e-21)*(D+F)*2.0*.5+(V+9999999747378752.0e-21)*(z+y)*2.0*.5+(M+9999999747378752.0e-21)*r*.5);if(U>1.1920928955078125e-7){i=e;return}V=+Q(+(da+$+0.0));if(V>1.1920928955078125e-7?U/V*1.0499999523162842>qa:0){ga=14;oa=-(o*I+u*J+t*K)/V;na=(l*o+j*u+k*t)/V;ma=0.0/V;a=X<0.0|0;fa=0;qa=U/V}R=(R*I+S*J+T*K)*(l*p+j*n+k*m)-(R*l+S*j+T*k)*(p*I+n*J+m*K);L=+P(+R)-((N+9999999747378752.0e-21)*(H+G)*2.0*.5+(O+9999999747378752.0e-21)*(D+F)*2.0*.5+(L+9999999747378752.0e-21)*(z+y)*2.0*.5+(M+9999999747378752.0e-21)*(x+w)*2.0*.5);if(L>1.1920928955078125e-7){i=e;return}M=+Q(+(ea+_+0.0));if(M>1.1920928955078125e-7?L/M*1.0499999523162842>qa:0){ga=15;oa=-(p*I+n*J+m*K)/M;na=(l*p+j*n+k*m)/M;ma=0.0/M;a=R<0.0|0;qa=L/M;h=58}else{if((ga|0)==0){i=e;return}if((fa|0)==0){h=58}else{k=+g[fa>>2];j=+g[fa+16>>2];l=+g[fa+32>>2]}}if((h|0)==58){k=oa*+g[e+48>>2]+na*+g[f>>2]+ma*E;j=oa*+g[e+64>>2]+na*+g[e+68>>2]+ma*C;l=oa*+g[e+80>>2]+na*+g[e+84>>2]+ma*A}if((a|0)!=0){k=-k;j=-j;l=-l}if((ga|0)>6){K=+g[e+48>>2];J=+g[e+64>>2];I=+g[e+80>>2];G=(k*K+j*J+l*I>0.0?1.0:-1.0)*(H+G)*2.0*.5;M=+g[f>>2];L=+g[e+68>>2];H=+g[e+84>>2];D=(k*M+j*L+l*H>0.0?1.0:-1.0)*(D+F)*2.0*.5;va=(k*E+j*C+l*A>0.0?1.0:-1.0)*B*.5;B=+g[b+48>>2]+G*K+D*M+va*E;C=+g[b+52>>2]+G*J+D*L+va*C;A=+g[b+56>>2]+G*I+D*H+va*A;c[e+520>>2]=c[b+112>>2];c[e+524>>2]=c[b+116>>2];c[e+528>>2]=c[b+120>>2];y=(k*q+j*v+l*s>0.0?-1.0:1.0)*(z+y)*2.0*.5;w=(k*o+j*u+l*t>0.0?-1.0:1.0)*(x+w)*2.0*.5;u=+g[e+524>>2]+y*v+w*u;s=+g[e+528>>2]+y*s+w*t;r=(k*p+j*n+l*m>0.0?-1.0:1.0)*r*.5;o=+g[e+520>>2]+y*q+w*o+r*p;g[e+520>>2]=o;g[e+524>>2]=u+r*n;g[e+528>>2]=s+r*m;Da=ga+ -7|0;y=+g[e+48+(((Da|0)/3|0)<<2)>>2];x=+g[e+48+(((Da|0)/3|0)+4<<2)>>2];w=+g[e+48+(((Da|0)/3|0)+8<<2)>>2];q=+g[e+(((Da|0)%3|0)<<2)>>2];t=+g[e+(((Da|0)%3|0)+4<<2)>>2];p=+g[e+(((Da|0)%3|0)+8<<2)>>2];v=1.0-(y*q+x*t+w*p)*(y*q+x*t+w*p);if(!(v<=9999999747378752.0e-20)){v=(((o-B)*y+(u+r*n-C)*x+(s+r*m-A)*w)*(y*q+x*t+w*p)-((o-B)*q+(u+r*n-C)*t+(s+r*m-A)*p))*(1.0/v)}else{v=0.0}g[e+520>>2]=o+v*q;g[e+524>>2]=u+r*n+v*t;g[e+528>>2]=s+r*m+v*p;Da=c[(c[d>>2]|0)+16>>2]|0;g[e+504>>2]=-k;g[e+508>>2]=-j;g[e+512>>2]=-l;g[e+516>>2]=0.0;hc[Da&15](d,e+504|0,e+520|0,qa);i=e;return}a=(ga|0)<4;if(a){m=k;n=j;o=l;ha=e+48|0;ta=e;fa=e+548|0;ra=e+536|0;f=b+48|0;b=b+112|0}else{m=-k;n=-j;o=-l;ha=e;ta=e+48|0;fa=e+536|0;ra=e+548|0;f=b+112|0;b=b+48|0}r=m*+g[ta>>2]+n*+g[ta+16>>2]+o*+g[ta+32>>2];g[e+488>>2]=r;q=m*+g[ta+4>>2]+n*+g[ta+20>>2]+o*+g[ta+36>>2];g[e+492>>2]=q;p=m*+g[ta+8>>2]+n*+g[ta+24>>2]+o*+g[ta+40>>2];g[e+496>>2]=p;r=+P(+r);q=+P(+q);p=+P(+p);if(q>r){sa=0;ja=q>p;ia=q>p?1:2}else{sa=r>p|0;ja=r>p;ia=r>p?0:2}ua=ja?2:1;r=+g[ra+(ia<<2)>>2];p=+g[b>>2]- +g[f>>2];q=r*+g[ta+(ia<<2)>>2];if(+g[e+488+(ia<<2)>>2]<0.0){p=p+q;q=+g[b+4>>2]- +g[f+4>>2]+r*+g[ta+((ia|4)<<2)>>2];r=+g[b+8>>2]- +g[f+8>>2]+r*+g[ta+((ia|8)<<2)>>2]}else{p=p-q;q=+g[b+4>>2]- +g[f+4>>2]-r*+g[ta+((ia|4)<<2)>>2];r=+g[b+8>>2]- +g[f+8>>2]-r*+g[ta+((ia|8)<<2)>>2]}la=(a?-1:-4)+ga|0;if((la|0)==1){xa=0;wa=2}else if((la|0)==0){xa=1;wa=2}else{xa=0;wa=1}w=+g[ha+(xa<<2)>>2];v=+g[ha+((xa|4)<<2)>>2];u=+g[ha+((xa|8)<<2)>>2];x=p*w+q*v+r*u;s=+g[ha+(wa<<2)>>2];t=+g[ha+((wa|4)<<2)>>2];A=+g[ha+((wa|8)<<2)>>2];z=p*s+q*t+r*A;ka=ta+(sa<<2)|0;B=+g[ka>>2];ia=ta+((sa|4)<<2)|0;C=+g[ia>>2];b=ta+((sa|8)<<2)|0;D=+g[b>>2];ja=ta+(ua<<2)|0;E=+g[ja>>2];ha=ta+((ua|4)<<2)|0;y=+g[ha>>2];ga=ta+((ua|8)<<2)|0;F=+g[ga>>2];qa=+g[ra+(sa<<2)>>2];va=+g[ra+(ua<<2)>>2];pa=(w*E+v*y+u*F)*va;va=(s*E+t*y+A*F)*va;g[e+456>>2]=x-(w*B+v*C+u*D)*qa-pa;g[e+460>>2]=z-(s*B+t*C+A*D)*qa-va;g[e+464>>2]=x-(w*B+v*C+u*D)*qa+pa;g[e+468>>2]=z-(s*B+t*C+A*D)*qa+va;g[e+472>>2]=x+(w*B+v*C+u*D)*qa+pa;g[e+476>>2]=z+(s*B+t*C+A*D)*qa+va;g[e+480>>2]=x+(w*B+v*C+u*D)*qa-pa;g[e+484>>2]=z+(s*B+t*C+A*D)*qa-va;g[e+448>>2]=+g[fa+(xa<<2)>>2];g[e+452>>2]=+g[fa+(wa<<2)>>2];ra=0;ya=4;xa=e+456|0;sa=e+384|0;a:while(1){ua=e+448+(ra<<2)|0;ta=1-ra|0;wa=-1;while(1){if((ya|0)>0){G=+(wa|0);Ba=0;za=xa;Aa=sa;while(1){Ca=za+(ra<<2)|0;H=+g[Ca>>2];I=+g[ua>>2];if(G*H<I){g[Aa>>2]=+g[za>>2];g[Aa+4>>2]=+g[za+4>>2];Ba=Ba+1|0;if((Ba&8|0)!=0){ya=Ba;break a}H=+g[Ca>>2];I=+g[ua>>2];Aa=Aa+8|0}Da=za;za=za+8|0;Ca=(ya|0)>1?za:xa;J=+g[Ca+(ra<<2)>>2];if(G*H<I^G*J<I){va=+g[Da+(ta<<2)>>2];g[Aa+(ta<<2)>>2]=va+(G*I-H)*((+g[Ca+(ta<<2)>>2]-va)/(J-H));g[Aa+(ra<<2)>>2]=G*+g[ua>>2];Ba=Ba+1|0;if((Ba&8|0)==0){Aa=Aa+8|0}else{ya=Ba;break a}}ya=ya+ -1|0;if((ya|0)<=0){ya=Ba;break}}}else{ya=0}za=(sa|0)==(e+384|0)?e+592|0:e+384|0;if((wa|0)<0){xa=sa;sa=za;wa=wa+2|0}else{break}}ra=ra+1|0;if((ra|0)<2){xa=sa;sa=za}else{break}}if((sa|0)!=(e+384|0)){mw(e+384|0,sa|0,ya<<3|0)|0}if((ya|0)<1){i=e;return}G=1.0/((w*B+v*C+u*D)*(s*E+t*y+A*F)-(s*B+t*C+A*D)*(w*E+v*y+u*F));H=+g[fa+(la<<2)>>2];I=+g[ka>>2];J=+g[ja>>2];K=+g[ia>>2];L=+g[ha>>2];M=+g[b>>2];N=+g[ga>>2];b=0;fa=0;do{Da=fa<<1;O=+g[e+384+(Da<<2)>>2];R=+g[e+384+((Da|1)<<2)>>2];oa=(s*E+t*y+A*F)*G*(O-x)-(w*E+v*y+u*F)*G*(R-z);va=(w*B+v*C+u*D)*G*(R-z)-(s*B+t*C+A*D)*G*(O-x);Da=b*3|0;pa=p+oa*I+va*J;g[e+288+(Da<<2)>>2]=pa;qa=q+oa*K+va*L;g[e+288+(Da+1<<2)>>2]=qa;va=r+oa*M+va*N;g[e+288+(Da+2<<2)>>2]=va;va=H-(m*pa+n*qa+o*va);g[e+256+(b<<2)>>2]=va;if(va>=0.0){Da=b<<1;g[e+384+(Da<<2)>>2]=O;g[e+384+((Da|1)<<2)>>2]=R;b=b+1|0}fa=fa+1|0}while((fa|0)!=(ya|0));if((b|0)<1){i=e;return}fa=(b|0)<4?b:4;fa=(fa|0)<1?1:fa;if((b|0)<=(fa|0)){h=(b|0)>0;if(a){if(!h){i=e;return}h=f+4|0;a=f+8|0;k=-k;j=-j;l=-l;fa=0;do{Da=fa*3|0;g[e+240>>2]=+g[e+288+(Da<<2)>>2]+ +g[f>>2];g[e+244>>2]=+g[e+288+(Da+1<<2)>>2]+ +g[h>>2];g[e+248>>2]=+g[e+288+(Da+2<<2)>>2]+ +g[a>>2];Da=c[(c[d>>2]|0)+16>>2]|0;g[e+224>>2]=k;g[e+228>>2]=j;g[e+232>>2]=l;g[e+236>>2]=0.0;hc[Da&15](d,e+224|0,e+240|0,-+g[e+256+(fa<<2)>>2]);fa=fa+1|0}while((fa|0)!=(b|0));i=e;return}else{if(!h){i=e;return}h=f+4|0;a=f+8|0;m=-k;n=-j;o=-l;fa=0;do{Da=fa*3|0;va=+g[e+256+(fa<<2)>>2];g[e+208>>2]=+g[e+288+(Da<<2)>>2]+ +g[f>>2]-k*va;g[e+212>>2]=+g[e+288+(Da+1<<2)>>2]+ +g[h>>2]-j*va;g[e+216>>2]=+g[e+288+(Da+2<<2)>>2]+ +g[a>>2]-l*va;Da=c[(c[d>>2]|0)+16>>2]|0;g[e+192>>2]=m;g[e+196>>2]=n;g[e+200>>2]=o;g[e+204>>2]=0.0;hc[Da&15](d,e+192|0,e+208|0,-va);fa=fa+1|0}while((fa|0)!=(b|0));i=e;return}}if((b|0)>1){ia=1;ga=0;n=+g[e+256>>2];while(1){m=+g[e+256+(ia<<2)>>2];ha=m>n;ga=ha?ia:ga;ia=ia+1|0;if((ia|0)==(b|0)){break}else{n=ha?m:n}}}else{ga=0}if((b|0)==1){r=+g[e+384>>2];m=+g[e+388>>2];h=115}else if((b|0)!=2){ha=b+ -1|0;if((ha|0)>0){s=0.0;r=0.0;q=0.0;ia=0;do{Da=ia<<1;oa=+g[e+384+(Da<<2)>>2];pa=+g[e+384+(Da+3<<2)>>2];qa=+g[e+384+(Da+2<<2)>>2];va=+g[e+384+((Da|1)<<2)>>2];s=s+(oa*pa-qa*va);r=r+(oa+qa)*(oa*pa-qa*va);q=q+(pa+va)*(oa*pa-qa*va);ia=ia+1|0}while((ia|0)!=(ha|0))}else{s=0.0;r=0.0;q=0.0}Da=b<<1;p=+g[e+384+(Da+ -2<<2)>>2];o=+g[e+388>>2];n=+g[e+384>>2];m=+g[e+384+(Da+ -1<<2)>>2];s=s+(p*o-n*m);if(+P(+s)>1.1920928955078125e-7){s=1.0/(s*3.0)}else{s=999999984306749400.0}if((b|0)>0){r=s*(r+(p*o-n*m)*(p+n));m=s*(q+(p*o-n*m)*(m+o));h=115}else{ha=0}}else{r=(+g[e+384>>2]+ +g[e+392>>2])*.5;m=(+g[e+388>>2]+ +g[e+396>>2])*.5;h=115}if((h|0)==115){h=0;while(1){Da=h<<1;g[e+592+(h<<2)>>2]=+Y(+(+g[e+384+((Da|1)<<2)>>2]-m),+(+g[e+384+(Da<<2)>>2]-r));h=h+1|0;if((h|0)==(b|0)){h=0;break}}while(1){c[e+560+(h<<2)>>2]=1;h=h+1|0;if((h|0)==(b|0)){ha=1;break}}}h=e+560+(ga<<2)|0;c[h>>2]=0;c[e+160>>2]=ga;b:do{if((fa|0)>1){m=+g[e+592+(ga<<2)>>2];if(ha){ha=e+164|0;h=1}else{ha=e+164|0;b=1;while(1){c[ha>>2]=ga;c[h>>2]=0;b=b+1|0;if((b|0)==(fa|0)){break b}else{ha=ha+4|0}}}while(1){n=+(h|0)*(6.2831854820251465/+(fa|0))+m;if(n>3.1415927410125732){n=n+-6.2831854820251465}c[ha>>2]=ga;ja=ga;ia=0;o=1.0e9;do{if((c[e+560+(ia<<2)>>2]|0)!=0){p=+P(+(+g[e+592+(ia<<2)>>2]-n));if(p>3.1415927410125732){p=6.2831854820251465-p}if(p<o){c[ha>>2]=ia;ja=ia;o=p}}ia=ia+1|0}while((ia|0)!=(b|0));c[e+560+(ja<<2)>>2]=0;h=h+1|0;if((h|0)==(fa|0)){break}else{ha=ha+4|0}}}}while(0);if((fa|0)<=0){i=e;return}h=f+4|0;b=f+8|0;o=-l;n=-j;m=-k;if(a){a=0;do{Da=c[e+160+(a<<2)>>2]|0;g[e+144>>2]=+g[e+288+(Da*3<<2)>>2]+ +g[f>>2];g[e+148>>2]=+g[e+288+((Da*3|0)+1<<2)>>2]+ +g[h>>2];g[e+152>>2]=+g[e+288+((Da*3|0)+2<<2)>>2]+ +g[b>>2];Ca=c[(c[d>>2]|0)+16>>2]|0;g[e+128>>2]=m;g[e+132>>2]=n;g[e+136>>2]=o;g[e+140>>2]=0.0;hc[Ca&15](d,e+128|0,e+144|0,-+g[e+256+(Da<<2)>>2]);a=a+1|0}while((a|0)<(fa|0));i=e;return}else{a=0;do{Ca=c[e+160+(a<<2)>>2]|0;oa=+g[e+288+(Ca*3<<2)>>2]+ +g[f>>2];g[e+144>>2]=oa;pa=+g[e+288+((Ca*3|0)+1<<2)>>2]+ +g[h>>2];g[e+148>>2]=pa;qa=+g[e+288+((Ca*3|0)+2<<2)>>2]+ +g[b>>2];g[e+152>>2]=qa;Da=c[(c[d>>2]|0)+16>>2]|0;g[e+112>>2]=m;g[e+116>>2]=n;g[e+120>>2]=o;g[e+124>>2]=0.0;va=+g[e+256+(Ca<<2)>>2];g[e+96>>2]=oa-k*va;g[e+100>>2]=pa-va*j;g[e+104>>2]=qa-va*l;g[e+108>>2]=0.0;hc[Da&15](d,e+112|0,e+96|0,-va);a=a+1|0}while((a|0)<(fa|0));i=e;return}}function Ut(a){a=a|0;return}function Vt(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Wt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;h=(a[b+28>>0]|0)!=0;g=h?e:d;e=h?d:e;h=c[g+4>>2]|0;d=c[h+16>>2]|0;j=c[b+12>>2]|0;if((j|0)<(d|0)){if((c[b+16>>2]|0)<(d|0)){if((d|0)==0){k=j;l=0}else{c[4336]=(c[4336]|0)+1;k=cw((d<<2|3)+16|0)|0;if((k|0)==0){l=0}else{c[(k+19&-16)+ -4>>2]=k;l=k+19&-16}k=c[b+12>>2]|0}if((k|0)>0){n=0;do{m=l+(n<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[b+20>>2]|0)+(n<<2)>>2]}n=n+1|0}while((n|0)!=(k|0))}k=c[b+20>>2]|0;if((k|0)!=0){if((a[b+24>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0)}c[b+20>>2]=0}a[b+24>>0]=1;c[b+20>>2]=l;c[b+16>>2]=d;k=b+20|0}else{k=b+20|0}do{l=(c[k>>2]|0)+(j<<2)|0;if((l|0)!=0){c[l>>2]=0}j=j+1|0}while((j|0)!=(d|0))}c[b+12>>2]=d;if((d|0)<=0){i=f;return}j=0;do{if((c[h+64>>2]|0)==0){l=c[(c[h+24>>2]|0)+(j*80|0)+64>>2]|0;m=c[g+8>>2]|0;n=c[g+12>>2]|0;c[f>>2]=g;c[f+4>>2]=l;c[f+8>>2]=m;c[f+12>>2]=n;c[f+16>>2]=-1;c[f+20>>2]=j;n=c[b+4>>2]|0;n=Lb[c[(c[n>>2]|0)+8>>2]&31](n,f,e,c[b+32>>2]|0)|0;c[(c[b+20>>2]|0)+(j<<2)>>2]=n}else{c[(c[b+20>>2]|0)+(j<<2)>>2]=0}j=j+1|0}while((j|0)!=(d|0));i=f;return}function Xt(a){a=a|0;var b=0;b=i;Yt(a);if((a|0)==0){i=b;return}dw(a);i=b;return}function Yt(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;c[b>>2]=15368;e=c[b+12>>2]|0;if((e|0)>0){f=0;do{g=c[(c[b+20>>2]|0)+(f<<2)>>2]|0;if((g|0)!=0){Db[c[c[g>>2]>>2]&255](g);g=c[b+4>>2]|0;Fb[c[(c[g>>2]|0)+60>>2]&127](g,c[(c[b+20>>2]|0)+(f<<2)>>2]|0)}f=f+1|0}while((f|0)!=(e|0))}e=c[b+20>>2]|0;if((e|0)==0){a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;g=b+16|0;c[g>>2]=0;i=d;return}if((a[b+24>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+20>>2]=0;a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;g=b+16|0;c[g>>2]=0;i=d;return}function Zt(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0;k=i;i=i+320|0;l=(a[b+28>>0]|0)!=0;j=l?e:d;m=l?d:e;l=c[j+4>>2]|0;if((c[l+68>>2]|0)!=(c[b+40>>2]|0)){p=c[b+12>>2]|0;if((p|0)>0){o=0;do{n=c[(c[b+20>>2]|0)+(o<<2)>>2]|0;if((n|0)!=0){Db[c[c[n>>2]>>2]&255](n);s=c[b+4>>2]|0;Fb[c[(c[s>>2]|0)+60>>2]&127](s,c[(c[b+20>>2]|0)+(o<<2)>>2]|0)}o=o+1|0}while((o|0)!=(p|0))}Wt(b,d,e)}e=c[l+64>>2]|0;n=c[b+4>>2]|0;q=c[b+20>>2]|0;d=c[b+32>>2]|0;c[k+280>>2]=15448;c[k+284>>2]=j;c[k+288>>2]=m;c[k+292>>2]=n;c[k+296>>2]=f;c[k+300>>2]=h;c[k+304>>2]=q;c[k+308>>2]=d;f=k+272|0;a[f>>0]=1;d=k+268|0;c[d>>2]=0;n=k+260|0;c[n>>2]=0;c[k+264>>2]=0;p=c[b+12>>2]|0;if((p|0)>0){o=0;while(1){q=c[q+(o<<2)>>2]|0;if((q|0)!=0){Fb[c[(c[q>>2]|0)+16>>2]&127](q,k+256|0);r=c[n>>2]|0;if((r|0)>0){p=0;do{q=c[(c[d>>2]|0)+(p<<2)>>2]|0;if((c[q+748>>2]|0)!=0){c[h+4>>2]=q;s=c[q+740>>2]|0;r=c[(c[h+8>>2]|0)+8>>2]|0;if((s|0)==(r|0)){Xr(q,s+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0)}else{Xr(q,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,r+4|0)}c[h+4>>2]=0;r=c[n>>2]|0}p=p+1|0}while((p|0)<(r|0))}if((r|0)<0){if((c[k+264>>2]|0)<0){q=c[d>>2]|0;if((r|0)>0){p=0;do{if((p|0)!=0){c[0+(p<<2)>>2]=c[q+(p<<2)>>2]}p=p+1|0}while((p|0)!=(r|0))}if((q|0)!=0){if((a[f>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[q+ -4>>2]|0)}c[d>>2]=0}a[f>>0]=1;c[d>>2]=0;c[k+264>>2]=0}do{p=(c[d>>2]|0)+(r<<2)|0;if((p|0)!=0){c[p>>2]=0}r=r+1|0}while((r|0)!=0)}c[n>>2]=0;p=c[b+12>>2]|0}o=o+1|0;if((o|0)>=(p|0)){break}q=c[b+20>>2]|0}h=c[d>>2]|0;if((h|0)!=0){if((a[f>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[d>>2]=0}}a[f>>0]=1;c[d>>2]=0;c[n>>2]=0;c[k+264>>2]=0;if((e|0)==0){e=c[b+12>>2]|0;if((e|0)>0){h=0;do{_t(k+280|0,c[(c[l+24>>2]|0)+(h*80|0)+64>>2]|0,h);h=h+1|0}while((h|0)<(e|0))}else{i=k;return}}else{s=c[j+12>>2]|0;H=+g[s>>2];G=+g[s+16>>2];F=+g[s+32>>2];E=+g[s+4>>2];D=+g[s+20>>2];C=+g[s+36>>2];y=+g[s+8>>2];w=+g[s+24>>2];u=+g[s+40>>2];B=-+g[s+48>>2];A=-+g[s+52>>2];z=-+g[s+56>>2];s=c[m+12>>2]|0;Q=+g[s>>2];P=+g[s+16>>2];O=+g[s+32>>2];N=+g[s+4>>2];M=+g[s+20>>2];L=+g[s+36>>2];K=+g[s+8>>2];J=+g[s+24>>2];I=+g[s+40>>2];x=+g[s+48>>2];v=+g[s+52>>2];t=+g[s+56>>2];g[k+160>>2]=H*Q+G*P+F*O;g[k+164>>2]=H*N+G*M+F*L;g[k+168>>2]=H*K+G*J+F*I;g[k+172>>2]=0.0;g[k+176>>2]=E*Q+D*P+C*O;g[k+180>>2]=E*N+D*M+C*L;g[k+184>>2]=E*K+D*J+C*I;g[k+188>>2]=0.0;g[k+192>>2]=y*Q+w*P+u*O;g[k+196>>2]=y*N+w*M+u*L;g[k+200>>2]=y*K+w*J+u*I;g[k+204>>2]=0.0;g[k+208>>2]=H*B+G*A+F*z+(H*x+G*v+F*t);g[k+212>>2]=E*B+D*A+C*z+(E*x+D*v+C*t);g[k+216>>2]=y*B+w*A+u*z+(y*x+w*v+u*t);g[k+220>>2]=0.0;s=c[m+4>>2]|0;mc[c[(c[s>>2]|0)+8>>2]&63](s,k+160|0,k+240|0,k+224|0);c[k+128>>2]=c[k+240>>2];c[k+132>>2]=c[k+244>>2];c[k+136>>2]=c[k+248>>2];c[k+140>>2]=c[k+252>>2];c[k+144>>2]=c[k+224>>2];c[k+148>>2]=c[k+228>>2];c[k+152>>2]=c[k+232>>2];c[k+156>>2]=c[k+236>>2];Kp(c[e>>2]|0,k+128|0,k+280|0)}h=c[b+12>>2]|0;if((h|0)<=0){i=k;return}e=0;do{do{if((c[(c[b+20>>2]|0)+(e<<2)>>2]|0)!=0){q=c[l+24>>2]|0;s=c[q+(e*80|0)+64>>2]|0;r=c[j+12>>2]|0;w=+g[r>>2];x=+g[r+4>>2];y=+g[r+8>>2];z=+g[r+16>>2];A=+g[r+20>>2];B=+g[r+24>>2];I=+g[r+32>>2];K=+g[r+36>>2];M=+g[r+40>>2];C=+g[q+(e*80|0)>>2];D=+g[q+(e*80|0)+16>>2];E=+g[q+(e*80|0)+32>>2];F=+g[q+(e*80|0)+4>>2];G=+g[q+(e*80|0)+20>>2];H=+g[q+(e*80|0)+36>>2];J=+g[q+(e*80|0)+8>>2];L=+g[q+(e*80|0)+24>>2];N=+g[q+(e*80|0)+40>>2];u=+g[q+(e*80|0)+48>>2];v=+g[q+(e*80|0)+52>>2];Q=+g[q+(e*80|0)+56>>2];O=+g[r+48>>2]+(w*u+x*v+y*Q);P=+g[r+52>>2]+(z*u+A*v+B*Q);Q=+g[r+56>>2]+(I*u+K*v+M*Q);g[k+64>>2]=w*C+x*D+y*E;g[k+68>>2]=w*F+x*G+y*H;g[k+72>>2]=w*J+x*L+y*N;g[k+76>>2]=0.0;g[k+80>>2]=z*C+A*D+B*E;g[k+84>>2]=z*F+A*G+B*H;g[k+88>>2]=z*J+A*L+B*N;g[k+92>>2]=0.0;g[k+96>>2]=I*C+K*D+M*E;g[k+100>>2]=I*F+K*G+M*H;g[k+104>>2]=I*J+K*L+M*N;g[k+108>>2]=0.0;g[k+112>>2]=O;g[k+116>>2]=P;g[k+120>>2]=Q;g[k+124>>2]=0.0;mc[c[(c[s>>2]|0)+8>>2]&63](s,k+64|0,k+48|0,k+32|0);s=c[m+4>>2]|0;mc[c[(c[s>>2]|0)+8>>2]&63](s,c[m+12>>2]|0,k+16|0,k);if(!(+g[k+48>>2]>+g[k>>2])?!(+g[k+32>>2]<+g[k+16>>2]):0){f=1}else{f=0}if(!(!(+g[k+56>>2]>+g[k+8>>2])?!(+g[k+40>>2]<+g[k+24>>2]):0)){f=0}if(!(+g[k+52>>2]>+g[k+4>>2])?!(+g[k+36>>2]<+g[k+20>>2]|f^1):0){break}s=c[(c[b+20>>2]|0)+(e<<2)>>2]|0;Db[c[c[s>>2]>>2]&255](s);s=c[b+4>>2]|0;Fb[c[(c[s>>2]|0)+60>>2]&127](s,c[(c[b+20>>2]|0)+(e<<2)>>2]|0);c[(c[b+20>>2]|0)+(e<<2)>>2]=0}}while(0);e=e+1|0}while((e|0)<(h|0));i=k;return}function _t(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;e=i;i=i+160|0;f=c[a+4>>2]|0;h=c[f+12>>2]|0;D=+g[h>>2];C=+g[h+4>>2];B=+g[h+8>>2];A=+g[h+16>>2];z=+g[h+20>>2];y=+g[h+24>>2];r=+g[h+32>>2];p=+g[h+36>>2];n=+g[h+40>>2];f=c[(c[f+4>>2]|0)+24>>2]|0;x=+g[f+(d*80|0)>>2];w=+g[f+(d*80|0)+16>>2];v=+g[f+(d*80|0)+32>>2];u=+g[f+(d*80|0)+4>>2];t=+g[f+(d*80|0)+20>>2];s=+g[f+(d*80|0)+36>>2];q=+g[f+(d*80|0)+8>>2];o=+g[f+(d*80|0)+24>>2];m=+g[f+(d*80|0)+40>>2];F=+g[f+(d*80|0)+48>>2];E=+g[f+(d*80|0)+52>>2];j=+g[f+(d*80|0)+56>>2];l=+g[h+48>>2]+(D*F+C*E+B*j);k=+g[h+52>>2]+(A*F+z*E+y*j);j=+g[h+56>>2]+(r*F+p*E+n*j);g[e+88>>2]=D*x+C*w+B*v;g[e+92>>2]=D*u+C*t+B*s;g[e+96>>2]=D*q+C*o+B*m;g[e+100>>2]=0.0;g[e+104>>2]=A*x+z*w+y*v;g[e+108>>2]=A*u+z*t+y*s;g[e+112>>2]=A*q+z*o+y*m;g[e+116>>2]=0.0;g[e+120>>2]=r*x+p*w+n*v;g[e+124>>2]=r*u+p*t+n*s;g[e+128>>2]=r*q+p*o+n*m;g[e+132>>2]=0.0;g[e+136>>2]=l;g[e+140>>2]=k;g[e+144>>2]=j;g[e+148>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&63](b,e+88|0,e+72|0,e+56|0);h=c[a+8>>2]|0;f=c[h+4>>2]|0;mc[c[(c[f>>2]|0)+8>>2]&63](f,c[h+12>>2]|0,e+40|0,e+24|0);if(!(+g[e+72>>2]>+g[e+24>>2])?!(+g[e+56>>2]<+g[e+40>>2]):0){f=1}else{f=0}if(!(!(+g[e+80>>2]>+g[e+32>>2])?!(+g[e+64>>2]<+g[e+48>>2]):0)){f=0}if(+g[e+76>>2]>+g[e+28>>2]){i=e;return}if(+g[e+60>>2]<+g[e+44>>2]|f^1){i=e;return}f=c[a+4>>2]|0;h=c[f+8>>2]|0;c[e>>2]=f;c[e+4>>2]=b;c[e+8>>2]=h;c[e+12>>2]=e+88;c[e+16>>2]=-1;c[e+20>>2]=d;if((c[(c[a+24>>2]|0)+(d<<2)>>2]|0)==0){b=c[a+12>>2]|0;b=Lb[c[(c[b>>2]|0)+8>>2]&31](b,e,c[a+8>>2]|0,c[a+28>>2]|0)|0;c[(c[a+24>>2]|0)+(d<<2)>>2]=b;b=c[a+4>>2]|0}else{b=f}h=c[a+20>>2]|0;f=c[h+8>>2]|0;if((c[f+8>>2]|0)==(c[b+8>>2]|0)){c[h+8>>2]=e;h=c[a+20>>2]|0;ic[c[(c[h>>2]|0)+8>>2]&63](h,-1,d)}else{f=c[h+12>>2]|0;c[h+12>>2]=e;h=c[a+20>>2]|0;ic[c[(c[h>>2]|0)+12>>2]&63](h,-1,d)}d=c[(c[a+24>>2]|0)+(d<<2)>>2]|0;Bb[c[(c[d>>2]|0)+8>>2]&31](d,e,c[a+8>>2]|0,c[a+16>>2]|0,c[a+20>>2]|0);d=c[a+20>>2]|0;if((c[(c[d+8>>2]|0)+8>>2]|0)==(c[(c[a+4>>2]|0)+8>>2]|0)){c[d+8>>2]=f;i=e;return}else{c[d+12>>2]=f;i=e;return}}function $t(a){a=a|0;return}



function xr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=c[b+12>>2]|0;d=c[b+36>>2]|0;if((d|0)>=(f|0)){i=e;return}if((d|0)<=(f|0)){if((c[b+40>>2]|0)<(f|0)){if((f|0)==0){h=d;g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[b+36>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+44>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}h=c[b+44>>2]|0;if((h|0)!=0){if((a[b+48>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+44>>2]=0}a[b+48>>0]=1;c[b+44>>2]=g;c[b+40>>2]=f}else{g=c[b+44>>2]|0}h=d;do{j=g+(h<<2)|0;if((j|0)!=0){c[j>>2]=0}h=h+1|0}while((h|0)!=(f|0))}c[b+36>>2]=f;g=c[b+56>>2]|0;if((g|0)<(f|0)){if((c[b+60>>2]|0)<(f|0)){if((f|0)==0){h=g;j=0}else{c[4336]=(c[4336]|0)+1;h=cw((f<<2|3)+16|0)|0;if((h|0)==0){j=0}else{c[(h+19&-16)+ -4>>2]=h;j=h+19&-16}h=c[b+56>>2]|0}if((h|0)>0){l=0;do{k=j+(l<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+64>>2]|0)+(l<<2)>>2]}l=l+1|0}while((l|0)!=(h|0))}h=c[b+64>>2]|0;if((h|0)!=0){if((a[b+68>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+64>>2]=0}a[b+68>>0]=1;c[b+64>>2]=j;c[b+60>>2]=f}else{j=c[b+64>>2]|0}do{h=j+(g<<2)|0;if((h|0)!=0){c[h>>2]=0}g=g+1|0}while((g|0)!=(f|0))}c[b+56>>2]=f;if((f|0)>0){jw(c[b+44>>2]|0,-1,f<<2|0)|0;jw(c[b+64>>2]|0,-1,f<<2|0)|0}if((d|0)<=0){i=e;return}h=c[b+16>>2]|0;g=c[b+44>>2]|0;f=c[b+64>>2]|0;j=0;do{l=c[(c[h+(j<<4)+4>>2]|0)+12>>2]<<16|c[(c[h+(j<<4)>>2]|0)+12>>2];l=(l+~(l<<15)>>10^l+~(l<<15))*9|0;l=g+((((l>>6^l)+~((l>>6^l)<<11)>>16^(l>>6^l)+~((l>>6^l)<<11))&(c[b+12>>2]|0)+ -1)<<2)|0;c[f+(j<<2)>>2]=c[l>>2];c[l>>2]=j;j=j+1|0}while((j|0)!=(d|0));i=e;return}function yr(a){a=a|0;var b=0;b=i;zr(a);if((a|0)==0){i=b;return}dw(a);i=b;return}function zr(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=12920;e=c[b+64>>2]|0;if((e|0)!=0){if((a[b+68>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+64>>2]=0}a[b+68>>0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;e=c[b+44>>2]|0;if((e|0)!=0){if((a[b+48>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+44>>2]=0}a[b+48>>0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;e=c[b+16>>2]|0;if((e|0)==0){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;e=b+12|0;c[e>>2]=0;i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;e=b+12|0;c[e>>2]=0;i=d;return}function Ar(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=i;e=c[b+8>>2]|0;if((e|0)==0|(d|0)==0){i=a;return}Db[c[c[e>>2]>>2]&255](e);Fb[c[(c[d>>2]|0)+60>>2]&127](d,c[b+8>>2]|0);c[b+8>>2]=0;i=a;return}function Br(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;i=i+16|0;c[e>>2]=13224;c[e+4>>2]=b;c[e+8>>2]=a;c[e+12>>2]=d;ic[c[(c[a>>2]|0)+48>>2]&63](a,e,d);i=e;return}function Cr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;i=i+16|0;c[e>>2]=13048;c[e+4>>2]=b;ic[c[(c[a>>2]|0)+48>>2]&63](a,e,d);i=e;return}function Dr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;f=i;c[3226]=(c[3226]|0)+1;h=(c[b+12>>2]|0)>(c[d+12>>2]|0);g=c[(h?d:b)+12>>2]|0;d=c[(h?b:d)+12>>2]|0;b=((d<<16|g)+~((d<<16|g)<<15)>>10^(d<<16|g)+~((d<<16|g)<<15))*9|0;b=((b>>6^b)+~((b>>6^b)<<11)>>16^(b>>6^b)+~((b>>6^b)<<11))&(c[a+12>>2]|0)+ -1;if((b|0)>=(c[a+36>>2]|0)){h=0;i=f;return h|0}h=c[(c[a+44>>2]|0)+(b<<2)>>2]|0;if((h|0)==-1){h=0;i=f;return h|0}b=c[a+16>>2]|0;while(1){if((c[(c[b+(h<<4)>>2]|0)+12>>2]|0)==(g|0)?(c[(c[b+(h<<4)+4>>2]|0)+12>>2]|0)==(d|0):0){break}h=c[(c[a+64>>2]|0)+(h<<2)>>2]|0;if((h|0)==-1){a=0;e=8;break}}if((e|0)==8){i=f;return a|0}h=b+(h<<4)|0;i=f;return h|0}function Er(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;f=i;d=c[b+4>>2]|0;if((d|0)!=(c[b+8>>2]|0)){j=d;j=j+1|0;c[b+4>>2]=j;j=b+12|0;j=c[j>>2]|0;j=j+(d<<4)|0;i=f;return j|0}e=(d|0)==0?1:d<<1;if((d|0)>=(e|0)){j=d;j=j+1|0;c[b+4>>2]=j;j=b+12|0;j=c[j>>2]|0;j=j+(d<<4)|0;i=f;return j|0}if((e|0)==0){h=d;g=0}else{c[4336]=(c[4336]|0)+1;g=cw((e<<4|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[b+4>>2]|0}if((h|0)>0){j=0;do{k=c[b+12>>2]|0;c[g+(j<<4)>>2]=c[k+(j<<4)>>2];c[g+(j<<4)+4>>2]=c[k+(j<<4)+4>>2];c[g+(j<<4)+8>>2]=c[k+(j<<4)+8>>2];c[g+(j<<4)+12>>2]=c[k+(j<<4)+12>>2];j=j+1|0}while((j|0)!=(h|0))}j=c[b+12>>2]|0;if((j|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[b+4>>2]|0}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=g;c[b+8>>2]=e;k=h;k=k+1|0;c[b+4>>2]=k;k=b+12|0;k=c[k>>2]|0;k=k+(d<<4)|0;i=f;return k|0}function Fr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;c[3222]=(c[3222]|0)+1;h=(c[b+12>>2]|0)>(c[d+12>>2]|0);j=h?d:b;d=h?b:d;b=c[j+12>>2]|0;l=c[d+12>>2]|0;k=((l<<16|b)+~((l<<16|b)<<15)>>10^(l<<16|b)+~((l<<16|b)<<15))*9|0;k=((k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11))&(c[a+12>>2]|0)+ -1;m=c[(c[a+44>>2]|0)+(k<<2)>>2]|0;if((m|0)==-1){o=0;i=g;return o|0}h=c[a+16>>2]|0;while(1){if((c[(c[h+(m<<4)>>2]|0)+12>>2]|0)==(b|0)?(c[(c[h+(m<<4)+4>>2]|0)+12>>2]|0)==(l|0):0){break}m=c[(c[a+64>>2]|0)+(m<<2)>>2]|0;if((m|0)==-1){a=0;f=24;break}}if((f|0)==24){i=g;return a|0}b=h+(m<<4)|0;if((b|0)==0){o=0;i=g;return o|0}ic[c[(c[a>>2]|0)+32>>2]&63](a,b,e);h=c[h+(m<<4)+12>>2]|0;b=b-(c[a+16>>2]|0)>>4;k=(c[a+44>>2]|0)+(k<<2)|0;m=c[k>>2]|0;l=c[a+64>>2]|0;if((m|0)!=(b|0)){while(1){n=l+(m<<2)|0;o=c[n>>2]|0;if((o|0)==(b|0)){break}else{m=o}}l=c[l+(b<<2)>>2]|0;if((m|0)==-1){f=12}else{c[n>>2]=l}}else{l=c[l+(b<<2)>>2]|0;f=12}if((f|0)==12){c[k>>2]=l}k=(c[a+8>>2]|0)+ -1|0;l=c[a+72>>2]|0;if((l|0)!=0){Lb[c[(c[l>>2]|0)+12>>2]&31](l,j,d,e)|0}if((k|0)==(b|0)){c[a+8>>2]=(c[a+8>>2]|0)+ -1;o=h;i=g;return o|0}j=c[a+16>>2]|0;e=c[(c[j+(k<<4)+4>>2]|0)+12>>2]<<16|c[(c[j+(k<<4)>>2]|0)+12>>2];e=(e+~(e<<15)>>10^e+~(e<<15))*9|0;e=((e>>6^e)+~((e>>6^e)<<11)>>16^(e>>6^e)+~((e>>6^e)<<11))&(c[a+12>>2]|0)+ -1;d=(c[a+44>>2]|0)+(e<<2)|0;m=c[d>>2]|0;n=c[a+64>>2]|0;if((m|0)!=(k|0)){while(1){l=n+(m<<2)|0;o=c[l>>2]|0;if((o|0)==(k|0)){break}else{m=o}}n=c[n+(k<<2)>>2]|0;if((m|0)==-1){f=22}else{c[l>>2]=n}}else{n=c[n+(k<<2)>>2]|0;f=22}if((f|0)==22){c[d>>2]=n}c[j+(b<<4)+0>>2]=c[j+(k<<4)+0>>2];c[j+(b<<4)+4>>2]=c[j+(k<<4)+4>>2];c[j+(b<<4)+8>>2]=c[j+(k<<4)+8>>2];c[j+(b<<4)+12>>2]=c[j+(k<<4)+12>>2];o=(c[a+44>>2]|0)+(e<<2)|0;c[(c[a+64>>2]|0)+(b<<2)>>2]=c[o>>2];c[o>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+ -1;o=h;i=g;return o|0}function Gr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((c[a+8>>2]|0)<=0){i=e;return}f=0;a:while(1){while(1){h=c[a+16>>2]|0;g=h+(f<<4)|0;if(!(Zb[c[(c[b>>2]|0)+8>>2]&31](b,g)|0)){break}Lb[c[(c[a>>2]|0)+12>>2]&31](a,c[g>>2]|0,c[h+(f<<4)+4>>2]|0,d)|0;c[3220]=(c[3220]|0)+ -1;if((f|0)>=(c[a+8>>2]|0)){a=7;break a}}f=f+1|0;if((f|0)>=(c[a+8>>2]|0)){a=7;break}}if((a|0)==7){i=e;return}}function Hr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;a[e+16>>0]=1;c[e+12>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;n=c[b+8>>2]|0;if((n|0)>0){l=0;m=0;g=0;f=0;while(1){h=c[b+16>>2]|0;if((f|0)==(l|0)){j=(l|0)==0?1:l<<1;if((l|0)<(j|0)){if((j|0)!=0){c[4336]=(c[4336]|0)+1;k=cw((j<<4|3)+16|0)|0;if((k|0)==0){l=f;m=0}else{c[(k+19&-16)+ -4>>2]=k;l=f;m=k+19&-16}}else{m=0}if((l|0)>0){k=0;do{n=c[e+12>>2]|0;c[m+(k<<4)>>2]=c[n+(k<<4)>>2];c[m+(k<<4)+4>>2]=c[n+(k<<4)+4>>2];c[m+(k<<4)+8>>2]=c[n+(k<<4)+8>>2];c[m+(k<<4)+12>>2]=c[n+(k<<4)+12>>2];k=k+1|0}while((k|0)!=(l|0))}k=c[e+12>>2]|0;if((k|0)==0){f=l}else{c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0);c[e+12>>2]=0}a[e+16>>0]=1;c[e+12>>2]=m;c[e+8>>2]=j;k=f;n=c[b+8>>2]|0}else{k=l;j=l}}else{k=f;j=l}c[m+(k<<4)>>2]=c[h+(g<<4)>>2];c[m+(k<<4)+4>>2]=c[h+(g<<4)+4>>2];c[m+(k<<4)+8>>2]=c[h+(g<<4)+8>>2];c[m+(k<<4)+12>>2]=c[h+(g<<4)+12>>2];f=k+1|0;g=g+1|0;if((g|0)>=(n|0)){break}else{l=j}}c[e+4>>2]=f;if((k|0)>-1){g=0;do{Lb[c[(c[b>>2]|0)+12>>2]&31](b,c[m+(g<<4)>>2]|0,c[m+(g<<4)+4>>2]|0,d)|0;g=g+1|0}while((g|0)<(f|0))}}else{f=0}if((c[b+56>>2]|0)>0){d=c[b+64>>2]|0;g=0;do{c[d+(g<<2)>>2]=-1;g=g+1|0}while((g|0)<(c[b+56>>2]|0))}if((f|0)>1){Lk(e,0,f+ -1|0);f=c[e+4>>2]|0}if((f|0)>0){d=c[e+12>>2]|0;g=0;do{Qb[c[(c[b>>2]|0)+8>>2]&31](b,c[d+(g<<4)>>2]|0,c[d+(g<<4)+4>>2]|0)|0;g=g+1|0}while((g|0)<(f|0))}else{d=c[e+12>>2]|0}if((d|0)==0){i=e;return}if((a[e+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[d+ -4>>2]|0)}c[e+12>>2]=0;i=e;return}function Ir(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;c[3224]=(c[3224]|0)+1;g=c[a+24>>2]|0;if((g|0)==0){if((b[e+6>>1]&b[d+4>>1])<<16>>16==0){m=0;i=f;return m|0}if((b[d+6>>1]&b[e+4>>1])<<16>>16==0){m=0;i=f;return m|0}}else{if(!(Qb[c[(c[g>>2]|0)+8>>2]&31](g,d,e)|0)){m=0;i=f;return m|0}}h=(c[d+12>>2]|0)>(c[e+12>>2]|0);g=h?e:d;e=h?d:e;l=c[g+12>>2]|0;j=c[e+12>>2]|0;d=((j<<16|l)+~((j<<16|l)<<15)>>10^(j<<16|l)+~((j<<16|l)<<15))*9|0;d=(d>>6^d)+~((d>>6^d)<<11)>>16^(d>>6^d)+~((d>>6^d)<<11);h=c[a+12>>2]|0;m=c[(c[a+44>>2]|0)+((d&h+ -1)<<2)>>2]|0;a:do{if(!((m|0)==-1)){k=c[a+16>>2]|0;while(1){if((c[(c[k+(m<<4)>>2]|0)+12>>2]|0)==(l|0)?(c[(c[k+(m<<4)+4>>2]|0)+12>>2]|0)==(j|0):0){break}m=c[(c[a+64>>2]|0)+(m<<2)>>2]|0;if((m|0)==-1){break a}}j=k+(m<<4)|0;if((j|0)!=0){m=j;i=f;return m|0}}}while(0);k=c[a+8>>2]|0;j=Er(a+4|0)|0;l=c[a+72>>2]|0;if((l|0)!=0){Qb[c[(c[l>>2]|0)+8>>2]&31](l,g,e)|0}if((h|0)<(c[a+12>>2]|0)){xr(a);d=(c[a+12>>2]|0)+ -1&d}else{d=d&h+ -1}if((c[g+12>>2]|0)<(c[e+12>>2]|0)){c[j>>2]=g;c[j+4>>2]=e}else{c[j>>2]=e;c[j+4>>2]=g}c[j+8>>2]=0;c[j+12>>2]=0;m=(c[a+44>>2]|0)+(d<<2)|0;c[(c[a+64>>2]|0)+(k<<2)>>2]=c[m>>2];c[m>>2]=k;m=j;i=f;return m|0}function Jr(a){a=a|0;return c[a+16>>2]|0}function Kr(a){a=a|0;return c[a+16>>2]|0}function Lr(a){a=a|0;return a+4|0}function Mr(a){a=a|0;return c[a+8>>2]|0}function Nr(a,b){a=a|0;b=b|0;c[a+24>>2]=b;return}function Or(a){a=a|0;return 0}function Pr(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function Qr(a){a=a|0;return}function Rr(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Sr(a,b){a=a|0;b=b|0;var d=0;d=i;a=c[a+4>>2]|0;if((c[b>>2]|0)==(a|0)){a=1;i=d;return a|0}a=(c[b+4>>2]|0)==(a|0);i=d;return a|0}function Tr(a){a=a|0;return}function Ur(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Vr(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[a+4>>2]|0;if((c[b>>2]|0)!=(e|0)?(c[b+4>>2]|0)!=(e|0):0){i=d;return 0}e=c[a+8>>2]|0;ic[c[(c[e>>2]|0)+32>>2]&63](e,b,c[a+12>>2]|0);i=d;return 0}function Wr(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;d=i;f=c[a+748>>2]|0;if((f|0)!=4){c[a+748>>2]=f+1;y=(f|0)<0;y=y?0:f;h=a+(y*184|0)+4|0;mw(h|0,b|0,184)|0;i=d;return y|0}m=+g[b+80>>2];e=+g[a+84>>2];k=e<m?e:m;l=+g[a+268>>2];n=l<k?l:k;j=+g[a+452>>2];f=+g[a+636>>2]<(j<n?j:n);y=f?3:j<n?2:l<k?1:(e<m^1)<<31>>31;e=+g[b>>2];if((y|0)!=0){t=+g[a+188>>2];o=+g[b+4>>2];s=+g[a+192>>2];p=+g[b+8>>2];k=+g[a+196>>2];w=+g[a+556>>2];q=+g[a+372>>2];x=+g[a+560>>2];u=+g[a+376>>2];m=+g[a+564>>2];v=+g[a+380>>2];r=((e-t)*(x-u)-(o-s)*(w-q))*((e-t)*(x-u)-(o-s)*(w-q))+(((o-s)*(m-v)-(p-k)*(x-u))*((o-s)*(m-v)-(p-k)*(x-u))+((p-k)*(w-q)-(e-t)*(m-v))*((p-k)*(w-q)-(e-t)*(m-v)));if((y|0)==1){j=+g[a+4>>2];l=+g[a+8>>2];n=+g[a+12>>2];z=m;m=0.0;h=7}else{z=m;h=6}}else{t=+g[a+188>>2];s=+g[a+192>>2];k=+g[a+196>>2];o=+g[b+4>>2];p=+g[b+8>>2];q=+g[a+372>>2];w=+g[a+556>>2];u=+g[a+376>>2];x=+g[a+560>>2];v=+g[a+380>>2];z=+g[a+564>>2];r=0.0;h=6}if((h|0)==6){j=+g[a+4>>2];l=+g[a+8>>2];D=o-l;n=+g[a+12>>2];B=p-n;A=w-q;C=x-u;m=z-v;m=((e-j)*C-D*A)*((e-j)*C-D*A)+((D*m-B*C)*(D*m-B*C)+(B*A-(e-j)*m)*(B*A-(e-j)*m));if((y|0)==2){w=0.0;h=8}else{h=7}}if((h|0)==7){D=e-j;E=o-l;B=p-n;C=w-t;A=x-s;w=z-k;w=(D*A-E*C)*(D*A-E*C)+((E*w-B*A)*(E*w-B*A)+(B*C-D*w)*(B*C-D*w));if(f){k=0.0}else{h=8}}if((h|0)==8){E=e-j;A=o-l;C=p-n;D=q-t;B=u-s;k=v-k;k=(E*B-A*D)*(E*B-A*D)+((A*k-C*B)*(A*k-C*B)+(C*D-E*k)*(C*D-E*k))}e=+P(+r);j=+P(+m);l=+P(+w);k=+P(+k);m=e>-999999984306749400.0?e:-999999984306749400.0;n=j>m?j:m;f=k>(l>n?l:n)?3:l>n?2:j>m?1:(e>-999999984306749400.0^1)<<31>>31;y=(f|0)<0;y=y?0:f;h=a+(y*184|0)+4|0;mw(h|0,b|0,184)|0;i=d;return y|0}function Xr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;f=i;h=c[b+748>>2]|0;if((h|0)<=0){i=f;return}do{h=h+ -1|0;q=+g[b+(h*184|0)+4>>2];r=+g[b+(h*184|0)+8>>2];j=+g[b+(h*184|0)+12>>2];p=q*+g[d>>2]+r*+g[d+4>>2]+j*+g[d+8>>2]+ +g[d+48>>2];n=q*+g[d+16>>2]+r*+g[d+20>>2]+j*+g[d+24>>2]+ +g[d+52>>2];j=q*+g[d+32>>2]+r*+g[d+36>>2]+j*+g[d+40>>2]+ +g[d+56>>2];g[b+(h*184|0)+52>>2]=p;g[b+(h*184|0)+56>>2]=n;g[b+(h*184|0)+60>>2]=j;g[b+(h*184|0)+64>>2]=0.0;r=+g[b+(h*184|0)+20>>2];q=+g[b+(h*184|0)+24>>2];k=+g[b+(h*184|0)+28>>2];o=r*+g[e>>2]+q*+g[e+4>>2]+k*+g[e+8>>2]+ +g[e+48>>2];m=r*+g[e+16>>2]+q*+g[e+20>>2]+k*+g[e+24>>2]+ +g[e+52>>2];k=r*+g[e+32>>2]+q*+g[e+36>>2]+k*+g[e+40>>2]+ +g[e+56>>2];g[b+(h*184|0)+36>>2]=o;g[b+(h*184|0)+40>>2]=m;g[b+(h*184|0)+44>>2]=k;g[b+(h*184|0)+48>>2]=0.0;g[b+(h*184|0)+84>>2]=(p-o)*+g[b+(h*184|0)+68>>2]+(n-m)*+g[b+(h*184|0)+72>>2]+(j-k)*+g[b+(h*184|0)+76>>2];l=b+(h*184|0)+152|0;c[l>>2]=(c[l>>2]|0)+1}while((h|0)>0);d=c[b+748>>2]|0;if((d|0)<=0){i=f;return}e=d;do{d=d+ -1|0;h=b+(d*184|0)+4|0;k=+g[b+(d*184|0)+84>>2];j=+g[b+752>>2];if(k<=j){p=+g[b+(d*184|0)+36>>2]-(+g[b+(d*184|0)+52>>2]- +g[b+(d*184|0)+68>>2]*k);q=+g[b+(d*184|0)+40>>2]-(+g[b+(d*184|0)+56>>2]-k*+g[b+(d*184|0)+72>>2]);r=+g[b+(d*184|0)+44>>2]-(+g[b+(d*184|0)+60>>2]-k*+g[b+(d*184|0)+76>>2]);if(p*p+q*q+r*r>j*j){l=e+ -1|0;if((l|0)!=(d|0)){mw(h|0,b+(l*184|0)+4|0,184)|0;c[b+(l*184|0)+116>>2]=0;g[b+(l*184|0)+124>>2]=0.0;a[b+(l*184|0)+120>>0]=0;g[b+(l*184|0)+128>>2]=0.0;g[b+(l*184|0)+132>>2]=0.0;c[b+(l*184|0)+152>>2]=0;e=c[b+748>>2]|0}e=e+ -1|0;c[b+748>>2]=e}}else{l=e+ -1|0;if((l|0)!=(d|0)){mw(h|0,b+(l*184|0)+4|0,184)|0;c[b+(l*184|0)+116>>2]=0;g[b+(l*184|0)+124>>2]=0.0;a[b+(l*184|0)+120>>0]=0;g[b+(l*184|0)+128>>2]=0.0;g[b+(l*184|0)+132>>2]=0.0;c[b+(l*184|0)+152>>2]=0;e=c[b+748>>2]|0}e=e+ -1|0;c[b+748>>2]=e}}while((d|0)>0);i=f;return}function Yr(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=13384;d=c[a+52>>2]|0;if((d|0)!=0){Db[c[c[d>>2]>>2]&255](d);d=c[a+52>>2]|0;if((d|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[d+ -4>>2]|0)}if((a|0)==0){i=b;return}}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Zr(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=13384;d=c[a+52>>2]|0;if((d|0)==0){i=b;return}Db[c[c[d>>2]>>2]&255](d);a=c[a+52>>2]|0;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function _r(d,f){d=d|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0,R=0,S=0,T=0,U=0,V=0,W=0.0,X=0.0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0,fa=0,ga=0,ha=0.0,ia=0.0,ja=0;h=i;i=i+336|0;A=c[d+52>>2]|0;if((A|0)!=0?(Db[c[c[A>>2]>>2]&255](A),j=c[d+52>>2]|0,(j|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[4336]=(c[4336]|0)+1;j=cw(151)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}c[j>>2]=16824;a[j+20>>0]=1;c[j+16>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;a[j+40>>0]=1;c[j+36>>2]=0;c[j+28>>2]=0;c[j+32>>2]=0;a[j+60>>0]=1;c[j+56>>2]=0;c[j+48>>2]=0;c[j+52>>2]=0;c[d+52>>2]=j;E=0;A=0;H=0;j=0;while(1){if((E|0)>=(Hb[c[(c[d>>2]|0)+96>>2]&127](d)|0)){break}if((A|0)==(H|0)){I=(H|0)==0?1:H<<1;if((H|0)<(I|0)){if((I|0)!=0?(c[4336]=(c[4336]|0)+1,D=cw((I<<4|3)+16|0)|0,(D|0)!=0):0){c[(D+19&-16)+ -4>>2]=D;F=D+19&-16}else{F=0}if((H|0)>0){G=0;do{ga=F+(G<<4)|0;fa=j+(G<<4)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];G=G+1|0}while((G|0)!=(H|0))}if((j|0)==0){G=H;H=I;j=F}else{c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);G=H;H=I;j=F}}else{G=H}}else{G=A}ga=j+(A<<4)|0;c[ga+0>>2]=c[h+256>>2];c[ga+4>>2]=c[h+260>>2];c[ga+8>>2]=c[h+264>>2];c[ga+12>>2]=c[h+268>>2];ic[c[(c[d>>2]|0)+108>>2]&63](d,E,ga);E=E+1|0;A=G+1|0}a[h+212>>0]=1;c[h+208>>2]=0;c[h+200>>2]=0;c[h+204>>2]=0;a[h+232>>0]=1;c[h+228>>2]=0;c[h+220>>2]=0;c[h+224>>2]=0;a[h+252>>0]=1;c[h+248>>2]=0;c[h+240>>2]=0;c[h+244>>2]=0;if((f|0)!=0){if((A|0)>0){f=0;O=0;T=0;S=0;while(1){F=f;f=f+1|0;if((f|0)<(A|0)){D=j+(F<<4)|0;E=j+(F<<4)+4|0;G=j+(F<<4)+8|0;F=f;do{M=F;F=F+1|0;if((F|0)<(A|0)){I=j+(M<<4)|0;H=j+(M<<4)+4|0;N=j+(M<<4)+8|0;M=F;do{L=+g[D>>2];X=+g[I>>2]-L;K=+g[E>>2];W=+g[H>>2]-K;Z=+g[G>>2];_=+g[N>>2]-Z;L=+g[j+(M<<4)>>2]-L;K=+g[j+(M<<4)+4>>2]-K;Z=+g[j+(M<<4)+8>>2]-Z;ba=1.0;R=0;while(1){$=(W*Z-_*K)*ba;aa=(_*L-X*Z)*ba;ca=(X*K-W*L)*ba;a:do{if(ca*ca+($*$+aa*aa)>9999999747378752.0e-20){ba=1.0/+Q(+(ca*ca+($*$+aa*aa)));if((O|0)>0){U=0;do{ga=U;U=U+1|0;if($*ba*+g[S+(ga<<4)>>2]+aa*ba*+g[S+(ga<<4)+4>>2]+ca*ba*+g[S+(ga<<4)+8>>2]>.9990000128746033){break a}}while((U|0)<(O|0))}da=$*ba*+g[D>>2]+aa*ba*+g[E>>2]+ca*ba*+g[G>>2];U=0;do{ga=U;U=U+1|0;if($*ba*+g[j+(ga<<4)>>2]+aa*ba*+g[j+(ga<<4)+4>>2]+ca*ba*+g[j+(ga<<4)+8>>2]-da+-.009999999776482582>0.0){break a}}while((U|0)<(A|0));if((O|0)==(T|0)){Y=(T|0)==0?1:T<<1;if((T|0)<(Y|0)){if((Y|0)!=0?(c[4336]=(c[4336]|0)+1,t=cw((Y<<4|3)+16|0)|0,(t|0)!=0):0){c[(t+19&-16)+ -4>>2]=t;U=t+19&-16}else{U=0}if((T|0)>0){V=0;do{ga=U+(V<<4)|0;fa=S+(V<<4)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];V=V+1|0}while((V|0)!=(T|0))}if((S|0)==0){V=T;T=Y;S=U}else{c[4338]=(c[4338]|0)+1;dw(c[S+ -4>>2]|0);V=T;T=Y;S=U}}else{V=T}}else{V=O}g[S+(V<<4)>>2]=$*ba;g[S+(V<<4)+4>>2]=aa*ba;g[S+(V<<4)+8>>2]=ca*ba;g[S+(V<<4)+12>>2]=-da;O=O+1|0}}while(0);R=R+1|0;if((R|0)==2){break}else{ba=-1.0}}M=M+1|0}while((M|0)!=(A|0))}}while((F|0)!=(A|0))}if((f|0)==(A|0)){t=S;break}}if((O|0)>0){f=0;A=0;D=0;E=0;while(1){ga=t+(f<<4)|0;c[h+184>>2]=c[ga+0>>2];c[h+188>>2]=c[ga+4>>2];c[h+192>>2]=c[ga+8>>2];K=+g[t+(f<<4)+12>>2];K=K- +Tb[c[(c[d>>2]|0)+48>>2]&15](d);if((A|0)==(D|0)){H=(D|0)==0?1:D<<1;if((D|0)<(H|0)){if((H|0)!=0?(c[4336]=(c[4336]|0)+1,s=cw((H<<4|3)+16|0)|0,(s|0)!=0):0){c[(s+19&-16)+ -4>>2]=s;G=s+19&-16}else{G=0}if((D|0)>0){F=0;do{ga=G+(F<<4)|0;fa=E+(F<<4)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];F=F+1|0}while((F|0)!=(D|0))}if((E|0)==0){F=D;D=H;E=G}else{c[4338]=(c[4338]|0)+1;dw(c[E+ -4>>2]|0);F=D;D=H;E=G}}else{F=D}}else{F=A}ga=E+(F<<4)|0;c[ga+0>>2]=c[h+184>>2];c[ga+4>>2]=c[h+188>>2];c[ga+8>>2]=c[h+192>>2];g[E+(F<<4)+12>>2]=K;A=A+1|0;f=f+1|0;if((f|0)>=(O|0)){s=E;break}}if((A|0)>0){f=0;H=0;M=0;I=0;do{E=f;f=f+1|0;if((f|0)<(A|0)){D=f;do{G=D;D=D+1|0;if((D|0)<(A|0)){F=D;do{_=+g[s+(G<<4)+4>>2];ca=+g[s+(F<<4)+8>>2];ba=+g[s+(G<<4)+8>>2];Z=+g[s+(F<<4)+4>>2];aa=+g[s+(F<<4)>>2];X=+g[s+(G<<4)>>2];L=+g[s+(E<<4)+8>>2];$=+g[s+(E<<4)+4>>2];W=+g[s+(E<<4)>>2];b:do{if((((Z*X-_*aa)*(Z*X-_*aa)+((_*ca-ba*Z)*(_*ca-ba*Z)+(ba*aa-ca*X)*(ba*aa-ca*X))>9999999747378752.0e-20?(aa*$-Z*W)*(aa*$-Z*W)+((Z*L-ca*$)*(Z*L-ca*$)+(ca*W-aa*L)*(ca*W-aa*L))>9999999747378752.0e-20:0)?(_*W-X*$)*(_*W-X*$)+((ba*$-_*L)*(ba*$-_*L)+(X*L-ba*W)*(X*L-ba*W))>9999999747378752.0e-20:0)?(J=L*(Z*X-_*aa)+($*(ba*aa-ca*X)+(_*ca-ba*Z)*W),+P(+J)>9.999999974752427e-7):0){ha=+g[s+(E<<4)+12>>2];da=+g[s+(G<<4)+12>>2];ia=+g[s+(F<<4)+12>>2];K=-1.0/J*((ba*$-_*L)*ia+((_*ca-ba*Z)*ha+(Z*L-ca*$)*da));L=-1.0/J*((X*L-ba*W)*ia+((ba*aa-ca*X)*ha+(ca*W-aa*L)*da));W=-1.0/J*((_*W-X*$)*ia+((Z*X-_*aa)*ha+(aa*$-Z*W)*da));N=0;do{ga=N;N=N+1|0;if(+g[s+(ga<<4)+12>>2]+(K*+g[s+(ga<<4)>>2]+L*+g[s+(ga<<4)+4>>2]+W*+g[s+(ga<<4)+8>>2])+-.009999999776482582>0.0){break b}}while((N|0)<(A|0));if((H|0)==(M|0)){R=(M|0)==0?1:M<<1;if((M|0)<(R|0)){if((R|0)!=0?(c[4336]=(c[4336]|0)+1,r=cw((R<<4|3)+16|0)|0,(r|0)!=0):0){c[(r+19&-16)+ -4>>2]=r;O=r+19&-16}else{O=0}if((M|0)>0){N=0;do{ga=O+(N<<4)|0;fa=I+(N<<4)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];N=N+1|0}while((N|0)!=(M|0))}if((I|0)==0){N=M;M=R;I=O}else{c[4338]=(c[4338]|0)+1;dw(c[I+ -4>>2]|0);N=M;M=R;I=O}}else{N=M}}else{N=H}g[I+(N<<4)>>2]=K;g[I+(N<<4)+4>>2]=L;g[I+(N<<4)+8>>2]=W;g[I+(N<<4)+12>>2]=0.0;H=H+1|0}}while(0);F=F+1|0}while((F|0)!=(A|0))}}while((D|0)!=(A|0))}}while((f|0)!=(A|0))}else{H=0;I=0}}else{s=0;H=0;I=0}}else{t=0;s=0;H=0;I=0}Iv(h+196|0,I,H);if((I|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[I+ -4>>2]|0)}if((s|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[s+ -4>>2]|0)}if((t|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[t+ -4>>2]|0)}}else{Iv(h+196|0,j,A)}f=c[h+240>>2]|0;if((f|0)>0&((f|0)<0^1)){c[4336]=(c[4336]|0)+1;r=cw((f<<4|3)+16|0)|0;if((r|0)==0){t=0}else{c[(r+19&-16)+ -4>>2]=r;t=r+19&-16}r=0;do{ga=t+(r<<4)|0;c[ga+0>>2]=c[h+168>>2];c[ga+4>>2]=c[h+172>>2];c[ga+8>>2]=c[h+176>>2];c[ga+12>>2]=c[h+180>>2];r=r+1|0}while((r|0)!=(f|0))}else{t=0}a[h+164>>0]=1;r=h+160|0;c[r>>2]=0;s=h+152|0;c[s>>2]=0;c[h+156>>2]=0;A=h+112|0;D=A+36|0;do{c[A>>2]=0;A=A+4|0}while((A|0)<(D|0));a[h+128>>0]=1;c[h+124>>2]=0;c[h+116>>2]=0;c[h+120>>2]=0;if((f|0)<0){xb()}if((f|0)>0){cs(h+148|0,f);A=c[r>>2]|0;E=0;do{D=A+(E*36|0)|0;if((D|0)!=0){es(D,h+112|0);c[D+20>>2]=c[h+132>>2];c[D+24>>2]=c[h+136>>2];c[D+28>>2]=c[h+140>>2];c[D+32>>2]=c[h+144>>2]}E=E+1|0}while((E|0)!=(f|0));D=c[h+124>>2]|0;c[s>>2]=f;if((D|0)!=0){if((a[h+128>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[D+ -4>>2]|0)}c[h+124>>2]=0}}else{c[s>>2]=f;A=0}a[h+128>>0]=1;c[h+124>>2]=0;c[h+116>>2]=0;c[h+120>>2]=0;D=c[h+200>>2]|0;E=c[d+52>>2]|0;F=c[E+8>>2]|0;if((F|0)<(D|0)){if((c[E+12>>2]|0)<(D|0)){if((D|0)==0){G=F;H=0}else{c[4336]=(c[4336]|0)+1;G=cw((D<<4|3)+16|0)|0;if((G|0)==0){H=0}else{c[(G+19&-16)+ -4>>2]=G;H=G+19&-16}G=c[E+8>>2]|0}if((G|0)>0){I=0;do{ga=H+(I<<4)|0;fa=(c[E+16>>2]|0)+(I<<4)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];I=I+1|0}while((I|0)!=(G|0))}G=c[E+16>>2]|0;if((G|0)!=0){if((a[E+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[G+ -4>>2]|0)}c[E+16>>2]=0}a[E+20>>0]=1;c[E+16>>2]=H;c[E+12>>2]=D;G=E+16|0}else{G=E+16|0}do{ga=(c[G>>2]|0)+(F<<4)|0;c[ga+0>>2]=c[h+96>>2];c[ga+4>>2]=c[h+100>>2];c[ga+8>>2]=c[h+104>>2];c[ga+12>>2]=c[h+108>>2];F=F+1|0}while((F|0)!=(D|0))}c[E+8>>2]=D;if((D|0)>0){E=c[h+208>>2]|0;F=0;do{ga=(c[(c[d+52>>2]|0)+16>>2]|0)+(F<<4)|0;fa=E+(F<<4)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];F=F+1|0}while((F|0)!=(D|0))}if((f|0)>0){D=0;do{F=(c[h+228>>2]|0)+((c[(c[h+248>>2]|0)+(D<<2)>>2]|0)*12|0)|0;E=A+(D*36|0)+4|0;G=A+(D*36|0)+8|0;H=A+(D*36|0)+12|0;I=A+(D*36|0)+16|0;M=F;N=0;do{A=M+4|0;O=c[M+((c[A>>2]|0)*12|0)+8>>2]|0;R=c[E>>2]|0;if((R|0)==(c[G>>2]|0)?(C=(R|0)==0?1:R<<1,(R|0)<(C|0)):0){if((C|0)==0){S=0}else{c[4336]=(c[4336]|0)+1;R=cw((C<<2|3)+16|0)|0;if((R|0)==0){S=0}else{c[(R+19&-16)+ -4>>2]=R;S=R+19&-16}R=c[E>>2]|0}if((R|0)>0){U=0;do{T=S+(U<<2)|0;if((T|0)!=0){c[T>>2]=c[(c[H>>2]|0)+(U<<2)>>2]}U=U+1|0}while((U|0)!=(R|0))}R=c[H>>2]|0;if((R|0)!=0){if((a[I>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[R+ -4>>2]|0)}c[H>>2]=0}a[I>>0]=1;c[H>>2]=S;c[G>>2]=C;R=c[E>>2]|0}S=(c[H>>2]|0)+(R<<2)|0;if((S|0)!=0){c[S>>2]=O;R=c[E>>2]|0}c[E>>2]=R+1;fa=c[M+8>>2]|0;ga=c[h+208>>2]|0;J=+g[ga+(fa<<4)>>2]- +g[ga+(O<<4)>>2];K=+g[ga+(fa<<4)+4>>2]- +g[ga+(O<<4)+4>>2];L=+g[ga+(fa<<4)+8>>2]- +g[ga+(O<<4)+8>>2];W=1.0/+Q(+(J*J+K*K+L*L));if((N|0)<2){g[h+288+(N<<4)>>2]=J*W;g[h+288+(N<<4)+4>>2]=K*W;g[h+288+(N<<4)+8>>2]=L*W;g[h+288+(N<<4)+12>>2]=0.0;N=N+1|0}ga=c[A>>2]|0;M=M+(((c[M+(ga*12|0)>>2]|0)+ga|0)*12|0)|0}while((M|0)!=(F|0));G=t+(D<<4)|0;if((N|0)==2){ba=+g[h+292>>2];ca=+g[h+312>>2];da=+g[h+296>>2];ha=+g[h+308>>2];aa=+g[h+304>>2];$=+g[h+288>>2];fa=t+(D<<4)+4|0;ga=t+(D<<4)+8|0;g[t+(D<<4)+12>>2]=0.0;ia=1.0/+Q(+((ba*ca-da*ha)*(ba*ca-da*ha)+(da*aa-ca*$)*(da*aa-ca*$)+(ha*$-ba*aa)*(ha*$-ba*aa)));g[G>>2]=(ba*ca-da*ha)*ia;g[fa>>2]=(da*aa-ca*$)*ia;g[ga>>2]=(ha*$-ba*aa)*ia;A=c[r>>2]|0;g[A+(D*36|0)+20>>2]=(ba*ca-da*ha)*ia;g[A+(D*36|0)+24>>2]=+g[fa>>2];g[A+(D*36|0)+28>>2]=+g[ga>>2];g[A+(D*36|0)+32>>2]=1.0000000150474662e+30}else{c[G+0>>2]=0;c[G+4>>2]=0;c[G+8>>2]=0;c[G+12>>2]=0;A=c[r>>2]|0}F=c[A+(D*36|0)+4>>2]|0;if((F|0)>0){E=c[(c[d+52>>2]|0)+16>>2]|0;L=+g[G>>2];K=+g[t+(D<<4)+4>>2];J=+g[t+(D<<4)+8>>2];H=c[A+(D*36|0)+12>>2]|0;X=1.0000000150474662e+30;G=0;do{ga=c[H+(G<<2)>>2]|0;W=+g[E+(ga<<4)>>2]*L+ +g[E+(ga<<4)+4>>2]*K+ +g[E+(ga<<4)+8>>2]*J;X=X>W?W:X;G=G+1|0}while((G|0)<(F|0))}else{X=1.0000000150474662e+30}g[A+(D*36|0)+32>>2]=-X;D=D+1|0}while((D|0)<(f|0));f=c[s>>2]|0;if((f|0)>0){D=0;C=0;G=0;do{if((G|0)==(D|0)){D=(G|0)==0?1:G<<1;if((G|0)<(D|0)){if((D|0)!=0?(c[4336]=(c[4336]|0)+1,B=cw((D<<2|3)+16|0)|0,(B|0)!=0):0){c[(B+19&-16)+ -4>>2]=B;F=B+19&-16}else{F=0}if((G|0)>0){E=0;do{H=F+(E<<2)|0;if((H|0)!=0){c[H>>2]=c[C+(E<<2)>>2]}E=E+1|0}while((E|0)!=(G|0))}if((C|0)==0){C=F}else{c[4338]=(c[4338]|0)+1;dw(c[C+ -4>>2]|0);C=F}}else{D=G}}E=C+(G<<2)|0;if((E|0)!=0){c[E>>2]=G;f=c[s>>2]|0}G=G+1|0}while((G|0)<(f|0));if((G|0)==0){v=C}else{f=h+88|0;F=h+84|0;D=h+76|0;E=h+32|0;B=h+308|0;L=0.0;K=0.0;J=0.0;while(1){M=G+ -1|0;G=c[C+(M<<2)>>2]|0;c[4336]=(c[4336]|0)+1;I=cw(23)|0;if((I|0)!=0){c[(I+19&-16)+ -4>>2]=I;H=I+19&-16;if((I+19&-16|0)!=0){c[H>>2]=G}}else{H=0}W=+g[A+(G*36|0)+20>>2];X=+g[A+(G*36|0)+24>>2];Z=+g[A+(G*36|0)+28>>2];G=M;R=1;I=1;N=M;c:while(1){M=(G|0)>0;d:while(1){do{ga=N;N=N+ -1|0;if((ga|0)<=0){break c}O=c[C+(N<<2)>>2]|0}while(!(W*+g[A+(O*36|0)+20>>2]+X*+g[A+(O*36|0)+24>>2]+Z*+g[A+(O*36|0)+28>>2]>.9990000128746033));if((I|0)==(R|0)?(x=(R|0)==0?1:R<<1,(R|0)<(x|0)):0){if((x|0)!=0?(c[4336]=(c[4336]|0)+1,z=cw((x<<2|3)+16|0)|0,(z|0)!=0):0){c[(z+19&-16)+ -4>>2]=z;S=z+19&-16}else{S=0}if((R|0)>0){T=0;do{U=S+(T<<2)|0;if((U|0)!=0){c[U>>2]=c[H+(T<<2)>>2]}T=T+1|0}while((T|0)!=(R|0))}if((H|0)==0){H=S;R=x}else{c[4338]=(c[4338]|0)+1;dw(c[H+ -4>>2]|0);H=S;R=x}}S=H+(I<<2)|0;if((S|0)!=0){c[S>>2]=O}I=I+1|0;if(M){T=0}else{continue}while(1){S=C+(T<<2)|0;U=T+1|0;if((c[S>>2]|0)==(O|0)){break}if((U|0)<(G|0)){T=U}else{continue d}}if((T|0)<(G|0)){break}}ga=G+ -1|0;fa=C+(ga<<2)|0;c[S>>2]=c[fa>>2];c[fa>>2]=O;G=ga}if((I|0)>1){a[f>>0]=1;c[F>>2]=0;c[D>>2]=0;c[h+80>>2]=0;L=0.0;K=0.0;J=0.0;S=0;M=0;do{O=c[H+(M<<2)>>2]|0;L=+g[A+(O*36|0)+20>>2]+L;K=+g[A+(O*36|0)+24>>2]+K;J=+g[A+(O*36|0)+28>>2]+J;N=A+(O*36|0)+4|0;V=c[N>>2]|0;if((V|0)>0){O=A+(O*36|0)+12|0;T=S;R=0;while(1){S=c[(c[O>>2]|0)+(R<<2)>>2]|0;ga=(c[(c[d+52>>2]|0)+16>>2]|0)+(S<<4)|0;c[h+56>>2]=c[ga+0>>2];c[h+60>>2]=c[ga+4>>2];c[h+64>>2]=c[ga+8>>2];c[h+68>>2]=c[ga+12>>2];e:do{if((T|0)>0){Y=c[F>>2]|0;U=0;while(1){ga=U;U=U+1|0;if((c[Y+(ga*24|0)+20>>2]|0)==(S|0)){S=T;break e}if((U|0)>=(T|0)){u=207;break}}}else{u=207}}while(0);if((u|0)==207){u=0;c[h+0>>2]=c[h+56>>2];c[h+4>>2]=c[h+60>>2];c[h+8>>2]=c[h+64>>2];c[h+12>>2]=c[h+68>>2];if((T|0)==(c[h+80>>2]|0)?(y=(T|0)==0?1:T<<1,(T|0)<(y|0)):0){if((y|0)==0){U=0}else{c[4336]=(c[4336]|0)+1;T=cw((y*24|3)+16|0)|0;if((T|0)==0){U=0}else{c[(T+19&-16)+ -4>>2]=T;U=T+19&-16}T=c[D>>2]|0}V=c[F>>2]|0;if((T|0)<=0){if((V|0)!=0){u=216}}else{u=0;while(1){ga=U+(u*24|0)|0;fa=V+(u*24|0)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];c[ga+16>>2]=c[fa+16>>2];c[ga+20>>2]=c[fa+20>>2];u=u+1|0;if((u|0)==(T|0)){u=216;break}}}if((u|0)==216){u=0;if(!((a[f>>0]|0)==0|(V|0)==0)){c[4338]=(c[4338]|0)+1;dw(c[V+ -4>>2]|0);T=c[D>>2]|0}c[F>>2]=0}a[f>>0]=1;c[F>>2]=U;c[h+80>>2]=y}V=c[F>>2]|0;ga=V+(T*24|0)|0;c[ga+0>>2]=c[h+0>>2];c[ga+4>>2]=c[h+4>>2];c[ga+8>>2]=c[h+8>>2];c[ga+12>>2]=c[h+12>>2];c[ga+16>>2]=c[h+16>>2];c[V+(T*24|0)+20>>2]=S;S=(c[D>>2]|0)+1|0;c[D>>2]=S;V=c[N>>2]|0}R=R+1|0;if((R|0)>=(V|0)){break}else{T=S}}}M=M+1|0}while((M|0)<(I|0));a[h+36>>0]=1;c[E>>2]=0;c[h+24>>2]=0;c[h+28>>2]=0;ga=A+((c[H>>2]|0)*9<<2)+20|0;c[h+40>>2]=c[ga+0>>2];c[h+44>>2]=c[ga+4>>2];c[h+48>>2]=c[ga+8>>2];c[h+52>>2]=c[ga+12>>2];ia=1.0/+Q(+(L*L+K*K+J*J));L=L*ia;K=K*ia;J=J*ia;if(+P(+J)>.7071067690849304){W=1.0/+Q(+(J*J+K*K));Z=0.0;X=-(J*W);W=K*W}else{X=1.0/+Q(+(L*L+K*K));Z=-(K*X);X=L*X;W=0.0}f:do{if((S|0)<2){if((S|0)>0){N=0;U=0;M=0;u=1;while(1){O=c[F>>2]|0;if((N|0)==(U|0)){R=(U|0)==0?1:U<<1;if((U|0)<(R|0)){if((R|0)!=0){c[4336]=(c[4336]|0)+1;T=cw((R*24|3)+16|0)|0;if((T|0)==0){S=N;U=0}else{c[(T+19&-16)+ -4>>2]=T;S=N;U=T+19&-16}}else{S=U;U=0}if((S|0)>0){T=0;do{ga=U+(T*24|0)|0;fa=M+(T*24|0)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];c[ga+16>>2]=c[fa+16>>2];c[ga+20>>2]=c[fa+20>>2];T=T+1|0}while((T|0)!=(S|0))}if((M|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[M+ -4>>2]|0)}T=N;S=c[D>>2]|0;M=U}else{T=U;R=U}}else{T=N;R=U}ga=M+(T*24|0)|0;c[ga+0>>2]=c[O+0>>2];c[ga+4>>2]=c[O+4>>2];c[ga+8>>2]=c[O+8>>2];c[ga+12>>2]=c[O+12>>2];c[ga+16>>2]=c[O+16>>2];c[ga+20>>2]=c[O+20>>2];N=N+1|0;if((u|0)>=(S|0)){u=272;break f}U=R;u=u+1|0}}else{M=0;u=307}}else{u=c[F>>2]|0;M=S;N=0;do{if(Z*+g[u+(N*24|0)>>2]+X*+g[u+(N*24|0)+4>>2]+W*+g[u+(N*24|0)+8>>2]<Z*+g[u>>2]+X*+g[u+4>>2]+W*+g[u+8>>2]){c[h+288>>2]=c[u+0>>2];c[h+292>>2]=c[u+4>>2];c[h+296>>2]=c[u+8>>2];c[h+300>>2]=c[u+12>>2];c[h+304>>2]=c[u+16>>2];c[h+308>>2]=c[u+20>>2];M=u+(N*24|0)|0;c[u+0>>2]=c[M+0>>2];c[u+4>>2]=c[M+4>>2];c[u+8>>2]=c[M+8>>2];c[u+12>>2]=c[M+12>>2];c[u+16>>2]=c[M+16>>2];c[u+20>>2]=c[M+20>>2];M=u+(N*24|0)|0;c[M+0>>2]=c[h+288>>2];c[M+4>>2]=c[h+292>>2];c[M+8>>2]=c[h+296>>2];c[M+12>>2]=c[h+300>>2];c[M+16>>2]=c[h+304>>2];c[M+20>>2]=c[h+308>>2];M=S}N=N+1|0}while((N|0)<(M|0));g[u+16>>2]=-1.0000000150474662e+30;if((M|0)>1){_=+g[u+4>>2];N=1;do{da=+g[u+(N*24|0)>>2]- +g[u>>2];ha=+g[u+(N*24|0)+4>>2]-_;ia=+g[u+(N*24|0)+8>>2]- +g[u+8>>2];g[u+(N*24|0)+16>>2]=((Z*ha-X*da)*J+(L*(X*ia-W*ha)+K*(W*da-Z*ia)))/+Q(+(da*da+ha*ha+ia*ia));N=N+1|0}while((N|0)<(M|0))}c[h+272>>2]=c[u+0>>2];c[h+276>>2]=c[u+4>>2];c[h+280>>2]=c[u+8>>2];c[h+284>>2]=c[u+12>>2];fs(h+72|0,h+272|0,1,M+ -1|0);M=c[F>>2]|0;c[4336]=(c[4336]|0)+1;u=cw(43)|0;if((u|0)==0){u=0}else{c[(u+19&-16)+ -4>>2]=u;u=u+19&-16}N=c[F>>2]|0;c[u+0>>2]=c[M+0>>2];c[u+4>>2]=c[M+4>>2];c[u+8>>2]=c[M+8>>2];c[u+12>>2]=c[M+12>>2];c[u+16>>2]=c[M+16>>2];c[u+20>>2]=c[M+20>>2];c[4336]=(c[4336]|0)+1;M=cw(67)|0;if((M|0)==0){M=0}else{c[(M+19&-16)+ -4>>2]=M;M=M+19&-16}O=0;while(1){ga=M+(O*24|0)|0;fa=u+(O*24|0)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];c[ga+16>>2]=c[fa+16>>2];c[ga+20>>2]=c[fa+20>>2];if((O|0)==0){break}else{O=O+1|0}}if((u|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[u+ -4>>2]|0)}S=M+24|0;c[S+0>>2]=c[N+24>>2];c[S+4>>2]=c[N+28>>2];c[S+8>>2]=c[N+32>>2];c[S+12>>2]=c[N+36>>2];c[S+16>>2]=c[N+40>>2];c[S+20>>2]=c[N+44>>2];S=c[D>>2]|0;if((S|0)==2){N=2;u=273}else{T=2;N=2;R=2;u=2;while(1){g:do{if((T|0)>1){ga=c[F>>2]|0;O=ga+(u*24|0)|0;W=+g[O>>2];Z=+g[ga+(u*24|0)+4>>2];X=+g[ga+(u*24|0)+8>>2];while(1){ga=T+ -2|0;U=T+ -1|0;da=+g[M+(ga*24|0)>>2];ha=da- +g[M+(U*24|0)>>2];ba=+g[M+(ga*24|0)+4>>2];aa=ba- +g[M+(U*24|0)+4>>2];ia=+g[M+(ga*24|0)+8>>2];ca=ia- +g[M+(U*24|0)+8>>2];if((ha*(ba-Z)-aa*(da-W))*J+(L*(aa*(ia-X)-ca*(ba-Z))+K*(ca*(da-W)-ha*(ia-X)))>0.0){break}if((U|0)>1){T=U;N=U}else{T=U;N=U;break g}}if((T|0)==(R|0)){U=(R|0)==0?1:R<<1;if((R|0)<(U|0)){if((U|0)!=0){c[4336]=(c[4336]|0)+1;S=cw((U*24|3)+16|0)|0;if((S|0)==0){R=N;V=0}else{c[(S+19&-16)+ -4>>2]=S;R=N;V=S+19&-16}}else{V=0}if((R|0)>0){S=0;do{ga=V+(S*24|0)|0;fa=M+(S*24|0)|0;c[ga+0>>2]=c[fa+0>>2];c[ga+4>>2]=c[fa+4>>2];c[ga+8>>2]=c[fa+8>>2];c[ga+12>>2]=c[fa+12>>2];c[ga+16>>2]=c[fa+16>>2];c[ga+20>>2]=c[fa+20>>2];S=S+1|0}while((S|0)!=(R|0))}if((M|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[M+ -4>>2]|0)}S=c[D>>2]|0;T=N;R=U;M=V}else{T=R}}T=M+(T*24|0)|0;c[T+0>>2]=c[O+0>>2];c[T+4>>2]=c[O+4>>2];c[T+8>>2]=c[O+8>>2];c[T+12>>2]=c[O+12>>2];c[T+16>>2]=c[O+16>>2];c[T+20>>2]=c[O+20>>2];N=N+1|0;T=N}}while(0);u=u+1|0;if((u|0)==(S|0)){u=272;break}}}}}while(0);if((u|0)==272){if((N|0)>0){u=273}else{u=295}}if((u|0)==273){T=0;S=0;R=0;u=0;do{O=M+(u*24|0)+20|0;if((T|0)==(S|0)){U=(S|0)==0?1:S<<1;if((S|0)<(U|0)){if((U|0)!=0?(c[4336]=(c[4336]|0)+1,w=cw((U<<2|3)+16|0)|0,(w|0)!=0):0){c[(w+19&-16)+ -4>>2]=w;Y=w+19&-16}else{Y=0}if((S|0)>0){V=0;do{T=Y+(V<<2)|0;if((T|0)!=0){c[T>>2]=c[R+(V<<2)>>2]}V=V+1|0}while((V|0)!=(S|0))}if((R|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[R+ -4>>2]|0);c[E>>2]=0}a[h+36>>0]=1;c[E>>2]=Y;c[h+28>>2]=U;R=Y;T=S;S=U}else{T=S}}U=R+(T<<2)|0;if((U|0)!=0){c[U>>2]=c[O>>2];T=c[h+24>>2]|0}T=T+1|0;c[h+24>>2]=T;U=c[D>>2]|0;h:do{if((U|0)>0){V=c[F>>2]|0;Y=c[O>>2]|0;O=0;while(1){ea=V+(O*24|0)+20|0;O=O+1|0;if((c[ea>>2]|0)==(Y|0)){break}if((O|0)>=(U|0)){break h}}c[ea>>2]=-1}}while(0);u=u+1|0}while((u|0)<(N|0));S=c[D>>2]|0;u=295}i:do{if((u|0)==295){u=0;if((S|0)>0){R=c[F>>2]|0;O=c[s>>2]|0;N=0;while(1){U=c[R+(N*24|0)+20>>2]|0;if(!((U|0)==-1|(O|0)<1)){T=0;do{V=0;while(1){ga=V;V=V+1|0;if((c[H+(ga<<2)>>2]|0)==(T|0)){break}if((V|0)>=(I|0)){u=303;break}}if((u|0)==303?(u=0,v=c[A+(T*36|0)+4>>2]|0,(v|0)>0):0){V=c[A+(T*36|0)+12>>2]|0;Y=0;do{ga=Y;Y=Y+1|0;if((c[V+(ga<<2)>>2]|0)==(U|0)){N=1;break i}}while((Y|0)<(v|0))}T=T+1|0}while((T|0)<(O|0))}N=N+1|0;if((N|0)>=(S|0)){u=307;break}}}else{u=307}}}while(0);if((u|0)==307){u=0;N=c[d+52>>2]|0;R=c[N+28>>2]|0;if((R|0)==(c[N+32>>2]|0)){cs(N+24|0,(R|0)==0?1:R<<1);R=c[N+28>>2]|0}O=(c[N+36>>2]|0)+(R*36|0)|0;if((O|0)!=0){es(O,h+20|0);c[O+20>>2]=c[h+40>>2];c[O+24>>2]=c[h+44>>2];c[O+28>>2]=c[h+48>>2];c[O+32>>2]=c[h+52>>2];R=c[N+28>>2]|0}c[N+28>>2]=R+1;N=0}if((M|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[M+ -4>>2]|0)}M=c[E>>2]|0;if((M|0)!=0){if((a[h+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[M+ -4>>2]|0)}c[E>>2]=0}M=c[F>>2]|0;if((M|0)!=0){if((a[f>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[M+ -4>>2]|0)}c[F>>2]=0}a[f>>0]=1;c[F>>2]=0;c[D>>2]=0;c[h+80>>2]=0;if(N&(I|0)>0){u=324}}else{if((I|0)>0){u=324}}if((u|0)==324){u=0;M=0;do{N=c[H+(M<<2)>>2]|0;es(h+288|0,A+(N*36|0)|0);N=A+(N*36|0)+20|0;c[B+0>>2]=c[N+0>>2];c[B+4>>2]=c[N+4>>2];c[B+8>>2]=c[N+8>>2];c[B+12>>2]=c[N+12>>2];N=c[d+52>>2]|0;R=c[N+28>>2]|0;if((R|0)==(c[N+32>>2]|0)){cs(N+24|0,(R|0)==0?1:R<<1);R=c[N+28>>2]|0}O=(c[N+36>>2]|0)+(R*36|0)|0;if((O|0)!=0){es(O,h+288|0);c[O+20>>2]=c[B+0>>2];c[O+24>>2]=c[B+4>>2];c[O+28>>2]=c[B+8>>2];c[O+32>>2]=c[B+12>>2];R=c[N+28>>2]|0}c[N+28>>2]=R+1;N=c[h+300>>2]|0;if((N|0)!=0){if((a[h+304>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[N+ -4>>2]|0)}c[h+300>>2]=0}M=M+1|0}while((M|0)<(I|0))}if((H|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[H+ -4>>2]|0)}if((G|0)==0){v=C;break}}}}else{v=0}}else{v=0}d=c[d+52>>2]|0;c[d+64>>2]=0;c[d+68>>2]=0;c[d+72>>2]=0;c[d+76>>2]=0;x=c[d+28>>2]|0;if((x|0)>0){y=x;f=0;B=0;M=0;T=0;N=0;S=0;R=0;O=0;I=0;E=0;H=0;D=0;w=0;while(1){F=c[d+36>>2]|0;x=c[F+(w*36|0)+4>>2]|0;if((x|0)>0){y=w&65535;z=w|-65536;G=0;while(1){C=G+1|0;ga=c[F+(w*36|0)+12>>2]|0;U=c[ga+(G<<2)>>2]&65535;V=c[ga+(((C|0)==(x|0)?0:C)<<2)>>2]&65535;F=U<<16>>16<V<<16>>16?U:V;G=U<<16>>16<V<<16>>16?V:U;Y=U<<16>>16<V<<16>>16?U:V;ea=U<<16>>16<V<<16>>16?V:U;U=M+ -1|0;j:do{if((((Y&65535)<<16)+(ea<<16>>16)&U)>>>0<f>>>0?(n=c[I+((((Y&65535)<<16)+(ea<<16>>16)&U)<<2)>>2]|0,!((n|0)==-1)):0){V=n;while(1){if(ea<<16>>16==(b[R+(V<<2)>>1]|0)?Y<<16>>16==(b[R+(V<<2)+2>>1]|0):0){break}V=c[D+(V<<2)>>2]|0;if((V|0)==-1){V=0;break j}}if(!((V|0)==-1)){V=T+(V<<2)|0}else{V=0}}else{V=0}}while(0);ga=c[d+16>>2]|0;J=+g[ga+(Y<<16>>16<<4)>>2]- +g[ga+(ea<<16>>16<<4)>>2];K=+g[ga+(Y<<16>>16<<4)+4>>2]- +g[ga+(ea<<16>>16<<4)+4>>2];L=+g[ga+(Y<<16>>16<<4)+8>>2]- +g[ga+(ea<<16>>16<<4)+8>>2];W=1.0/+Q(+(J*J+K*K+L*L));Y=c[d+48>>2]|0;k:do{if((Y|0)>0){fa=c[d+56>>2]|0;ea=0;while(1){Z=+g[fa+(ea<<4)>>2];X=+g[fa+(ea<<4)+8>>2];if((!(+P(+(Z-J*W))>1.0e-6)?!(+P(+(+g[fa+(ea<<4)+4>>2]-K*W))>1.0e-6):0)?!(+P(+(X-L*W))>1.0e-6):0){break k}if((!(+P(+(J*W+Z))>1.0e-6)?!(+P(+(K*W+ +g[fa+(ea<<4)+4>>2]))>1.0e-6):0)?!(+P(+(L*W+X))>1.0e-6):0){break k}ea=ea+1|0;if((ea|0)>=(Y|0)){u=359;break}}}else{u=359}}while(0);if((u|0)==359){u=0;if((Y|0)==(c[d+52>>2]|0)?(l=(Y|0)==0?1:Y<<1,(Y|0)<(l|0)):0){if((l|0)==0){ea=0}else{c[4336]=(c[4336]|0)+1;Y=cw((l<<4|3)+16|0)|0;if((Y|0)==0){ea=0}else{c[(Y+19&-16)+ -4>>2]=Y;ea=Y+19&-16}Y=c[d+48>>2]|0}if((Y|0)>0){fa=0;do{ga=ea+(fa<<4)|0;ja=(c[d+56>>2]|0)+(fa<<4)|0;c[ga+0>>2]=c[ja+0>>2];c[ga+4>>2]=c[ja+4>>2];c[ga+8>>2]=c[ja+8>>2];c[ga+12>>2]=c[ja+12>>2];fa=fa+1|0}while((fa|0)!=(Y|0))}Y=c[d+56>>2]|0;if((Y|0)!=0){if((a[d+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[Y+ -4>>2]|0)}c[d+56>>2]=0}a[d+60>>0]=1;c[d+56>>2]=ea;c[d+52>>2]=l;Y=c[d+48>>2]|0}ja=c[d+56>>2]|0;g[ja+(Y<<4)>>2]=J*W;g[ja+(Y<<4)+4>>2]=K*W;g[ja+(Y<<4)+8>>2]=L*W;g[ja+(Y<<4)+12>>2]=0.0;c[d+48>>2]=(c[d+48>>2]|0)+1}l:do{if((V|0)==0){Y=((F&65535)<<16)+(G<<16>>16)&U;m:do{if(Y>>>0<f>>>0?(k=c[I+(Y<<2)>>2]|0,!((k|0)==-1)):0){U=k;while(1){if(G<<16>>16==(b[R+(U<<2)>>1]|0)?F<<16>>16==(b[R+(U<<2)+2>>1]|0):0){break}U=c[D+(U<<2)>>2]|0;if((U|0)==-1){break m}}if(!((U|0)==-1)){ja=T+(U<<2)|0;b[ja>>1]=z;b[ja+2>>1]=z>>>16;break l}}}while(0);if((B|0)==(M|0)){U=(M|0)==0?1:M<<1;if((M|0)<(U|0)){if((U|0)!=0?(c[4336]=(c[4336]|0)+1,p=cw((U<<2|3)+16|0)|0,(p|0)!=0):0){c[(p+19&-16)+ -4>>2]=p;V=p+19&-16}else{V=0}if((M|0)>0){ea=0;do{fa=V+(ea<<2)|0;if((fa|0)!=0){ja=T+(ea<<2)|0;ja=e[ja>>1]|e[ja+2>>1]<<16;b[fa>>1]=ja;b[fa+2>>1]=ja>>>16}ea=ea+1|0}while((ea|0)!=(M|0))}if((T|0)==0){ea=M;T=V}else{c[4338]=(c[4338]|0)+1;dw(c[T+ -4>>2]|0);ea=M;T=V}}else{ea=M;U=M}}else{ea=B;U=M}V=T+(ea<<2)|0;if((V|0)!=0){b[V>>1]=z;b[V+2>>1]=z>>>16;ea=B}V=ea+1|0;if((N|0)==(S|0)){S=(N|0)==0?1:N<<1;if((N|0)<(S|0)){if((S|0)!=0?(c[4336]=(c[4336]|0)+1,q=cw((S<<2|3)+16|0)|0,(q|0)!=0):0){c[(q+19&-16)+ -4>>2]=q;ea=q+19&-16}else{ea=0}if((N|0)>0){ga=0;do{fa=ea+(ga<<2)|0;if((fa|0)!=0){ja=R+(ga<<2)|0;ja=e[ja>>1]|e[ja+2>>1]<<16;b[fa>>1]=ja;b[fa+2>>1]=ja>>>16}ga=ga+1|0}while((ga|0)!=(N|0))}if((R|0)==0){R=ea}else{c[4338]=(c[4338]|0)+1;dw(c[R+ -4>>2]|0);R=ea}}else{S=N}}ea=R+(N<<2)|0;if((ea|0)!=0){b[ea>>1]=(F&65535)<<16|G&65535;b[ea+2>>1]=((F&65535)<<16|G&65535)>>>16}N=N+1|0;if((M|0)<(U|0)){if((f|0)<(U|0)){if((f|0)<=(U|0)){if((O|0)<(U|0)){if((U|0)!=0?(c[4336]=(c[4336]|0)+1,o=cw((U<<2|3)+16|0)|0,(o|0)!=0):0){c[(o+19&-16)+ -4>>2]=o;M=o+19&-16}else{M=0}if((f|0)>0){Y=0;do{O=M+(Y<<2)|0;if((O|0)!=0){c[O>>2]=c[I+(Y<<2)>>2]}Y=Y+1|0}while((Y|0)!=(f|0))}if((I|0)==0){O=U;I=M}else{c[4338]=(c[4338]|0)+1;dw(c[I+ -4>>2]|0);O=U;I=M}}Y=f;do{M=I+(Y<<2)|0;if((M|0)!=0){c[M>>2]=0}Y=Y+1|0}while((Y|0)!=(U|0))}if((E|0)<(U|0)){if((H|0)<(U|0)){if((U|0)!=0?(c[4336]=(c[4336]|0)+1,m=cw((U<<2|3)+16|0)|0,(m|0)!=0):0){c[(m+19&-16)+ -4>>2]=m;M=m+19&-16}else{M=0}if((E|0)>0){H=0;do{Y=M+(H<<2)|0;if((Y|0)!=0){c[Y>>2]=c[D+(H<<2)>>2]}H=H+1|0}while((H|0)!=(E|0))}if((D|0)==0){H=U;D=M}else{c[4338]=(c[4338]|0)+1;dw(c[D+ -4>>2]|0);H=U;D=M}}do{M=D+(E<<2)|0;if((M|0)!=0){c[M>>2]=0}E=E+1|0}while((E|0)!=(U|0))}if((U|0)>0){ja=U<<2;jw(I|0,-1,ja|0)|0;jw(D|0,-1,ja|0)|0}if((f|0)>0){M=U+ -1|0;E=0;while(1){ja=I+(((e[R+(E<<2)+2>>1]<<16)+(b[R+(E<<2)>>1]|0)&M)<<2)|0;c[D+(E<<2)>>2]=c[ja>>2];c[ja>>2]=E;E=E+1|0;if((E|0)==(f|0)){f=U;E=U;break}}}else{f=U;E=U}}Y=((F&65535)<<16)+(G<<16>>16)&U+ -1}M=I+(Y<<2)|0;c[D+(B<<2)>>2]=c[M>>2];c[M>>2]=B;B=V;M=U}else{b[V+2>>1]=y}}while(0);if((C|0)>=(x|0)){break}F=c[d+36>>2]|0;G=C}x=c[d+28>>2]|0}else{x=y}w=w+1|0;if((w|0)>=(x|0)){break}else{y=x}}if((x|0)>0){l=c[d+36>>2]|0;m=c[d+16>>2]|0;W=0.0;k=0;do{o=c[l+(k*36|0)+4>>2]|0;n=c[l+(k*36|0)+12>>2]|0;p=c[n>>2]|0;if((o+ -2|0)>=1){J=+g[d+64>>2];K=+g[d+68>>2];L=+g[d+72>>2];q=1;do{ga=q;q=q+1|0;ga=c[n+(ga<<2)>>2]|0;ja=c[n+(((q|0)%(o|0)|0)<<2)>>2]|0;X=+g[m+(p<<4)>>2];Z=+g[m+(ga<<4)>>2];$=+g[m+(p<<4)+4>>2];aa=+g[m+(ga<<4)+4>>2];ca=+g[m+(p<<4)+8>>2];da=+g[m+(ga<<4)+8>>2];_=+g[m+(ja<<4)>>2];ba=+g[m+(ja<<4)+4>>2];ha=+g[m+(ja<<4)+8>>2];ia=+Q(+(((X-Z)*($-ba)-($-aa)*(X-_))*((X-Z)*($-ba)-($-aa)*(X-_))+((($-aa)*(ca-ha)-(ca-da)*($-ba))*(($-aa)*(ca-ha)-(ca-da)*($-ba))+((ca-da)*(X-_)-(X-Z)*(ca-ha))*((ca-da)*(X-_)-(X-Z)*(ca-ha)))))*.5;J=J+(X+Z+_)*.3333333432674408*ia;g[d+64>>2]=J;K=($+aa+ba)*.3333333432674408*ia+K;g[d+68>>2]=K;L=ia*(ca+da+ha)*.3333333432674408+L;g[d+72>>2]=L;W=W+ia}while((q|0)!=(o+ -1|0))}k=k+1|0}while((k|0)<(x|0))}else{W=0.0}}else{W=0.0;T=0;R=0;I=0;D=0}K=1.0/W;W=K*+g[d+64>>2];g[d+64>>2]=W;L=K*+g[d+68>>2];g[d+68>>2]=L;K=K*+g[d+72>>2];g[d+72>>2]=K;g[d+96>>2]=3.4028234663852886e+38;if((x|0)>0){l=c[d+36>>2]|0;X=3.4028234663852886e+38;k=0;while(1){J=+P(+(+g[l+(k*36|0)+32>>2]+(+g[l+(k*36|0)+20>>2]*W+ +g[l+(k*36|0)+24>>2]*L+ +g[l+(k*36|0)+28>>2]*K)));if(J<X){g[d+96>>2]=J}else{J=X}k=k+1|0;if((k|0)>=(x|0)){break}else{X=J}}}else{J=3.4028234663852886e+38}m=c[d+8>>2]|0;if((m|0)>0){l=c[d+16>>2]|0;_=-3.4028234663852886e+38;Z=-3.4028234663852886e+38;X=-3.4028234663852886e+38;W=3.4028234663852886e+38;L=3.4028234663852886e+38;K=3.4028234663852886e+38;k=0;do{$=+g[l+(k<<4)>>2];W=$<W?$:W;_=$>_?$:_;$=+g[l+(k<<4)+4>>2];L=$<L?$:L;Z=$>Z?$:Z;$=+g[l+(k<<4)+8>>2];K=$<K?$:K;X=$>X?$:X;k=k+1|0}while((k|0)<(m|0))}else{_=-3.4028234663852886e+38;Z=-3.4028234663852886e+38;X=-3.4028234663852886e+38;W=3.4028234663852886e+38;L=3.4028234663852886e+38;K=3.4028234663852886e+38}g[d+100>>2]=_+W;g[d+104>>2]=Z+L;g[d+108>>2]=K+X;g[d+112>>2]=0.0;W=_-W;L=Z-L;K=X-K;g[d+116>>2]=W;g[d+120>>2]=L;g[d+124>>2]=K;g[d+128>>2]=0.0;J=J/1.7320507764816284;if(W<L){k=L<K?2:1}else{k=W<K?2:0}l=d+(k<<2)+116|0;K=(+g[l>>2]*.5-J)*.0009765625;g[d+88>>2]=J;g[d+84>>2]=J;g[d+80>>2]=J;L=+g[l>>2]*.5;l=d+(k<<2)+80|0;g[l>>2]=L;m=0;while(1){if(_u(d)|0){u=470;break}L=L-K;g[l>>2]=L;m=m+1|0;if((m|0)>=1024){u=469;break}}n:do{if((u|0)==469){g[d+88>>2]=J;g[d+84>>2]=J;g[d+80>>2]=J}else if((u|0)==470){J=(+g[d+96>>2]-J)*.0009765625;l=1<<k&3;K=+g[d+((1<<l&3)<<2)+80>>2];k=0;while(1){L=+g[d+(l<<2)+80>>2];g[d+(l<<2)+80>>2]=J+L;W=J+ +g[d+((1<<l&3)<<2)+80>>2];g[d+((1<<l&3)<<2)+80>>2]=W;k=k+1|0;if(!(_u(d)|0)){break}if((k|0)>=1024){break n}else{K=W}}g[d+(l<<2)+80>>2]=L;g[d+((1<<l&3)<<2)+80>>2]=K}}while(0);if((R|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[R+ -4>>2]|0)}if((T|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[T+ -4>>2]|0)}if((D|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[D+ -4>>2]|0)}if((I|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[I+ -4>>2]|0)}if((v|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[v+ -4>>2]|0)}k=c[s>>2]|0;if((k|0)>0){l=0;do{o=A+(l*36|0)+4|0;n=A+(l*36|0)+12|0;p=c[n>>2]|0;m=A+(l*36|0)+16|0;if((p|0)!=0){if((a[m>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[p+ -4>>2]|0)}c[n>>2]=0}a[m>>0]=1;c[n>>2]=0;c[o>>2]=0;c[A+(l*36|0)+8>>2]=0;l=l+1|0}while((l|0)!=(k|0));A=c[r>>2]|0}if((A|0)!=0){if((a[h+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[A+ -4>>2]|0)}c[r>>2]=0}a[h+164>>0]=1;c[r>>2]=0;c[s>>2]=0;c[h+156>>2]=0;if((t|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[t+ -4>>2]|0)}ds(h+196|0);if((j|0)==0){i=h;return 1}c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);i=h;return 1}function $r(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0.0,q=0.0,r=0;e=i;i=i+2048|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;h=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];if(h*h+j*j+k*k<9999999747378752.0e-20){h=1.0;j=0.0;k=0.0}else{q=1.0/+Q(+(h*h+j*j+k*k));h=h*q;j=j*q;k=k*q}if((Hb[c[(c[b>>2]|0)+96>>2]&127](b)|0)<=0){i=e;return}d=0;l=-999999984306749400.0;do{if(((Hb[c[(c[b>>2]|0)+96>>2]&127](b)|0)-d|0)<128){m=(Hb[c[(c[b>>2]|0)+96>>2]&127](b)|0)-d|0;if((m|0)>0){f=7}else{q=-3.4028234663852886e+38;n=-1}}else{m=128;f=7}if((f|0)==7){f=0;n=0;while(1){ic[c[(c[b>>2]|0)+108>>2]&63](b,n,e+(n<<4)|0);n=n+1|0;if((n|0)==(m|0)){o=0;q=-3.4028234663852886e+38;n=-1;break}}do{p=h*+g[e+(o<<4)>>2]+j*+g[e+(o<<4)+4>>2]+k*+g[e+(o<<4)+8>>2];r=p>q;n=r?o:n;q=r?p:q;o=o+1|0}while((o|0)!=(m|0))}if(q>l){r=e+(n<<4)|0;c[a+0>>2]=c[r+0>>2];c[a+4>>2]=c[r+4>>2];c[a+8>>2]=c[r+8>>2];c[a+12>>2]=c[r+12>>2];l=q}d=d+128|0}while((d|0)<(Hb[c[(c[b>>2]|0)+96>>2]&127](b)|0));i=e;return}function as(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0.0,y=0.0;h=i;i=i+2048|0;if((e|0)>0){j=0}else{i=h;return}do{g[d+(j<<4)+12>>2]=-999999984306749400.0;j=j+1|0}while((j|0)!=(e|0));j=0;do{if((Hb[c[(c[a>>2]|0)+96>>2]&127](a)|0)>0){n=b+(j<<4)|0;o=b+(j<<4)+4|0;p=b+(j<<4)+8|0;l=d+(j<<4)+12|0;k=d+(j<<4)|0;m=0;do{if(((Hb[c[(c[a>>2]|0)+96>>2]&127](a)|0)-m|0)<128){q=(Hb[c[(c[a>>2]|0)+96>>2]&127](a)|0)-m|0;if((q|0)>0){f=8}else{y=-3.4028234663852886e+38;r=-1}}else{q=128;f=8}if((f|0)==8){f=0;r=0;do{ic[c[(c[a>>2]|0)+108>>2]&63](a,r,h+(r<<4)|0);r=r+1|0}while((r|0)!=(q|0));s=+g[n>>2];t=+g[o>>2];u=+g[p>>2];v=0;y=-3.4028234663852886e+38;r=-1;do{x=s*+g[h+(v<<4)>>2]+t*+g[h+(v<<4)+4>>2]+u*+g[h+(v<<4)+8>>2];w=x>y;r=w?v:r;y=w?x:y;v=v+1|0}while((v|0)!=(q|0))}if(y>+g[l>>2]){w=h+(r<<4)|0;c[k+0>>2]=c[w+0>>2];c[k+4>>2]=c[w+4>>2];c[k+8>>2]=c[w+8>>2];c[k+12>>2]=c[w+12>>2];g[l>>2]=y}m=m+128|0}while((m|0)<(Hb[c[(c[a>>2]|0)+96>>2]&127](a)|0))}j=j+1|0}while((j|0)!=(e|0));i=h;return}function bs(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0;e=i;i=i+96|0;j=+Tb[c[(c[a>>2]|0)+48>>2]&15](a);g[e+32>>2]=1.0;c[e+36>>2]=0;c[e+40>>2]=0;c[e+44>>2]=0;c[e+48>>2]=0;g[e+52>>2]=1.0;c[e+56>>2]=0;c[e+60>>2]=0;c[e+64>>2]=0;c[e+68>>2]=0;g[e+72>>2]=1.0;k=e+76|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&63](a,e+32|0,e+16|0,e);h=(j+(+g[e>>2]- +g[e+16>>2])*.5)*2.0;f=(j+(+g[e+4>>2]- +g[e+20>>2])*.5)*2.0;j=(j+(+g[e+8>>2]- +g[e+24>>2])*.5)*2.0;g[d>>2]=b*.0833333283662796*(f*f+j*j);g[d+4>>2]=b*.0833333283662796*(h*h+j*j);g[d+8>>2]=b*.0833333283662796*(h*h+f*f);g[d+12>>2]=0.0;i=e;return}function cs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;if((c[b+8>>2]|0)>=(d|0)){i=e;return}if((d|0)!=0?(c[4336]=(c[4336]|0)+1,f=cw((d*36|3)+16|0)|0,(f|0)!=0):0){c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}else{f=0}j=c[b+4>>2]|0;if((j|0)>0){h=0;do{g=f+(h*36|0)|0;if((g|0)!=0){n=c[b+12>>2]|0;es(g,n+(h*36|0)|0);n=n+(h*36|0)+20|0;c[g+20>>2]=c[n+0>>2];c[g+24>>2]=c[n+4>>2];c[g+28>>2]=c[n+8>>2];c[g+32>>2]=c[n+12>>2]}h=h+1|0}while((h|0)!=(j|0));n=c[b+4>>2]|0;if((n|0)>0){m=0;while(1){l=c[b+12>>2]|0;h=l+(m*36|0)+4|0;j=l+(m*36|0)+12|0;g=c[j>>2]|0;k=l+(m*36|0)+16|0;if((g|0)!=0){if((a[k>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[g+ -4>>2]|0)}c[j>>2]=0}a[k>>0]=1;c[j>>2]=0;c[h>>2]=0;c[l+(m*36|0)+8>>2]=0;m=m+1|0;if((m|0)==(n|0)){g=b+12|0;break}}}else{g=b+12|0}}else{g=b+12|0}h=c[g>>2]|0;if((h|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[g>>2]=0}a[b+16>>0]=1;c[g>>2]=f;c[b+8>>2]=d;i=e;return}function ds(b){b=b|0;var d=0,e=0;d=i;e=c[b+52>>2]|0;if((e|0)!=0){if((a[b+56>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;e=c[b+32>>2]|0;if((e|0)!=0){if((a[b+36>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;e=c[b+12>>2]|0;if((e|0)==0){a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;e=b+8|0;c[e>>2]=0;i=d;return}if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+12>>2]=0;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;e=b+8|0;c[e>>2]=0;i=d;return}function es(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;f=i;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;e=c[d+4>>2]|0;if((e|0)<=0){c[b+4>>2]=e;i=f;return}c[4336]=(c[4336]|0)+1;g=cw((e<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}j=c[b+4>>2]|0;if((j|0)>0){h=0;do{k=g+(h<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+12>>2]|0)+(h<<2)>>2]}h=h+1|0}while((h|0)!=(j|0))}h=c[b+12>>2]|0;if((h|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=g;c[b+8>>2]=e;h=0;do{j=g+(h<<2)|0;if((j|0)!=0){c[j>>2]=0}h=h+1|0}while((h|0)!=(e|0));c[b+4>>2]=e;b=0;do{h=g+(b<<2)|0;if((h|0)!=0){c[h>>2]=c[(c[d+12>>2]|0)+(b<<2)>>2]}b=b+1|0}while((b|0)!=(e|0));i=f;return}function fs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0;f=i;i=i+32|0;n=c[a+12>>2]|0;h=+g[n+(((e+d|0)/2|0)*24|0)>>2];j=+g[n+(((e+d|0)/2|0)*24|0)+4>>2];k=+g[n+(((e+d|0)/2|0)*24|0)+8>>2];m=+g[n+(((e+d|0)/2|0)*24|0)+16>>2];l=c[n+(((e+d|0)/2|0)*24|0)+20>>2]|0;o=d;p=e;while(1){a:while(1){q=+g[n+(o*24|0)+16>>2];do{if(q!=m){if(!(q<m)){break a}}else{s=+g[b>>2];v=+g[n+(o*24|0)>>2]-s;r=+g[b+4>>2];u=+g[n+(o*24|0)+4>>2]-r;q=+g[b+8>>2];t=+g[n+(o*24|0)+8>>2]-q;if(v*v+u*u+t*t!=(h-s)*(h-s)+(j-r)*(j-r)+(k-q)*(k-q)){if(v*v+u*u+t*t<(h-s)*(h-s)+(j-r)*(j-r)+(k-q)*(k-q)){break}else{break a}}else{if((c[n+(o*24|0)+20>>2]|0)<(l|0)){break}else{break a}}}}while(0);o=o+1|0}b:while(1){q=+g[n+(p*24|0)+16>>2];do{if(m!=q){if(!(m<q)){break b}}else{r=+g[b>>2];t=+g[b+4>>2];q=+g[b+8>>2];s=+g[n+(p*24|0)>>2]-r;u=+g[n+(p*24|0)+4>>2]-t;v=+g[n+(p*24|0)+8>>2]-q;if((h-r)*(h-r)+(j-t)*(j-t)+(k-q)*(k-q)!=s*s+u*u+v*v){if((h-r)*(h-r)+(j-t)*(j-t)+(k-q)*(k-q)<s*s+u*u+v*v){break}else{break b}}else{if((l|0)<(c[n+(p*24|0)+20>>2]|0)){break}else{break b}}}}while(0);p=p+ -1|0}if((o|0)<=(p|0)){w=n+(o*24|0)|0;c[f+0>>2]=c[w+0>>2];c[f+4>>2]=c[w+4>>2];c[f+8>>2]=c[w+8>>2];c[f+12>>2]=c[w+12>>2];c[f+16>>2]=c[w+16>>2];c[f+20>>2]=c[w+20>>2];n=n+(p*24|0)|0;c[w+0>>2]=c[n+0>>2];c[w+4>>2]=c[n+4>>2];c[w+8>>2]=c[n+8>>2];c[w+12>>2]=c[n+12>>2];c[w+16>>2]=c[n+16>>2];c[w+20>>2]=c[n+20>>2];n=(c[a+12>>2]|0)+(p*24|0)|0;c[n+0>>2]=c[f+0>>2];c[n+4>>2]=c[f+4>>2];c[n+8>>2]=c[f+8>>2];c[n+12>>2]=c[f+12>>2];c[n+16>>2]=c[f+16>>2];c[n+20>>2]=c[f+20>>2];o=o+1|0;p=p+ -1|0}if((o|0)>(p|0)){break}n=c[a+12>>2]|0}if((p|0)>(d|0)){fs(a,b,d,p)}if((o|0)>=(e|0)){i=f;return}fs(a,b,o,e);i=f;return}function gs(d,f,h){d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0.0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0;j=i;i=i+128|0;m=c[d+56>>2]|0;if((h-f|0)==1){if((a[d+60>>0]|0)==0){r=(c[d+96>>2]|0)+(m<<6)+0|0;H=(c[d+76>>2]|0)+(f<<6)+0|0;G=r+64|0;do{c[r>>2]=c[H>>2];r=r+4|0;H=H+4|0}while((r|0)<(G|0))}else{L=(c[d+136>>2]|0)+(m<<4)|0;K=(c[d+116>>2]|0)+(f<<4)|0;c[L+0>>2]=c[K+0>>2];c[L+4>>2]=c[K+4>>2];c[L+8>>2]=c[K+8>>2];c[L+12>>2]=c[K+12>>2]}c[d+56>>2]=(c[d+56>>2]|0)+1;i=j;return}if((f|0)<(h|0)){o=(a[d+60>>0]|0)==0;x=0.0;u=0.0;t=0.0;p=f;do{if(o){L=c[d+76>>2]|0;s=+g[L+(p<<6)>>2];A=+g[L+(p<<6)+4>>2];y=+g[L+(p<<6)+8>>2];w=+g[L+(p<<6)+16>>2];B=+g[L+(p<<6)+20>>2];z=+g[L+(p<<6)+24>>2]}else{L=c[d+116>>2]|0;C=+g[d+36>>2];D=+g[d+40>>2];F=+g[d+44>>2];w=+g[d+4>>2];B=+g[d+8>>2];z=+g[d+12>>2];s=+(e[L+(p<<4)>>1]|0)/C+w;A=+(e[L+(p<<4)+2>>1]|0)/D+B;y=+(e[L+(p<<4)+4>>1]|0)/F+z;w=+(e[L+(p<<4)+6>>1]|0)/C+w;B=+(e[L+(p<<4)+8>>1]|0)/D+B;z=+(e[L+(p<<4)+10>>1]|0)/F+z}x=x+(w+s)*.5;t=t+(B+A)*.5;u=u+(z+y)*.5;p=p+1|0}while((p|0)!=(h|0));F=1.0/+(h-f|0);s=x*F;t=t*F;u=u*F;if(o){o=c[d+76>>2]|0;w=0.0;x=0.0;F=0.0;p=f;while(1){B=(+g[o+(p<<6)+16>>2]+ +g[o+(p<<6)>>2])*.5-s;C=(+g[o+(p<<6)+20>>2]+ +g[o+(p<<6)+4>>2])*.5-t;D=(+g[o+(p<<6)+24>>2]+ +g[o+(p<<6)+8>>2])*.5-u;w=w+B*B;x=x+C*C;F=F+D*D;p=p+1|0;if((p|0)==(h|0)){s=+(h-f|0);break}}}else{p=c[d+116>>2]|0;D=+g[d+36>>2];A=+g[d+40>>2];C=+g[d+44>>2];z=+g[d+4>>2];B=+g[d+8>>2];y=+g[d+12>>2];w=0.0;x=0.0;F=0.0;o=f;while(1){O=(+(e[p+(o<<4)+6>>1]|0)/D+z+(+(e[p+(o<<4)>>1]|0)/D+z))*.5-s;N=(+(e[p+(o<<4)+8>>1]|0)/A+B+(+(e[p+(o<<4)+2>>1]|0)/A+B))*.5-t;M=(+(e[p+(o<<4)+10>>1]|0)/C+y+(+(e[p+(o<<4)+4>>1]|0)/C+y))*.5-u;w=w+O*O;x=x+N*N;F=F+M*M;o=o+1|0;if((o|0)==(h|0)){s=+(h-f|0);break}}}}else{F=0.0;x=0.0;w=0.0;s=+(h-f|0)}u=1.0/(s+-1.0);s=w*u;t=x*u;u=F*u;if(s<t){o=t<u?2:1}else{o=s<u?2:0}c[j+16>>2]=0;c[j+20>>2]=0;c[j+24>>2]=0;c[j+28>>2]=0;if((f|0)<(h|0)){q=(a[d+60>>0]|0)==0;u=0.0;t=0.0;s=0.0;p=f;do{if(q){L=c[d+76>>2]|0;z=+g[L+(p<<6)+16>>2];x=+g[L+(p<<6)+20>>2];A=+g[L+(p<<6)+24>>2];y=+g[L+(p<<6)>>2];w=+g[L+(p<<6)+4>>2];B=+g[L+(p<<6)+8>>2]}else{L=c[d+116>>2]|0;M=+g[d+36>>2];N=+g[d+40>>2];O=+g[d+44>>2];y=+g[d+4>>2];w=+g[d+8>>2];B=+g[d+12>>2];z=+(e[L+(p<<4)+6>>1]|0)/M+y;x=+(e[L+(p<<4)+8>>1]|0)/N+w;A=+(e[L+(p<<4)+10>>1]|0)/O+B;y=+(e[L+(p<<4)>>1]|0)/M+y;w=+(e[L+(p<<4)+2>>1]|0)/N+w;B=+(e[L+(p<<4)+4>>1]|0)/O+B}u=u+(z+y)*.5;t=(x+w)*.5+t;s=(A+B)*.5+s;p=p+1|0}while((p|0)!=(h|0));g[j+16>>2]=u;g[j+20>>2]=t;g[j+24>>2]=s}else{u=0.0;t=0.0;s=0.0}g[j+16>>2]=1.0/+(h-f|0)*u;g[j+20>>2]=1.0/+(h-f|0)*t;g[j+24>>2]=1.0/+(h-f|0)*s;s=+g[j+16+(o<<2)>>2];if((f|0)<(h|0)){o=j+(o<<2)|0;q=f;p=f;do{r=(a[d+60>>0]|0)==0;if(r){L=c[d+76>>2]|0;x=+g[L+(q<<6)+16>>2];u=+g[L+(q<<6)+20>>2];t=+g[L+(q<<6)+24>>2];w=+g[L+(q<<6)>>2];y=+g[L+(q<<6)+4>>2];z=+g[L+(q<<6)+8>>2]}else{L=c[d+116>>2]|0;M=+g[d+36>>2];N=+g[d+40>>2];O=+g[d+44>>2];w=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];x=+(e[L+(q<<4)+6>>1]|0)/M+w;u=+(e[L+(q<<4)+8>>1]|0)/N+y;t=+(e[L+(q<<4)+10>>1]|0)/O+z;w=+(e[L+(q<<4)>>1]|0)/M+w;y=+(e[L+(q<<4)+2>>1]|0)/N+y;z=+(e[L+(q<<4)+4>>1]|0)/O+z}g[j>>2]=(x+w)*.5;g[j+4>>2]=(u+y)*.5;g[j+8>>2]=(t+z)*.5;g[j+12>>2]=0.0;if(+g[o>>2]>s){if(r){v=c[d+76>>2]|0;E=v+(q<<6)|0;r=j+32|0;H=E+0|0;G=r+64|0;do{c[r>>2]=c[H>>2];r=r+4|0;H=H+4|0}while((r|0)<(G|0));r=E+0|0;H=v+(p<<6)+0|0;G=r+64|0;do{c[r>>2]=c[H>>2];r=r+4|0;H=H+4|0}while((r|0)<(G|0));r=(c[d+76>>2]|0)+(p<<6)+0|0;H=j+32|0;G=r+64|0;do{c[r>>2]=c[H>>2];r=r+4|0;H=H+4|0}while((r|0)<(G|0))}else{K=c[d+116>>2]|0;L=K+(q<<4)|0;c[j+96>>2]=c[L+0>>2];c[j+100>>2]=c[L+4>>2];c[j+104>>2]=c[L+8>>2];c[j+108>>2]=c[L+12>>2];K=K+(p<<4)|0;c[L+0>>2]=c[K+0>>2];c[L+4>>2]=c[K+4>>2];c[L+8>>2]=c[K+8>>2];c[L+12>>2]=c[K+12>>2];L=(c[d+116>>2]|0)+(p<<4)|0;c[L+0>>2]=c[j+96>>2];c[L+4>>2]=c[j+100>>2];c[L+8>>2]=c[j+104>>2];c[L+12>>2]=c[j+108>>2]}p=p+1|0}q=q+1|0}while((q|0)!=(h|0))}else{p=f}if(!((p|0)>(((h-f|0)/3|0)+f|0)?(p|0)<(h+ -1-((h-f|0)/3|0)|0):0)){p=(h-f>>1)+f|0}o=c[d+56>>2]|0;do{if((a[d+60>>0]|0)==0){q=(c[d+96>>2]|0)+(o<<6)|0;c[q+0>>2]=c[d+20>>2];c[q+4>>2]=c[d+24>>2];c[q+8>>2]=c[d+28>>2];c[q+12>>2]=c[d+32>>2];q=c[d+56>>2]|0;if((a[d+60>>0]|0)==0){q=(c[d+96>>2]|0)+(q<<6)+16|0;c[q+0>>2]=c[d+4>>2];c[q+4>>2]=c[d+8>>2];c[q+8>>2]=c[d+12>>2];c[q+12>>2]=c[d+16>>2];q=c[d+56>>2]|0;break}else{w=+g[d+8>>2];t=+g[d+12>>2];x=+g[d+36>>2];u=+g[d+40>>2];s=+g[d+44>>2];r=c[d+136>>2]|0;v=d+4|0;n=46;break}}else{r=c[d+136>>2]|0;w=+g[d+8>>2];t=+g[d+12>>2];x=+g[d+36>>2];u=+g[d+40>>2];N=(+g[d+24>>2]-w)*u;s=+g[d+44>>2];O=(+g[d+28>>2]-t)*s;b[r+(o<<4)>>1]=~~((+g[d+20>>2]- +g[d+4>>2])*x)&65535&65534;b[r+(o<<4)+2>>1]=~~N&65535&65534;b[r+(o<<4)+4>>1]=~~O&65535&65534;q=o;v=d+4|0;n=46}}while(0);if((n|0)==46){O=+g[v>>2];b[r+(q<<4)+6>>1]=~~((O-O)*x+1.0)&65535|1;b[r+(q<<4)+8>>1]=~~((w-w)*u+1.0)&65535|1;b[r+(q<<4)+10>>1]=~~((t-t)*s+1.0)&65535|1}if((f|0)<(h|0)){r=a[d+60>>0]|0;n=f;do{if(r<<24>>24==0){v=c[d+76>>2]|0;A=+g[v+(n<<6)>>2];z=+g[v+(n<<6)+4>>2];y=+g[v+(n<<6)+8>>2];x=+g[v+(n<<6)+12>>2];w=+g[v+(n<<6)+16>>2];u=+g[v+(n<<6)+20>>2];t=+g[v+(n<<6)+24>>2];s=+g[v+(n<<6)+28>>2];v=c[d+96>>2]|0;E=v+(q<<6)|0;if(A<+g[E>>2]){g[E>>2]=A}E=v+(q<<6)+4|0;if(z<+g[E>>2]){g[E>>2]=z}E=v+(q<<6)+8|0;if(y<+g[E>>2]){g[E>>2]=y}E=v+(q<<6)+12|0;if(x<+g[E>>2]){g[E>>2]=x}E=v+(q<<6)+16|0;if(+g[E>>2]<w){g[E>>2]=w}E=v+(q<<6)+20|0;if(+g[E>>2]<u){g[E>>2]=u}E=v+(q<<6)+24|0;if(+g[E>>2]<t){g[E>>2]=t}v=v+(q<<6)+28|0;if(+g[v>>2]<s){g[v>>2]=s}}else{v=c[d+116>>2]|0;w=+g[d+36>>2];A=+g[d+40>>2];F=+g[d+44>>2];x=+g[d+4>>2];B=+g[d+8>>2];M=+g[d+12>>2];y=+g[d+4>>2];C=+g[d+8>>2];N=+g[d+12>>2];z=+g[d+36>>2];D=+g[d+40>>2];O=+g[d+44>>2];L=~~((+(e[v+(n<<4)>>1]|0)/w+x-y)*z)&65535&65534;I=~~((+(e[v+(n<<4)+2>>1]|0)/A+B-C)*D)&65535&65534;E=~~((+(e[v+(n<<4)+4>>1]|0)/F+M-N)*O)&65535&65534;J=(~~((+(e[v+(n<<4)+6>>1]|0)/w+x-y)*z+1.0)&65535|1)&65535;H=(~~((+(e[v+(n<<4)+8>>1]|0)/A+B-C)*D+1.0)&65535|1)&65535;v=(~~((+(e[v+(n<<4)+10>>1]|0)/F+M-N)*O+1.0)&65535|1)&65535;G=c[d+136>>2]|0;K=G+(q<<4)|0;if((e[K>>1]|0)>(L&65535)){b[K>>1]=L}K=G+(q<<4)+6|0;if((e[K>>1]|0)<(J&65535)){b[K>>1]=J}J=G+(q<<4)+2|0;if((e[J>>1]|0)>(I&65535)){b[J>>1]=I}I=G+(q<<4)+8|0;if((e[I>>1]|0)<(H&65535)){b[I>>1]=H}H=G+(q<<4)+4|0;if((e[H>>1]|0)>(E&65535)){b[H>>1]=E}E=G+(q<<4)+10|0;if((e[E>>1]|0)<(v&65535)){b[E>>1]=v}}n=n+1|0}while((n|0)!=(h|0))}q=q+1|0;c[d+56>>2]=q;gs(d,f,p);f=c[d+56>>2]|0;gs(d,p,h);h=(c[d+56>>2]|0)-m|0;do{if((a[d+60>>0]|0)!=0){if((h<<4|0)>2048){m=c[d+136>>2]|0;n=c[m+(q<<4)+12>>2]|0;p=(n|0)>-1?1:0-n|0;n=c[m+(f<<4)+12>>2]|0;n=(n|0)>-1?1:0-n|0;if((p<<4|0)<2049){r=c[d+152>>2]|0;if((r|0)==(c[d+156>>2]|0)?(l=(r|0)==0?1:r<<1,(r|0)<(l|0)):0){if((l|0)==0){v=r;E=0}else{c[4336]=(c[4336]|0)+1;v=cw(l<<5|19)|0;if((v|0)==0){E=0}else{c[(v+19&-16)+ -4>>2]=v;E=v+19&-16}v=c[d+152>>2]|0}if((v|0)>0){G=0;do{L=E+(G<<5)|0;K=(c[d+160>>2]|0)+(G<<5)|0;c[L+0>>2]=c[K+0>>2];c[L+4>>2]=c[K+4>>2];c[L+8>>2]=c[K+8>>2];c[L+12>>2]=c[K+12>>2];c[L+16>>2]=c[K+16>>2];c[L+20>>2]=c[K+20>>2];c[L+24>>2]=c[K+24>>2];c[L+28>>2]=c[K+28>>2];G=G+1|0}while((G|0)!=(v|0))}v=c[d+160>>2]|0;if((v|0)!=0){if((a[d+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[v+ -4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=E;c[d+156>>2]=l;l=c[d+152>>2]|0}else{l=r}c[d+152>>2]=l+1;L=(c[d+160>>2]|0)+(r<<5)|0;c[L+0>>2]=c[j+96>>2];c[L+4>>2]=c[j+100>>2];c[L+8>>2]=c[j+104>>2];c[L+12>>2]=c[j+108>>2];c[L+16>>2]=c[j+112>>2];c[L+20>>2]=c[j+116>>2];c[L+24>>2]=c[j+120>>2];c[L+28>>2]=c[j+124>>2];L=c[d+160>>2]|0;b[L+(r<<5)>>1]=b[m+(q<<4)>>1]|0;b[L+(r<<5)+2>>1]=b[m+(q<<4)+2>>1]|0;b[L+(r<<5)+4>>1]=b[m+(q<<4)+4>>1]|0;b[L+(r<<5)+6>>1]=b[m+(q<<4)+6>>1]|0;b[L+(r<<5)+8>>1]=b[m+(q<<4)+8>>1]|0;b[L+(r<<5)+10>>1]=b[m+(q<<4)+10>>1]|0;c[L+(r<<5)+12>>2]=q;c[L+(r<<5)+16>>2]=p;p=d+152|0}else{p=d+152|0}if((n<<4|0)<2049){l=c[p>>2]|0;if((l|0)==(c[d+156>>2]|0)?(k=(l|0)==0?1:l<<1,(l|0)<(k|0)):0){if((k|0)==0){r=l;q=0}else{c[4336]=(c[4336]|0)+1;q=cw(k<<5|19)|0;if((q|0)==0){q=0}else{c[(q+19&-16)+ -4>>2]=q;q=q+19&-16}r=c[p>>2]|0}if((r|0)>0){v=0;do{L=q+(v<<5)|0;K=(c[d+160>>2]|0)+(v<<5)|0;c[L+0>>2]=c[K+0>>2];c[L+4>>2]=c[K+4>>2];c[L+8>>2]=c[K+8>>2];c[L+12>>2]=c[K+12>>2];c[L+16>>2]=c[K+16>>2];c[L+20>>2]=c[K+20>>2];c[L+24>>2]=c[K+24>>2];c[L+28>>2]=c[K+28>>2];v=v+1|0}while((v|0)!=(r|0))}r=c[d+160>>2]|0;if((r|0)!=0){if((a[d+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[r+ -4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=q;c[d+156>>2]=k;k=c[p>>2]|0}else{k=l}c[p>>2]=k+1;L=(c[d+160>>2]|0)+(l<<5)|0;c[L+0>>2]=c[j+32>>2];c[L+4>>2]=c[j+36>>2];c[L+8>>2]=c[j+40>>2];c[L+12>>2]=c[j+44>>2];c[L+16>>2]=c[j+48>>2];c[L+20>>2]=c[j+52>>2];c[L+24>>2]=c[j+56>>2];c[L+28>>2]=c[j+60>>2];L=c[d+160>>2]|0;b[L+(l<<5)>>1]=b[m+(f<<4)>>1]|0;b[L+(l<<5)+2>>1]=b[m+(f<<4)+2>>1]|0;b[L+(l<<5)+4>>1]=b[m+(f<<4)+4>>1]|0;b[L+(l<<5)+6>>1]=b[m+(f<<4)+6>>1]|0;b[L+(l<<5)+8>>1]=b[m+(f<<4)+8>>1]|0;b[L+(l<<5)+10>>1]=b[m+(f<<4)+10>>1]|0;c[L+(l<<5)+12>>2]=f;c[L+(l<<5)+16>>2]=n}c[d+168>>2]=c[p>>2];if((a[d+60>>0]|0)==0){break}else{d=d+136|0}}else{d=d+136|0}c[(c[d>>2]|0)+(o<<4)+12>>2]=0-h;i=j;return}}while(0);c[(c[d+96>>2]|0)+(o<<6)+32>>2]=h;i=j;return}function hs(a){a=a|0;var b=0;b=i;is(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function is(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=13568;e=c[b+160>>2]|0;if((e|0)!=0){if((a[b+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+160>>2]=0}a[b+164>>0]=1;c[b+160>>2]=0;c[b+152>>2]=0;c[b+156>>2]=0;e=c[b+136>>2]|0;if((e|0)!=0){if((a[b+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;e=c[b+116>>2]|0;if((e|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;e=c[b+96>>2]|0;if((e|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;e=c[b+76>>2]|0;if((e|0)==0){a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;e=b+72|0;c[e>>2]=0;i=d;return}if((a[b+80>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+76>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;e=b+72|0;c[e>>2]=0;i=d;return}function js(a,b,d,f){a=a|0;b=b|0;d=d|0;f=f|0;var g=0,h=0,j=0;g=i;while(1){j=c[a+12>>2]|0;if(!(((e[f>>1]|0)>=(e[a>>1]|0)?(e[d>>1]|0)<=(e[a+6>>1]|0):0)&(e[d+4>>1]|0)<=(e[a+10>>1]|0)&(e[f+4>>1]|0)>=(e[a+4>>1]|0)&(e[d+2>>1]|0)<=(e[a+8>>1]|0)&(e[f+2>>1]|0)>=(e[a+2>>1]|0))){h=8;break}if((j|0)>-1){break}js(a+16|0,b,d,f);j=c[a+28>>2]|0;if((j|0)>-1){a=a+32|0;continue}else{a=a+(1-j<<4)|0;continue}}if((h|0)==8){i=g;return}ic[c[(c[b>>2]|0)+8>>2]&63](b,j>>21,j&2097151);i=g;return}function ks(a,b,d,e,f,h,j,k){a=a|0;b=b|0;d=d|0;e=+e;f=+f;h=+h;j=j|0;k=k|0;var l=0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0;l=i;i=i+32|0;n=+g[d>>2];o=+g[d+4>>2];I=+g[d+8>>2];S=+g[j>>2];y=(n>e?e:n)+S;T=+g[j+4>>2];A=(o>f?f:o)+T;U=+g[j+8>>2];C=(I>h?h:I)+U;O=+g[k>>2];E=(n<e?e:n)+O;P=+g[k+4>>2];G=(o<f?f:o)+P;R=+g[k+8>>2];J=(I<h?h:I)+R;m=1.0/+Q(+((e-n)*(e-n)+(f-o)*(f-o)+(h-I)*(h-I)));if((e-n)*m==0.0){H=999999984306749400.0}else{H=1.0/((e-n)*m)}if((f-o)*m==0.0){F=999999984306749400.0}else{F=1.0/((f-o)*m)}if((h-I)*m==0.0){D=999999984306749400.0}else{D=1.0/((h-I)*m)}z=H<0.0|0;p=F<0.0|0;B=D<0.0|0;N=c[a+56>>2]|0;a:do{if((N|0)>0){L=0;M=c[a+96>>2]|0;K=1;while(1){c[l+0>>2]=c[M+0>>2];c[l+4>>2]=c[M+4>>2];c[l+8>>2]=c[M+8>>2];c[l+12>>2]=c[M+12>>2];Y=M+16|0;c[l+16>>2]=c[Y+0>>2];c[l+20>>2]=c[Y+4>>2];c[l+24>>2]=c[Y+8>>2];c[l+28>>2]=c[Y+12>>2];g[l>>2]=+g[l>>2]-O;g[l+4>>2]=+g[l+4>>2]-P;g[l+8>>2]=+g[l+8>>2]-R;g[l+16>>2]=+g[l+16>>2]-S;g[l+20>>2]=+g[l+20>>2]-T;g[l+24>>2]=+g[l+24>>2]-U;if(!(y>+g[Y>>2])?!(E<+g[M>>2]):0){V=1}else{V=0}if(!(!(C>+g[M+24>>2])?!(J<+g[M+8>>2]):0)){V=0}if((((!(A>+g[M+20>>2])?!(G<+g[M+4>>2]|V^1):0)?(v=+g[d>>2],x=H*(+g[l+(z<<4)>>2]-v),v=H*(+g[l+((z^1)<<4)>>2]-v),u=+g[d+4>>2],w=F*(+g[l+(p<<4)+4>>2]-u),u=F*(+g[l+((p^1)<<4)+4>>2]-u),!(x>u|w>v)):0)?(t=w>x?w:x,r=u<v?u:v,q=+g[d+8>>2],s=D*(+g[l+(B<<4)+8>>2]-q),q=D*(+g[l+((B^1)<<4)+8>>2]-q),!(t>q|s>r)):0)?(s>t?s:t)<(h-I)*(h-I)*m+((e-n)*(e-n)*m+(f-o)*(f-o)*m):0){Y=(q<r?q:r)>0.0;V=c[M+32>>2]|0;if((V|0)==-1&Y){ic[c[(c[b>>2]|0)+8>>2]&63](b,c[M+36>>2]|0,c[M+40>>2]|0);N=c[a+56>>2]|0;V=24}else{W=V;X=(V|0)==-1;V=23}}else{X=c[M+32>>2]|0;W=X;X=(X|0)==-1;Y=0;V=23}if((V|0)==23){V=0;if(Y|X){V=24}else{L=W+L|0;M=M+(W<<6)|0}}if((V|0)==24){L=L+1|0;M=M+64|0}if((L|0)>=(N|0)){break a}O=+g[k>>2];P=+g[k+4>>2];R=+g[k+8>>2];S=+g[j>>2];T=+g[j+4>>2];U=+g[j+8>>2];K=K+1|0}}else{K=0}}while(0);if((c[3400]|0)>=(K|0)){i=l;return}c[3400]=K;i=l;return}function ls(a,d,f,h,j,k,l,m,n){a=a|0;d=d|0;f=f|0;h=+h;j=+j;k=+k;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0.0,W=0.0,X=0,Y=0,Z=0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0,da=0.0,ea=0,fa=0.0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0;o=i;i=i+32|0;q=+g[f>>2];r=+g[f+4>>2];G=+g[f+8>>2];E=1.0/+Q(+((h-q)*(h-q)+(j-r)*(j-r)+(k-G)*(k-G)));if((h-q)*E==0.0){A=999999984306749400.0}else{A=1.0/((h-q)*E)}if((j-r)*E==0.0){B=999999984306749400.0}else{B=1.0/((j-r)*E)}if((k-G)*E==0.0){C=999999984306749400.0}else{C=1.0/((k-G)*E)}p=A<0.0|0;F=B<0.0|0;D=C<0.0|0;N=(q>h?h:q)+ +g[l>>2];O=(r>j?j:r)+ +g[l+4>>2];P=(G>k?k:G)+ +g[l+8>>2];$=(q<h?h:q)+ +g[m>>2];U=(r<j?j:r)+ +g[m+4>>2];S=(G<k?k:G)+ +g[m+8>>2];M=+g[a+4>>2];ga=N<M?M:N;N=+g[a+8>>2];da=O<N?N:O;O=+g[a+12>>2];fa=P<O?O:P;aa=+g[a+20>>2];W=+g[a+24>>2];R=+g[a+28>>2];_=+g[a+36>>2];V=+g[a+40>>2];P=+g[a+44>>2];H=~~(((aa<ga?aa:ga)-M)*_)&65535&65534;I=~~(((W<da?W:da)-N)*V)&65535&65534;J=~~(((R<fa?R:fa)-O)*P)&65535&65534;$=$<M?M:$;U=U<N?N:U;S=S<O?O:S;K=(~~(((aa<$?aa:$)-M)*_+1.0)&65535|1)&65535;L=(~~(((W<U?W:U)-N)*V+1.0)&65535|1)&65535;T=(~~(((R<S?R:S)-O)*P+1.0)&65535|1)&65535;if((n|0)>0){X=0;Y=c[a+136>>2]|0;Z=0;do{Z=Z+1|0;la=Y+6|0;ea=b[Y>>1]|0;ia=Y+10|0;ha=b[Y+4>>1]|0;ja=Y+8|0;ka=b[Y+2>>1]|0;ca=Y+12|0;ba=(c[ca>>2]|0)>-1;if(((((K&65535)>=(ea&65535)?(H&65535)<=(e[la>>1]|0):0)&(J&65535)<=(e[ia>>1]|0)&(T&65535)>=(ha&65535)&(I&65535)<=(e[ja>>1]|0)&(L&65535)>=(ka&65535)?($=+g[a+36>>2],da=+g[a+40>>2],ga=+g[a+44>>2],aa=+g[a+4>>2],fa=+g[a+8>>2],y=+g[a+12>>2],g[o+12>>2]=0.0,w=+(e[la>>1]|0)/$+aa,z=+(e[ja>>1]|0)/da+fa,x=+(e[ia>>1]|0)/ga+y,g[o+28>>2]=0.0,g[o>>2]=+(ea&65535)/$+aa- +g[m>>2],g[o+4>>2]=+(ka&65535)/da+fa- +g[m+4>>2],g[o+8>>2]=+(ha&65535)/ga+y- +g[m+8>>2],g[o+16>>2]=w- +g[l>>2],g[o+20>>2]=z- +g[l+4>>2],g[o+24>>2]=x- +g[l+8>>2],x=+g[f>>2],z=A*(+g[o+(p<<4)>>2]-x),x=A*(+g[o+((p^1)<<4)>>2]-x),w=+g[f+4>>2],y=B*(+g[o+(F<<4)+4>>2]-w),w=B*(+g[o+((F^1)<<4)+4>>2]-w),!(z>w|y>x)):0)?(v=y>z?y:z,t=w<x?w:x,s=+g[f+8>>2],u=C*(+g[o+(D<<4)+8>>2]-s),s=C*(+g[o+((D^1)<<4)+8>>2]-s),!(v>s|u>t)):0)?(u>v?u:v)<(k-G)*(k-G)*E+((h-q)*(h-q)*E+(j-r)*(j-r)*E):0){ha=!((s<t?s:t)>0.0);if(ha|ba^1){ea=15}else{ea=c[ca>>2]|0;ic[c[(c[d>>2]|0)+8>>2]&63](d,ea>>21,ea&2097151);ea=16}}else{ha=1;ea=15}if((ea|0)==15){ea=0;if(ba|ha^1){ea=16}else{la=c[ca>>2]|0;X=X-la|0;Y=Y+(0-la<<4)|0}}if((ea|0)==16){X=X+1|0;Y=Y+16|0}}while((X|0)<(n|0))}else{Z=0}if((c[3400]|0)>=(Z|0)){i=o;return}c[3400]=Z;i=o;return}function ms(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;c[d+168>>2]=c[d+152>>2];c[f>>2]=13568;c[f+52>>2]=282;a[f+60>>0]=0;a[f+80>>0]=1;c[f+76>>2]=0;c[f+68>>2]=0;c[f+72>>2]=0;a[f+100>>0]=1;c[f+96>>2]=0;c[f+88>>2]=0;c[f+92>>2]=0;a[f+120>>0]=1;c[f+116>>2]=0;c[f+108>>2]=0;c[f+112>>2]=0;a[f+140>>0]=1;c[f+136>>2]=0;c[f+128>>2]=0;c[f+132>>2]=0;c[f+144>>2]=0;a[f+164>>0]=1;c[f+160>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+168>>2]=0;g[f+4>>2]=-3.4028234663852886e+38;g[f+8>>2]=-3.4028234663852886e+38;g[f+12>>2]=-3.4028234663852886e+38;g[f+16>>2]=0.0;g[f+20>>2]=3.4028234663852886e+38;g[f+24>>2]=3.4028234663852886e+38;g[f+28>>2]=3.4028234663852886e+38;g[f+32>>2]=0.0;k=c[d+56>>2]|0;if(j){c[f+56>>2]=ow(k|0)|0;a[f+4>>0]=a[d+7>>0]|0;a[f+5>>0]=a[d+6>>0]|0;a[f+6>>0]=a[d+5>>0]|0;a[f+7>>0]=a[d+4>>0]|0;a[f+8>>0]=a[d+11>>0]|0;a[f+9>>0]=a[d+10>>0]|0;a[f+10>>0]=a[d+9>>0]|0;a[f+11>>0]=a[d+8>>0]|0;a[f+12>>0]=a[d+15>>0]|0;a[f+13>>0]=a[d+14>>0]|0;a[f+14>>0]=a[d+13>>0]|0;a[f+15>>0]=a[d+12>>0]|0;a[f+16>>0]=a[d+19>>0]|0;a[f+17>>0]=a[d+18>>0]|0;a[f+18>>0]=a[d+17>>0]|0;a[f+19>>0]=a[d+16>>0]|0;a[f+20>>0]=a[d+23>>0]|0;a[f+21>>0]=a[d+22>>0]|0;a[f+22>>0]=a[d+21>>0]|0;a[f+23>>0]=a[d+20>>0]|0;a[f+24>>0]=a[d+27>>0]|0;a[f+25>>0]=a[d+26>>0]|0;a[f+26>>0]=a[d+25>>0]|0;a[f+27>>0]=a[d+24>>0]|0;a[f+28>>0]=a[d+31>>0]|0;a[f+29>>0]=a[d+30>>0]|0;a[f+30>>0]=a[d+29>>0]|0;a[f+31>>0]=a[d+28>>0]|0;a[f+32>>0]=a[d+35>>0]|0;a[f+33>>0]=a[d+34>>0]|0;a[f+34>>0]=a[d+33>>0]|0;a[f+35>>0]=a[d+32>>0]|0;a[f+36>>0]=a[d+39>>0]|0;a[f+37>>0]=a[d+38>>0]|0;a[f+38>>0]=a[d+37>>0]|0;a[f+39>>0]=a[d+36>>0]|0;a[f+40>>0]=a[d+43>>0]|0;a[f+41>>0]=a[d+42>>0]|0;a[f+42>>0]=a[d+41>>0]|0;a[f+43>>0]=a[d+40>>0]|0;a[f+44>>0]=a[d+47>>0]|0;a[f+45>>0]=a[d+46>>0]|0;a[f+46>>0]=a[d+45>>0]|0;a[f+47>>0]=a[d+44>>0]|0;a[f+48>>0]=a[d+51>>0]|0;a[f+49>>0]=a[d+50>>0]|0;a[f+50>>0]=a[d+49>>0]|0;a[f+51>>0]=a[d+48>>0]|0;c[f+144>>2]=ow(c[d+144>>2]|0)|0;k=ow(c[d+168>>2]|0)|0}else{c[f+56>>2]=k;c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];c[f+16>>2]=c[d+16>>2];c[f+20>>2]=c[d+20>>2];c[f+24>>2]=c[d+24>>2];c[f+28>>2]=c[d+28>>2];c[f+32>>2]=c[d+32>>2];c[f+36>>2]=c[d+36>>2];c[f+40>>2]=c[d+40>>2];c[f+44>>2]=c[d+44>>2];c[f+48>>2]=c[d+48>>2];c[f+144>>2]=c[d+144>>2];k=c[d+168>>2]|0}c[f+168>>2]=k;a[f+60>>0]=a[d+60>>0]|0;k=c[d+56>>2]|0;if((a[d+60>>0]|0)==0){l=c[f+96>>2]|0;if((l|0)!=0){if((a[f+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[f+96>>2]=0}c[f+88>>2]=0;c[f+92>>2]=0;c[f+96>>2]=0;a[f+100>>0]=0;c[f+96>>2]=f+172;c[f+88>>2]=k;c[f+92>>2]=k;if(j){if((k|0)>0){l=c[d+96>>2]|0;n=f+172|0;m=0;do{o=l+(m<<6)|0;q=n+(m<<6)|0;a[q>>0]=a[o+3>>0]|0;a[q+1>>0]=a[o+2>>0]|0;a[q+2>>0]=a[o+1>>0]|0;a[q+3>>0]=a[o>>0]|0;q=l+(m<<6)+4|0;o=n+(m<<6)+4|0;a[o>>0]=a[q+3>>0]|0;a[o+1>>0]=a[q+2>>0]|0;a[o+2>>0]=a[q+1>>0]|0;a[o+3>>0]=a[q>>0]|0;o=l+(m<<6)+8|0;q=n+(m<<6)+8|0;a[q>>0]=a[o+3>>0]|0;a[q+1>>0]=a[o+2>>0]|0;a[q+2>>0]=a[o+1>>0]|0;a[q+3>>0]=a[o>>0]|0;q=l+(m<<6)+12|0;n=n+(m<<6)+12|0;a[n>>0]=a[q+3>>0]|0;a[n+1>>0]=a[q+2>>0]|0;a[n+2>>0]=a[q+1>>0]|0;a[n+3>>0]=a[q>>0]|0;n=c[d+96>>2]|0;q=n+(m<<6)+16|0;o=c[f+96>>2]|0;p=o+(m<<6)+16|0;a[p>>0]=a[q+3>>0]|0;a[p+1>>0]=a[q+2>>0]|0;a[p+2>>0]=a[q+1>>0]|0;a[p+3>>0]=a[q>>0]|0;p=n+(m<<6)+20|0;q=o+(m<<6)+20|0;a[q>>0]=a[p+3>>0]|0;a[q+1>>0]=a[p+2>>0]|0;a[q+2>>0]=a[p+1>>0]|0;a[q+3>>0]=a[p>>0]|0;q=n+(m<<6)+24|0;p=o+(m<<6)+24|0;a[p>>0]=a[q+3>>0]|0;a[p+1>>0]=a[q+2>>0]|0;a[p+2>>0]=a[q+1>>0]|0;a[p+3>>0]=a[q>>0]|0;n=n+(m<<6)+28|0;o=o+(m<<6)+28|0;a[o>>0]=a[n+3>>0]|0;a[o+1>>0]=a[n+2>>0]|0;a[o+2>>0]=a[n+1>>0]|0;a[o+3>>0]=a[n>>0]|0;l=c[d+96>>2]|0;o=ow(c[l+(m<<6)+32>>2]|0)|0;n=c[f+96>>2]|0;c[n+(m<<6)+32>>2]=o;c[n+(m<<6)+36>>2]=ow(c[l+(m<<6)+36>>2]|0)|0;c[n+(m<<6)+40>>2]=ow(c[l+(m<<6)+40>>2]|0)|0;m=m+1|0}while((m|0)!=(k|0))}else{n=f+172|0}}else{if((k|0)>0){n=f+172|0;l=c[d+96>>2]|0;m=0;do{n=n+(m<<6)|0;q=l+(m<<6)|0;c[n+0>>2]=c[q+0>>2];c[n+4>>2]=c[q+4>>2];c[n+8>>2]=c[q+8>>2];c[n+12>>2]=c[q+12>>2];n=(c[f+96>>2]|0)+(m<<6)+16|0;q=(c[d+96>>2]|0)+(m<<6)+16|0;c[n+0>>2]=c[q+0>>2];c[n+4>>2]=c[q+4>>2];c[n+8>>2]=c[q+8>>2];c[n+12>>2]=c[q+12>>2];l=c[d+96>>2]|0;n=c[f+96>>2]|0;c[n+(m<<6)+32>>2]=c[l+(m<<6)+32>>2];c[n+(m<<6)+36>>2]=c[l+(m<<6)+36>>2];c[n+(m<<6)+40>>2]=c[l+(m<<6)+40>>2];m=m+1|0}while((m|0)!=(k|0))}else{n=f+172|0}}if((n|0)!=0){if((a[f+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0)}c[f+96>>2]=0}c[f+88>>2]=0;c[f+92>>2]=0;c[f+96>>2]=0;a[f+100>>0]=0;k=k<<6}else{l=c[f+136>>2]|0;if((l|0)!=0){if((a[f+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[f+136>>2]=0}c[f+128>>2]=0;c[f+132>>2]=0;c[f+136>>2]=0;a[f+140>>0]=0;c[f+136>>2]=f+172;c[f+128>>2]=k;c[f+132>>2]=k;if(j){if((k|0)>0){l=c[d+136>>2]|0;m=0;do{q=e[l+(m<<4)>>1]|0;b[f+172+(m<<4)>>1]=q>>>8|q<<8;q=e[l+(m<<4)+2>>1]|0;b[f+172+(m<<4)+2>>1]=q>>>8|q<<8;q=e[l+(m<<4)+4>>1]|0;b[f+172+(m<<4)+4>>1]=q>>>8|q<<8;q=e[l+(m<<4)+6>>1]|0;b[f+172+(m<<4)+6>>1]=q>>>8|q<<8;q=e[l+(m<<4)+8>>1]|0;b[f+172+(m<<4)+8>>1]=q>>>8|q<<8;q=e[l+(m<<4)+10>>1]|0;b[f+172+(m<<4)+10>>1]=q>>>8|q<<8;c[f+172+(m<<4)+12>>2]=ow(c[l+(m<<4)+12>>2]|0)|0;m=m+1|0}while((m|0)!=(k|0))}}else{if((k|0)>0){l=c[d+136>>2]|0;m=0;do{b[f+172+(m<<4)>>1]=b[l+(m<<4)>>1]|0;b[f+172+(m<<4)+2>>1]=b[l+(m<<4)+2>>1]|0;b[f+172+(m<<4)+4>>1]=b[l+(m<<4)+4>>1]|0;b[f+172+(m<<4)+6>>1]=b[l+(m<<4)+6>>1]|0;b[f+172+(m<<4)+8>>1]=b[l+(m<<4)+8>>1]|0;b[f+172+(m<<4)+10>>1]=b[l+(m<<4)+10>>1]|0;c[f+172+(m<<4)+12>>2]=c[l+(m<<4)+12>>2];m=m+1|0}while((m|0)!=(k|0))}}c[f+128>>2]=0;c[f+132>>2]=0;c[f+136>>2]=0;a[f+140>>0]=0;k=k<<4}k=f+(k+172)|0;m=c[d+168>>2]|0;l=c[f+160>>2]|0;if((l|0)!=0){if((a[f+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[f+160>>2]=0}c[f+152>>2]=0;c[f+156>>2]=0;c[f+160>>2]=0;a[f+164>>0]=0;c[f+160>>2]=k;c[f+152>>2]=m;c[f+156>>2]=m;l=(c[d+168>>2]|0)>0;if(j){if(!l){c[f>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+160>>2]=0;a[f+164>>0]=0;i=h;return 1}l=c[d+160>>2]|0;j=0;do{q=e[l+(j<<5)>>1]|0;b[k+(j<<5)>>1]=q>>>8|q<<8;q=e[l+(j<<5)+2>>1]|0;b[k+(j<<5)+2>>1]=q>>>8|q<<8;q=e[l+(j<<5)+4>>1]|0;b[k+(j<<5)+4>>1]=q>>>8|q<<8;q=e[l+(j<<5)+6>>1]|0;b[k+(j<<5)+6>>1]=q>>>8|q<<8;q=e[l+(j<<5)+8>>1]|0;b[k+(j<<5)+8>>1]=q>>>8|q<<8;q=e[l+(j<<5)+10>>1]|0;b[k+(j<<5)+10>>1]=q>>>8|q<<8;c[k+(j<<5)+12>>2]=ow(c[l+(j<<5)+12>>2]|0)|0;c[k+(j<<5)+16>>2]=ow(c[l+(j<<5)+16>>2]|0)|0;j=j+1|0}while((j|0)<(c[d+168>>2]|0));c[f>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+160>>2]=0;a[f+164>>0]=0;i=h;return 1}else{if(!l){c[f>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+160>>2]=0;a[f+164>>0]=0;i=h;return 1}j=c[d+160>>2]|0;l=0;do{b[k+(l<<5)>>1]=b[j+(l<<5)>>1]|0;b[k+(l<<5)+2>>1]=b[j+(l<<5)+2>>1]|0;b[k+(l<<5)+4>>1]=b[j+(l<<5)+4>>1]|0;b[k+(l<<5)+6>>1]=b[j+(l<<5)+6>>1]|0;b[k+(l<<5)+8>>1]=b[j+(l<<5)+8>>1]|0;b[k+(l<<5)+10>>1]=b[j+(l<<5)+10>>1]|0;c[k+(l<<5)+12>>2]=c[j+(l<<5)+12>>2];c[k+(l<<5)+16>>2]=c[j+(l<<5)+16>>2];c[k+(l<<5)+20>>2]=0;c[k+(l<<5)+24>>2]=0;c[k+(l<<5)+28>>2]=0;l=l+1|0}while((l|0)<(c[d+168>>2]|0));c[f>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+160>>2]=0;a[f+164>>0]=0;i=h;return 1}return 0}function ns(d,e){d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+112|0;g[d+20>>2]=+g[e+16>>2];g[d+24>>2]=+g[e+20>>2];g[d+28>>2]=+g[e+24>>2];g[d+32>>2]=+g[e+28>>2];g[d+4>>2]=+g[e>>2];g[d+8>>2]=+g[e+4>>2];g[d+12>>2]=+g[e+8>>2];g[d+16>>2]=+g[e+12>>2];g[d+36>>2]=+g[e+32>>2];g[d+40>>2]=+g[e+36>>2];g[d+44>>2]=+g[e+40>>2];g[d+48>>2]=+g[e+44>>2];c[d+56>>2]=c[e+48>>2];a[d+60>>0]=(c[e+52>>2]|0)!=0|0;h=c[e+56>>2]|0;l=f+48|0;m=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));j=c[d+88>>2]|0;if((j|0)<(h|0)){if((c[d+92>>2]|0)<(h|0)){if((h|0)==0){n=j;o=0}else{c[4336]=(c[4336]|0)+1;k=cw(h<<6|19)|0;if((k|0)==0){o=0}else{c[(k+19&-16)+ -4>>2]=k;o=k+19&-16}n=c[d+88>>2]|0}if((n|0)>0){p=0;do{l=o+(p<<6)+0|0;k=(c[d+96>>2]|0)+(p<<6)+0|0;m=l+64|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(m|0));p=p+1|0}while((p|0)!=(n|0))}k=c[d+96>>2]|0;if((k|0)!=0){if((a[d+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0)}c[d+96>>2]=0}a[d+100>>0]=1;c[d+96>>2]=o;c[d+92>>2]=h;n=d+96|0}else{n=d+96|0}do{l=(c[n>>2]|0)+(j<<6)+0|0;k=f+48|0;m=l+64|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(m|0));j=j+1|0}while((j|0)!=(h|0))}c[d+88>>2]=h;if((h|0)>0){l=c[d+96>>2]|0;k=0;j=c[e+64>>2]|0;while(1){g[l+(k<<6)+16>>2]=+g[j+16>>2];g[l+(k<<6)+20>>2]=+g[j+20>>2];g[l+(k<<6)+24>>2]=+g[j+24>>2];g[l+(k<<6)+28>>2]=+g[j+28>>2];g[l+(k<<6)>>2]=+g[j>>2];g[l+(k<<6)+4>>2]=+g[j+4>>2];g[l+(k<<6)+8>>2]=+g[j+8>>2];g[l+(k<<6)+12>>2]=+g[j+12>>2];c[l+(k<<6)+32>>2]=c[j+32>>2];c[l+(k<<6)+36>>2]=c[j+36>>2];c[l+(k<<6)+40>>2]=c[j+40>>2];k=k+1|0;if((k|0)==(h|0)){break}else{j=j+48|0}}}h=c[e+60>>2]|0;c[f+32>>2]=0;c[f+36>>2]=0;c[f+40>>2]=0;c[f+44>>2]=0;j=c[d+128>>2]|0;if((j|0)<(h|0)){if((c[d+132>>2]|0)<(h|0)){if((h|0)==0){k=j;l=0}else{c[4336]=(c[4336]|0)+1;k=cw((h<<4|3)+16|0)|0;if((k|0)==0){l=0}else{c[(k+19&-16)+ -4>>2]=k;l=k+19&-16}k=c[d+128>>2]|0}if((k|0)>0){m=0;do{p=l+(m<<4)|0;o=(c[d+136>>2]|0)+(m<<4)|0;c[p+0>>2]=c[o+0>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];m=m+1|0}while((m|0)!=(k|0))}k=c[d+136>>2]|0;if((k|0)!=0){if((a[d+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=l;c[d+132>>2]=h;k=d+136|0}else{k=d+136|0}do{p=(c[k>>2]|0)+(j<<4)|0;c[p+0>>2]=c[f+32>>2];c[p+4>>2]=c[f+36>>2];c[p+8>>2]=c[f+40>>2];c[p+12>>2]=c[f+44>>2];j=j+1|0}while((j|0)!=(h|0))}c[d+128>>2]=h;if((h|0)>0){j=c[d+136>>2]|0;l=0;k=c[e+68>>2]|0;while(1){c[j+(l<<4)+12>>2]=c[k+12>>2];b[j+(l<<4)+6>>1]=b[k+6>>1]|0;b[j+(l<<4)+8>>1]=b[k+8>>1]|0;b[j+(l<<4)+10>>1]=b[k+10>>1]|0;b[j+(l<<4)>>1]=b[k>>1]|0;b[j+(l<<4)+2>>1]=b[k+2>>1]|0;b[j+(l<<4)+4>>1]=b[k+4>>1]|0;l=l+1|0;if((l|0)==(h|0)){break}else{k=k+16|0}}}c[d+144>>2]=c[e+76>>2];h=c[e+80>>2]|0;j=c[d+152>>2]|0;if((j|0)<(h|0)){if((c[d+156>>2]|0)<(h|0)){if((h|0)==0){k=j;l=0}else{c[4336]=(c[4336]|0)+1;k=cw(h<<5|19)|0;if((k|0)==0){l=0}else{c[(k+19&-16)+ -4>>2]=k;l=k+19&-16}k=c[d+152>>2]|0}if((k|0)>0){m=0;do{p=l+(m<<5)|0;o=(c[d+160>>2]|0)+(m<<5)|0;c[p+0>>2]=c[o+0>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];c[p+16>>2]=c[o+16>>2];c[p+20>>2]=c[o+20>>2];c[p+24>>2]=c[o+24>>2];c[p+28>>2]=c[o+28>>2];m=m+1|0}while((m|0)!=(k|0))}k=c[d+160>>2]|0;if((k|0)!=0){if((a[d+164>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=l;c[d+156>>2]=h;k=d+160|0}else{k=d+160|0}do{p=(c[k>>2]|0)+(j<<5)|0;c[p+0>>2]=c[f+0>>2];c[p+4>>2]=c[f+4>>2];c[p+8>>2]=c[f+8>>2];c[p+12>>2]=c[f+12>>2];c[p+16>>2]=c[f+16>>2];c[p+20>>2]=c[f+20>>2];c[p+24>>2]=c[f+24>>2];c[p+28>>2]=c[f+28>>2];j=j+1|0}while((j|0)!=(h|0))}c[d+152>>2]=h;if((h|0)<=0){i=f;return}j=c[d+160>>2]|0;d=0;e=c[e+72>>2]|0;while(1){b[j+(d<<5)+6>>1]=b[e+14>>1]|0;b[j+(d<<5)+8>>1]=b[e+16>>1]|0;b[j+(d<<5)+10>>1]=b[e+18>>1]|0;b[j+(d<<5)>>1]=b[e+8>>1]|0;b[j+(d<<5)+2>>1]=b[e+10>>1]|0;b[j+(d<<5)+4>>1]=b[e+12>>1]|0;c[j+(d<<5)+12>>2]=c[e>>2];c[j+(d<<5)+16>>2]=c[e+4>>2];d=d+1|0;if((d|0)==(h|0)){break}else{e=e+20|0}}i=f;return}



function ii(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0;h=i;i=i+448|0;if((a[b+527>>0]|0)==0){i=h;return}O=c[b+28>>2]|0;I=+g[b+348>>2];z=+g[b+352>>2];F=+g[b+356>>2];C=+g[O+52>>2];D=I*+g[O+4>>2]+z*+g[O+8>>2]+F*+g[O+12>>2]+C;A=+g[O+56>>2];B=I*+g[O+20>>2]+z*+g[O+24>>2]+F*+g[O+28>>2]+A;E=+g[O+60>>2];F=I*+g[O+36>>2]+z*+g[O+40>>2]+F*+g[O+44>>2]+E;O=c[b+32>>2]|0;z=+g[b+412>>2];I=+g[b+416>>2];u=+g[b+420>>2];H=+g[O+52>>2];w=z*+g[O+4>>2]+I*+g[O+8>>2]+u*+g[O+12>>2]+H;G=+g[O+56>>2];p=z*+g[O+20>>2]+I*+g[O+24>>2]+u*+g[O+28>>2]+G;v=+g[O+60>>2];u=z*+g[O+36>>2]+I*+g[O+40>>2]+u*+g[O+44>>2]+v;if((a[b+524>>0]|0)==0){s=+g[d+192>>2]+ +g[d+80>>2];t=+g[d+196>>2]+ +g[d+84>>2];r=+g[d+200>>2]+ +g[d+88>>2];I=+g[e+192>>2]+ +g[e+80>>2];x=+g[e+196>>2]+ +g[e+84>>2];y=+g[e+200>>2]+ +g[e+88>>2];z=+g[d+176>>2]+ +g[d+64>>2]+((F-E)*t-(B-A)*r)-(+g[e+176>>2]+ +g[e+64>>2]+((u-v)*x-(p-G)*y));y=+g[d+180>>2]+ +g[d+68>>2]+((D-C)*r-(F-E)*s)-(+g[e+180>>2]+ +g[e+68>>2]+((w-H)*y-(u-v)*I));x=+g[d+184>>2]+ +g[d+72>>2]+((B-A)*s-(D-C)*t)-(+g[e+184>>2]+ +g[e+72>>2]+((p-G)*I-(w-H)*x));j=c[d+240>>2]|0;n=0;do{q=1.0/+g[b+(n*84|0)+128>>2];m=b+(n*84|0)+48|0;s=+g[m>>2];k=b+(n*84|0)+52|0;r=+g[k>>2];l=b+(n*84|0)+56|0;t=+g[l>>2];t=q*(((D-w)*s+(B-p)*r+(F-u)*t)*-.30000001192092896/f)-q*(z*s+y*r+x*t);g[b+36>>2]=+g[b+36>>2]+t;r=+g[l>>2];s=+g[k>>2];q=+g[m>>2];o=c[b+28>>2]|0;I=+g[o+344>>2];if((j|0)!=0){S=((F-E)*q-(D-C)*r)*+g[o+300>>2]+((B-A)*r-(F-E)*s)*+g[o+296>>2]+((D-C)*s-(B-A)*q)*+g[o+304>>2];P=((F-E)*q-(D-C)*r)*+g[o+284>>2]+((B-A)*r-(F-E)*s)*+g[o+280>>2]+((D-C)*s-(B-A)*q)*+g[o+288>>2];R=((F-E)*q-(D-C)*r)*+g[o+268>>2]+((B-A)*r-(F-E)*s)*+g[o+264>>2]+((D-C)*s-(B-A)*q)*+g[o+272>>2];U=t*s*I*+g[d+116>>2];T=t*r*I*+g[d+120>>2];g[d+64>>2]=t*q*I*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=U+ +g[d+68>>2];g[d+72>>2]=T+ +g[d+72>>2];P=P*t*+g[d+100>>2];I=S*t*+g[d+104>>2];g[d+80>>2]=R*t*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=P+ +g[d+84>>2];g[d+88>>2]=I+ +g[d+88>>2]}o=c[b+32>>2]|0;I=+g[o+344>>2];if((c[e+240>>2]|0)!=0){U=((u-v)*q-(w-H)*r)*+g[o+300>>2]+((p-G)*r-(u-v)*s)*+g[o+296>>2]+((w-H)*s-(p-G)*q)*+g[o+304>>2];T=((u-v)*q-(w-H)*r)*+g[o+284>>2]+((p-G)*r-(u-v)*s)*+g[o+280>>2]+((w-H)*s-(p-G)*q)*+g[o+288>>2];S=((u-v)*q-(w-H)*r)*+g[o+268>>2]+((p-G)*r-(u-v)*s)*+g[o+264>>2]+((w-H)*s-(p-G)*q)*+g[o+272>>2];P=I*+g[k>>2]*-t*+g[e+116>>2];R=I*+g[l>>2]*-t*+g[e+120>>2];g[e+64>>2]=+g[e+112>>2]*I*+g[m>>2]*-t+ +g[e+64>>2];g[e+68>>2]=P+ +g[e+68>>2];g[e+72>>2]=R+ +g[e+72>>2];T=T*+g[e+100>>2]*-t;U=U*+g[e+104>>2]*-t;g[e+80>>2]=S*+g[e+96>>2]*-t+ +g[e+80>>2];g[e+84>>2]=T+ +g[e+84>>2];g[e+88>>2]=U+ +g[e+88>>2]}n=n+1|0}while((n|0)!=3)}do{if((a[b+552>>0]|0)==0){q=+g[b+440>>2];if(!(q>1.1920928955078125e-7)){L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0;break}z=+g[e+192>>2]+ +g[e+80>>2]-(+g[d+192>>2]+ +g[d+80>>2]);B=+g[e+196>>2]+ +g[e+84>>2]-(+g[d+196>>2]+ +g[d+84>>2]);A=+g[e+200>>2]+ +g[e+88>>2]-(+g[d+200>>2]+ +g[d+88>>2]);if(z*z+B*B+A*A>1.1920928955078125e-7){U=1.0/+Q(+(z*z+B*B+A*A));j=c[b+28>>2]|0;s=+g[j+264>>2];x=+g[j+280>>2];u=+g[j+296>>2];t=+g[j+268>>2];y=+g[j+284>>2];v=+g[j+300>>2];r=+g[j+272>>2];w=+g[j+288>>2];p=+g[j+304>>2];j=c[b+32>>2]|0;U=q*(1.0/(z*U*(z*U*s+B*U*x+A*U*u)+B*U*(z*U*t+B*U*y+A*U*v)+A*U*(z*U*r+B*U*w+A*U*p)+(z*U*(z*U*+g[j+264>>2]+B*U*+g[j+280>>2]+A*U*+g[j+296>>2])+B*U*(z*U*+g[j+268>>2]+B*U*+g[j+284>>2]+A*U*+g[j+300>>2])+A*U*(z*U*+g[j+272>>2]+B*U*+g[j+288>>2]+A*U*+g[j+304>>2]))));q=+Q(+(A*U*A*U+(z*U*z*U+B*U*B*U)));z=1.0/q*z*U;B=1.0/q*B*U;A=1.0/q*A*U;if((c[d+240>>2]|0)!=0){U=q*0.0*+g[d+116>>2];T=q*0.0*+g[d+120>>2];g[d+64>>2]=q*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=U+ +g[d+68>>2];g[d+72>>2]=T+ +g[d+72>>2];T=(B*y+z*x+A*w)*q*+g[d+100>>2];U=(B*v+z*u+A*p)*q*+g[d+104>>2];g[d+80>>2]=(B*t+z*s+A*r)*q*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=T+ +g[d+84>>2];g[d+88>>2]=U+ +g[d+88>>2];j=c[b+32>>2]|0}if((c[e+240>>2]|0)!=0){U=B*+g[j+300>>2]+z*+g[j+296>>2]+A*+g[j+304>>2];T=B*+g[j+284>>2]+z*+g[j+280>>2]+A*+g[j+288>>2];S=B*+g[j+268>>2]+z*+g[j+264>>2]+A*+g[j+272>>2];P=q*-0.0*+g[e+116>>2];R=q*-0.0*+g[e+120>>2];g[e+64>>2]=q*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=P+ +g[e+68>>2];g[e+72>>2]=R+ +g[e+72>>2];T=T*+g[e+100>>2]*-q;U=U*+g[e+104>>2]*-q;g[e+80>>2]=S*+g[e+96>>2]*-q+ +g[e+80>>2];g[e+84>>2]=T+ +g[e+84>>2];g[e+88>>2]=U+ +g[e+88>>2];L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0}else{L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0}}else{L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0}}else{N=c[b+28>>2]|0;c[h+352>>2]=c[N+4>>2];c[h+356>>2]=c[N+8>>2];c[h+360>>2]=c[N+12>>2];c[h+364>>2]=c[N+16>>2];c[h+368>>2]=c[N+20>>2];c[h+372>>2]=c[N+24>>2];c[h+376>>2]=c[N+28>>2];c[h+380>>2]=c[N+32>>2];c[h+384>>2]=c[N+36>>2];c[h+388>>2]=c[N+40>>2];c[h+392>>2]=c[N+44>>2];c[h+396>>2]=c[N+48>>2];c[h+400>>2]=c[N+52>>2];c[h+404>>2]=c[N+56>>2];c[h+408>>2]=c[N+60>>2];c[h+412>>2]=c[N+64>>2];N=c[b+32>>2]|0;c[h+288>>2]=c[N+4>>2];c[h+292>>2]=c[N+8>>2];c[h+296>>2]=c[N+12>>2];c[h+300>>2]=c[N+16>>2];c[h+304>>2]=c[N+20>>2];c[h+308>>2]=c[N+24>>2];c[h+312>>2]=c[N+28>>2];c[h+316>>2]=c[N+32>>2];c[h+320>>2]=c[N+36>>2];c[h+324>>2]=c[N+40>>2];c[h+328>>2]=c[N+44>>2];c[h+332>>2]=c[N+48>>2];c[h+336>>2]=c[N+52>>2];c[h+340>>2]=c[N+56>>2];c[h+344>>2]=c[N+60>>2];c[h+348>>2]=c[N+64>>2];S=+g[d+196>>2]+ +g[d+84>>2];C=+g[d+200>>2]+ +g[d+88>>2];g[h+272>>2]=+g[d+192>>2]+ +g[d+80>>2];g[h+276>>2]=S;g[h+280>>2]=C;g[h+284>>2]=0.0;C=+g[e+196>>2]+ +g[e+84>>2];S=+g[e+200>>2]+ +g[e+88>>2];g[h+256>>2]=+g[e+192>>2]+ +g[e+80>>2];g[h+260>>2]=C;g[h+264>>2]=S;g[h+268>>2]=0.0;g[h+192>>2]=1.0;N=h+196|0;c[N+0>>2]=0;c[N+4>>2]=0;c[N+8>>2]=0;c[N+12>>2]=0;g[h+212>>2]=1.0;O=h+216|0;c[O+0>>2]=0;c[O+4>>2]=0;c[O+8>>2]=0;c[O+12>>2]=0;g[h+232>>2]=1.0;L=h+236|0;c[L+0>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;c[L+16>>2]=0;ji(h+352|0,0.0,0.0,0.0,h+272|0,f,h+192|0);g[h+128>>2]=1.0;L=h+132|0;c[L+0>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;g[h+148>>2]=1.0;M=h+152|0;c[M+0>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;g[h+168>>2]=1.0;K=h+172|0;c[K+0>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;c[K+16>>2]=0;ji(h+288|0,0.0,0.0,0.0,h+256|0,f,h+128|0);S=+g[b+556>>2];C=+g[b+560>>2];T=+g[b+564>>2];D=+g[b+568>>2];G=S*(2.0/(S*S+C*C+T*T+D*D));s=C*(2.0/(S*S+C*C+T*T+D*D));H=T*(2.0/(S*S+C*C+T*T+D*D));W=+g[b+364>>2];V=+g[b+368>>2];Z=+g[b+372>>2];w=(S*H-D*s)*Z+(V*(S*s+D*H)+W*(1.0-(C*s+T*H)));x=Z*(C*H+D*G)+(W*(S*s-D*H)+V*(1.0-(S*G+T*H)));y=W*(S*H+D*s)+V*(C*H-D*G)+Z*(1.0-(S*G+C*s));v=+g[b+380>>2];F=+g[b+384>>2];q=+g[b+388>>2];z=(1.0-(C*s+T*H))*v+(S*s+D*H)*F+(S*H-D*s)*q;A=(S*s-D*H)*v+(1.0-(S*G+T*H))*F+(C*H+D*G)*q;B=(S*H+D*s)*v+(C*H-D*G)*F+(1.0-(S*G+C*s))*q;P=+g[b+396>>2];p=+g[b+400>>2];r=+g[b+404>>2];R=(1.0-(C*s+T*H))*P+(S*s+D*H)*p+(S*H-D*s)*r;T=(S*s-D*H)*P+(1.0-(S*G+T*H))*p+(C*H+D*G)*r;s=(S*H+D*s)*P+(C*H-D*G)*p+(1.0-(S*G+C*s))*r;C=+g[b+300>>2];G=+g[b+316>>2];S=+g[b+332>>2];D=+g[b+304>>2];H=+g[b+320>>2];U=+g[b+336>>2];E=+g[b+308>>2];I=+g[b+324>>2];t=+g[b+340>>2];u=-+g[b+348>>2];aa=-+g[b+352>>2];Y=-+g[b+356>>2];Z=W*0.0+V*0.0+Z*0.0+ +g[b+412>>2]+(y*(E*u+I*aa+t*Y)+(w*(C*u+G*aa+S*Y)+x*(D*u+H*aa+U*Y)));q=v*0.0+F*0.0+q*0.0+ +g[b+416>>2]+(B*(E*u+I*aa+t*Y)+(z*(C*u+G*aa+S*Y)+A*(D*u+H*aa+U*Y)));Y=P*0.0+p*0.0+r*0.0+ +g[b+420>>2]+(s*(E*u+I*aa+t*Y)+(R*(C*u+G*aa+S*Y)+T*(D*u+H*aa+U*Y)));aa=+g[h+128>>2];u=+g[L>>2];r=+g[h+136>>2];p=+g[h+144>>2];P=+g[h+148>>2];F=+g[M>>2];v=+g[h+160>>2];V=+g[h+164>>2];W=+g[h+168>>2];X=r*Y+(aa*Z+u*q)+ +g[h+176>>2];_=Y*F+(p*Z+P*q)+ +g[h+180>>2];$=Z*v+q*V+Y*W+ +g[h+184>>2];g[h+64>>2]=(w*C+x*D+y*E)*aa+(z*C+A*D+B*E)*u+(R*C+T*D+s*E)*r;g[h+68>>2]=(w*G+x*H+y*I)*aa+(z*G+A*H+B*I)*u+(R*G+T*H+s*I)*r;g[h+72>>2]=(w*S+x*U+y*t)*aa+(z*S+A*U+B*t)*u+(R*S+T*U+s*t)*r;g[h+76>>2]=0.0;g[h+80>>2]=(w*C+x*D+y*E)*p+(z*C+A*D+B*E)*P+(R*C+T*D+s*E)*F;g[h+84>>2]=(w*G+x*H+y*I)*p+(z*G+A*H+B*I)*P+(R*G+T*H+s*I)*F;g[h+88>>2]=(w*S+x*U+y*t)*p+(z*S+A*U+B*t)*P+(R*S+T*U+s*t)*F;g[h+92>>2]=0.0;g[h+96>>2]=(w*C+x*D+y*E)*v+(z*C+A*D+B*E)*V+(R*C+T*D+s*E)*W;g[h+100>>2]=(w*G+x*H+y*I)*v+(z*G+A*H+B*I)*V+(R*G+T*H+s*I)*W;g[h+104>>2]=(w*S+x*U+y*t)*v+(z*S+A*U+B*t)*V+(R*S+T*U+s*t)*W;g[h+108>>2]=0.0;g[h+112>>2]=X;g[h+116>>2]=_;g[h+120>>2]=$;g[h+124>>2]=0.0;$=(R*C+T*D+s*E)*-Y+((w*C+x*D+y*E)*-Z+(z*C+A*D+B*E)*-q);_=(R*G+T*H+s*I)*-Y+((w*G+x*H+y*I)*-Z+(z*G+A*H+B*I)*-q);q=(R*S+T*U+s*t)*-Y+((w*S+x*U+y*t)*-Z+(z*S+A*U+B*t)*-q);Z=+g[h+192>>2];Y=+g[N>>2];X=+g[h+200>>2];W=+g[h+208>>2];V=+g[h+212>>2];v=+g[O>>2];F=+g[h+224>>2];P=+g[h+228>>2];p=+g[h+232>>2];r=$*Z+_*Y+q*X+ +g[h+240>>2];u=$*W+_*V+q*v+ +g[h+244>>2];q=$*F+_*P+q*p+ +g[h+248>>2];g[h>>2]=(w*C+x*D+y*E)*Z+(w*G+x*H+y*I)*Y+(w*S+x*U+y*t)*X;g[h+4>>2]=(z*C+A*D+B*E)*Z+(z*G+A*H+B*I)*Y+(z*S+A*U+B*t)*X;g[h+8>>2]=(R*C+T*D+s*E)*Z+(R*G+T*H+s*I)*Y+(R*S+T*U+s*t)*X;g[h+12>>2]=0.0;g[h+16>>2]=(w*C+x*D+y*E)*W+(w*G+x*H+y*I)*V+(w*S+x*U+y*t)*v;g[h+20>>2]=(z*C+A*D+B*E)*W+(z*G+A*H+B*I)*V+(z*S+A*U+B*t)*v;g[h+24>>2]=(R*C+T*D+s*E)*W+(R*G+T*H+s*I)*V+(R*S+T*U+s*t)*v;g[h+28>>2]=0.0;g[h+32>>2]=(w*C+x*D+y*E)*F+(w*G+x*H+y*I)*P+(w*S+x*U+y*t)*p;g[h+36>>2]=(z*C+A*D+B*E)*F+(z*G+A*H+B*I)*P+(z*S+A*U+B*t)*p;g[h+40>>2]=(R*C+T*D+s*E)*F+(R*G+T*H+s*I)*P+(R*S+T*U+s*t)*p;g[h+44>>2]=0.0;g[h+48>>2]=r;g[h+52>>2]=u;g[h+56>>2]=q;g[h+60>>2]=0.0;si(h+352|0,h+64|0,h+424|0,h+416|0);q=+g[h+416>>2];u=1.0/f*+g[h+424>>2]*q;r=1.0/f*q*+g[h+428>>2];q=1.0/f*q*+g[h+432>>2];si(h+288|0,h,h+424|0,h+416|0);p=+g[h+416>>2];u=u- +g[h+272>>2];r=r- +g[h+276>>2];q=q- +g[h+280>>2];t=1.0/f*+g[h+424>>2]*p- +g[h+256>>2];s=1.0/f*p*+g[h+428>>2]- +g[h+260>>2];p=1.0/f*p*+g[h+432>>2]- +g[h+264>>2];if(u*u+r*r+q*q>1.1920928955078125e-7){z=1.0/+Q(+(u*u+r*r+q*q));O=c[b+28>>2]|0;x=u*z*(u*z*+g[O+264>>2]+r*z*+g[O+280>>2]+q*z*+g[O+296>>2])+r*z*(u*z*+g[O+268>>2]+r*z*+g[O+284>>2]+q*z*+g[O+300>>2])+q*z*(u*z*+g[O+272>>2]+r*z*+g[O+288>>2]+q*z*+g[O+304>>2]);v=u*z;B=r*z;z=q*z}else{x=0.0;v=0.0;B=0.0;z=0.0}if(t*t+s*s+p*p>1.1920928955078125e-7){w=1.0/+Q(+(t*t+s*s+p*p));O=c[b+32>>2]|0;y=t*w*(t*w*+g[O+264>>2]+s*w*+g[O+280>>2]+p*w*+g[O+296>>2])+s*w*(t*w*+g[O+268>>2]+s*w*+g[O+284>>2]+p*w*+g[O+300>>2])+p*w*(t*w*+g[O+272>>2]+s*w*+g[O+288>>2]+p*w*+g[O+304>>2]);C=t*w;A=s*w;w=p*w}else{y=0.0;C=0.0;A=0.0;w=0.0}v=v*x+C*y;A=B*x+A*y;x=z*x+w*y;if(x*x+(v*v+A*A)>1.1920928955078125e-7){aa=1.0/+Q(+(x*x+(v*v+A*A)));j=c[b+28>>2]|0;w=v*aa*(v*aa*+g[j+264>>2]+A*aa*+g[j+280>>2]+x*aa*+g[j+296>>2])+A*aa*(v*aa*+g[j+268>>2]+A*aa*+g[j+284>>2]+x*aa*+g[j+300>>2])+x*aa*(v*aa*+g[j+272>>2]+A*aa*+g[j+288>>2]+x*aa*+g[j+304>>2]);k=c[b+32>>2]|0;v=v*aa*(v*aa*+g[k+264>>2]+A*aa*+g[k+280>>2]+x*aa*+g[k+296>>2])+A*aa*(v*aa*+g[k+268>>2]+A*aa*+g[k+284>>2]+x*aa*+g[k+300>>2])+x*aa*(v*aa*+g[k+272>>2]+A*aa*+g[k+288>>2]+x*aa*+g[k+304>>2]);t=1.0/((w+v)*(w+v))*(u*w-t*v);r=1.0/((w+v)*(w+v))*(r*w-s*v);p=1.0/((w+v)*(w+v))*(q*w-p*v);v=+g[b+572>>2];if(v>=0.0){if((a[b+553>>0]|0)!=0){v=v/w}s=+g[b+576>>2];q=+g[b+580>>2];u=+g[b+584>>2];w=+Q(+((t+s)*(t+s)+(r+q)*(r+q)+(p+u)*(p+u)));if(w>v){t=v*(t+s)*(1.0/w)-s;p=v*(p+u)*(1.0/w)-u;r=v*(r+q)*(1.0/w)-q}g[b+576>>2]=t+s;g[b+580>>2]=r+q;g[b+584>>2]=p+u}q=+Q(+(p*p+(r*r+t*t)));s=t*(1.0/q);r=r*(1.0/q);p=p*(1.0/q);if((c[d+240>>2]|0)!=0){aa=r*+g[j+300>>2]+s*+g[j+296>>2]+p*+g[j+304>>2];$=r*+g[j+284>>2]+s*+g[j+280>>2]+p*+g[j+288>>2];_=r*+g[j+268>>2]+s*+g[j+264>>2]+p*+g[j+272>>2];Y=q*0.0*+g[d+116>>2];Z=q*0.0*+g[d+120>>2];g[d+64>>2]=q*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=Y+ +g[d+68>>2];g[d+72>>2]=Z+ +g[d+72>>2];$=$*q*+g[d+100>>2];aa=aa*q*+g[d+104>>2];g[d+80>>2]=_*q*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=$+ +g[d+84>>2];g[d+88>>2]=aa+ +g[d+88>>2];k=c[b+32>>2]|0}if((c[e+240>>2]|0)!=0){aa=r*+g[k+300>>2]+s*+g[k+296>>2]+p*+g[k+304>>2];$=r*+g[k+284>>2]+s*+g[k+280>>2]+p*+g[k+288>>2];_=r*+g[k+268>>2]+s*+g[k+264>>2]+p*+g[k+272>>2];Y=q*-0.0*+g[e+116>>2];Z=q*-0.0*+g[e+120>>2];g[e+64>>2]=q*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Y+ +g[e+68>>2];g[e+72>>2]=Z+ +g[e+72>>2];$=$*+g[e+100>>2]*-q;aa=aa*+g[e+104>>2]*-q;g[e+80>>2]=_*+g[e+96>>2]*-q+ +g[e+80>>2];g[e+84>>2]=$+ +g[e+84>>2];g[e+88>>2]=aa+ +g[e+88>>2];L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0}else{L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0}}else{L=e+192|0;O=d+192|0;J=e+200|0;M=d+200|0;k=e+88|0;m=d+88|0;l=e+80|0;o=d+80|0;K=e+196|0;N=d+196|0;j=e+84|0;n=d+84|0}}}while(0);p=+g[O>>2]+ +g[o>>2];q=+g[N>>2]+ +g[n>>2];r=+g[M>>2]+ +g[m>>2];s=+g[L>>2]+ +g[l>>2];t=+g[K>>2]+ +g[j>>2];u=+g[J>>2]+ +g[k>>2];if((a[b+526>>0]|0)!=0){z=+g[b+528>>2];x=z*+g[b+504>>2]*+g[b+432>>2]/f;y=+g[b+460>>2];w=+g[b+464>>2];v=+g[b+468>>2];if((s-p)*y+(t-q)*w+(u-r)*v>0.0){x=x+z*((s-p)*y+(t-q)*w+(u-r)*v)*+g[b+436>>2]}z=+g[b+516>>2];x=z+x*+g[b+492>>2];_=x>0.0?x:0.0;g[b+516>>2]=_;Y=+g[b+536>>2];Z=+g[b+540>>2];$=+g[b+544>>2];aa=Y*y*(_-z)+w*(_-z)*Z+v*(_-z)*$;x=+Q(+((v*(_-z)-$*aa)*(v*(_-z)-$*aa)+((y*(_-z)-Y*aa)*(y*(_-z)-Y*aa)+(w*(_-z)-Z*aa)*(w*(_-z)-Z*aa))));y=1.0/x*(y*(_-z)-Y*aa);w=1.0/x*(w*(_-z)-Z*aa);v=1.0/x*(v*(_-z)-$*aa);J=c[b+28>>2]|0;if((c[d+240>>2]|0)!=0){aa=w*+g[J+300>>2]+y*+g[J+296>>2]+v*+g[J+304>>2];$=w*+g[J+284>>2]+y*+g[J+280>>2]+v*+g[J+288>>2];_=w*+g[J+268>>2]+y*+g[J+264>>2]+v*+g[J+272>>2];Y=x*0.0*+g[d+116>>2];Z=x*0.0*+g[d+120>>2];g[d+64>>2]=x*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=Y+ +g[d+68>>2];g[d+72>>2]=Z+ +g[d+72>>2];$=$*x*+g[d+100>>2];aa=aa*x*+g[d+104>>2];g[o>>2]=_*x*+g[d+96>>2]+ +g[o>>2];g[n>>2]=$+ +g[n>>2];g[m>>2]=aa+ +g[m>>2]}J=c[b+32>>2]|0;if((c[e+240>>2]|0)!=0){aa=w*+g[J+300>>2]+y*+g[J+296>>2]+v*+g[J+304>>2];$=w*+g[J+284>>2]+y*+g[J+280>>2]+v*+g[J+288>>2];_=w*+g[J+268>>2]+y*+g[J+264>>2]+v*+g[J+272>>2];Y=x*-0.0*+g[e+116>>2];Z=x*-0.0*+g[e+120>>2];g[e+64>>2]=x*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Y+ +g[e+68>>2];g[e+72>>2]=Z+ +g[e+72>>2];$=$*+g[e+100>>2]*-x;aa=aa*+g[e+104>>2]*-x;g[l>>2]=_*+g[e+96>>2]*-x+ +g[l>>2];g[j>>2]=$+ +g[j>>2];g[k>>2]=aa+ +g[k>>2]}}if((a[b+525>>0]|0)==0){i=h;return}x=+g[b+532>>2];y=x*+g[b+508>>2]*+g[b+432>>2]/f;v=+g[b+476>>2];w=+g[b+480>>2];f=+g[b+484>>2];if((s-p)*v+(t-q)*w+(u-r)*f>0.0){y=y+x*((s-p)*v+(t-q)*w+(u-r)*f)*+g[b+436>>2]}p=+g[b+520>>2];q=p+y*+g[b+496>>2];q=q>0.0?q:0.0;g[b+520>>2]=q;J=c[b+28>>2]|0;if((c[d+240>>2]|0)!=0){aa=w*+g[J+300>>2]+v*+g[J+296>>2]+f*+g[J+304>>2];$=w*+g[J+284>>2]+v*+g[J+280>>2]+f*+g[J+288>>2];f=w*+g[J+268>>2]+v*+g[J+264>>2]+f*+g[J+272>>2];w=(q-p)*0.0*+g[d+116>>2];v=(q-p)*0.0*+g[d+120>>2];g[d+64>>2]=(q-p)*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=w+ +g[d+68>>2];g[d+72>>2]=v+ +g[d+72>>2];v=$*(q-p)*+g[d+100>>2];w=aa*(q-p)*+g[d+104>>2];g[o>>2]=f*(q-p)*+g[d+96>>2]+ +g[o>>2];g[n>>2]=v+ +g[n>>2];g[m>>2]=w+ +g[m>>2];w=+g[b+480>>2];v=+g[b+476>>2];f=+g[b+484>>2]}b=c[b+32>>2]|0;if((c[e+240>>2]|0)==0){i=h;return}aa=w*+g[b+300>>2]+v*+g[b+296>>2]+f*+g[b+304>>2];$=w*+g[b+284>>2]+v*+g[b+280>>2]+f*+g[b+288>>2];_=w*+g[b+268>>2]+v*+g[b+264>>2]+f*+g[b+272>>2];Y=(q-p)*-0.0*+g[e+116>>2];Z=(q-p)*-0.0*+g[e+120>>2];g[e+64>>2]=(q-p)*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Y+ +g[e+68>>2];g[e+72>>2]=Z+ +g[e+72>>2];$=$*+g[e+100>>2]*-(q-p);aa=aa*+g[e+104>>2]*-(q-p);g[l>>2]=_*+g[e+96>>2]*-(q-p)+ +g[l>>2];g[j>>2]=$+ +g[j>>2];g[k>>2]=aa+ +g[k>>2];i=h;return}function ji(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=e|0;f=+f;h=h|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;j=i;i=i+16|0;c=c*f+ +g[a+52>>2];d=d*f+ +g[a+56>>2];g[h+48>>2]=b*f+ +g[a+48>>2];g[h+52>>2]=c;g[h+56>>2]=d;g[h+60>>2]=0.0;d=+g[e>>2];b=+g[e+4>>2];c=+g[e+8>>2];k=+Q(+(d*d+b*b+c*c));if(k*f>.7853981852531433){k=.7853981852531433/f}if(k<.0010000000474974513){l=f*.5-k*f*f*f*.02083333395421505*k}else{l=+T(+(k*.5*f))/k}o=l*d;b=l*b;c=l*c;q=+S(+(k*f*.5));Qh(a,j);n=+g[j>>2];p=+g[j+12>>2];f=+g[j+8>>2];l=+g[j+4>>2];r=1.0/+Q(+((q*p-o*n-b*l-c*f)*(q*p-o*n-b*l-c*f)+((c*p+q*f+o*l-b*n)*(c*p+q*f+o*l-b*n)+((q*n+o*p+b*f-c*l)*(q*n+o*p+b*f-c*l)+(c*n+(b*p+q*l)-o*f)*(c*n+(b*p+q*l)-o*f)))));d=(q*n+o*p+b*f-c*l)*r;k=r*(c*n+(b*p+q*l)-o*f);m=r*(c*p+q*f+o*l-b*n);f=r*(q*p-o*n-b*l-c*f);c=d*(2.0/(f*f+(m*m+(d*d+k*k))));l=2.0/(f*f+(m*m+(d*d+k*k)))*k;b=2.0/(f*f+(m*m+(d*d+k*k)))*m;g[h>>2]=1.0-(m*b+k*l);g[h+4>>2]=d*l-f*b;g[h+8>>2]=d*b+f*l;g[h+12>>2]=0.0;g[h+16>>2]=f*b+d*l;g[h+20>>2]=1.0-(d*c+m*b);g[h+24>>2]=k*b-f*c;g[h+28>>2]=0.0;g[h+32>>2]=d*b-f*l;g[h+36>>2]=f*c+k*b;g[h+40>>2]=1.0-(d*c+k*l);g[h+44>>2]=0.0;i=j;return}function ki(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;e=+S(+c);c=+T(+c);f=+g[b+444>>2];if(+P(+e)>1.1920928955078125e-7){j=+g[b+448>>2];h=c*c;i=e*e;f=+Q(+((c*c/(e*e)+1.0)/(1.0/(j*j)+c*c/(e*e)/(f*f))))}else{h=c*c;i=e*e}k=f*.5;j=+T(+k)/+Q(+(i+0.0+h));k=+S(+k);l=k*d+e*j*0.0-c*j*-0.0;i=k*0.0-c*j*d-j*0.0*0.0;f=k*0.0+j*0.0*0.0-e*j*d;h=-(j*0.0*d)-e*j*0.0-c*j*-0.0;g[a>>2]=c*j*i+(k*l+h*-(j*0.0))-f*-(e*j);g[a+4>>2]=f*-(j*0.0)+(k*i+h*-(e*j))-c*j*l;g[a+8>>2]=l*-(e*j)+(k*f+c*j*h)-i*-(j*0.0);g[a+12>>2]=0.0;return}function li(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0;f=i;if((b|0)==4|(b|0)==3){if(e>>>0<3){g[a+596>>2]=d;c[a+592>>2]=c[a+592>>2]|1;i=f;return}else{g[a+604>>2]=d;c[a+592>>2]=c[a+592>>2]|4;i=f;return}}else if((b|0)==2|(b|0)==1){if(e>>>0<3){g[a+600>>2]=d;c[a+592>>2]=c[a+592>>2]|2;i=f;return}else{g[a+432>>2]=d;i=f;return}}else{i=f;return}}function mi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0;d=i;do{if((b|0)==4|(b|0)==3){if(c>>>0<3){e=+g[a+596>>2];break}if((c+ -3|0)>>>0<3){e=+g[a+604>>2]}else{e=0.0}}else if((b|0)==2|(b|0)==1){if(c>>>0<3){e=+g[a+600>>2];break}if((c+ -3|0)>>>0<3){e=+g[a+432>>2]}else{e=0.0}}else{e=0.0}}while(0);i=d;return+e}function ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;c[a+300>>2]=c[b+0>>2];c[a+304>>2]=c[b+4>>2];c[a+308>>2]=c[b+8>>2];c[a+312>>2]=c[b+12>>2];c[a+316>>2]=c[b+16>>2];c[a+320>>2]=c[b+20>>2];c[a+324>>2]=c[b+24>>2];c[a+328>>2]=c[b+28>>2];c[a+332>>2]=c[b+32>>2];c[a+336>>2]=c[b+36>>2];c[a+340>>2]=c[b+40>>2];c[a+344>>2]=c[b+44>>2];c[a+348>>2]=c[b+48>>2];c[a+352>>2]=c[b+52>>2];c[a+356>>2]=c[b+56>>2];c[a+360>>2]=c[b+60>>2];c[a+364>>2]=c[d+0>>2];c[a+368>>2]=c[d+4>>2];c[a+372>>2]=c[d+8>>2];c[a+376>>2]=c[d+12>>2];c[a+380>>2]=c[d+16>>2];c[a+384>>2]=c[d+20>>2];c[a+388>>2]=c[d+24>>2];c[a+392>>2]=c[d+28>>2];c[a+396>>2]=c[d+32>>2];c[a+400>>2]=c[d+36>>2];c[a+404>>2]=c[d+40>>2];c[a+408>>2]=c[d+44>>2];c[a+412>>2]=c[d+48>>2];c[a+416>>2]=c[d+52>>2];c[a+420>>2]=c[d+56>>2];c[a+424>>2]=c[d+60>>2];Db[c[(c[a>>2]|0)+8>>2]&255](a);i=e;return}function oi(a){a=a|0;return}function pi(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function qi(a){a=a|0;return 212}function ri(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;uk(a,b,c)|0;g[b+52>>2]=+g[a+300>>2];g[b+56>>2]=+g[a+304>>2];g[b+60>>2]=+g[a+308>>2];g[b+64>>2]=+g[a+312>>2];g[b+68>>2]=+g[a+316>>2];g[b+72>>2]=+g[a+320>>2];g[b+76>>2]=+g[a+324>>2];g[b+80>>2]=+g[a+328>>2];g[b+84>>2]=+g[a+332>>2];g[b+88>>2]=+g[a+336>>2];g[b+92>>2]=+g[a+340>>2];g[b+96>>2]=+g[a+344>>2];g[b+100>>2]=+g[a+348>>2];g[b+104>>2]=+g[a+352>>2];g[b+108>>2]=+g[a+356>>2];g[b+112>>2]=+g[a+360>>2];g[b+116>>2]=+g[a+364>>2];g[b+120>>2]=+g[a+368>>2];g[b+124>>2]=+g[a+372>>2];g[b+128>>2]=+g[a+376>>2];g[b+132>>2]=+g[a+380>>2];g[b+136>>2]=+g[a+384>>2];g[b+140>>2]=+g[a+388>>2];g[b+144>>2]=+g[a+392>>2];g[b+148>>2]=+g[a+396>>2];g[b+152>>2]=+g[a+400>>2];g[b+156>>2]=+g[a+404>>2];g[b+160>>2]=+g[a+408>>2];g[b+164>>2]=+g[a+412>>2];g[b+168>>2]=+g[a+416>>2];g[b+172>>2]=+g[a+420>>2];g[b+176>>2]=+g[a+424>>2];g[b+180>>2]=+g[a+444>>2];g[b+184>>2]=+g[a+448>>2];g[b+188>>2]=+g[a+452>>2];g[b+192>>2]=+g[a+428>>2];g[b+196>>2]=+g[a+432>>2];g[b+200>>2]=+g[a+436>>2];g[b+204>>2]=+g[a+440>>2];i=d;return 1056}function si(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;e=i;i=i+64|0;f=+g[a+20>>2];t=+g[a+40>>2];o=+g[a+24>>2];r=+g[a+36>>2];s=+g[a+32>>2];j=+g[a+16>>2];l=+g[a>>2];h=+g[a+4>>2];p=+g[a+8>>2];m=1.0/((f*t-o*r)*l+h*(o*s-t*j)+(r*j-f*s)*p);z=+g[b>>2];y=+g[b+4>>2];x=+g[b+8>>2];w=+g[b+16>>2];v=+g[b+20>>2];u=+g[b+24>>2];q=+g[b+32>>2];n=+g[b+36>>2];k=+g[b+40>>2];g[e+16>>2]=(f*t-o*r)*m*z+(o*s-t*j)*m*y+(r*j-f*s)*m*x;g[e+20>>2]=z*m*(r*p-t*h)+y*m*(t*l-s*p)+m*(s*h-r*l)*x;g[e+24>>2]=z*m*(o*h-f*p)+y*m*(j*p-o*l)+m*(f*l-j*h)*x;g[e+28>>2]=0.0;g[e+32>>2]=(f*t-o*r)*m*w+(o*s-t*j)*m*v+(r*j-f*s)*m*u;g[e+36>>2]=m*(r*p-t*h)*w+m*(t*l-s*p)*v+m*(s*h-r*l)*u;g[e+40>>2]=m*(o*h-f*p)*w+m*(j*p-o*l)*v+m*(f*l-j*h)*u;g[e+44>>2]=0.0;g[e+48>>2]=(f*t-o*r)*m*q+(o*s-t*j)*m*n+(r*j-f*s)*m*k;g[e+52>>2]=m*(r*p-t*h)*q+m*(t*l-s*p)*n+m*(s*h-r*l)*k;g[e+56>>2]=m*(o*h-f*p)*q+m*(j*p-o*l)*n+m*(f*l-j*h)*k;g[e+60>>2]=0.0;Qh(e+16|0,e);k=+g[e>>2];h=+g[e+4>>2];j=+g[e+8>>2];l=+g[e+12>>2];f=1.0/+Q(+(k*k+h*h+j*j+l*l));g[e>>2]=k*f;g[e+4>>2]=h*f;g[e+8>>2]=j*f;g[e+12>>2]=l*f;l=l*f<-1.0?-1.0:l*f;g[d>>2]=+V(+(l>1.0?1.0:l))*2.0;g[c>>2]=k*f;g[c+4>>2]=h*f;g[c+8>>2]=j*f;g[c+12>>2]=0.0;if(k*f*k*f+h*f*h*f+j*f*j*f<1.4210854715202004e-14){g[c>>2]=1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;i=e;return}else{z=1.0/+Q(+(k*f*k*f+h*f*h*f+j*f*j*f));g[c>>2]=k*f*z;g[c+4>>2]=z*h*f;g[c+8>>2]=z*j*f;i=e;return}}function ti(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=+k;l=l|0;m=+m;var n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;n=i;c[a+0>>2]=c[h+0>>2];c[a+4>>2]=c[h+4>>2];c[a+8>>2]=c[h+8>>2];c[a+12>>2]=c[h+12>>2];u=+g[e+4>>2];t=+g[a+8>>2];r=+g[e+8>>2];x=+g[a+4>>2];o=+g[a>>2];z=+g[e>>2];y=(u*t-r*x)*+g[b>>2]+ +g[b+4>>2]*(r*o-t*z)+(x*z-u*o)*+g[b+8>>2];w=(u*t-r*x)*+g[b+16>>2]+(r*o-t*z)*+g[b+20>>2]+(x*z-u*o)*+g[b+24>>2];u=(u*t-r*x)*+g[b+32>>2]+(r*o-t*z)*+g[b+36>>2]+(x*z-u*o)*+g[b+40>>2];g[a+16>>2]=y;g[a+20>>2]=w;g[a+24>>2]=u;g[a+28>>2]=0.0;z=+g[f+4>>2];r=+g[f+8>>2];v=+g[f>>2];s=+g[d>>2]*(z*-t-r*-x)+ +g[d+4>>2]*(r*-o-v*-t)+(v*-x-z*-o)*+g[d+8>>2];q=(z*-t-r*-x)*+g[d+16>>2]+(r*-o-v*-t)*+g[d+20>>2]+(v*-x-z*-o)*+g[d+24>>2];o=(z*-t-r*-x)*+g[d+32>>2]+(r*-o-v*-t)*+g[d+36>>2]+(v*-x-z*-o)*+g[d+40>>2];g[a+32>>2]=s;g[a+36>>2]=q;g[a+40>>2]=o;g[a+44>>2]=0.0;z=+g[j>>2]*y;x=+g[j+4>>2]*w;v=+g[j+8>>2]*u;g[a+48>>2]=z;g[a+52>>2]=x;g[a+56>>2]=v;g[a+60>>2]=0.0;t=+g[l>>2]*s;r=+g[l+4>>2]*q;p=+g[l+8>>2]*o;g[a+64>>2]=t;g[a+68>>2]=r;g[a+72>>2]=p;g[a+76>>2]=0.0;g[a+80>>2]=z*y+x*w+v*u+k+m+(t*s+r*q+p*o);i=n;return}function ui(a){a=a|0;var b=0;b=i;vi(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function vi(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;c[b>>2]=1096;if((a[b+272>>0]|0)!=0?(g=c[b+204>>2]|0,Db[c[c[g>>2]>>2]&255](g),g=c[b+204>>2]|0,(g|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[g+ -4>>2]|0)}g=c[b+196>>2]|0;if((g|0)!=0?(Db[c[c[g>>2]>>2]&255](g),f=c[b+196>>2]|0,(f|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}if((a[b+273>>0]|0)!=0?(e=c[b+200>>2]|0,Db[c[c[e>>2]>>2]&255](e),e=c[b+200>>2]|0,(e|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+316>>2]|0;if((e|0)!=0){if((a[b+320>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+316>>2]=0}a[b+320>>0]=1;c[b+316>>2]=0;c[b+308>>2]=0;c[b+312>>2]=0;e=c[b+288>>2]|0;if((e|0)!=0){if((a[b+292>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+288>>2]=0}a[b+292>>0]=1;c[b+288>>2]=0;c[b+280>>2]=0;c[b+284>>2]=0;e=c[b+240>>2]|0;if((e|0)!=0){if((a[b+244>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+240>>2]=0}a[b+244>>0]=1;c[b+240>>2]=0;c[b+232>>2]=0;c[b+236>>2]=0;e=c[b+220>>2]|0;if((e|0)!=0){if((a[b+224>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+220>>2]=0}a[b+224>>0]=1;c[b+220>>2]=0;c[b+212>>2]=0;c[b+216>>2]=0;e=c[b+188>>2]|0;if((e|0)==0){a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;g=b+184|0;c[g>>2]=0;Um(b);i=d;return}if((a[b+192>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+188>>2]=0;a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;g=b+184|0;c[g>>2]=0;Um(b);i=d;return}function wi(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0.0,k=0.0,l=0.0;d=i;i=i+32|0;h=c[a+8>>2]|0;if((h|0)<=0){i=d;return}e=0;do{f=c[(c[a+16>>2]|0)+(e<<2)>>2]|0;if((!((f|0)==0?1:(c[f+236>>2]&2|0)==0)?(c[f+216>>2]|0)!=2:0)?!((c[f+204>>2]&2|0)==0|b!=0.0^1):0){h=c[f+480>>2]|0;if((h|0)==0){h=f+4|0}else{Fb[c[(c[h>>2]|0)+8>>2]&127](h,f+4|0);h=f+4|0}k=(+g[f+56>>2]- +g[f+120>>2])*(1.0/b);l=1.0/b*(+g[f+60>>2]- +g[f+124>>2]);g[f+312>>2]=(+g[f+52>>2]- +g[f+116>>2])*(1.0/b);g[f+316>>2]=k;g[f+320>>2]=l;g[f+324>>2]=0.0;si(f+68|0,h,d+8|0,d);l=+g[d>>2];k=1.0/b*l*+g[d+12>>2];j=1.0/b*l*+g[d+16>>2];g[f+328>>2]=1.0/b*+g[d+8>>2]*l;g[f+332>>2]=k;g[f+336>>2]=j;g[f+340>>2]=0.0;c[f+132>>2]=c[f+312>>2];c[f+136>>2]=c[f+316>>2];c[f+140>>2]=c[f+320>>2];c[f+144>>2]=c[f+324>>2];c[f+148>>2]=c[f+328>>2];c[f+152>>2]=c[f+332>>2];c[f+156>>2]=c[f+336>>2];c[f+160>>2]=c[f+340>>2];c[f+68>>2]=c[h+0>>2];c[f+72>>2]=c[h+4>>2];c[f+76>>2]=c[h+8>>2];c[f+80>>2]=c[h+12>>2];c[f+84>>2]=c[f+20>>2];c[f+88>>2]=c[f+24>>2];c[f+92>>2]=c[f+28>>2];c[f+96>>2]=c[f+32>>2];c[f+100>>2]=c[f+36>>2];c[f+104>>2]=c[f+40>>2];c[f+108>>2]=c[f+44>>2];c[f+112>>2]=c[f+48>>2];c[f+116>>2]=c[f+52>>2];c[f+120>>2]=c[f+56>>2];c[f+124>>2]=c[f+60>>2];c[f+128>>2]=c[f+64>>2];h=c[a+8>>2]|0}e=e+1|0}while((e|0)<(h|0));i=d;return}function xi(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0.0,Q=0.0,R=0.0,U=0.0,V=0.0,W=0.0;d=i;i=i+1024|0;Mv(1280);kn(b);a:do{if((Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)!=0?(I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0,((Hb[c[(c[I>>2]|0)+48>>2]&127](I)|0)&6144|0)!=0):0){e=d+988|0;o=d+896|0;n=d+832|0;q=d+912|0;p=d+848|0;s=d+928|0;r=d+864|0;u=d+720|0;t=d+656|0;w=d+736|0;v=d+672|0;y=d+752|0;x=d+688|0;f=d+336|0;h=d+352|0;j=d+368|0;k=d+112|0;l=d+128|0;m=d+144|0;B=Hb[c[(c[b>>2]|0)+104>>2]&127](b)|0;b:while(1){z=B+ -1|0;if((B|0)<=0){break a}B=Zb[c[(c[b>>2]|0)+108>>2]&31](b,z)|0;I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=(Hb[c[(c[I>>2]|0)+48>>2]&127](I)|0)>>>11;C=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;C=(Hb[c[(c[C>>2]|0)+48>>2]&127](C)|0)>>>12;A=+g[B+40>>2];if(A<=0.0){B=z;continue}switch(c[B+4>>2]|0){case 3:{g[d+944>>2]=1.0;c[d+948>>2]=0;c[d+952>>2]=0;c[d+956>>2]=0;c[d+960>>2]=0;g[d+964>>2]=1.0;c[d+968>>2]=0;c[d+972>>2]=0;c[d+976>>2]=0;c[d+980>>2]=0;g[d+984>>2]=1.0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;H=+g[B+300>>2];G=+g[B+304>>2];J=+g[B+308>>2];F=c[B+28>>2]|0;K=H*+g[F+20>>2]+G*+g[F+24>>2]+J*+g[F+28>>2]+ +g[F+56>>2];L=H*+g[F+36>>2]+G*+g[F+40>>2]+J*+g[F+44>>2]+ +g[F+60>>2];g[d+992>>2]=H*+g[F+4>>2]+G*+g[F+8>>2]+J*+g[F+12>>2]+ +g[F+52>>2];g[d+996>>2]=K;g[d+1e3>>2]=L;g[d+1004>>2]=0.0;F=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[F>>2]|0)+56>>2]&1](F,d+944|0,A);L=+g[B+316>>2];K=+g[B+320>>2];J=+g[B+324>>2];F=c[B+32>>2]|0;G=L*+g[F+20>>2]+K*+g[F+24>>2]+J*+g[F+28>>2]+ +g[F+56>>2];H=L*+g[F+36>>2]+K*+g[F+40>>2]+J*+g[F+44>>2]+ +g[F+60>>2];g[d+992>>2]=L*+g[F+4>>2]+K*+g[F+8>>2]+J*+g[F+12>>2]+ +g[F+52>>2];g[d+996>>2]=G;g[d+1e3>>2]=H;g[d+1004>>2]=0.0;if((I&1|0)==0){B=z;continue b}B=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[B>>2]|0)+56>>2]&1](B,d+944|0,A);B=z;continue b};case 4:{$h(d+880|0,(c[B+28>>2]|0)+4|0,B+552|0);if((I&1|0)==0){$h(d+816|0,(c[B+32>>2]|0)+4|0,B+616|0);c[d+880>>2]=c[d+816>>2];c[d+884>>2]=c[d+820>>2];c[d+888>>2]=c[d+824>>2];c[d+892>>2]=c[d+828>>2];c[o+0>>2]=c[n+0>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];c[q+0>>2]=c[p+0>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];c[q+12>>2]=c[p+12>>2];c[s+0>>2]=c[r+0>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2]}else{I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[I>>2]|0)+56>>2]&1](I,d+880|0,A);$h(d+816|0,(c[B+32>>2]|0)+4|0,B+616|0);c[d+880>>2]=c[d+816>>2];c[d+884>>2]=c[d+820>>2];c[d+888>>2]=c[d+824>>2];c[d+892>>2]=c[d+828>>2];c[o+0>>2]=c[n+0>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];c[q+0>>2]=c[p+0>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];c[q+12>>2]=c[p+12>>2];c[s+0>>2]=c[r+0>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[I>>2]|0)+56>>2]&1](I,d+880|0,A)}G=+Xa(+(+g[B+688>>2]- +g[B+692>>2]),6.2831854820251465);if(!(G<-3.1415927410125732)){if(G>3.1415927410125732){G=G+-6.2831854820251465}}else{G=G+6.2831854820251465}H=+Xa(+(+g[B+688>>2]+ +g[B+692>>2]),6.2831854820251465);if(!(H<-3.1415927410125732)){if(H>3.1415927410125732){H=H+-6.2831854820251465}}else{H=H+6.2831854820251465}if(G==H){B=z;continue b}B=G>H;if((C&1|0)==0){B=z;continue b}g[d+800>>2]=+g[d+888>>2];g[d+804>>2]=+g[d+904>>2];g[d+808>>2]=+g[d+920>>2];g[d+812>>2]=0.0;g[d+784>>2]=+g[d+880>>2];g[d+788>>2]=+g[d+896>>2];g[d+792>>2]=+g[d+912>>2];g[d+796>>2]=0.0;I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;F=c[(c[I>>2]|0)+60>>2]|0;c[d+768>>2]=0;c[d+772>>2]=0;c[d+776>>2]=0;c[d+780>>2]=0;Ob[F&0](I,s,d+800|0,d+784|0,A,A,B?0.0:G,B?6.2831854820251465:H,d+768|0,B^1,10.0);B=z;continue b};case 6:case 9:{c[d+320>>2]=c[B+1064>>2];c[d+324>>2]=c[B+1068>>2];c[d+328>>2]=c[B+1072>>2];c[d+332>>2]=c[B+1076>>2];D=B+1080|0;c[f+0>>2]=c[D+0>>2];c[f+4>>2]=c[D+4>>2];c[f+8>>2]=c[D+8>>2];c[f+12>>2]=c[D+12>>2];E=B+1096|0;c[h+0>>2]=c[E+0>>2];c[h+4>>2]=c[E+4>>2];c[h+8>>2]=c[E+8>>2];c[h+12>>2]=c[E+12>>2];F=B+1112|0;c[j+0>>2]=c[F+0>>2];c[j+4>>2]=c[F+4>>2];c[j+8>>2]=c[F+8>>2];c[j+12>>2]=c[F+12>>2];if((I&1|0)==0){c[d+320>>2]=c[B+1128>>2];c[d+324>>2]=c[B+1132>>2];c[d+328>>2]=c[B+1136>>2];c[d+332>>2]=c[B+1140>>2];c[f+0>>2]=c[B+1144>>2];c[f+4>>2]=c[B+1148>>2];c[f+8>>2]=c[B+1152>>2];c[f+12>>2]=c[B+1156>>2];c[h+0>>2]=c[B+1160>>2];c[h+4>>2]=c[B+1164>>2];c[h+8>>2]=c[B+1168>>2];c[h+12>>2]=c[B+1172>>2];c[j+0>>2]=c[B+1176>>2];c[j+4>>2]=c[B+1180>>2];c[j+8>>2]=c[B+1184>>2];c[j+12>>2]=c[B+1188>>2]}else{I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[I>>2]|0)+56>>2]&1](I,d+320|0,A);c[d+320>>2]=c[B+1128>>2];c[d+324>>2]=c[B+1132>>2];c[d+328>>2]=c[B+1136>>2];c[d+332>>2]=c[B+1140>>2];c[f+0>>2]=c[B+1144>>2];c[f+4>>2]=c[B+1148>>2];c[f+8>>2]=c[B+1152>>2];c[f+12>>2]=c[B+1156>>2];c[h+0>>2]=c[B+1160>>2];c[h+4>>2]=c[B+1164>>2];c[h+8>>2]=c[B+1168>>2];c[h+12>>2]=c[B+1172>>2];c[j+0>>2]=c[B+1176>>2];c[j+4>>2]=c[B+1180>>2];c[j+8>>2]=c[B+1184>>2];c[j+12>>2]=c[B+1188>>2];I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[I>>2]|0)+56>>2]&1](I,d+320|0,A)}if((C&1|0)==0){B=z;continue b}c[d+320>>2]=c[B+1064>>2];c[d+324>>2]=c[B+1068>>2];c[d+328>>2]=c[B+1072>>2];c[d+332>>2]=c[B+1076>>2];c[f+0>>2]=c[D+0>>2];c[f+4>>2]=c[D+4>>2];c[f+8>>2]=c[D+8>>2];c[f+12>>2]=c[D+12>>2];c[h+0>>2]=c[E+0>>2];c[h+4>>2]=c[E+4>>2];c[h+8>>2]=c[E+8>>2];c[h+12>>2]=c[E+12>>2];c[j+0>>2]=c[F+0>>2];c[j+4>>2]=c[F+4>>2];c[j+8>>2]=c[F+8>>2];c[j+12>>2]=c[F+12>>2];C=B+1176|0;g[d+304>>2]=+g[d+328>>2];g[d+308>>2]=+g[d+344>>2];g[d+312>>2]=+g[d+360>>2];g[d+316>>2]=0.0;g[d+288>>2]=+g[d+320>>2];g[d+292>>2]=+g[d+336>>2];g[d+296>>2]=+g[d+352>>2];g[d+300>>2]=0.0;J=+g[B+932>>2];G=+g[B+936>>2];L=+g[B+996>>2];M=+g[B+1e3>>2];I=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;O=c[(c[I>>2]|0)+64>>2]|0;c[d+272>>2]=0;c[d+276>>2]=0;c[d+280>>2]=0;c[d+284>>2]=0;dc[O&0](I,C,d+304|0,d+288|0,A*.8999999761581421,J,G,L,M,d+272|0,10.0,1);M=+g[d+324>>2];L=+g[d+340>>2];G=+g[d+356>>2];g[d+288>>2]=M;g[d+292>>2]=L;g[d+296>>2]=G;g[d+300>>2]=0.0;J=+g[B+1196>>2];K=+g[B+1200>>2];H=+S(+J);J=+T(+J);N=+S(+K);K=+T(+K);g[d+256>>2]=H*N*M+H*K*L-J*G;g[d+260>>2]=N*L-K*M;g[d+264>>2]=J*N*M+J*K*L+H*G;c[d+320>>2]=c[B+1128>>2];c[d+324>>2]=c[B+1132>>2];c[d+328>>2]=c[B+1136>>2];c[d+332>>2]=c[B+1140>>2];c[f+0>>2]=c[B+1144>>2];c[f+4>>2]=c[B+1148>>2];c[f+8>>2]=c[B+1152>>2];c[f+12>>2]=c[B+1156>>2];c[h+0>>2]=c[B+1160>>2];c[h+4>>2]=c[B+1164>>2];c[h+8>>2]=c[B+1168>>2];c[h+12>>2]=c[B+1172>>2];c[j+0>>2]=c[C+0>>2];c[j+4>>2]=c[C+4>>2];c[j+8>>2]=c[C+8>>2];c[j+12>>2]=c[C+12>>2];G=-+g[d+336>>2];H=-+g[d+352>>2];g[d+240>>2]=-+g[d+320>>2];g[d+244>>2]=G;g[d+248>>2]=H;g[d+252>>2]=0.0;H=+g[B+868>>2];G=+g[B+872>>2];if(!(H>G)){if(H<G){O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=c[(c[O>>2]|0)+60>>2]|0;c[d+208>>2]=0;c[d+212>>2]=0;c[d+216>>2]=0;c[d+220>>2]=0;Ob[I&0](O,C,d+240|0,d+256|0,A,A,H,G,d+208|0,1,10.0)}}else{O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=c[(c[O>>2]|0)+60>>2]|0;c[d+224>>2]=0;c[d+228>>2]=0;c[d+232>>2]=0;c[d+236>>2]=0;Ob[I&0](O,C,d+240|0,d+256|0,A,A,-3.1415927410125732,3.1415927410125732,d+224|0,0,10.0)}c[d+320>>2]=c[B+1064>>2];c[d+324>>2]=c[B+1068>>2];c[d+328>>2]=c[B+1072>>2];c[d+332>>2]=c[B+1076>>2];c[f+0>>2]=c[D+0>>2];c[f+4>>2]=c[D+4>>2];c[f+8>>2]=c[D+8>>2];c[f+12>>2]=c[D+12>>2];c[h+0>>2]=c[E+0>>2];c[h+4>>2]=c[E+4>>2];c[h+8>>2]=c[E+8>>2];c[h+12>>2]=c[E+12>>2];c[j+0>>2]=c[F+0>>2];c[j+4>>2]=c[F+4>>2];c[j+8>>2]=c[F+8>>2];c[j+12>>2]=c[F+12>>2];c[d+192>>2]=c[B+680>>2];c[d+196>>2]=c[B+684>>2];c[d+200>>2]=c[B+688>>2];c[d+204>>2]=c[B+692>>2];c[d+176>>2]=c[B+696>>2];c[d+180>>2]=c[B+700>>2];c[d+184>>2]=c[B+704>>2];c[d+188>>2]=c[B+708>>2];B=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;O=c[(c[B>>2]|0)+72>>2]|0;c[d+160>>2]=0;c[d+164>>2]=0;c[d+168>>2]=0;c[d+172>>2]=0;Bb[O&31](B,d+192|0,d+176|0,d+320|0,d+160|0);B=z;continue b};case 7:{c[d+96>>2]=c[B+824>>2];c[d+100>>2]=c[B+828>>2];c[d+104>>2]=c[B+832>>2];c[d+108>>2]=c[B+836>>2];c[k+0>>2]=c[B+840>>2];c[k+4>>2]=c[B+844>>2];c[k+8>>2]=c[B+848>>2];c[k+12>>2]=c[B+852>>2];c[l+0>>2]=c[B+856>>2];c[l+4>>2]=c[B+860>>2];c[l+8>>2]=c[B+864>>2];c[l+12>>2]=c[B+868>>2];c[m+0>>2]=c[B+872>>2];c[m+4>>2]=c[B+876>>2];c[m+8>>2]=c[B+880>>2];c[m+12>>2]=c[B+884>>2];if((I&1|0)==0){c[d+96>>2]=c[B+888>>2];c[d+100>>2]=c[B+892>>2];c[d+104>>2]=c[B+896>>2];c[d+108>>2]=c[B+900>>2];c[k+0>>2]=c[B+904>>2];c[k+4>>2]=c[B+908>>2];c[k+8>>2]=c[B+912>>2];c[k+12>>2]=c[B+916>>2];c[l+0>>2]=c[B+920>>2];c[l+4>>2]=c[B+924>>2];c[l+8>>2]=c[B+928>>2];c[l+12>>2]=c[B+932>>2];c[m+0>>2]=c[B+936>>2];c[m+4>>2]=c[B+940>>2];c[m+8>>2]=c[B+944>>2];c[m+12>>2]=c[B+948>>2]}else{O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[O>>2]|0)+56>>2]&1](O,d+96|0,A);c[d+96>>2]=c[B+888>>2];c[d+100>>2]=c[B+892>>2];c[d+104>>2]=c[B+896>>2];c[d+108>>2]=c[B+900>>2];c[k+0>>2]=c[B+904>>2];c[k+4>>2]=c[B+908>>2];c[k+8>>2]=c[B+912>>2];c[k+12>>2]=c[B+916>>2];c[l+0>>2]=c[B+920>>2];c[l+4>>2]=c[B+924>>2];c[l+8>>2]=c[B+928>>2];c[l+12>>2]=c[B+932>>2];c[m+0>>2]=c[B+936>>2];c[m+4>>2]=c[B+940>>2];c[m+8>>2]=c[B+944>>2];c[m+12>>2]=c[B+948>>2];O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[O>>2]|0)+56>>2]&1](O,d+96|0,A)}if((C&1|0)==0){B=z;continue b}O=(a[B+180>>0]|0)!=0?B+824|0:B+888|0;H=+g[O>>2];L=+g[O+4>>2];J=+g[O+16>>2];N=+g[O+20>>2];K=+g[O+32>>2];M=+g[O+36>>2];W=+g[O+48>>2];U=+g[O+52>>2];Q=+g[O+56>>2];G=+g[B+184>>2];V=+g[O+8>>2]*0.0;R=+g[O+24>>2]*0.0;P=+g[O+40>>2]*0.0;g[d+80>>2]=W+(V+(L*0.0+H*G));g[d+84>>2]=U+(R+(N*0.0+J*G));g[d+88>>2]=Q+(P+(M*0.0+K*G));g[d+92>>2]=0.0;G=+g[B+188>>2];g[d+64>>2]=W+(V+(L*0.0+H*G));g[d+68>>2]=U+(R+(N*0.0+J*G));g[d+72>>2]=Q+(P+(M*0.0+K*G));g[d+76>>2]=0.0;O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=c[(c[O>>2]|0)+8>>2]|0;c[d+48>>2]=0;c[d+52>>2]=0;c[d+56>>2]=0;c[d+60>>2]=0;mc[I&63](O,d+80|0,d+64|0,d+48|0);g[d+32>>2]=H;g[d+36>>2]=J;g[d+40>>2]=K;g[d+44>>2]=0.0;g[d+16>>2]=L;g[d+20>>2]=N;g[d+24>>2]=M;g[d+28>>2]=0.0;M=+g[B+192>>2];N=+g[B+196>>2];O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=c[(c[O>>2]|0)+60>>2]|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;Ob[I&0](O,B+936|0,d+32|0,d+16|0,A,A,M,N,d,1,10.0);B=z;continue b};case 5:{$h(d+704|0,(c[B+28>>2]|0)+4|0,B+300|0);if((I&1|0)==0){$h(d+640|0,(c[B+32>>2]|0)+4|0,B+364|0);c[d+704>>2]=c[d+640>>2];c[d+708>>2]=c[d+644>>2];c[d+712>>2]=c[d+648>>2];c[d+716>>2]=c[d+652>>2];c[u+0>>2]=c[t+0>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];c[u+12>>2]=c[t+12>>2];c[w+0>>2]=c[v+0>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[w+12>>2]=c[v+12>>2];c[y+0>>2]=c[x+0>>2];c[y+4>>2]=c[x+4>>2];c[y+8>>2]=c[x+8>>2];c[y+12>>2]=c[x+12>>2]}else{O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[O>>2]|0)+56>>2]&1](O,d+704|0,A);$h(d+640|0,(c[B+32>>2]|0)+4|0,B+364|0);c[d+704>>2]=c[d+640>>2];c[d+708>>2]=c[d+644>>2];c[d+712>>2]=c[d+648>>2];c[d+716>>2]=c[d+652>>2];c[u+0>>2]=c[t+0>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];c[u+12>>2]=c[t+12>>2];c[w+0>>2]=c[v+0>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[w+12>>2]=c[v+12>>2];c[y+0>>2]=c[x+0>>2];c[y+4>>2]=c[x+4>>2];c[y+8>>2]=c[x+8>>2];c[y+12>>2]=c[x+12>>2];O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[O>>2]|0)+56>>2]&1](O,d+704|0,A)}if((C&1|0)==0){B=z;continue b}ki(d+624|0,B,6.0868353843688965,A);Q=+g[d+624>>2];R=+g[d+628>>2];U=+g[d+632>>2];V=Q*+g[d+720>>2]+R*+g[d+724>>2]+U*+g[d+728>>2]+ +g[d+756>>2];W=Q*+g[d+736>>2]+R*+g[d+740>>2]+U*+g[d+744>>2]+ +g[d+760>>2];g[d+624>>2]=Q*+g[d+704>>2]+R*+g[d+708>>2]+U*+g[d+712>>2]+ +g[d+752>>2];g[d+628>>2]=V;g[d+632>>2]=W;g[d+636>>2]=0.0;C=0;do{ki(d+608|0,B,+(C|0)*6.283185005187988*.03125,A);Q=+g[d+608>>2];R=+g[d+612>>2];U=+g[d+616>>2];V=Q*+g[d+720>>2]+R*+g[d+724>>2]+U*+g[d+728>>2]+ +g[d+756>>2];W=Q*+g[d+736>>2]+R*+g[d+740>>2]+U*+g[d+744>>2]+ +g[d+760>>2];g[d+608>>2]=Q*+g[d+704>>2]+R*+g[d+708>>2]+U*+g[d+712>>2]+ +g[d+752>>2];g[d+612>>2]=V;g[d+616>>2]=W;g[d+620>>2]=0.0;O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=c[(c[O>>2]|0)+8>>2]|0;c[d+592>>2]=0;c[d+596>>2]=0;c[d+600>>2]=0;c[d+604>>2]=0;mc[I&63](O,d+624|0,d+608|0,d+592|0);if((C&3|0)==0){O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;I=c[(c[O>>2]|0)+8>>2]|0;c[d+576>>2]=0;c[d+580>>2]=0;c[d+584>>2]=0;c[d+588>>2]=0;mc[I&63](O,y,d+608|0,d+576|0)}c[d+624>>2]=c[d+608>>2];c[d+628>>2]=c[d+612>>2];c[d+632>>2]=c[d+616>>2];c[d+636>>2]=c[d+620>>2];C=C+1|0}while((C|0)!=32);G=+g[B+452>>2];H=+g[B+512>>2];C=c[B+32>>2]|0;if(+g[C+344>>2]>0.0){$h(d+512|0,C+4|0,B+364|0);c[d+704>>2]=c[d+512>>2];c[d+708>>2]=c[d+516>>2];c[d+712>>2]=c[d+520>>2];c[d+716>>2]=c[d+524>>2];c[u+0>>2]=c[d+528>>2];c[u+4>>2]=c[d+532>>2];c[u+8>>2]=c[d+536>>2];c[u+12>>2]=c[d+540>>2];c[w+0>>2]=c[d+544>>2];c[w+4>>2]=c[d+548>>2];c[w+8>>2]=c[d+552>>2];c[w+12>>2]=c[d+556>>2];c[y+0>>2]=c[d+560>>2];c[y+4>>2]=c[d+564>>2];c[y+8>>2]=c[d+568>>2];c[y+12>>2]=c[d+572>>2]}else{$h(d+448|0,(c[B+28>>2]|0)+4|0,B+300|0);c[d+704>>2]=c[d+448>>2];c[d+708>>2]=c[d+452>>2];c[d+712>>2]=c[d+456>>2];c[d+716>>2]=c[d+460>>2];c[u+0>>2]=c[d+464>>2];c[u+4>>2]=c[d+468>>2];c[u+8>>2]=c[d+472>>2];c[u+12>>2]=c[d+476>>2];c[w+0>>2]=c[d+480>>2];c[w+4>>2]=c[d+484>>2];c[w+8>>2]=c[d+488>>2];c[w+12>>2]=c[d+492>>2];c[y+0>>2]=c[d+496>>2];c[y+4>>2]=c[d+500>>2];c[y+8>>2]=c[d+504>>2];c[y+12>>2]=c[d+508>>2]}c[d+432>>2]=c[y+0>>2];c[d+436>>2]=c[y+4>>2];c[d+440>>2]=c[y+8>>2];c[d+444>>2]=c[y+12>>2];g[d+416>>2]=+g[d+704>>2];g[d+420>>2]=+g[d+720>>2];g[d+424>>2]=+g[d+736>>2];g[d+428>>2]=0.0;g[d+400>>2]=+g[d+708>>2];g[d+404>>2]=+g[d+724>>2];g[d+408>>2]=+g[d+740>>2];g[d+412>>2]=0.0;B=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;O=c[(c[B>>2]|0)+60>>2]|0;c[d+384>>2]=0;c[d+388>>2]=0;c[d+392>>2]=0;c[d+396>>2]=0;Ob[O&0](B,d+432|0,d+416|0,d+400|0,A,A,-H-G,G-H,d+384|0,1,10.0);B=z;continue b};default:{B=z;continue b}}}}}while(0);if(((((Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)!=0?(O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0,((Hb[c[(c[O>>2]|0)+48>>2]&127](O)|0)&16387|0)!=0):0)?(Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)!=0:0)?(O=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(Hb[c[(c[O>>2]|0)+48>>2]&127](O)|0)!=0):0)?(c[b+280>>2]|0)>0:0){e=0;do{O=c[(c[b+288>>2]|0)+(e<<2)>>2]|0;Fb[c[(c[O>>2]|0)+12>>2]&127](O,c[b+72>>2]|0);e=e+1|0}while((e|0)<(c[b+280>>2]|0))}b=c[4354]|0;O=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=O;if((O|0)!=0){i=d;return}do{if((c[b+4>>2]|0)!=0){wb(d+1008|0,0)|0;O=c[4340]|0;g[b+8>>2]=+(((c[d+1012>>2]|0)-(c[O+4>>2]|0)+(((c[d+1008>>2]|0)-(c[O>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=d;return}}}while(0);c[4354]=c[b+20>>2];i=d;return}function yi(a){a=a|0;var b=0,d=0,e=0;b=i;if((c[a+232>>2]|0)<=0){i=b;return}d=0;do{e=(c[(c[a+240>>2]|0)+(d<<2)>>2]|0)+412|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;d=d+1|0}while((d|0)<(c[a+232>>2]|0));i=b;return}function zi(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0.0,k=0.0;b=i;d=c[a+232>>2]|0;if((d|0)<=0){i=b;return}a=c[a+240>>2]|0;e=0;do{f=c[a+(e<<2)>>2]|0;h=c[f+216>>2]|0;if(!((h|0)==2|(h|0)==5)?(c[f+204>>2]&3|0)==0:0){k=+g[f+368>>2]*+g[f+352>>2];j=+g[f+372>>2]*+g[f+356>>2];g[f+412>>2]=+g[f+364>>2]*+g[f+348>>2]+ +g[f+412>>2];g[f+416>>2]=k+ +g[f+416>>2];g[f+420>>2]=j+ +g[f+420>>2]}e=e+1|0}while((e|0)<(d|0));i=b;return}function Ai(b){b=b|0;var d=0,e=0.0,f=0.0,h=0,j=0,k=0,l=0;d=i;i=i+144|0;Mv(1296);if((a[b+274>>0]|0)==0){k=c[b+232>>2]|0;if((k|0)>0){h=0;do{j=c[(c[b+240>>2]|0)+(h<<2)>>2]|0;l=c[j+216>>2]|0;if((!((l|0)==2|(l|0)==5)?(c[j+480>>2]|0)!=0:0)?(c[j+204>>2]&3|0)==0:0){if((a[b+300>>0]|0)!=0?(e=+g[b+268>>2],e!=0.0):0){f=+g[b+264>>2]-e}else{f=+g[b+264>>2]*+g[j+244>>2]}ji(j+68|0,+g[j+132>>2],+g[j+136>>2],+g[j+140>>2],j+148|0,f,d);k=c[j+480>>2]|0;Fb[c[(c[k>>2]|0)+12>>2]&127](k,d);k=c[b+232>>2]|0}h=h+1|0}while((h|0)<(k|0))}}else{k=c[b+8>>2]|0;if((k|0)>0){h=0;do{j=c[(c[b+16>>2]|0)+(h<<2)>>2]|0;if((!((j|0)==0?1:(c[j+236>>2]&2|0)==0)?(c[j+480>>2]|0)!=0:0)?(c[j+204>>2]&3|0)==0:0){if((a[b+300>>0]|0)!=0?(f=+g[b+268>>2],f!=0.0):0){e=+g[b+264>>2]-f}else{e=+g[b+264>>2]*+g[j+244>>2]}ji(j+68|0,+g[j+132>>2],+g[j+136>>2],+g[j+140>>2],j+148|0,e,d+64|0);k=c[j+480>>2]|0;Fb[c[(c[k>>2]|0)+12>>2]&127](k,d+64|0);k=c[b+8>>2]|0}h=h+1|0}while((h|0)<(k|0))}}b=c[4354]|0;l=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=l;if((l|0)!=0){i=d;return}do{if((c[b+4>>2]|0)!=0){wb(d+128|0,0)|0;l=c[4340]|0;g[b+8>>2]=+(((c[d+132>>2]|0)-(c[l+4>>2]|0)+(((c[d+128>>2]|0)-(c[l>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=d;return}}}while(0);c[4354]=c[b+20>>2];i=d;return}function Bi(b,d,e,f){b=b|0;d=+d;e=e|0;f=+f;var h=0,j=0.0,k=0,l=0;h=i;i=i+16|0;wb(c[4340]|0,0)|0;Lv(17368);c[17372>>2]=(c[17372>>2]|0)+1;l=c[17384>>2]|0;c[17384>>2]=l+1;if((l|0)==0){wb(h|0,0)|0;l=c[4340]|0;c[17380>>2]=(c[h+4>>2]|0)-(c[l+4>>2]|0)+(((c[h>>2]|0)-(c[l>>2]|0)|0)*1e6|0)}c[4356]=0;wb(h|0,0)|0;Mv(1320);if((e|0)!=0){g[b+268>>2]=f;j=+g[b+264>>2]+d;g[b+264>>2]=j;if(!(j>=f)){d=f;k=e;e=0}else{g[b+264>>2]=j- +(~~(j/f)|0)*f;d=f;k=e;e=~~(j/f)}}else{g[b+264>>2]=(a[b+300>>0]|0)!=0?0.0:d;g[b+268>>2]=0.0;e=!(+P(+d)<1.1920928955078125e-7)&1;k=e}if((Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0)!=0){l=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;a[2360]=(Hb[c[(c[l>>2]|0)+48>>2]&127](l)|0)>>>4&1}if((e|0)!=0){k=(e|0)>(k|0)?k:e;Cb[c[(c[b>>2]|0)+164>>2]&15](b,d*+(k|0));Db[c[(c[b>>2]|0)+168>>2]&255](b);if((k|0)>0){l=0;do{Cb[c[(c[b>>2]|0)+160>>2]&15](b,d);Db[c[(c[b>>2]|0)+80>>2]&255](b);l=l+1|0}while((l|0)<(k|0))}}else{Db[c[(c[b>>2]|0)+80>>2]&255](b)}Db[c[(c[b>>2]|0)+120>>2]&255](b);c[4356]=(c[4356]|0)+1;b=c[4354]|0;l=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=l;if((l|0)!=0){i=h;return e|0}do{if((c[b+4>>2]|0)!=0){wb(h|0,0)|0;l=c[4340]|0;g[b+8>>2]=+(((c[h+4>>2]|0)-(c[l+4>>2]|0)+(((c[h>>2]|0)-(c[l>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=h;return e|0}}}while(0);c[4354]=c[b+20>>2];i=h;return e|0}function Ci(d,e){d=d|0;e=+e;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0;f=i;i=i+464|0;Mv(1336);p=c[d+84>>2]|0;if((p|0)!=0){Cb[p&15](d,e)}Cb[c[(c[d>>2]|0)+140>>2]&15](d,e);g[d+28>>2]=e;c[d+32>>2]=0;c[d+48>>2]=Hb[c[(c[d>>2]|0)+20>>2]&127](d)|0;Mv(1472);Mv(1504);q=c[d+316>>2]|0;if((c[d+308>>2]|0)>0){p=0;do{C=c[d+24>>2]|0;Fb[c[(c[C>>2]|0)+16>>2]&127](C,c[q+(p<<2)>>2]|0);p=p+1|0;q=c[d+316>>2]|0}while((p|0)<(c[d+308>>2]|0))}if((q|0)!=0){if((a[d+320>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[q+ -4>>2]|0)}c[d+316>>2]=0}a[d+320>>0]=1;c[d+316>>2]=0;c[d+308>>2]=0;c[d+312>>2]=0;p=c[4354]|0;C=(c[p+16>>2]|0)+ -1|0;c[p+16>>2]=C;do{if((C|0)==0){if((c[p+4>>2]|0)!=0){wb(f+280|0,0)|0;C=c[4340]|0;g[p+8>>2]=+(((c[f+284>>2]|0)-(c[C+4>>2]|0)+(((c[f+280>>2]|0)-(c[C>>2]|0)|0)*1e6|0)-(c[p+12>>2]|0)|0)>>>0)/1.0e3+ +g[p+8>>2];if((c[p+16>>2]|0)!=0){break}p=c[4354]|0}c[4354]=c[p+20>>2]}}while(0);if((c[d+232>>2]|0)>0){r=f+264|0;s=f+164|0;p=f+400|0;q=0;do{t=c[(c[d+240>>2]|0)+(q<<2)>>2]|0;g[t+244>>2]=1.0;C=c[t+216>>2]|0;do{if(((!((C|0)==2|(C|0)==5)?(c[t+204>>2]&3|0)==0:0)?(ji(t+4|0,+g[t+312>>2],+g[t+316>>2],+g[t+320>>2],t+328|0,e,f+216|0),l=+g[r>>2],h=l- +g[t+52>>2],m=+g[f+268>>2],j=m- +g[t+56>>2],n=+g[f+272>>2],k=n- +g[t+60>>2],(a[d+44>>0]|0)!=0):0)?(v=+g[t+252>>2],v*v!=0.0?v*v<h*h+j*j+k*k:0):0){Mv(1544);if((c[(c[t+192>>2]|0)+4>>2]|0)<20){c[366]=(c[366]|0)+1;B=c[d+68>>2]|0;B=Hb[c[(c[B>>2]|0)+36>>2]&127](B)|0;C=c[d+24>>2]|0;g[f+124>>2]=1.0;b[f+128>>1]=1;b[f+130>>1]=-1;c[f+120>>2]=2072;c[f+132>>2]=c[t+52>>2];c[f+136>>2]=c[t+56>>2];c[f+140>>2]=c[t+60>>2];c[f+144>>2]=c[t+64>>2];c[f+148>>2]=c[r+0>>2];c[f+152>>2]=c[r+4>>2];c[f+156>>2]=c[r+8>>2];c[f+160>>2]=c[r+12>>2];c[f+196>>2]=0;c[f+120>>2]=1864;c[f+200>>2]=t;g[f+204>>2]=0.0;c[f+208>>2]=B;c[f+212>>2]=C;v=+g[t+248>>2];c[f+72>>2]=0;g[f+76>>2]=1.0;g[f+80>>2]=1.0;g[f+84>>2]=1.0;g[f+88>>2]=0.0;c[f+64>>2]=14168;c[f+68>>2]=8;g[f+92>>2]=v;g[f+108>>2]=v;g[f+204>>2]=+g[d+56>>2];C=c[t+188>>2]|0;b[f+128>>1]=b[C+4>>1]|0;b[f+130>>1]=b[C+6>>1]|0;c[f+48>>2]=c[r+0>>2];c[f+52>>2]=c[r+4>>2];c[f+56>>2]=c[r+8>>2];c[f+60>>2]=c[r+12>>2];c[f+0>>2]=c[t+4>>2];c[f+4>>2]=c[t+8>>2];c[f+8>>2]=c[t+12>>2];c[f+12>>2]=c[t+16>>2];c[f+16>>2]=c[t+20>>2];c[f+20>>2]=c[t+24>>2];c[f+24>>2]=c[t+28>>2];c[f+28>>2]=c[t+32>>2];c[f+32>>2]=c[t+36>>2];c[f+36>>2]=c[t+40>>2];c[f+40>>2]=c[t+44>>2];c[f+44>>2]=c[t+48>>2];fn(d,f+64|0,t+4|0,f,f+120|0);v=+g[f+124>>2];if(v<1.0){y=v*(l- +g[t+52>>2]);w=v*(m- +g[t+56>>2]);x=v*(n- +g[t+60>>2]);v=-(w*+g[f+168>>2])-y*+g[s>>2]-x*+g[f+172>>2];u=c[d+24>>2]|0;u=Qb[c[(c[u>>2]|0)+12>>2]&31](u,t,c[f+196>>2]|0)|0;A=c[d+308>>2]|0;if((A|0)==(c[d+312>>2]|0)?(o=(A|0)==0?1:A<<1,(A|0)<(o|0)):0){if((o|0)==0){z=0}else{c[4336]=(c[4336]|0)+1;z=cw((o<<2|3)+16|0)|0;if((z|0)==0){z=0}else{c[(z+19&-16)+ -4>>2]=z;z=z+19&-16}A=c[d+308>>2]|0}if((A|0)>0){C=0;do{B=z+(C<<2)|0;if((B|0)!=0){c[B>>2]=c[(c[d+316>>2]|0)+(C<<2)>>2]}C=C+1|0}while((C|0)!=(A|0))}B=c[d+316>>2]|0;if((B|0)!=0){if((a[d+320>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[B+ -4>>2]|0);A=c[d+308>>2]|0}c[d+316>>2]=0}a[d+320>>0]=1;c[d+316>>2]=z;c[d+312>>2]=o}z=(c[d+316>>2]|0)+(A<<2)|0;if((z|0)!=0){c[z>>2]=u}c[d+308>>2]=A+1;y=y+ +g[t+52>>2];w=w+ +g[t+56>>2];x=x+ +g[t+60>>2];z=c[f+196>>2]|0;O=+g[z+4>>2];N=+g[z+20>>2];M=+g[z+36>>2];L=+g[z+8>>2];K=+g[z+24>>2];J=+g[z+40>>2];I=+g[z+12>>2];G=+g[z+28>>2];E=+g[z+44>>2];H=-+g[z+52>>2];F=-+g[z+56>>2];D=-+g[z+60>>2];c[f+280>>2]=0;c[f+284>>2]=0;c[f+288>>2]=0;c[f+292>>2]=0;g[f+296>>2]=y*O+w*N+x*M+(O*H+N*F+M*D);g[f+300>>2]=y*L+w*K+x*J+(L*H+K*F+J*D);g[f+304>>2]=y*I+w*G+x*E+(I*H+G*F+E*D);g[f+308>>2]=0.0;c[f+344>>2]=c[s+0>>2];c[f+348>>2]=c[s+4>>2];c[f+352>>2]=c[s+8>>2];c[f+356>>2]=c[s+12>>2];g[f+360>>2]=v;g[f+364>>2]=0.0;g[f+368>>2]=0.0;g[f+372>>2]=0.0;c[f+392>>2]=0;a[f+396>>0]=0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[p+16>>2]=0;c[p+20>>2]=0;c[p+24>>2]=0;c[p+28>>2]=0;z=Wr(u,f+280|0)|0;g[u+(z*184|0)+96>>2]=0.0;v=+g[t+224>>2]*+g[(c[f+196>>2]|0)+224>>2];v=v<-10.0?-10.0:v;g[u+(z*184|0)+88>>2]=v>10.0?10.0:v;c[u+(z*184|0)+52>>2]=c[t+52>>2];c[u+(z*184|0)+56>>2]=c[t+56>>2];c[u+(z*184|0)+60>>2]=c[t+60>>2];c[u+(z*184|0)+64>>2]=c[t+64>>2];g[u+(z*184|0)+36>>2]=y;g[u+(z*184|0)+40>>2]=w;g[u+(z*184|0)+44>>2]=x;g[u+(z*184|0)+48>>2]=0.0}}t=c[4354]|0;C=(c[t+16>>2]|0)+ -1|0;c[t+16>>2]=C;if((C|0)==0){if((c[t+4>>2]|0)!=0){wb(f+280|0,0)|0;C=c[4340]|0;g[t+8>>2]=+(((c[f+284>>2]|0)-(c[C+4>>2]|0)+(((c[f+280>>2]|0)-(c[C>>2]|0)|0)*1e6|0)-(c[t+12>>2]|0)|0)>>>0)/1.0e3+ +g[t+8>>2];if((c[t+16>>2]|0)!=0){break}t=c[4354]|0}c[4354]=c[t+20>>2]}}}while(0);q=q+1|0}while((q|0)<(c[d+232>>2]|0))}o=c[4354]|0;C=(c[o+16>>2]|0)+ -1|0;c[o+16>>2]=C;do{if((C|0)==0){if((c[o+4>>2]|0)!=0){wb(f+280|0,0)|0;C=c[4340]|0;g[o+8>>2]=+(((c[f+284>>2]|0)-(c[C+4>>2]|0)+(((c[f+280>>2]|0)-(c[C>>2]|0)|0)*1e6|0)-(c[o+12>>2]|0)|0)>>>0)/1.0e3+ +g[o+8>>2];if((c[o+16>>2]|0)!=0){break}o=c[4354]|0}c[4354]=c[o+20>>2]}}while(0);Db[c[(c[d>>2]|0)+44>>2]&255](d);Db[c[(c[d>>2]|0)+148>>2]&255](d);g[d+104>>2]=e;Fb[c[(c[d>>2]|0)+152>>2]&127](d,d+92|0);Cb[c[(c[d>>2]|0)+144>>2]&15](d,e);Mv(1368);if((c[d+280>>2]|0)>0){o=0;do{C=c[(c[d+288>>2]|0)+(o<<2)>>2]|0;kc[c[(c[C>>2]|0)+8>>2]&1](C,d,e);o=o+1|0}while((o|0)<(c[d+280>>2]|0))}o=c[4354]|0;C=(c[o+16>>2]|0)+ -1|0;c[o+16>>2]=C;do{if((C|0)==0){if((c[o+4>>2]|0)!=0){wb(f+280|0,0)|0;C=c[4340]|0;g[o+8>>2]=+(((c[f+284>>2]|0)-(c[C+4>>2]|0)+(((c[f+280>>2]|0)-(c[C>>2]|0)|0)*1e6|0)-(c[o+12>>2]|0)|0)>>>0)/1.0e3+ +g[o+8>>2];if((c[o+16>>2]|0)!=0){break}o=c[4354]|0}c[4354]=c[o+20>>2]}}while(0);Cb[c[(c[d>>2]|0)+156>>2]&15](d,e);o=c[d+80>>2]|0;if((o|0)!=0){Cb[o&15](d,e)}d=c[4354]|0;C=(c[d+16>>2]|0)+ -1|0;c[d+16>>2]=C;if((C|0)!=0){i=f;return}do{if((c[d+4>>2]|0)!=0){wb(f+280|0,0)|0;C=c[4340]|0;g[d+8>>2]=+(((c[f+284>>2]|0)-(c[C+4>>2]|0)+(((c[f+280>>2]|0)-(c[C>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3+ +g[d+8>>2];if((c[d+16>>2]|0)==0){d=c[4354]|0;break}else{i=f;return}}}while(0);c[4354]=c[d+20>>2];i=f;return}function Di(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0.0,k=0,l=0.0,m=0.0;d=i;c[a+248>>2]=c[b+0>>2];c[a+252>>2]=c[b+4>>2];c[a+256>>2]=c[b+8>>2];c[a+260>>2]=c[b+12>>2];h=c[a+232>>2]|0;if((h|0)<=0){i=d;return}e=0;do{f=c[(c[a+240>>2]|0)+(e<<2)>>2]|0;k=c[f+216>>2]|0;if(!((k|0)==2|(k|0)==5)?(c[f+504>>2]&1|0)==0:0){j=+g[f+344>>2];if(j!=0.0){m=1.0/j*+g[b+4>>2];l=1.0/j*+g[b+8>>2];g[f+364>>2]=1.0/j*+g[b>>2];g[f+368>>2]=m;g[f+372>>2]=l;g[f+376>>2]=0.0}c[f+380>>2]=c[b+0>>2];c[f+384>>2]=c[b+4>>2];c[f+388>>2]=c[b+8>>2];c[f+392>>2]=c[b+12>>2];h=c[a+232>>2]|0}e=e+1|0}while((e|0)<(h|0));i=d;return}function Ei(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+0>>2]=c[b+248>>2];c[a+4>>2]=c[b+252>>2];c[a+8>>2]=c[b+256>>2];c[a+12>>2]=c[b+260>>2];i=d;return}function Fi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=i;Vm(a,b,c,d);i=e;return}function Gi(a,b){a=a|0;b=b|0;var d=0;d=i;if((b|0)==0?1:(c[b+236>>2]&2|0)==0){Zm(a,b);i=d;return}else{Fb[c[(c[a>>2]|0)+92>>2]&127](a,b);i=d;return}}function Hi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;e=i;d=c[a+232>>2]|0;a:do{if((d|0)>0){f=c[a+240>>2]|0;g=0;while(1){h=f+(g<<2)|0;j=g+1|0;if((c[h>>2]|0)==(b|0)){break}if((j|0)<(d|0)){g=j}else{break a}}if((g|0)<(d|0)){c[h>>2]=c[f+(d+ -1<<2)>>2];c[(c[a+240>>2]|0)+(d+ -1<<2)>>2]=b;c[a+232>>2]=d+ -1}}}while(0);Zm(a,b);i=e;return}function Ii(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0;e=i;h=c[d+204>>2]|0;if((h&3|0)==0?(c[d+504>>2]&1|0)==0:0){m=+g[d+344>>2];if(m!=0.0){o=1.0/m*+g[b+252>>2];n=1.0/m*+g[b+256>>2];g[d+364>>2]=1.0/m*+g[b+248>>2];g[d+368>>2]=o;g[d+372>>2]=n;g[d+376>>2]=0.0}c[d+380>>2]=c[b+248>>2];c[d+384>>2]=c[b+252>>2];c[d+388>>2]=c[b+256>>2];c[d+392>>2]=c[b+260>>2]}if((c[d+192>>2]|0)==0){i=e;return}if((h&1|0)!=0){if(!(((c[d+216>>2]|0)+ -4|0)>>>0<2)){c[d+216>>2]=2}}else{j=c[b+232>>2]|0;if((j|0)==(c[b+236>>2]|0)?(f=(j|0)==0?1:j<<1,(j|0)<(f|0)):0){if((f|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;h=cw((f<<2|3)+16|0)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}j=c[b+232>>2]|0}if((j|0)>0){k=0;do{l=h+(k<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[b+240>>2]|0)+(k<<2)>>2]}k=k+1|0}while((k|0)!=(j|0))}k=c[b+240>>2]|0;if((k|0)!=0){if((a[b+244>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0);j=c[b+232>>2]|0}c[b+240>>2]=0}a[b+244>>0]=1;c[b+240>>2]=h;c[b+236>>2]=f}f=(c[b+240>>2]|0)+(j<<2)|0;if((f|0)!=0){c[f>>2]=d}c[b+232>>2]=j+1;h=c[d+204>>2]|0}if((h&1|0)==0){f=(h&2|0)==0}else{f=0}mc[c[(c[b>>2]|0)+36>>2]&63](b,d,f?1:2,f?-1:-3);i=e;return}function Ji(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0;h=i;k=c[d+204>>2]|0;if((k&3|0)==0?(c[d+504>>2]&1|0)==0:0){o=+g[d+344>>2];if(o!=0.0){q=1.0/o*+g[b+252>>2];p=1.0/o*+g[b+256>>2];g[d+364>>2]=1.0/o*+g[b+248>>2];g[d+368>>2]=q;g[d+372>>2]=p;g[d+376>>2]=0.0}c[d+380>>2]=c[b+248>>2];c[d+384>>2]=c[b+252>>2];c[d+388>>2]=c[b+256>>2];c[d+392>>2]=c[b+260>>2]}if((c[d+192>>2]|0)==0){i=h;return}if((k&1|0)!=0){if(!(((c[d+216>>2]|0)+ -4|0)>>>0<2)){c[d+216>>2]=2}}else{l=c[b+232>>2]|0;if((l|0)==(c[b+236>>2]|0)?(j=(l|0)==0?1:l<<1,(l|0)<(j|0)):0){if((j|0)==0){k=0}else{c[4336]=(c[4336]|0)+1;k=cw((j<<2|3)+16|0)|0;if((k|0)==0){k=0}else{c[(k+19&-16)+ -4>>2]=k;k=k+19&-16}l=c[b+232>>2]|0}if((l|0)>0){m=0;do{n=k+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[b+240>>2]|0)+(m<<2)>>2]}m=m+1|0}while((m|0)!=(l|0))}m=c[b+240>>2]|0;if((m|0)!=0){if((a[b+244>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[m+ -4>>2]|0);l=c[b+232>>2]|0}c[b+240>>2]=0}a[b+244>>0]=1;c[b+240>>2]=k;c[b+236>>2]=j}j=(c[b+240>>2]|0)+(l<<2)|0;if((j|0)!=0){c[j>>2]=d}c[b+232>>2]=l+1}mc[c[(c[b>>2]|0)+36>>2]&63](b,d,e,f);i=h;return}function Ki(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0;e=i;i=i+16|0;Mv(1384);if((c[b+232>>2]|0)>0){f=(a[2360]|0)==0;h=0;do{k=c[(c[b+240>>2]|0)+(h<<2)>>2]|0;a:do{if((k|0)!=0){l=c[k+216>>2]|0;do{if(!((l|0)==4|(l|0)==2)){p=+g[k+312>>2];o=+g[k+316>>2];n=+g[k+320>>2];m=+g[k+472>>2];if(p*p+o*o+n*n<m*m?(m=+g[k+328>>2],n=+g[k+332>>2],o=+g[k+336>>2],p=+g[k+476>>2],m*m+n*n+o*o<p*p):0){g[k+220>>2]=+g[k+220>>2]+d;j=10;break}g[k+220>>2]=0.0;if(!((l+ -4|0)>>>0<2)){c[k+216>>2]=0;l=0}else{j=10}}else{j=10}}while(0);if((j|0)==10){j=0;if((l|0)==4){break}}do{if(f){if(!((l+ -2|0)>>>0<2)?!(+g[k+220>>2]>2.0):0){break}if((c[k+204>>2]&3|0)!=0){if((l+ -4|0)>>>0<2){break a}c[k+216>>2]=2;break a}if((l|0)==1){c[k+216>>2]=3;break a}if((l|0)!=2){break a}l=(c[k+260>>2]|0)+2|0;c[k+328>>2]=0;c[k+332>>2]=0;c[k+336>>2]=0;c[k+340>>2]=0;c[k+260>>2]=l;c[k+312>>2]=0;c[k+316>>2]=0;c[k+320>>2]=0;c[k+324>>2]=0;break a}}while(0);if(!((l+ -4|0)>>>0<2)){c[k+216>>2]=1}}}while(0);h=h+1|0}while((h|0)<(c[b+232>>2]|0))}b=c[4354]|0;l=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=l;if((l|0)!=0){i=e;return}do{if((c[b+4>>2]|0)!=0){wb(e|0,0)|0;l=c[4340]|0;g[b+8>>2]=+(((c[e+4>>2]|0)-(c[l+4>>2]|0)+(((c[e>>2]|0)-(c[l>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=e;return}}}while(0);c[4354]=c[b+20>>2];i=e;return}function Li(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;j=c[b+212>>2]|0;if((j|0)==(c[b+216>>2]|0)?(g=(j|0)==0?1:j<<1,(j|0)<(g|0)):0){if((g|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;h=cw((g<<2|3)+16|0)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}j=c[b+212>>2]|0}if((j|0)>0){l=0;do{k=h+(l<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+220>>2]|0)+(l<<2)>>2]}l=l+1|0}while((l|0)!=(j|0))}k=c[b+220>>2]|0;if((k|0)!=0){if((a[b+224>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[k+ -4>>2]|0);j=c[b+212>>2]|0}c[b+220>>2]=0}a[b+224>>0]=1;c[b+220>>2]=h;c[b+216>>2]=g}g=(c[b+220>>2]|0)+(j<<2)|0;if((g|0)!=0){c[g>>2]=d}c[b+212>>2]=j+1;if(!e){i=f;return}Sj(c[d+28>>2]|0,d);Sj(c[d+32>>2]|0,d);i=f;return}function Mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;k=c[a+212>>2]|0;a:do{if((k|0)>0){f=c[a+220>>2]|0;g=0;while(1){h=f+(g<<2)|0;j=g+1|0;if((c[h>>2]|0)==(b|0)){break}if((j|0)<(k|0)){g=j}else{break a}}if((g|0)<(k|0)){c[h>>2]=c[f+(k+ -1<<2)>>2];c[(c[a+220>>2]|0)+(k+ -1<<2)>>2]=b;c[a+212>>2]=k+ -1}}}while(0);a=c[b+28>>2]|0;g=c[a+488>>2]|0;b:do{if((g|0)>0){f=c[a+496>>2]|0;h=0;while(1){j=f+(h<<2)|0;k=h+1|0;if((c[j>>2]|0)==(b|0)){break}if((k|0)<(g|0)){h=k}else{break b}}if((h|0)<(g|0)){c[j>>2]=c[f+(g+ -1<<2)>>2];c[(c[a+496>>2]|0)+(g+ -1<<2)>>2]=b;c[a+488>>2]=g+ -1;g=g+ -1|0}}}while(0);c[a+256>>2]=(g|0)>0;a=c[b+32>>2]|0;f=c[a+488>>2]|0;if((f|0)<=0){j=f;j=(j|0)>0;j=j&1;k=a+256|0;c[k>>2]=j;i=d;return}h=c[a+496>>2]|0;j=0;while(1){k=h+(j<<2)|0;g=j+1|0;if((c[k>>2]|0)==(b|0)){break}if((g|0)<(f|0)){j=g}else{e=19;break}}if((e|0)==19){j=(f|0)>0;j=j&1;k=a+256|0;c[k>>2]=j;i=d;return}if((j|0)>=(f|0)){j=f;j=(j|0)>0;j=j&1;k=a+256|0;c[k>>2]=j;i=d;return}c[k>>2]=c[h+(f+ -1<<2)>>2];c[(c[a+496>>2]|0)+(f+ -1<<2)>>2]=b;c[a+488>>2]=f+ -1;j=f+ -1|0;j=(j|0)>0;j=j&1;k=a+256|0;c[k>>2]=j;i=d;return}function Ni(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;h=c[b+280>>2]|0;if((h|0)==(c[b+284>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[b+280>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[b+288>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[b+288>>2]|0;if((j|0)!=0){if((a[b+292>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[b+280>>2]|0}c[b+288>>2]=0}a[b+292>>0]=1;c[b+288>>2]=g;c[b+284>>2]=f}f=(c[b+288>>2]|0)+(h<<2)|0;if((f|0)==0){k=h+1|0;c[b+280>>2]=k;i=e;return}c[f>>2]=d;k=h+1|0;c[b+280>>2]=k;i=e;return}function Oi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=c[a+280>>2]|0;if((f|0)<=0){i=e;return}g=c[a+288>>2]|0;h=0;while(1){j=g+(h<<2)|0;k=h+1|0;if((c[j>>2]|0)==(b|0)){break}if((k|0)<(f|0)){h=k}else{d=7;break}}if((d|0)==7){i=e;return}if((h|0)>=(f|0)){i=e;return}c[j>>2]=c[g+(f+ -1<<2)>>2];c[(c[a+288>>2]|0)+(f+ -1<<2)>>2]=b;c[a+280>>2]=f+ -1;i=e;return}function Pi(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+64>>2]&127](a,b);i=d;return}function Qi(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+68>>2]&127](a,b);i=d;return}function Ri(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+64>>2]&127](a,b);i=d;return}function Si(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+68>>2]&127](a,b);i=d;return}function Ti(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+16|0;Mv(1408);h=c[b+212>>2]|0;j=c[b+180>>2]|0;if((j|0)<(h|0)){if((c[b+184>>2]|0)<(h|0)){if((h|0)==0){l=j;m=0}else{c[4336]=(c[4336]|0)+1;l=cw((h<<2|3)+16|0)|0;if((l|0)==0){m=0}else{c[(l+19&-16)+ -4>>2]=l;m=l+19&-16}l=c[b+180>>2]|0}if((l|0)>0){o=0;do{n=m+(o<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[b+188>>2]|0)+(o<<2)>>2]}o=o+1|0}while((o|0)!=(l|0))}l=c[b+188>>2]|0;if((l|0)!=0){if((a[b+192>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[b+188>>2]=0}a[b+192>>0]=1;c[b+188>>2]=m;c[b+184>>2]=h;l=b+188|0}else{l=b+188|0}do{m=(c[l>>2]|0)+(j<<2)|0;if((m|0)!=0){c[m>>2]=0}j=j+1|0}while((j|0)!=(h|0))}c[b+180>>2]=h;h=0;while(1){if((h|0)>=(Hb[c[(c[b>>2]|0)+104>>2]&127](b)|0)){break}c[(c[b+188>>2]|0)+(h<<2)>>2]=c[(c[b+220>>2]|0)+(h<<2)>>2];h=h+1|0}h=c[b+180>>2]|0;if((h|0)>1){jj(b+176|0,0,h+ -1|0)}if((Hb[c[(c[b>>2]|0)+104>>2]&127](b)|0)==0){j=0}else{j=c[b+188>>2]|0}h=c[b+196>>2]|0;u=c[b+180>>2]|0;v=Hb[c[(c[b>>2]|0)+20>>2]&127](b)|0;c[h+4>>2]=d;c[h+12>>2]=j;c[h+16>>2]=u;c[h+20>>2]=v;j=c[h+32>>2]|0;if((j|0)<0){if((c[h+36>>2]|0)<0){l=c[h+40>>2]|0;if((l|0)!=0){if((a[h+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[l+ -4>>2]|0)}c[h+40>>2]=0}a[h+44>>0]=1;c[h+40>>2]=0;c[h+36>>2]=0}do{l=(c[h+40>>2]|0)+(j<<2)|0;if((l|0)!=0){c[l>>2]=0}j=j+1|0}while((j|0)!=0)}c[h+32>>2]=0;l=c[h+52>>2]|0;if((l|0)<0){if((c[h+56>>2]|0)<0){j=c[h+60>>2]|0;if((j|0)!=0){if((a[h+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[h+60>>2]=0}a[h+64>>0]=1;c[h+60>>2]=0;c[h+56>>2]=0;j=l}else{j=l}do{l=(c[h+60>>2]|0)+(j<<2)|0;if((l|0)!=0){c[l>>2]=0}j=j+1|0}while((j|0)!=0)}c[h+52>>2]=0;l=c[h+72>>2]|0;if((l|0)<0){if((c[h+76>>2]|0)<0){j=c[h+80>>2]|0;if((j|0)!=0){if((a[h+84>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0)}c[h+80>>2]=0}a[h+84>>0]=1;c[h+80>>2]=0;c[h+76>>2]=0;j=l}else{j=l}do{l=(c[h+80>>2]|0)+(j<<2)|0;if((l|0)!=0){c[l>>2]=0}j=j+1|0}while((j|0)!=0)}c[h+72>>2]=0;h=c[b+200>>2]|0;m=c[(c[h>>2]|0)+8>>2]|0;l=c[b+8>>2]|0;j=c[b+24>>2]|0;j=Hb[c[(c[j>>2]|0)+36>>2]&127](j)|0;ic[m&63](h,l,j);j=c[b+204>>2]|0;l=c[b+24>>2]|0;h=c[b+196>>2]|0;Mv(14072);m=c[j+28>>2]|0;if((m|0)<0){if((c[j+32>>2]|0)<0){n=c[j+36>>2]|0;if((n|0)!=0){if((a[j+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0)}c[j+36>>2]=0}a[j+40>>0]=1;c[j+36>>2]=0;c[j+32>>2]=0}do{n=(c[j+36>>2]|0)+(m<<2)|0;if((n|0)!=0){c[n>>2]=0}m=m+1|0}while((m|0)!=0)}c[j+28>>2]=0;n=c[j+8>>2]|0;if((n|0)>0){p=c[j+16>>2]|0;m=0;do{o=p+(m<<3)|0;r=c[o>>2]|0;if((r|0)==(m|0)){s=m}else{q=o;do{s=p+(r<<3)|0;c[q>>2]=c[s>>2];s=c[s>>2]|0;q=p+(s<<3)|0;r=c[q>>2]|0}while((s|0)!=(r|0))}c[o>>2]=s;m=m+1|0}while((m|0)!=(n|0));q=c[j+8>>2]|0;if((q|0)>1){Ht(j+4|0,0,q+ -1|0);q=c[j+8>>2]|0}if((q|0)>0){n=c[j+16>>2]|0;s=0;while(1){o=c[n+(s<<3)>>2]|0;m=s;do{m=m+1|0;p=(m|0)<(q|0);if(!p){break}}while((c[n+(m<<3)>>2]|0)==(o|0));if((s|0)<(m|0)){r=c[b+16>>2]|0;u=1;t=s;do{v=c[r+(c[n+(t<<3)+4>>2]<<2)>>2]|0;if((c[v+208>>2]|0)==(o|0)){v=c[v+216>>2]|0;u=u&(v|0)!=1&(v|0)!=4}t=t+1|0}while((t|0)!=(m|0));if(u){do{t=c[r+(c[n+(s<<3)+4>>2]<<2)>>2]|0;if((c[t+208>>2]|0)==(o|0)?!(((c[t+216>>2]|0)+ -4|0)>>>0<2):0){c[t+216>>2]=2}s=s+1|0}while((s|0)<(m|0))}else{do{t=c[r+(c[n+(s<<3)+4>>2]<<2)>>2]|0;if((c[t+208>>2]|0)==(o|0)?(c[t+216>>2]|0)==2:0){c[t+216>>2]=3;g[t+220>>2]=0.0}s=s+1|0}while((s|0)<(m|0))}}if(p){s=m}else{break}}}}m=Hb[c[(c[l>>2]|0)+36>>2]&127](l)|0;if((m|0)>0){n=0;do{o=Zb[c[(c[l>>2]|0)+40>>2]&31](l,n)|0;p=c[o+740>>2]|0;q=c[o+744>>2]|0;if((p|0)!=0?(c[p+216>>2]|0)!=2:0){r=101}else{r=99}if(((r|0)==99?(r=0,(q|0)!=0):0)?(c[q+216>>2]|0)!=2:0){r=101}if((r|0)==101){r=c[p+204>>2]|0;if((((r&2|0)!=0?(c[p+216>>2]|0)!=2:0)?(r&4|0)==0:0)?(c[q+204>>2]&3|0)==0:0){if(!(((c[q+216>>2]|0)+ -4|0)>>>0<2)){c[q+216>>2]=1}g[q+220>>2]=0.0}r=c[q+204>>2]|0;if((((r&2|0)!=0?(c[q+216>>2]|0)!=2:0)?(r&4|0)==0:0)?(c[p+204>>2]&3|0)==0:0){if(!(((c[p+216>>2]|0)+ -4|0)>>>0<2)){c[p+216>>2]=1}g[p+220>>2]=0.0}if((a[j+64>>0]|0)!=0?Qb[c[(c[l>>2]|0)+28>>2]&31](l,p,q)|0:0){q=c[j+28>>2]|0;if((q|0)==(c[j+32>>2]|0)?(k=(q|0)==0?1:q<<1,(q|0)<(k|0)):0){if((k|0)==0){p=0}else{c[4336]=(c[4336]|0)+1;p=cw((k<<2|3)+16|0)|0;if((p|0)==0){p=0}else{c[(p+19&-16)+ -4>>2]=p;p=p+19&-16}q=c[j+28>>2]|0}if((q|0)>0){s=0;do{r=p+(s<<2)|0;if((r|0)!=0){c[r>>2]=c[(c[j+36>>2]|0)+(s<<2)>>2]}s=s+1|0}while((s|0)!=(q|0))}r=c[j+36>>2]|0;if((r|0)!=0){if((a[j+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[r+ -4>>2]|0);q=c[j+28>>2]|0}c[j+36>>2]=0}a[j+40>>0]=1;c[j+36>>2]=p;c[j+32>>2]=k}p=(c[j+36>>2]|0)+(q<<2)|0;if((p|0)!=0){c[p>>2]=o}c[j+28>>2]=q+1}}n=n+1|0}while((n|0)<(m|0))}k=c[4354]|0;v=(c[k+16>>2]|0)+ -1|0;c[k+16>>2]=v;do{if((v|0)==0){if((c[k+4>>2]|0)!=0){wb(e|0,0)|0;v=c[4340]|0;g[k+8>>2]=+(((c[e+4>>2]|0)-(c[v+4>>2]|0)+(((c[e>>2]|0)-(c[v>>2]|0)|0)*1e6|0)-(c[k+12>>2]|0)|0)>>>0)/1.0e3+ +g[k+8>>2];if((c[k+16>>2]|0)!=0){break}k=c[4354]|0}c[4354]=c[k+20>>2]}}while(0);k=c[j+8>>2]|0;Mv(14104);if((a[j+64>>0]|0)!=0){m=c[j+28>>2]|0;if((m|0)>1){Ps(j+24|0,0,m+ -1|0)}if((k|0)>0){o=1;p=0;l=0;do{s=c[j+16>>2]|0;n=c[s+(p<<3)>>2]|0;a:do{if((p|0)<(k|0)){r=n;q=1;while(1){if((r|0)!=(n|0)){break a}r=c[(c[b+16>>2]|0)+(c[s+(p<<3)+4>>2]<<2)>>2]|0;t=c[j+48>>2]|0;if((t|0)==(c[j+52>>2]|0)?(f=(t|0)==0?1:t<<1,(t|0)<(f|0)):0){if((f|0)==0){s=0}else{c[4336]=(c[4336]|0)+1;s=cw((f<<2|3)+16|0)|0;if((s|0)==0){s=0}else{c[(s+19&-16)+ -4>>2]=s;s=s+19&-16}t=c[j+48>>2]|0}if((t|0)>0){u=0;do{v=s+(u<<2)|0;if((v|0)!=0){c[v>>2]=c[(c[j+56>>2]|0)+(u<<2)>>2]}u=u+1|0}while((u|0)!=(t|0))}u=c[j+56>>2]|0;if((u|0)!=0){if((a[j+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[u+ -4>>2]|0);t=c[j+48>>2]|0}c[j+56>>2]=0}a[j+60>>0]=1;c[j+56>>2]=s;c[j+52>>2]=f}s=(c[j+56>>2]|0)+(t<<2)|0;if((s|0)!=0){c[s>>2]=r}c[j+48>>2]=t+1;v=c[r+216>>2]|0;q=q&((v|0)==2|(v|0)==5);p=p+1|0;if((p|0)>=(k|0)){break a}s=c[j+16>>2]|0;r=c[s+(p<<3)>>2]|0}}else{q=1}}while(0);if((l|0)<(m|0)){s=c[j+36>>2]|0;r=s+(l<<2)|0;u=c[r>>2]|0;t=c[(c[u+740>>2]|0)+208>>2]|0;if(!((t|0)>-1)){t=c[(c[u+744>>2]|0)+208>>2]|0}if((t|0)==(n|0)){t=l;do{t=t+1|0;if((t|0)>=(m|0)){break}o=c[s+(t<<2)>>2]|0;u=c[(c[o+740>>2]|0)+208>>2]|0;if(!((u|0)>-1)){u=c[(c[o+744>>2]|0)+208>>2]|0}}while((n|0)==(u|0));o=t;s=t-l|0}else{s=0;r=0}}else{s=0;r=0}if(!q){Rb[c[(c[h>>2]|0)+8>>2]&7](h,c[j+56>>2]|0,c[j+48>>2]|0,r,s,n)}l=(s|0)==0?l:o;q=c[j+48>>2]|0;if((q|0)<0){if((c[j+52>>2]|0)<0){n=c[j+56>>2]|0;if((n|0)!=0){if((a[j+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[n+ -4>>2]|0)}c[j+56>>2]=0}a[j+60>>0]=1;c[j+56>>2]=0;c[j+52>>2]=0}do{n=(c[j+56>>2]|0)+(q<<2)|0;if((n|0)!=0){c[n>>2]=0}q=q+1|0}while((q|0)!=0)}c[j+48>>2]=0}while((p|0)<(k|0))}}else{u=Hb[c[(c[l>>2]|0)+44>>2]&127](l)|0;v=Hb[c[(c[l>>2]|0)+36>>2]&127](l)|0;Rb[c[(c[h>>2]|0)+8>>2]&7](h,c[b+16>>2]|0,c[b+8>>2]|0,u,v,-1)}f=c[4354]|0;v=(c[f+16>>2]|0)+ -1|0;c[f+16>>2]=v;do{if((v|0)==0){if((c[f+4>>2]|0)!=0){wb(e|0,0)|0;v=c[4340]|0;g[f+8>>2]=+(((c[e+4>>2]|0)-(c[v+4>>2]|0)+(((c[e>>2]|0)-(c[v>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3+ +g[f+8>>2];if((c[f+16>>2]|0)!=0){break}f=c[4354]|0}c[4354]=c[f+20>>2]}}while(0);Ui(c[b+196>>2]|0);v=c[b+200>>2]|0;ic[c[(c[v>>2]|0)+16>>2]&63](v,d,c[b+72>>2]|0);b=c[4354]|0;v=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=v;if((v|0)!=0){i=e;return}do{if((c[b+4>>2]|0)!=0){wb(e|0,0)|0;v=c[4340]|0;g[b+8>>2]=+(((c[e+4>>2]|0)-(c[v+4>>2]|0)+(((c[e>>2]|0)-(c[v>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=e;return}}}while(0);c[4354]=c[b+20>>2];i=e;return}function Ui(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=c[b+32>>2]|0;if((e|0)==0){f=0}else{f=c[b+40>>2]|0}g=c[b+52>>2]|0;if((g|0)==0){h=0}else{h=c[b+60>>2]|0}j=c[b+72>>2]|0;if((j|0)==0){k=0}else{k=c[b+80>>2]|0}l=c[b+8>>2]|0;+$b[c[(c[l>>2]|0)+12>>2]&3](l,f,e,h,g,k,j,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);e=c[b+32>>2]|0;if((e|0)<0){if((c[b+36>>2]|0)<0){f=c[b+40>>2]|0;if((f|0)!=0){if((a[b+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=0;c[b+36>>2]=0}do{f=(c[b+40>>2]|0)+(e<<2)|0;if((f|0)!=0){c[f>>2]=0}e=e+1|0}while((e|0)!=0)}c[b+32>>2]=0;e=c[b+52>>2]|0;if((e|0)<0){if((c[b+56>>2]|0)<0){f=c[b+60>>2]|0;if((f|0)!=0){if((a[b+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+56>>2]=0}do{f=(c[b+60>>2]|0)+(e<<2)|0;if((f|0)!=0){c[f>>2]=0}e=e+1|0}while((e|0)!=0)}c[b+52>>2]=0;e=c[b+72>>2]|0;if((e|0)>=0){c[b+72>>2]=0;i=d;return}if((c[b+76>>2]|0)<0){f=c[b+80>>2]|0;if((f|0)!=0){if((a[b+84>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}c[b+80>>2]=0}a[b+84>>0]=1;c[b+80>>2]=0;c[b+76>>2]=0;f=e}else{f=e}do{e=(c[b+80>>2]|0)+(f<<2)|0;if((e|0)!=0){c[e>>2]=0}f=f+1|0}while((f|0)!=0);c[b+72>>2]=0;i=d;return}function Vi(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+16|0;Mv(1432);p=c[b+204>>2]|0;ic[c[(c[p>>2]|0)+8>>2]&63](p,b,c[b+24>>2]|0);if((c[b+308>>2]|0)>0){h=c[b+316>>2]|0;j=0;do{k=c[h+(j<<2)>>2]|0;l=c[k+740>>2]|0;k=c[k+744>>2]|0;if(((l|0)!=0?!((k|0)==0?1:(c[l+204>>2]&3|0)!=0):0)?(c[k+204>>2]&3|0)==0:0){m=c[l+208>>2]|0;l=c[k+208>>2]|0;k=c[(c[b+204>>2]|0)+16>>2]|0;n=c[k+(m<<3)>>2]|0;if((n|0)!=(m|0)){o=k+(m<<3)|0;do{m=k+(n<<3)|0;c[o>>2]=c[m>>2];m=c[m>>2]|0;o=k+(m<<3)|0;n=c[o>>2]|0}while((m|0)!=(n|0))}n=c[k+(l<<3)>>2]|0;if((n|0)!=(l|0)){o=k+(l<<3)|0;do{l=k+(n<<3)|0;c[o>>2]=c[l>>2];l=c[l>>2]|0;o=k+(l<<3)|0;n=c[o>>2]|0}while((l|0)!=(n|0))}if((m|0)!=(l|0)){c[k+(m<<3)>>2]=l;p=k+(l<<3)+4|0;c[p>>2]=(c[p>>2]|0)+(c[k+(m<<3)+4>>2]|0)}}j=j+1|0}while((j|0)<(c[b+308>>2]|0))}h=c[b+212>>2]|0;if((h|0)>0){j=c[b+220>>2]|0;k=0;do{l=c[j+(k<<2)>>2]|0;if((((a[l+20>>0]|0)!=0?(e=c[l+28>>2]|0,f=c[l+32>>2]|0,(e|0)!=0):0)?!((f|0)==0?1:(c[e+204>>2]&3|0)!=0):0)?(c[f+204>>2]&3|0)==0:0){n=c[e+208>>2]|0;m=c[f+208>>2]|0;l=c[(c[b+204>>2]|0)+16>>2]|0;o=c[l+(n<<3)>>2]|0;if((o|0)!=(n|0)){p=l+(n<<3)|0;do{n=l+(o<<3)|0;c[p>>2]=c[n>>2];n=c[n>>2]|0;p=l+(n<<3)|0;o=c[p>>2]|0}while((n|0)!=(o|0))}o=c[l+(m<<3)>>2]|0;if((o|0)!=(m|0)){p=l+(m<<3)|0;do{m=l+(o<<3)|0;c[p>>2]=c[m>>2];m=c[m>>2]|0;p=l+(m<<3)|0;o=c[p>>2]|0}while((m|0)!=(o|0))}if((n|0)!=(m|0)){c[l+(n<<3)>>2]=m;p=l+(m<<3)+4|0;c[p>>2]=(c[p>>2]|0)+(c[l+(n<<3)+4>>2]|0)}}k=k+1|0}while((k|0)!=(h|0))}p=c[b+204>>2]|0;Fb[c[(c[p>>2]|0)+12>>2]&127](p,b);b=c[4354]|0;p=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=p;if((p|0)!=0){i=d;return}do{if((c[b+4>>2]|0)!=0){wb(d|0,0)|0;p=c[4340]|0;g[b+8>>2]=+(((c[d+4>>2]|0)-(c[p+4>>2]|0)+(((c[d>>2]|0)-(c[p>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=d;return}}}while(0);c[4354]=c[b+20>>2];i=d;return}function Wi(a){a=a|0;return}function Xi(a){a=a|0;return}function Yi(d,e){d=d|0;e=+e;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0.0;f=i;i=i+352|0;Mv(1576);if((c[d+232>>2]|0)>0){p=f+232|0;n=0;do{o=c[(c[d+240>>2]|0)+(n<<2)>>2]|0;g[o+244>>2]=1.0;A=c[o+216>>2]|0;do{if(!((A|0)==2|(A|0)==5)?(c[o+204>>2]&3|0)==0:0){ji(o+4|0,+g[o+312>>2],+g[o+316>>2],+g[o+320>>2],o+328|0,e,f+184|0);E=+g[p>>2]- +g[o+52>>2];B=+g[f+236>>2]- +g[o+56>>2];C=+g[f+240>>2]- +g[o+60>>2];if((a[d+44>>0]|0)!=0?(D=+g[o+252>>2],D*D!=0.0?D*D<E*E+B*B+C*C:0):0){Mv(1600);if((c[(c[o+192>>2]|0)+4>>2]|0)<20){c[366]=(c[366]|0)+1;z=c[d+68>>2]|0;z=Hb[c[(c[z>>2]|0)+36>>2]&127](z)|0;A=c[d+24>>2]|0;g[f+252>>2]=1.0;b[f+256>>1]=1;b[f+258>>1]=-1;c[f+248>>2]=2072;c[f+260>>2]=c[o+52>>2];c[f+264>>2]=c[o+56>>2];c[f+268>>2]=c[o+60>>2];c[f+272>>2]=c[o+64>>2];c[f+276>>2]=c[p+0>>2];c[f+280>>2]=c[p+4>>2];c[f+284>>2]=c[p+8>>2];c[f+288>>2]=c[p+12>>2];c[f+324>>2]=0;c[f+248>>2]=1864;c[f+328>>2]=o;g[f+332>>2]=0.0;c[f+336>>2]=z;c[f+340>>2]=A;B=+g[o+248>>2];c[f+136>>2]=0;g[f+140>>2]=1.0;g[f+144>>2]=1.0;g[f+148>>2]=1.0;g[f+152>>2]=0.0;c[f+128>>2]=14168;c[f+132>>2]=8;g[f+156>>2]=B;g[f+172>>2]=B;g[f+332>>2]=+g[d+56>>2];A=c[o+188>>2]|0;b[f+256>>1]=b[A+4>>1]|0;b[f+258>>1]=b[A+6>>1]|0;c[f+112>>2]=c[p+0>>2];c[f+116>>2]=c[p+4>>2];c[f+120>>2]=c[p+8>>2];c[f+124>>2]=c[p+12>>2];c[f+64>>2]=c[o+4>>2];c[f+68>>2]=c[o+8>>2];c[f+72>>2]=c[o+12>>2];c[f+76>>2]=c[o+16>>2];c[f+80>>2]=c[o+20>>2];c[f+84>>2]=c[o+24>>2];c[f+88>>2]=c[o+28>>2];c[f+92>>2]=c[o+32>>2];c[f+96>>2]=c[o+36>>2];c[f+100>>2]=c[o+40>>2];c[f+104>>2]=c[o+44>>2];c[f+108>>2]=c[o+48>>2];fn(d,f+128|0,o+4|0,f+64|0,f+248|0);B=+g[f+252>>2];if(B<1.0){g[o+244>>2]=B;ji(o+4|0,+g[o+312>>2],+g[o+316>>2],+g[o+320>>2],o+328|0,B*e,f+184|0);g[o+244>>2]=0.0;Qj(o,f+184|0);r=4}else{r=0}if((r|0)==0){q=11}}else{q=11}if((q|0)==11){q=0;r=0}s=c[4354]|0;A=(c[s+16>>2]|0)+ -1|0;c[s+16>>2]=A;do{if((A|0)==0){if((c[s+4>>2]|0)!=0){wb(f+248|0,0)|0;A=c[4340]|0;g[s+8>>2]=+(((c[f+252>>2]|0)-(c[A+4>>2]|0)+(((c[f+248>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[s+12>>2]|0)|0)>>>0)/1.0e3+ +g[s+8>>2];if((c[s+16>>2]|0)!=0){break}s=c[4354]|0}c[4354]=c[s+20>>2]}}while(0);if((r|0)==4){break}}Qj(o,f+184|0)}}while(0);n=n+1|0}while((n|0)<(c[d+232>>2]|0))}do{if((a[d+275>>0]|0)!=0){Mv(1624);q=c[d+308>>2]|0;if((q|0)>0){n=0;do{o=c[(c[d+316>>2]|0)+(n<<2)>>2]|0;x=c[o+740>>2]|0;if((c[x+236>>2]&2|0)==0){x=0}p=c[o+744>>2]|0;if((c[p+236>>2]&2|0)==0){p=0}z=c[o+748>>2]|0;if((z|0)>0){r=x+52|0;s=x+56|0;w=x+60|0;u=p+52|0;v=p+56|0;q=p+60|0;t=(p|0)==0;if((x|0)==0){x=p+228|0;y=0;do{e=+g[57]*+g[x>>2];if((e>0.0?(j=+g[o+(y*184|0)+124>>2],j!=0.0):0)?(k=e*j*+g[o+(y*184|0)+68>>2],l=e*j*+g[o+(y*184|0)+72>>2],m=e*j*+g[o+(y*184|0)+76>>2],g[f+48>>2]=-k,g[f+52>>2]=-l,g[f+56>>2]=-m,g[f+60>>2]=0.0,E=+g[o+(y*184|0)+56>>2]- +g[s>>2],D=+g[o+(y*184|0)+60>>2]- +g[w>>2],g[f+32>>2]=+g[o+(y*184|0)+52>>2]- +g[r>>2],g[f+36>>2]=E,g[f+40>>2]=D,g[f+44>>2]=0.0,D=+g[o+(y*184|0)+40>>2]- +g[v>>2],E=+g[o+(y*184|0)+44>>2]- +g[q>>2],g[f+16>>2]=+g[o+(y*184|0)+36>>2]- +g[u>>2],g[f+20>>2]=D,g[f+24>>2]=E,g[f+28>>2]=0.0,!t):0){g[f>>2]=k;g[f+4>>2]=l;g[f+8>>2]=m;g[f+12>>2]=0.0;Mg(p,f,f+16|0);z=c[o+748>>2]|0}y=y+1|0}while((y|0)<(z|0))}else{z=x+228|0;A=p+228|0;y=0;do{e=+g[z>>2]*+g[A>>2];if((e>0.0?(h=+g[o+(y*184|0)+124>>2],h!=0.0):0)?(D=-(e*h*+g[o+(y*184|0)+72>>2]),E=-(e*h*+g[o+(y*184|0)+76>>2]),g[f+48>>2]=-(e*h*+g[o+(y*184|0)+68>>2]),g[f+52>>2]=D,g[f+56>>2]=E,g[f+60>>2]=0.0,E=+g[o+(y*184|0)+56>>2]- +g[s>>2],D=+g[o+(y*184|0)+60>>2]- +g[w>>2],g[f+32>>2]=+g[o+(y*184|0)+52>>2]- +g[r>>2],g[f+36>>2]=E,g[f+40>>2]=D,g[f+44>>2]=0.0,D=+g[o+(y*184|0)+40>>2]- +g[v>>2],E=+g[o+(y*184|0)+44>>2]- +g[q>>2],g[f+16>>2]=+g[o+(y*184|0)+36>>2]- +g[u>>2],g[f+20>>2]=D,g[f+24>>2]=E,g[f+28>>2]=0.0,Mg(x,f+48|0,f+32|0),!t):0){D=-+g[f+52>>2];E=-+g[f+56>>2];g[f>>2]=-+g[f+48>>2];g[f+4>>2]=D;g[f+8>>2]=E;g[f+12>>2]=0.0;Mg(p,f,f+16|0)}y=y+1|0}while((y|0)<(c[o+748>>2]|0))}q=c[d+308>>2]|0}n=n+1|0}while((n|0)<(q|0))}d=c[4354]|0;A=(c[d+16>>2]|0)+ -1|0;c[d+16>>2]=A;if((A|0)==0){if((c[d+4>>2]|0)!=0){wb(f+248|0,0)|0;A=c[4340]|0;g[d+8>>2]=+(((c[f+252>>2]|0)-(c[A+4>>2]|0)+(((c[f+248>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3+ +g[d+8>>2];if((c[d+16>>2]|0)!=0){break}d=c[4354]|0}c[4354]=c[d+20>>2]}}}while(0);d=c[4354]|0;A=(c[d+16>>2]|0)+ -1|0;c[d+16>>2]=A;if((A|0)!=0){i=f;return}do{if((c[d+4>>2]|0)!=0){wb(f+248|0,0)|0;A=c[4340]|0;g[d+8>>2]=+(((c[f+252>>2]|0)-(c[A+4>>2]|0)+(((c[f+248>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3+ +g[d+8>>2];if((c[d+16>>2]|0)==0){d=c[4354]|0;break}else{i=f;return}}}while(0);c[4354]=c[d+20>>2];i=f;return}



function nc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function oc(){return i|0}function pc(a){a=a|0;i=a}function qc(a,b){a=a|0;b=b|0;if((p|0)==0){p=a;q=b}}function rc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function sc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function tc(a){a=a|0;E=a}function uc(){return E|0}function vc(a){a=a|0;return 52}function wc(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0.0,f=0.0,h=0.0;e=+S(+b);f=+S(+c);h=+S(+d);b=+T(+b);c=+T(+c);d=+T(+d);g[a>>2]=f*h;g[a+4>>2]=c*b*h-e*d;g[a+8>>2]=c*e*h+b*d;g[a+12>>2]=0.0;g[a+16>>2]=f*d;g[a+20>>2]=c*b*d+e*h;g[a+24>>2]=c*e*d-b*h;g[a+28>>2]=0.0;g[a+32>>2]=-c;g[a+36>>2]=f*b;g[a+40>>2]=f*e;g[a+44>>2]=0.0;return}function xc(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function yc(){var a=0,d=0,e=0;a=i;while(1){d=cw(8)|0;if((d|0)!=0){e=6;break}d=c[4574]|0;c[4574]=d+0;if((d|0)==0){e=5;break}jc[d&1]()}if((e|0)==5){e=vb(4)|0;c[e>>2]=18312;Ua(e|0,18360,237)}else if((e|0)==6){c[d>>2]=0;c[d+4>>2]=0;b[d+4>>1]=1;b[d+6>>1]=-1;c[d>>2]=544;i=a;return d|0}return 0}function zc(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0.0,l=0;l=i;k=+Nb[c[(c[a>>2]|0)+12>>2]&1](a,b,d,e,f,g,h,j);i=l;return+k}function Ac(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Bc(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(95)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}Cl(e,a,b,1);i=d;return e|0}function Cc(a){a=a|0;hb(a|0)|0;Wa()}function Dc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;c[4336]=(c[4336]|0)+1;f=cw(95)|0;if((f|0)==0){f=0}else{c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}Cl(f,a,b,d);i=e;return f|0}function Ec(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Fc(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function Gc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Hc(){var a=0,b=0,d=0;a=i;while(1){b=cw(196)|0;if((b|0)!=0){d=6;break}b=c[4574]|0;c[4574]=b+0;if((b|0)==0){d=5;break}jc[b&1]()}if((d|0)==5){d=vb(4)|0;c[d>>2]=18312;Ua(d|0,18360,237)}else if((d|0)==6){Gp(b,0);i=a;return b|0}return 0}function Ic(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Jc(){var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(215)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}c[d>>2]=2488;a[d+20>>0]=1;c[d+16>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;a[d+40>>0]=1;c[d+36>>2]=0;c[d+28>>2]=0;c[d+32>>2]=0;a[d+60>>0]=1;c[d+56>>2]=0;c[d+48>>2]=0;c[d+52>>2]=0;a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;c[d+72>>2]=0;a[d+100>>0]=1;c[d+96>>2]=0;c[d+88>>2]=0;c[d+92>>2]=0;a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;a[d+140>>0]=1;c[d+136>>2]=0;c[d+128>>2]=0;c[d+132>>2]=0;a[d+160>>0]=1;c[d+156>>2]=0;c[d+148>>2]=0;c[d+152>>2]=0;a[d+180>>0]=1;c[d+176>>2]=0;c[d+168>>2]=0;c[d+172>>2]=0;c[d+192>>2]=0;i=b;return d|0}function Kc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Lc(a,b){a=+a;b=+b;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(75)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e>>2]=4680;c[e+4>>2]=10;c[e+52>>2]=1;g[e+28>>2]=a;g[e+32>>2]=b*.5;g[e+36>>2]=a;g[e+40>>2]=0.0;i=d;return e|0}function Mc(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Nc(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function Oc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Pc(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(135)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}vk(e,a,b,16384,0,0);i=d;return e|0}function Qc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;c[4336]=(c[4336]|0)+1;f=cw(135)|0;if((f|0)==0){f=0}else{c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}vk(f,a,b,d&65535,0,0);i=e;return f|0}function Rc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;c[4336]=(c[4336]|0)+1;g=cw(135)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}vk(g,a,b,d&65535,e,0);i=f;return g|0}function Sc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;c[4336]=(c[4336]|0)+1;h=cw(135)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}vk(h,a,b,d&65535,e,f);i=g;return h|0}function Tc(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Uc(b,d,e){b=+b;d=d|0;e=e|0;var f=0,h=0,j=0;f=i;while(1){j=cw(140)|0;if((j|0)!=0){break}j=c[4574]|0;c[4574]=j+0;if((j|0)==0){h=5;break}jc[j&1]()}if((h|0)==5){j=vb(4)|0;c[j>>2]=18312;Ua(j|0,18360,237)}g[j>>2]=b;c[j+4>>2]=d;d=j+8|0;do{d=d+16|0}while((d|0)!=(j+56|0));c[j+72>>2]=e;c[j+76>>2]=0;c[j+80>>2]=0;c[j+84>>2]=0;c[j+88>>2]=0;c[j+92>>2]=0;c[j+96>>2]=0;g[j+100>>2]=.5;g[j+104>>2]=0.0;g[j+108>>2]=0.0;g[j+112>>2]=.800000011920929;g[j+116>>2]=1.0;a[j+120>>0]=0;g[j+124>>2]=.004999999888241291;g[j+128>>2]=.009999999776482582;g[j+132>>2]=.009999999776482582;g[j+136>>2]=.009999999776482582;nh(j+8|0);i=f;return j|0}function Vc(b,d,e,f){b=+b;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0;h=i;while(1){k=cw(140)|0;if((k|0)!=0){break}k=c[4574]|0;c[4574]=k+0;if((k|0)==0){j=5;break}jc[k&1]()}if((j|0)==5){k=vb(4)|0;c[k>>2]=18312;Ua(k|0,18360,237)}g[k>>2]=b;c[k+4>>2]=d;d=k+8|0;do{d=d+16|0}while((d|0)!=(k+56|0));c[k+72>>2]=e;c[k+76>>2]=c[f+0>>2];c[k+80>>2]=c[f+4>>2];c[k+84>>2]=c[f+8>>2];c[k+88>>2]=c[f+12>>2];g[k+92>>2]=0.0;g[k+96>>2]=0.0;g[k+100>>2]=.5;g[k+104>>2]=0.0;g[k+108>>2]=0.0;g[k+112>>2]=.800000011920929;g[k+116>>2]=1.0;a[k+120>>0]=0;g[k+124>>2]=.004999999888241291;g[k+128>>2]=.009999999776482582;g[k+132>>2]=.009999999776482582;g[k+136>>2]=.009999999776482582;nh(k+8|0);i=h;return k|0}function Wc(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Xc(a){a=a|0;return a+48|0}function Yc(a){a=a|0;return a+32|0}function Zc(a){a=a|0;return a|0}function _c(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];i=d;return}function $c(a){a=a|0;return a+16|0}function ad(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+16>>2]=c[b+0>>2];c[a+20>>2]=c[b+4>>2];c[a+24>>2]=c[b+8>>2];c[a+28>>2]=c[b+12>>2];i=d;return}function bd(a){a=a|0;return a+32|0}function cd(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+32>>2]=c[b+0>>2];c[a+36>>2]=c[b+4>>2];c[a+40>>2]=c[b+8>>2];c[a+44>>2]=c[b+12>>2];i=d;return}function dd(a){a=a|0;return a+48|0}function ed(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+48>>2]=c[b+0>>2];c[a+52>>2]=c[b+4>>2];c[a+56>>2]=c[b+8>>2];c[a+60>>2]=c[b+12>>2];i=d;return}function fd(a){a=a|0;return a+64|0}function gd(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+64>>2]=c[b+0>>2];c[a+68>>2]=c[b+4>>2];c[a+72>>2]=c[b+8>>2];c[a+76>>2]=c[b+12>>2];i=d;return}function hd(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function id(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function jd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function kd(a){a=a|0;return c[a+192>>2]|0}function ld(a,b){a=a|0;b=b|0;c[a+216>>2]=b;return}function md(a){a=a|0;var b=0;b=i;if((c[a+204>>2]&3|0)!=0){i=b;return}if(!(((c[a+216>>2]|0)+ -4|0)>>>0<2)){c[a+216>>2]=1}g[a+220>>2]=0.0;i=b;return}function nd(a,b){a=a|0;b=b|0;var d=0;d=i;if(!b?(c[a+204>>2]&3|0)!=0:0){i=d;return}if(!(((c[a+216>>2]|0)+ -4|0)>>>0<2)){c[a+216>>2]=1}g[a+220>>2]=0.0;i=d;return}function od(a){a=a|0;a=c[a+216>>2]|0;return((a|0)==2?0:(a|0)!=5)|0}function pd(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+228>>2]=b;return}function qd(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+224>>2]=b;return}function rd(a){a=a|0;return a+4|0}function sd(a){a=a|0;return c[a+204>>2]|0}function td(a,b){a=a|0;b=b|0;c[a+204>>2]=b;return}function ud(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+8>>2]&255](a);i=b;return}function vd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0;f=i;c[4336]=(c[4336]|0)+1;h=cw(343)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}a[h+20>>0]=1;c[h+16>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+24>>2]=b;g[h+28>>2]=0.0;c[h+32>>2]=0;c[h+36>>2]=1;g[h+40>>2]=1.0;a[h+44>>0]=1;c[h+48>>2]=0;a[h+52>>0]=0;a[h+53>>0]=1;a[h+54>>0]=1;g[h+56>>2]=.03999999910593033;a[h+60>>0]=0;g[h+64>>2]=0.0;c[h+68>>2]=d;c[h+72>>2]=0;a[h+76>>0]=1;c[h+80>>2]=0;c[h+84>>2]=0;c[h+88>>2]=0;g[h+92>>2]=.6000000238418579;g[h+96>>2]=1.0;g[h+100>>2]=.30000001192092896;g[h+104>>2]=.01666666753590107;g[h+108>>2]=0.0;g[h+116>>2]=20.0;c[h+112>>2]=10;g[h+124>>2]=.20000000298023224;g[h+128>>2]=.800000011920929;g[h+132>>2]=0.0;g[h+120>>2]=1.0;c[h+136>>2]=1;g[h+140>>2]=-.03999999910593033;g[h+144>>2]=.10000000149011612;g[h+148>>2]=0.0;g[h+152>>2]=.8500000238418579;c[h+156>>2]=260;c[h+160>>2]=2;c[h+164>>2]=128;g[h+168>>2]=100.0;g[h+172>>2]=1.0000000150474662e+30;c[h>>2]=1096;a[h+192>>0]=1;c[h+188>>2]=0;c[h+180>>2]=0;c[h+184>>2]=0;d=h+196|0;c[d>>2]=0;j=h+200|0;c[j>>2]=e;a[h+224>>0]=1;c[h+220>>2]=0;c[h+212>>2]=0;c[h+216>>2]=0;a[h+244>>0]=1;c[h+240>>2]=0;c[h+232>>2]=0;c[h+236>>2]=0;g[h+248>>2]=0.0;g[h+252>>2]=-10.0;m=h+256|0;a[h+274>>0]=0;a[h+275>>0]=0;l=h+292|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;a[l>>0]=1;c[h+288>>2]=0;c[h+280>>2]=0;c[h+284>>2]=0;c[h+296>>2]=0;a[h+300>>0]=1;a[h+320>>0]=1;c[h+316>>2]=0;c[h+308>>2]=0;c[h+312>>2]=0;if((e|0)==0){c[4336]=(c[4336]|0)+1;e=cw(215)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e>>2]=2488;a[e+20>>0]=1;c[e+16>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;a[e+40>>0]=1;c[e+36>>2]=0;c[e+28>>2]=0;c[e+32>>2]=0;a[e+60>>0]=1;c[e+56>>2]=0;c[e+48>>2]=0;c[e+52>>2]=0;a[e+80>>0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;a[e+100>>0]=1;c[e+96>>2]=0;c[e+88>>2]=0;c[e+92>>2]=0;a[e+120>>0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;a[e+140>>0]=1;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;a[e+160>>0]=1;c[e+156>>2]=0;c[e+148>>2]=0;c[e+152>>2]=0;a[e+180>>0]=1;c[e+176>>2]=0;c[e+168>>2]=0;c[e+172>>2]=0;c[e+192>>2]=0;c[j>>2]=e;a[h+273>>0]=1}else{a[h+273>>0]=0}c[4336]=(c[4336]|0)+1;e=cw(87)|0;if((e|0)!=0?(k=e+19&-16,c[k+ -4>>2]=e,(e+19&-16|0)!=0):0){c[(e+19&-16)>>2]=14056;a[k+20>>0]=1;c[k+16>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;a[k+40>>0]=1;c[k+36>>2]=0;c[k+28>>2]=0;c[k+32>>2]=0;a[k+60>>0]=1;c[k+56>>2]=0;c[k+48>>2]=0;c[k+52>>2]=0;a[k+64>>0]=1;k=e+19&-16}else{k=0}c[h+204>>2]=k;a[h+272>>0]=1;c[4336]=(c[4336]|0)+1;k=cw(107)|0;if((k|0)==0){m=0;c[d>>2]=m;i=f;return h|0}e=k+19&-16;c[e+ -4>>2]=k;if((k+19&-16|0)==0){m=0;c[d>>2]=m;i=f;return h|0}m=c[j>>2]|0;c[(k+19&-16)>>2]=2096;c[e+4>>2]=0;c[e+8>>2]=m;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=b;a[e+44>>0]=1;c[e+40>>2]=0;c[e+32>>2]=0;c[e+36>>2]=0;a[e+64>>0]=1;c[e+60>>2]=0;c[e+52>>2]=0;c[e+56>>2]=0;a[e+84>>0]=1;c[e+80>>2]=0;c[e+72>>2]=0;c[e+76>>2]=0;m=k+19&-16;c[d>>2]=m;i=f;return h|0}function wd(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+72>>2]&127](a,b);i=d;return}function xd(b){b=b|0;var d=0;d=i;i=i+16|0;if((a[24]|0)==0?(Ya(24)|0)!=0:0){bb(24)}Fb[c[(c[b>>2]|0)+76>>2]&127](d,b);c[8>>2]=c[d+0>>2];c[12>>2]=c[d+4>>2];c[16>>2]=c[d+8>>2];c[20>>2]=c[d+12>>2];i=d;return 8}function yd(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+84>>2]&127](a,b);i=d;return}function zd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+88>>2]&63](a,b,d,e);i=f;return}function Ad(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+92>>2]&127](a,b);i=d;return}function Bd(a,b){a=a|0;b=b|0;var d=0;d=i;ic[c[(c[a>>2]|0)+56>>2]&63](a,b,0);i=d;return}function Cd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;ic[c[(c[a>>2]|0)+56>>2]&63](a,b,d);i=e;return}function Dd(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+60>>2]&127](a,b);i=d;return}function Ed(a,b){a=a|0;b=+b;var d=0;d=i;a=lc[c[(c[a>>2]|0)+52>>2]&1](a,b,1,.01666666753590107)|0;i=d;return a|0}function Fd(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;a=lc[c[(c[a>>2]|0)+52>>2]&1](a,b,d,.01666666753590107)|0;i=e;return a|0}function Gd(a,b,d,e){a=a|0;b=+b;d=d|0;e=+e;var f=0;f=i;a=lc[c[(c[a>>2]|0)+52>>2]&1](a,b,d,e)|0;i=f;return a|0}function Hd(a){a=a|0;return c[a+24>>2]|0}function Id(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+32>>2]&63](a,b,d,e);i=f;return}function Jd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Kd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0;e=i;c[4336]=(c[4336]|0)+1;f=cw(379)|0;if((f|0)==0){f=0}else{c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}tk(f,3,b);c[f>>2]=2224;n=f+300|0;c[n+0>>2]=c[d+0>>2];c[n+4>>2]=c[d+4>>2];c[n+8>>2]=c[d+8>>2];c[n+12>>2]=c[d+12>>2];m=+g[d>>2];l=+g[d+4>>2];k=+g[d+8>>2];j=m*+g[b+20>>2]+l*+g[b+24>>2]+k*+g[b+28>>2]+ +g[b+56>>2];h=m*+g[b+36>>2]+l*+g[b+40>>2]+k*+g[b+44>>2]+ +g[b+60>>2];g[f+316>>2]=m*+g[b+4>>2]+l*+g[b+8>>2]+k*+g[b+12>>2]+ +g[b+52>>2];g[f+320>>2]=j;g[f+324>>2]=h;g[f+328>>2]=0.0;c[f+332>>2]=0;a[f+344>>0]=0;g[f+348>>2]=.30000001192092896;g[f+352>>2]=1.0;g[f+356>>2]=0.0;i=e;return f|0}function Ld(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0;h=i;c[4336]=(c[4336]|0)+1;j=cw(379)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}c[j+4>>2]=3;c[j+8>>2]=-1;c[j+12>>2]=-1;g[j+16>>2]=3.4028234663852886e+38;a[j+20>>0]=1;a[j+21>>0]=0;c[j+24>>2]=-1;c[j+28>>2]=b;c[j+32>>2]=d;g[j+36>>2]=0.0;g[j+40>>2]=.30000001192092896;c[j+44>>2]=0;c[j>>2]=2224;d=j+300|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=j+316|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[j+332>>2]=0;a[j+344>>0]=0;g[j+348>>2]=.30000001192092896;g[j+352>>2]=1.0;g[j+356>>2]=0.0;i=h;return j|0}function Md(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+300>>2]=c[b+0>>2];c[a+304>>2]=c[b+4>>2];c[a+308>>2]=c[b+8>>2];c[a+312>>2]=c[b+12>>2];i=d;return}function Nd(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+316>>2]=c[b+0>>2];c[a+320>>2]=c[b+4>>2];c[a+324>>2]=c[b+8>>2];c[a+328>>2]=c[b+12>>2];i=d;return}function Od(a){a=a|0;return a+300|0}function Pd(a){a=a|0;return a+316|0}function Qd(a){a=a|0;return a+348|0}function Rd(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+348>>2]=c[b+0>>2];c[a+352>>2]=c[b+4>>2];c[a+356>>2]=c[b+8>>2];i=d;return}function Sd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Td(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+8>>2]&127](a,b);i=d;return}function Ud(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+12>>2]&127](a,b);i=d;return}function Vd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Wd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0;e=i;c[4336]=(c[4336]|0)+1;f=cw(627)|0;if((f|0)==0){f=0}else{c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}tk(f,5,b);c[f>>2]=968;k=f+300|0;c[k+0>>2]=c[d+0>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];j=f+316|0;c[j+0>>2]=c[d+16>>2];c[j+4>>2]=c[d+20>>2];c[j+8>>2]=c[d+24>>2];c[j+12>>2]=c[d+28>>2];h=f+332|0;c[h+0>>2]=c[d+32>>2];c[h+4>>2]=c[d+36>>2];c[h+8>>2]=c[d+40>>2];c[h+12>>2]=c[d+44>>2];b=f+348|0;c[b+0>>2]=c[d+48>>2];c[b+4>>2]=c[d+52>>2];c[b+8>>2]=c[d+56>>2];c[b+12>>2]=c[d+60>>2];b=f+364|0;d=f+524|0;a[f+527>>0]=0;c[b+0>>2]=c[k+0>>2];c[b+4>>2]=c[k+4>>2];c[b+8>>2]=c[k+8>>2];c[b+12>>2]=c[k+12>>2];b=f+380|0;c[b+0>>2]=c[j+0>>2];c[b+4>>2]=c[j+4>>2];c[b+8>>2]=c[j+8>>2];c[b+12>>2]=c[j+12>>2];b=f+396|0;c[b+0>>2]=c[h+0>>2];c[b+4>>2]=c[h+4>>2];c[b+8>>2]=c[h+8>>2];c[b+12>>2]=c[h+12>>2];b=f+412|0;a[d>>0]=0;a[f+525>>0]=0;a[f+526>>0]=0;a[f+552>>0]=0;d=f+572|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;g[d>>2]=-1.0;g[f+444>>2]=999999984306749400.0;g[f+448>>2]=999999984306749400.0;g[f+452>>2]=999999984306749400.0;g[f+428>>2]=1.0;g[f+432>>2]=.30000001192092896;g[f+436>>2]=1.0;g[f+440>>2]=.009999999776482582;g[f+456>>2]=.05000000074505806;c[f+592>>2]=0;g[f+596>>2]=0.0;g[f+600>>2]=.699999988079071;g[f+604>>2]=0.0;i=e;return f|0}function Xd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0;h=i;c[4336]=(c[4336]|0)+1;j=cw(627)|0;if((j|0)==0){j=0}else{c[(j+19&-16)+ -4>>2]=j;j=j+19&-16}c[j+4>>2]=5;c[j+8>>2]=-1;c[j+12>>2]=-1;g[j+16>>2]=3.4028234663852886e+38;a[j+20>>0]=1;a[j+21>>0]=0;c[j+24>>2]=-1;c[j+28>>2]=b;c[j+32>>2]=d;g[j+36>>2]=0.0;g[j+40>>2]=.30000001192092896;c[j+44>>2]=0;c[j>>2]=968;d=j+300|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];d=j+316|0;c[d+0>>2]=c[e+16>>2];c[d+4>>2]=c[e+20>>2];c[d+8>>2]=c[e+24>>2];c[d+12>>2]=c[e+28>>2];d=j+332|0;c[d+0>>2]=c[e+32>>2];c[d+4>>2]=c[e+36>>2];c[d+8>>2]=c[e+40>>2];c[d+12>>2]=c[e+44>>2];d=j+348|0;c[d+0>>2]=c[e+48>>2];c[d+4>>2]=c[e+52>>2];c[d+8>>2]=c[e+56>>2];c[d+12>>2]=c[e+60>>2];e=j+364|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=j+380|0;c[e+0>>2]=c[f+16>>2];c[e+4>>2]=c[f+20>>2];c[e+8>>2]=c[f+24>>2];c[e+12>>2]=c[f+28>>2];e=j+396|0;c[e+0>>2]=c[f+32>>2];c[e+4>>2]=c[f+36>>2];c[e+8>>2]=c[f+40>>2];c[e+12>>2]=c[f+44>>2];e=j+412|0;c[e+0>>2]=c[f+48>>2];c[e+4>>2]=c[f+52>>2];c[e+8>>2]=c[f+56>>2];c[e+12>>2]=c[f+60>>2];f=j+524|0;a[j+552>>0]=0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;g[j+572>>2]=-1.0;g[j+444>>2]=999999984306749400.0;g[j+448>>2]=999999984306749400.0;g[j+452>>2]=999999984306749400.0;g[j+428>>2]=1.0;g[j+432>>2]=.30000001192092896;g[j+436>>2]=1.0;g[j+440>>2]=.009999999776482582;g[j+456>>2]=.05000000074505806;c[j+592>>2]=0;g[j+596>>2]=0.0;g[j+600>>2]=.699999988079071;g[j+604>>2]=0.0;i=h;return j|0}function Yd(a,b,c){a=a|0;b=b|0;c=+c;var d=0;d=i;if((b|0)==3){g[a+452>>2]=c}else if((b|0)==4){g[a+448>>2]=c}else if((b|0)==5){g[a+444>>2]=c}i=d;return}function Zd(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function _d(a,b){a=+a;b=+b;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(95)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e>>2]=8008;g[e+56>>2]=a;g[e+60>>2]=b;c[e+4>>2]=11;c[e+64>>2]=0;c[e+68>>2]=1;c[e+72>>2]=2;g[e+28>>2]=a;g[e+32>>2]=b;g[e+36>>2]=a;g[e+52>>2]=a/+Q(+(a*a+b*b));i=d;return e|0}function $d(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function ae(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function be(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function ce(){var a=0,b=0,d=0;a=i;i=i+32|0;while(1){b=cw(92)|0;if((b|0)!=0){d=6;break}b=c[4574]|0;c[4574]=b+0;if((b|0)==0){d=5;break}jc[b&1]()}if((d|0)==5){d=vb(4)|0;c[d>>2]=18312;Ua(d|0,18360,237)}else if((d|0)==6){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=4096;c[a+12>>2]=4096;c[a+16>>2]=0;c[a+20>>2]=1;gq(b,a);i=a;return b|0}return 0}function de(a){a=a|0;var b=0,d=0,e=0;b=i;while(1){d=cw(92)|0;if((d|0)!=0){e=6;break}d=c[4574]|0;c[4574]=d+0;if((d|0)==0){e=5;break}jc[d&1]()}if((e|0)==5){e=vb(4)|0;c[e>>2]=18312;Ua(e|0,18360,237)}else if((e|0)==6){gq(d,a);i=b;return d|0}return 0}function ee(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function fe(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0.0,l=0;l=i;k=+Nb[c[(c[a>>2]|0)+12>>2]&1](a,b,d,e,f,g,h,j);i=l;return+k}function ge(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function he(a,b){a=+a;b=+b;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(95)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;g[e+56>>2]=a;g[e+60>>2]=b;c[e+4>>2]=11;g[e+52>>2]=a/+Q(+(a*a+b*b));c[e>>2]=8112;c[e+64>>2]=0;c[e+68>>2]=2;c[e+72>>2]=1;g[e+28>>2]=a;g[e+36>>2]=b;g[e+32>>2]=a;i=d;return e|0}function ie(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function je(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function ke(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function le(a,b){a=+a;b=+b;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(95)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;g[e+56>>2]=a;g[e+60>>2]=b;c[e+4>>2]=11;g[e+52>>2]=a/+Q(+(a*a+b*b));c[e>>2]=8216;c[e+64>>2]=1;c[e+68>>2]=0;c[e+72>>2]=2;g[e+32>>2]=a;g[e+28>>2]=b;g[e+36>>2]=a;i=d;return e|0}function me(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function ne(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function oe(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function pe(){var a=0,b=0;a=i;c[4336]=(c[4336]|0)+1;b=cw(191)|0;if((b|0)==0){b=0;gt(b,1,1);i=a;return b|0}c[(b+19&-16)+ -4>>2]=b;b=b+19&-16;gt(b,1,1);i=a;return b|0}function qe(a){a=a|0;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(191)|0;if((d|0)==0){d=0;gt(d,a,1);i=b;return d|0}c[(d+19&-16)+ -4>>2]=d;d=d+19&-16;gt(d,a,1);i=b;return d|0}function re(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(191)|0;if((e|0)==0){e=0;gt(e,a,b);i=d;return e|0}c[(e+19&-16)+ -4>>2]=e;e=e+19&-16;gt(e,a,b);i=d;return e|0}function se(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=c[a+32>>2]|0;c[g>>2]=(c[g>>2]|0)+1;ht(a,it(a,b,0)|0);ht(a,it(a,d,0)|0);ht(a,it(a,e,0)|0);i=f;return}function te(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=c[a+32>>2]|0;c[h>>2]=(c[h>>2]|0)+1;ht(a,it(a,b,f)|0);ht(a,it(a,d,f)|0);ht(a,it(a,e,f)|0);i=g;return}function ue(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function ve(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function we(){var b=0,d=0,e=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(791)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}c[d>>2]=1025;c[d+116>>2]=0;a[d+120>>0]=0;e=d+124|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;c[d+300>>2]=0;a[d+304>>0]=0;e=d+308|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;c[d+484>>2]=0;a[d+488>>0]=0;e=d+492|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;c[d+668>>2]=0;a[d+672>>0]=0;e=d+676|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;c[d+740>>2]=0;c[d+744>>2]=0;c[d+748>>2]=0;c[d+768>>2]=0;i=b;return d|0}function xe(a){a=a|0;return c[a+740>>2]|0}function ye(a){a=a|0;return c[a+744>>2]|0}function ze(a){a=a|0;return c[a+748>>2]|0}function Ae(a,b){a=a|0;b=b|0;return a+(b*184|0)+4|0}function Be(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Ce(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0,r=0.0;b=i;c[4336]=(c[4336]|0)+1;d=cw(75)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}c[d+8>>2]=0;h=d+12|0;g[h>>2]=1.0;e=d+16|0;g[e>>2]=1.0;f=d+20|0;g[f>>2]=1.0;g[d+24>>2]=0.0;j=d+44|0;g[j>>2]=.03999999910593033;c[d+52>>2]=0;c[d>>2]=3832;c[d+4>>2]=0;l=+g[a>>2];m=+g[a+4>>2];k=+g[a+8>>2];if(l<m){n=l<k?0:2}else{n=m<k?1:2}k=+g[a+(n<<2)>>2]*.10000000149011612;if(k<.03999999910593033){r=+ol(d);p=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);m=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);q=d+28|0;r=r+ +g[q>>2];o=d+32|0;p=p+ +g[o>>2];n=d+36|0;m=m+ +g[n>>2];g[j>>2]=k;k=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);l=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);m=m- +Tb[c[(c[d>>2]|0)+48>>2]&15](d);g[q>>2]=r-k;g[o>>2]=p-l;g[n>>2]=m;g[d+40>>2]=0.0;j=c[d>>2]|0}else{j=3832|0}m=+Tb[c[j+48>>2]&15](d);p=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);r=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);p=+g[a+4>>2]*+g[e>>2]-p;r=+g[a+8>>2]*+g[f>>2]-r;g[d+28>>2]=+g[a>>2]*+g[h>>2]-m;g[d+32>>2]=p;g[d+36>>2]=r;g[d+40>>2]=0.0;i=b;return d|0}function De(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Ee(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function Fe(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ge(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;while(1){e=cw(5260)|0;if((e|0)!=0){break}e=c[4574]|0;c[4574]=e+0;if((e|0)==0){f=5;break}jc[e&1]()}if((f|0)==5){f=vb(4)|0;c[f>>2]=18312;Ua(f|0,18360,237)}c[e>>2]=5192;c[e+4>>2]=2;a[e+24>>0]=1;c[e+20>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+28>>2]=11152;c[e+5256>>2]=b;c[e+60>>2]=60;c[e+64>>2]=Hb[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[e+68>>2]=Hb[c[(c[b>>2]|0)+8>>2]&127](b)|0;b=0;do{f=0;do{g=c[e+5256>>2]|0;c[e+(b*144|0)+(f<<2)+72>>2]=Qb[c[(c[g>>2]|0)+16>>2]&31](g,b,f)|0;f=f+1|0}while((f|0)<36);b=b+1|0}while((b|0)<36);i=d;return e|0}function He(a){a=a|0;var b=0;b=i;a=Hb[c[(c[a>>2]|0)+36>>2]&127](a)|0;i=b;return a|0}function Ie(a,b){a=a|0;b=b|0;var d=0;d=i;a=Zb[c[(c[a>>2]|0)+40>>2]&31](a,b)|0;i=d;return a|0}function Je(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ke(){var a=0,b=0;a=i;c[4336]=(c[4336]|0)+1;b=cw(111)|0;if((b|0)==0){b=0;co(b,1);i=a;return b|0}c[(b+19&-16)+ -4>>2]=b;b=b+19&-16;co(b,1);i=a;return b|0}function Le(a){a=a|0;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(111)|0;if((d|0)==0){d=0;co(d,a);i=b;return d|0}c[(d+19&-16)+ -4>>2]=d;d=d+19&-16;co(d,a);i=b;return d|0}function Me(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0;j=i;i=i+128|0;c[b+68>>2]=(c[b+68>>2]|0)+1;c[j+0>>2]=c[d+0>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];c[j+16>>2]=c[d+16>>2];c[j+20>>2]=c[d+20>>2];c[j+24>>2]=c[d+24>>2];c[j+28>>2]=c[d+28>>2];c[j+32>>2]=c[d+32>>2];c[j+36>>2]=c[d+36>>2];c[j+40>>2]=c[d+40>>2];c[j+44>>2]=c[d+44>>2];c[j+48>>2]=c[d+48>>2];c[j+52>>2]=c[d+52>>2];c[j+56>>2]=c[d+56>>2];c[j+60>>2]=c[d+60>>2];f=c[e+4>>2]|0;h=+Tb[c[(c[e>>2]|0)+48>>2]&15](e);mc[c[(c[e>>2]|0)+8>>2]&63](e,d,j+112|0,j+96|0);p=+g[j+112>>2];if(+g[b+32>>2]>p){g[b+32>>2]=p}p=+g[j+96>>2];if(+g[b+48>>2]<p){g[b+48>>2]=p}p=+g[j+116>>2];if(+g[b+36>>2]>p){g[b+36>>2]=p}p=+g[j+100>>2];if(+g[b+52>>2]<p){g[b+52>>2]=p}p=+g[j+120>>2];if(+g[b+40>>2]>p){g[b+40>>2]=p}p=+g[j+104>>2];if(+g[b+56>>2]<p){g[b+56>>2]=p}d=c[b+64>>2]|0;if((d|0)==0){l=0;d=b+16|0}else{c[j+64>>2]=c[j+112>>2];c[j+68>>2]=c[j+116>>2];c[j+72>>2]=c[j+120>>2];c[j+76>>2]=c[j+124>>2];c[j+80>>2]=c[j+96>>2];c[j+84>>2]=c[j+100>>2];c[j+88>>2]=c[j+104>>2];c[j+92>>2]=c[j+108>>2];m=c[b+16>>2]|0;l=c[d+4>>2]|0;if((l|0)==0){c[4336]=(c[4336]|0)+1;l=cw(63)|0;if((l|0)!=0?(c[(l+19&-16)+ -4>>2]=l,(l+19&-16|0)!=0):0){n=(l+19&-16)+0|0;o=n+44|0;do{c[n>>2]=0;n=n+4|0}while((n|0)<(o|0));l=l+19&-16}else{l=0}}else{c[d+4>>2]=0}c[l+32>>2]=0;c[l+36>>2]=m;c[l+40>>2]=0;c[l+0>>2]=c[j+64>>2];c[l+4>>2]=c[j+68>>2];c[l+8>>2]=c[j+72>>2];c[l+12>>2]=c[j+76>>2];c[l+16>>2]=c[j+80>>2];c[l+20>>2]=c[j+84>>2];c[l+24>>2]=c[j+88>>2];c[l+28>>2]=c[j+92>>2];Ep(d,c[d>>2]|0,l);c[d+12>>2]=(c[d+12>>2]|0)+1;d=b+16|0}m=c[d>>2]|0;if((m|0)==(c[b+20>>2]|0)?(k=(m|0)==0?1:m<<1,(m|0)<(k|0)):0){if((k|0)==0){n=0}else{c[4336]=(c[4336]|0)+1;m=cw((k*80|3)+16|0)|0;if((m|0)==0){n=0}else{c[(m+19&-16)+ -4>>2]=m;n=m+19&-16}m=c[d>>2]|0}if((m|0)>0){o=0;do{q=n+(o*80|0)|0;r=c[b+24>>2]|0;s=r+(o*80|0)|0;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=n+(o*80|0)+16|0;s=r+(o*80|0)+16|0;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=n+(o*80|0)+32|0;s=r+(o*80|0)+32|0;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=n+(o*80|0)+48|0;s=r+(o*80|0)+48|0;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=n+(o*80|0)+64|0;r=r+(o*80|0)+64|0;c[q+0>>2]=c[r+0>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];o=o+1|0}while((o|0)!=(m|0))}m=c[b+24>>2]|0;if((m|0)!=0){if((a[b+28>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[m+ -4>>2]|0)}c[b+24>>2]=0}a[b+28>>0]=1;c[b+24>>2]=n;c[b+20>>2]=k;m=c[d>>2]|0}s=c[b+24>>2]|0;r=s+(m*80|0)|0;c[r+0>>2]=c[j+0>>2];c[r+4>>2]=c[j+4>>2];c[r+8>>2]=c[j+8>>2];c[r+12>>2]=c[j+12>>2];r=s+(m*80|0)+16|0;c[r+0>>2]=c[j+16>>2];c[r+4>>2]=c[j+20>>2];c[r+8>>2]=c[j+24>>2];c[r+12>>2]=c[j+28>>2];r=s+(m*80|0)+32|0;c[r+0>>2]=c[j+32>>2];c[r+4>>2]=c[j+36>>2];c[r+8>>2]=c[j+40>>2];c[r+12>>2]=c[j+44>>2];r=s+(m*80|0)+48|0;c[r+0>>2]=c[j+48>>2];c[r+4>>2]=c[j+52>>2];c[r+8>>2]=c[j+56>>2];c[r+12>>2]=c[j+60>>2];s=s+(m*80|0)+64|0;c[s>>2]=e;c[s+4>>2]=f;g[s+8>>2]=h;c[s+12>>2]=l;c[d>>2]=(c[d>>2]|0)+1;i=j;return}function Ne(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Oe(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function Pe(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Qe(){var a=0,b=0;a=i;c[4336]=(c[4336]|0)+1;b=cw(219)|0;if((b|0)==0){b=0}else{c[(b+19&-16)+ -4>>2]=b;b=b+19&-16}Se();Se();Re(b,320,320);i=a;return b|0}function Re(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;c[a>>2]=456;f=a+4|0;do{f=f+16|0}while((f|0)!=(a+52|0));c[a+4>>2]=c[b+0>>2];c[a+8>>2]=c[b+4>>2];c[a+12>>2]=c[b+8>>2];c[a+16>>2]=c[b+12>>2];c[a+20>>2]=c[b+16>>2];c[a+24>>2]=c[b+20>>2];c[a+28>>2]=c[b+24>>2];c[a+32>>2]=c[b+28>>2];c[a+36>>2]=c[b+32>>2];c[a+40>>2]=c[b+36>>2];c[a+44>>2]=c[b+40>>2];c[a+48>>2]=c[b+44>>2];c[a+52>>2]=c[b+48>>2];c[a+56>>2]=c[b+52>>2];c[a+60>>2]=c[b+56>>2];c[a+64>>2]=c[b+60>>2];f=a+68|0;do{f=f+16|0}while((f|0)!=(a+116|0));c[a+68>>2]=c[d+0>>2];c[a+72>>2]=c[d+4>>2];c[a+76>>2]=c[d+8>>2];c[a+80>>2]=c[d+12>>2];c[a+84>>2]=c[d+16>>2];c[a+88>>2]=c[d+20>>2];c[a+92>>2]=c[d+24>>2];c[a+96>>2]=c[d+28>>2];c[a+100>>2]=c[d+32>>2];c[a+104>>2]=c[d+36>>2];c[a+108>>2]=c[d+40>>2];c[a+112>>2]=c[d+44>>2];c[a+116>>2]=c[d+48>>2];c[a+120>>2]=c[d+52>>2];c[a+124>>2]=c[d+56>>2];c[a+128>>2]=c[d+60>>2];d=a+132|0;do{d=d+16|0}while((d|0)!=(a+180|0));c[a+132>>2]=c[b+0>>2];c[a+136>>2]=c[b+4>>2];c[a+140>>2]=c[b+8>>2];c[a+144>>2]=c[b+12>>2];c[a+148>>2]=c[b+16>>2];c[a+152>>2]=c[b+20>>2];c[a+156>>2]=c[b+24>>2];c[a+160>>2]=c[b+28>>2];c[a+164>>2]=c[b+32>>2];c[a+168>>2]=c[b+36>>2];c[a+172>>2]=c[b+40>>2];c[a+176>>2]=c[b+44>>2];c[a+180>>2]=c[b+48>>2];c[a+184>>2]=c[b+52>>2];c[a+188>>2]=c[b+56>>2];c[a+192>>2]=c[b+60>>2];c[a+196>>2]=0;i=e;return}function Se(){var b=0,d=0;b=i;i=i+48|0;if((a[384]|0)!=0){i=b;return}if((Ya(384)|0)==0){i=b;return}if((a[440]|0)==0?(Ya(440)|0)!=0:0){g[b+32>>2]=1.0;g[b+28>>2]=0.0;g[b+24>>2]=0.0;g[b+20>>2]=0.0;g[b+16>>2]=1.0;g[b+12>>2]=0.0;g[b+8>>2]=0.0;g[b+4>>2]=0.0;g[b>>2]=1.0;Wh(392,b+32|0,b+28|0,b+24|0,b+20|0,b+16|0,b+12|0,b+8|0,b+4|0,b);bb(440);d=320}else{d=320}do{d=d+16|0}while((d|0)!=(368|0));c[320>>2]=c[392>>2];c[324>>2]=c[396>>2];c[328>>2]=c[400>>2];c[332>>2]=c[404>>2];c[336>>2]=c[408>>2];c[340>>2]=c[412>>2];c[344>>2]=c[416>>2];c[348>>2]=c[420>>2];c[352>>2]=c[424>>2];c[356>>2]=c[428>>2];c[360>>2]=c[432>>2];c[364>>2]=c[436>>2];c[368>>2]=0;c[372>>2]=0;c[376>>2]=0;c[380>>2]=0;bb(384);i=b;return}function Te(a){a=a|0;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(219)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}Se();Re(d,a,320);i=b;return d|0}function Ue(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(219)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}Re(e,a,b);i=d;return e|0}function Ve(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+8>>2]&127](a,b);i=d;return}function We(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+12>>2]&127](a,b);i=d;return}function Xe(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Ye(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Ze(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function _e(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function $e(a){a=a|0;var b=0;b=i;a=Hb[c[(c[a>>2]|0)+36>>2]&127](a)|0;i=b;return a|0}function af(a,b){a=a|0;b=b|0;var d=0;d=i;a=Zb[c[(c[a>>2]|0)+40>>2]&31](a,b)|0;i=d;return a|0}function bf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function cf(a,d){a=a|0;d=d|0;var e=0,f=0,h=0;e=i;while(1){f=cw(84)|0;if((f|0)!=0){h=6;break}f=c[4574]|0;c[4574]=f+0;if((f|0)==0){h=5;break}jc[f&1]()}if((h|0)==5){h=vb(4)|0;c[h>>2]=18312;Ua(h|0,18360,237)}else if((h|0)==6){g[f+4>>2]=1.0;c[f+8>>2]=0;b[f+12>>1]=1;b[f+14>>1]=-1;c[f+16>>2]=0;c[f>>2]=192;c[f+20>>2]=c[a+0>>2];c[f+24>>2]=c[a+4>>2];c[f+28>>2]=c[a+8>>2];c[f+32>>2]=c[a+12>>2];c[f+36>>2]=c[d+0>>2];c[f+40>>2]=c[d+4>>2];c[f+44>>2]=c[d+8>>2];c[f+48>>2]=c[d+12>>2];i=e;return f|0}return 0}function df(a){a=a|0;return(c[a+8>>2]|0)!=0|0}function ef(a){a=a|0;return a+20|0}function ff(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+20>>2]=c[b+0>>2];c[a+24>>2]=c[b+4>>2];c[a+28>>2]=c[b+8>>2];c[a+32>>2]=c[b+12>>2];i=d;return}function gf(a){a=a|0;return a+36|0}function hf(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+36>>2]=c[b+0>>2];c[a+40>>2]=c[b+4>>2];c[a+44>>2]=c[b+8>>2];c[a+48>>2]=c[b+12>>2];i=d;return}function jf(a){a=a|0;return a+52|0}function kf(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+52>>2]=c[b+0>>2];c[a+56>>2]=c[b+4>>2];c[a+60>>2]=c[b+8>>2];c[a+64>>2]=c[b+12>>2];i=d;return}function lf(a){a=a|0;return a+68|0}function mf(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+68>>2]=c[b+0>>2];c[a+72>>2]=c[b+4>>2];c[a+76>>2]=c[b+8>>2];c[a+80>>2]=c[b+12>>2];i=d;return}function nf(a){a=a|0;return c[a+8>>2]|0}function of(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function pf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function qf(a,b){a=+a;b=+b;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(75)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e+4>>2]=10;c[e>>2]=4784;c[e+52>>2]=0;g[e+28>>2]=b*.5;g[e+32>>2]=a;g[e+36>>2]=a;g[e+40>>2]=0.0;i=d;return e|0}function rf(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function sf(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function tf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function uf(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0,j=0;f=i;while(1){h=cw(16)|0;if((h|0)!=0){j=6;break}h=c[4574]|0;c[4574]=h+0;if((h|0)==0){j=5;break}jc[h&1]()}if((j|0)==5){j=vb(4)|0;c[j>>2]=18312;Ua(j|0,18360,237)}else if((j|0)==6){g[h>>2]=a;g[h+4>>2]=b;g[h+8>>2]=d;g[h+12>>2]=e;i=f;return h|0}return 0}function vf(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=e;return}function wf(a){a=a|0;return+(+g[a>>2])}function xf(a){a=a|0;return+(+g[a+4>>2])}function yf(a){a=a|0;return+(+g[a+8>>2])}function zf(a){a=a|0;return+(+g[a+12>>2])}function Af(a,b){a=a|0;b=+b;g[a>>2]=b;return}function Bf(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function Cf(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function Df(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function Ef(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Ff(a,b){a=+a;b=+b;var d=0,e=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(75)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}c[e+8>>2]=0;g[e+12>>2]=1.0;g[e+16>>2]=1.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e+4>>2]=10;c[e>>2]=4888;c[e+52>>2]=2;g[e+28>>2]=a;g[e+32>>2]=a;g[e+36>>2]=b*.5;g[e+40>>2]=0.0;i=d;return e|0}function Gf(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Hf(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function If(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Jf(a){a=a|0;return(c[a+8>>2]|0)!=0|0}function Kf(a){a=a|0;return c[a+8>>2]|0}function Lf(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function Mf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Nf(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Of(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function Pf(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Qf(){var a=0,b=0;a=i;c[4336]=(c[4336]|0)+1;b=cw(35)|0;if((b|0)==0){b=0;i=a;return b|0}c[(b+19&-16)+ -4>>2]=b;b=b+19&-16;i=a;return b|0}function Rf(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0;f=i;c[4336]=(c[4336]|0)+1;h=cw(35)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}g[h>>2]=a;g[h+4>>2]=b;g[h+8>>2]=d;g[h+12>>2]=e;i=f;return h|0}function Sf(a){a=a|0;return+(+g[a+12>>2])}function Tf(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=e;return}function Uf(a){a=a|0;return+(+g[a>>2])}function Vf(a){a=a|0;return+(+g[a+4>>2])}function Wf(a){a=a|0;return+(+g[a+8>>2])}function Xf(a,b){a=a|0;b=+b;g[a>>2]=b;return}function Yf(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function Zf(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function _f(a,b){a=a|0;b=+b;g[a>>2]=+g[a>>2]*b;g[a+4>>2]=+g[a+4>>2]*b;g[a+8>>2]=+g[a+8>>2]*b;return a|0}function $f(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function ag(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function bg(){var a=0,b=0;a=i;c[4336]=(c[4336]|0)+1;b=cw(35)|0;if((b|0)==0){b=0;i=a;return b|0}c[(b+19&-16)+ -4>>2]=b;b=b+19&-16;i=a;return b|0}function cg(a,b,d){a=+a;b=+b;d=+d;var e=0,f=0;e=i;c[4336]=(c[4336]|0)+1;f=cw(35)|0;if((f|0)==0){f=0}else{c[(f+19&-16)+ -4>>2]=f;f=f+19&-16}g[f>>2]=a;g[f+4>>2]=b;g[f+8>>2]=d;g[f+12>>2]=0.0;i=e;return f|0}function dg(a){a=a|0;return+(+g[a>>2])}function eg(a){a=a|0;return+(+g[a+4>>2])}function fg(a){a=a|0;return+(+g[a+8>>2])}function gg(a,b){a=a|0;b=+b;g[a>>2]=b;return}function hg(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function ig(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function jg(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=0.0;return}function kg(a,b){a=a|0;b=+b;g[a>>2]=+g[a>>2]*b;g[a+4>>2]=+g[a+4>>2]*b;g[a+8>>2]=+g[a+8>>2]*b;return a|0}function lg(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function mg(a){a=+a;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(71)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}c[d+8>>2]=0;g[d+12>>2]=1.0;g[d+16>>2]=1.0;g[d+20>>2]=1.0;g[d+24>>2]=0.0;c[d>>2]=14168;c[d+4>>2]=8;g[d+28>>2]=a;g[d+44>>2]=a;i=b;return d|0}function ng(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function og(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function pg(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function qg(){var a=0,b=0,d=0;a=i;while(1){b=cw(24)|0;if((b|0)!=0){d=6;break}b=c[4574]|0;c[4574]=b+0;if((b|0)==0){d=5;break}jc[b&1]()}if((d|0)==5){d=vb(4)|0;c[d>>2]=18312;Ua(d|0,18360,237)}else if((d|0)==6){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=4096;c[b+12>>2]=4096;c[b+16>>2]=0;c[b+20>>2]=1;i=a;return b|0}return 0}function rg(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function sg(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function tg(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function ug(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function vg(){var a=0,b=0,d=0;a=i;while(1){b=cw(12)|0;if((b|0)!=0){d=6;break}b=c[4574]|0;c[4574]=b+0;if((b|0)==0){d=5;break}jc[b&1]()}if((d|0)==5){d=vb(4)|0;c[d>>2]=18312;Ua(d|0,18360,237)}else if((d|0)==6){g[b>>2]=.30000001192092896;g[b+4>>2]=1.0;g[b+8>>2]=0.0;i=a;return b|0}return 0}function wg(a){a=a|0;return+(+g[a>>2])}function xg(a,b){a=a|0;b=+b;g[a>>2]=b;return}function yg(a){a=a|0;return+(+g[a+4>>2])}function zg(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function Ag(a){a=a|0;return+(+g[a+8>>2])}function Bg(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function Cg(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Dg(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Eg(b){b=b|0;var d=0,e=0,f=0,h=0;d=i;c[4336]=(c[4336]|0)+1;e=cw(635)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}g[e+164>>2]=1.0;g[e+168>>2]=1.0;g[e+172>>2]=1.0;g[e+176>>2]=0.0;c[e+180>>2]=0;g[e+184>>2]=999999984306749400.0;f=e+188|0;h=e+204|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[h>>2]=1;c[e+208>>2]=-1;c[e+212>>2]=-1;c[e+216>>2]=1;g[e+220>>2]=0.0;g[e+224>>2]=.5;g[e+228>>2]=0.0;g[e+232>>2]=0.0;c[e+236>>2]=1;c[e+240>>2]=0;g[e+244>>2]=1.0;h=e+248|0;f=e+4|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[f>>2]=1.0;f=e+8|0;h=e+24|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;g[h>>2]=1.0;h=e+28|0;f=e+44|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;g[f>>2]=1.0;f=e+48|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[e>>2]=2376;a[e+500>>0]=1;c[e+496>>2]=0;c[e+488>>2]=0;c[e+492>>2]=0;Oj(e,b);i=d;return e|0}function Fg(a,b,c){a=a|0;b=+b;c=+c;if(b<0.0){b=0.0}else{b=b>1.0?1.0:b}g[a+444>>2]=b;if(c<0.0){c=0.0}else{c=c>1.0?1.0:c}g[a+448>>2]=c;return}function Gg(a,b,c){a=a|0;b=+b;c=c|0;var d=0;d=i;Pj(a,b,c);i=d;return}function Hg(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0;d=i;c[a+348>>2]=c[b+0>>2];c[a+352>>2]=c[b+4>>2];c[a+356>>2]=c[b+8>>2];c[a+360>>2]=c[b+12>>2];h=+g[a+344>>2];f=+g[a+352>>2]*h;e=+g[a+356>>2]*h;g[a+560>>2]=+g[a+348>>2]*h;g[a+564>>2]=f;g[a+568>>2]=e;g[a+572>>2]=0.0;i=d;return}function Ig(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+g[b+4>>2]*+g[a+548>>2];c=+g[b+8>>2]*+g[a+552>>2];g[a+428>>2]=+g[a+428>>2]+ +g[b>>2]*+g[a+544>>2];g[a+432>>2]=+g[a+432>>2]+d;g[a+436>>2]=+g[a+436>>2]+c;return}function Jg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;d=+g[a+348>>2];f=+g[a+352>>2];h=+g[b+4>>2]*f;i=+g[a+356>>2];j=+g[b+8>>2]*i;g[a+412>>2]=+g[a+412>>2]+ +g[b>>2]*d;g[a+416>>2]=+g[a+416>>2]+h;g[a+420>>2]=+g[a+420>>2]+j;d=+g[b>>2]*d;f=+g[b+4>>2]*f;i=+g[b+8>>2]*i;j=+g[c+4>>2];h=+g[c+8>>2];k=+g[c>>2];e=(h*d-k*i)*+g[a+548>>2];d=(k*f-j*d)*+g[a+552>>2];g[a+428>>2]=+g[a+428>>2]+(j*i-h*f)*+g[a+544>>2];g[a+432>>2]=+g[a+432>>2]+e;g[a+436>>2]=+g[a+436>>2]+d;return}function Kg(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0;h=+g[b>>2];f=+g[b+4>>2];e=+g[b+8>>2];d=(+g[a+280>>2]*h+ +g[a+284>>2]*f+ +g[a+288>>2]*e)*+g[a+548>>2];c=(+g[a+296>>2]*h+ +g[a+300>>2]*f+ +g[a+304>>2]*e)*+g[a+552>>2];g[a+328>>2]=+g[a+328>>2]+(+g[a+264>>2]*h+ +g[a+268>>2]*f+ +g[a+272>>2]*e)*+g[a+544>>2];g[a+332>>2]=+g[a+332>>2]+d;g[a+336>>2]=+g[a+336>>2]+c;return}function Lg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;Mg(a,b,c);i=d;return}function Mg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;d=i;e=+g[a+344>>2];if(!(e!=0.0)){i=d;return}h=+g[a+348>>2];k=+g[a+352>>2];m=+g[a+356>>2];n=+g[b+4>>2]*k*e;j=+g[b+8>>2]*m*e;g[a+312>>2]=+g[a+312>>2]+ +g[b>>2]*h*e;g[a+316>>2]=+g[a+316>>2]+n;g[a+320>>2]=+g[a+320>>2]+j;h=+g[b>>2]*h;k=+g[b+4>>2]*k;m=+g[b+8>>2]*m;j=+g[c+4>>2];n=+g[c+8>>2];l=+g[c>>2];f=(+g[a+280>>2]*(j*m-n*k)+ +g[a+284>>2]*(n*h-l*m)+ +g[a+288>>2]*(l*k-j*h))*+g[a+548>>2];e=(+g[a+296>>2]*(j*m-n*k)+ +g[a+300>>2]*(n*h-l*m)+ +g[a+304>>2]*(l*k-j*h))*+g[a+552>>2];g[a+328>>2]=+g[a+328>>2]+(+g[a+264>>2]*(j*m-n*k)+ +g[a+268>>2]*(n*h-l*m)+ +g[a+272>>2]*(l*k-j*h))*+g[a+544>>2];g[a+332>>2]=+g[a+332>>2]+f;g[a+336>>2]=+g[a+336>>2]+e;i=d;return}function Ng(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;n=+g[a+4>>2];h=+g[a+396>>2];m=+g[a+8>>2];e=+g[a+400>>2];l=+g[a+12>>2];c=+g[a+404>>2];k=+g[a+20>>2];j=+g[a+24>>2];i=+g[a+28>>2];f=+g[a+36>>2];d=+g[a+40>>2];b=+g[a+44>>2];g[a+264>>2]=n*n*h+m*m*e+l*l*c;g[a+268>>2]=n*h*k+m*e*j+l*c*i;g[a+272>>2]=n*h*f+m*e*d+l*c*b;g[a+276>>2]=0.0;g[a+280>>2]=n*h*k+m*e*j+l*c*i;g[a+284>>2]=k*h*k+j*e*j+i*c*i;g[a+288>>2]=h*k*f+e*j*d+c*i*b;g[a+292>>2]=0.0;g[a+296>>2]=n*h*f+m*e*d+l*c*b;g[a+300>>2]=k*h*f+j*e*d+i*c*b;g[a+304>>2]=f*h*f+d*e*d+b*c*b;g[a+308>>2]=0.0;return}function Og(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+312>>2]=c[b+0>>2];c[a+316>>2]=c[b+4>>2];c[a+320>>2]=c[b+8>>2];c[a+324>>2]=c[b+12>>2];i=d;return}function Pg(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+328>>2]=c[b+0>>2];c[a+332>>2]=c[b+4>>2];c[a+336>>2]=c[b+8>>2];c[a+340>>2]=c[b+12>>2];i=d;return}function Qg(a){a=a|0;return c[a+480>>2]|0}function Rg(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+544>>2]=c[b+0>>2];c[a+548>>2]=c[b+4>>2];c[a+552>>2]=c[b+8>>2];c[a+556>>2]=c[b+12>>2];i=d;return}function Sg(a,b){a=a|0;b=b|0;if((c[b+236>>2]&2|0)==0){b=0}return b|0}function Tg(a){a=a|0;return c[a+192>>2]|0}function Ug(a,b){a=a|0;b=b|0;c[a+216>>2]=b;return}function Vg(a){a=a|0;var b=0;b=i;if((c[a+204>>2]&3|0)!=0){i=b;return}if(!(((c[a+216>>2]|0)+ -4|0)>>>0<2)){c[a+216>>2]=1}g[a+220>>2]=0.0;i=b;return}function Wg(a,b){a=a|0;b=b|0;var d=0;d=i;if(!b?(c[a+204>>2]&3|0)!=0:0){i=d;return}if(!(((c[a+216>>2]|0)+ -4|0)>>>0<2)){c[a+216>>2]=1}g[a+220>>2]=0.0;i=d;return}function Xg(a){a=a|0;a=c[a+216>>2]|0;return((a|0)==2?0:(a|0)!=5)|0}function Yg(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+228>>2]=b;return}function Zg(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+224>>2]=b;return}function _g(a){a=a|0;return a+4|0}function $g(a){a=a|0;return c[a+204>>2]|0}function ah(a,b){a=a|0;b=b|0;c[a+204>>2]=b;return}function bh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+8>>2]&255](a);i=b;return}function ch(a){a=a|0;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(75)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}ap(d,a);c[d>>2]=8856;c[d+52>>2]=0;i=b;return d|0}function dh(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function eh(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function fh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function gh(a){a=a|0;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(75)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}ap(d,a);c[d>>2]=8960;c[d+52>>2]=2;i=b;return d|0}function hh(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function ih(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function jh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function kh(){var a=0,b=0,d=0;a=i;while(1){d=cw(64)|0;if((d|0)!=0){break}d=c[4574]|0;c[4574]=d+0;if((d|0)==0){b=5;break}jc[d&1]()}if((b|0)==5){d=vb(4)|0;c[d>>2]=18312;Ua(d|0,18360,237)}b=d;do{b=b+16|0}while((b|0)!=(d+48|0));i=a;return d|0}function lh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;while(1){f=cw(64)|0;if((f|0)!=0){break}f=c[4574]|0;c[4574]=f+0;if((f|0)==0){e=5;break}jc[f&1]()}if((e|0)==5){f=vb(4)|0;c[f>>2]=18312;Ua(f|0,18360,237)}e=f;do{e=e+16|0}while((e|0)!=(f+48|0));Rh(f,a);c[f+48>>2]=c[b+0>>2];c[f+52>>2]=c[b+4>>2];c[f+56>>2]=c[b+8>>2];c[f+60>>2]=c[b+12>>2];i=d;return f|0}function mh(a){a=a|0;var b=0;b=i;nh(a);i=b;return}function nh(a){a=a|0;var b=0;b=i;g[a>>2]=1.0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;g[a+20>>2]=1.0;c[a+24>>2]=0;c[a+28>>2]=0;c[a+32>>2]=0;c[a+36>>2]=0;g[a+40>>2]=1.0;g[a+44>>2]=0.0;c[a+48>>2]=0;c[a+52>>2]=0;c[a+56>>2]=0;c[a+60>>2]=0;i=b;return}function oh(a,b){a=a|0;b=b|0;var d=0;d=i;c[a+48>>2]=c[b+0>>2];c[a+52>>2]=c[b+4>>2];c[a+56>>2]=c[b+8>>2];c[a+60>>2]=c[b+12>>2];i=d;return}function ph(a,b){a=a|0;b=b|0;var c=0;c=i;Rh(a,b);i=c;return}function qh(a){a=a|0;return a+48|0}function rh(b){b=b|0;var d=0;d=i;i=i+16|0;if((a[48]|0)==0?(Ya(48)|0)!=0:0){bb(48)}Qh(b,d);c[32>>2]=c[d+0>>2];c[36>>2]=c[d+4>>2];c[40>>2]=c[d+8>>2];c[44>>2]=c[d+12>>2];i=d;return 32}function sh(a){a=a|0;return a|0}function th(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function uh(a){a=a|0;return c[a+24>>2]|0}function vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;mc[c[(c[a>>2]|0)+32>>2]&63](a,b,d,e);i=f;return}function wh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function xh(a){a=a|0;return+(+g[a>>2])}function yh(a){a=a|0;return+(+g[a+4>>2])}function zh(a){a=a|0;return+(+g[a+8>>2])}function Ah(a){a=a|0;return+(+g[a+12>>2])}function Bh(a,b){a=a|0;b=+b;g[a>>2]=b;return}function Ch(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function Dh(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function Eh(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function Fh(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Gh(a){a=a|0;var b=0,d=0;b=i;c[4336]=(c[4336]|0)+1;d=cw(75)|0;if((d|0)==0){d=0}else{c[(d+19&-16)+ -4>>2]=d;d=d+19&-16}ap(d,a);i=b;return d|0}function Hh(a,b){a=a|0;b=b|0;var d=0;d=i;Fb[c[(c[a>>2]|0)+24>>2]&127](a,b);i=d;return}function Ih(a,b,d){a=a|0;b=+b;d=d|0;var e=0;e=i;Mb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);i=e;return}function Jh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Kh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}Db[c[(c[a>>2]|0)+4>>2]&255](a);i=b;return}function Lh(a){a=a|0;return}function Mh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Nh(a){a=a|0;return}function Oh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return}function Ph(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function Qh(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,h=0,j=0.0,k=0,l=0;c=i;i=i+16|0;f=+g[a>>2];e=+g[a+20>>2];d=+g[a+40>>2];if(f+e+d>0.0){f=+Q(+(f+e+d+1.0));g[c+12>>2]=f*.5;j=(+g[a+36>>2]- +g[a+24>>2])*(.5/f);g[c>>2]=j;d=(+g[a+8>>2]- +g[a+32>>2])*(.5/f);g[c+4>>2]=d;e=(+g[a+16>>2]- +g[a+4>>2])*(.5/f);g[c+8>>2]=e;f=f*.5;g[b>>2]=j;h=b+4|0;g[h>>2]=d;h=b+8|0;g[h>>2]=e;h=b+12|0;g[h>>2]=f;i=c;return}if(f<e){h=e<d?2:1}else{h=f<d?2:0}l=((h+1|0)>>>0)%3|0;k=((h+2|0)>>>0)%3|0;d=+Q(+(+g[a+(h<<4)+(h<<2)>>2]- +g[a+(l<<4)+(l<<2)>>2]- +g[a+(k<<4)+(k<<2)>>2]+1.0));g[c+(h<<2)>>2]=d*.5;g[c+12>>2]=(+g[a+(k<<4)+(l<<2)>>2]- +g[a+(l<<4)+(k<<2)>>2])*(.5/d);g[c+(l<<2)>>2]=(+g[a+(l<<4)+(h<<2)>>2]+ +g[a+(h<<4)+(l<<2)>>2])*(.5/d);g[c+(k<<2)>>2]=(+g[a+(k<<4)+(h<<2)>>2]+ +g[a+(h<<4)+(k<<2)>>2])*(.5/d);d=+g[c>>2];e=+g[c+4>>2];f=+g[c+8>>2];j=+g[c+12>>2];g[b>>2]=d;h=b+4|0;g[h>>2]=e;h=b+8|0;g[h>>2]=f;h=b+12|0;g[h>>2]=j;i=c;return}function Rh(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;f=+g[b>>2];d=+g[b+4>>2];j=+g[b+8>>2];h=+g[b+12>>2];e=f*(2.0/(f*f+d*d+j*j+h*h));c=d*(2.0/(f*f+d*d+j*j+h*h));i=j*(2.0/(f*f+d*d+j*j+h*h));g[a>>2]=1.0-(d*c+j*i);g[a+4>>2]=f*c-h*i;g[a+8>>2]=f*i+h*c;g[a+12>>2]=0.0;g[a+16>>2]=f*c+h*i;g[a+20>>2]=1.0-(f*e+j*i);g[a+24>>2]=d*i-h*e;g[a+28>>2]=0.0;g[a+32>>2]=f*i-h*c;g[a+36>>2]=d*i+h*e;g[a+40>>2]=1.0-(f*e+d*c);g[a+44>>2]=0.0;return}function Sh(a){a=a|0;return}function Th(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Uh(a,c){a=a|0;c=c|0;var d=0;d=i;if((b[c+4>>1]&b[a+14>>1])<<16>>16==0){c=0;i=d;return c|0}c=(b[a+12>>1]&b[c+6>>1])<<16>>16!=0;i=d;return c|0}function Vh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;g[a+4>>2]=+g[b+24>>2];e=c[b>>2]|0;c[a+8>>2]=e;if(d){c[a+52>>2]=c[b+8>>2];c[a+56>>2]=c[b+12>>2];c[a+60>>2]=c[b+16>>2];c[a+64>>2]=c[b+20>>2]}else{k=+g[b+8>>2];j=+g[b+12>>2];i=+g[b+16>>2];h=+g[e+20>>2]*k+ +g[e+24>>2]*j+ +g[e+28>>2]*i;f=+g[e+36>>2]*k+ +g[e+40>>2]*j+ +g[e+44>>2]*i;g[a+52>>2]=+g[e+4>>2]*k+ +g[e+8>>2]*j+ +g[e+12>>2]*i;g[a+56>>2]=h;g[a+60>>2]=f;g[a+64>>2]=0.0}k=+g[b+24>>2];g[a+68>>2]=(1.0-k)*+g[a+20>>2]+ +g[a+36>>2]*k;g[a+72>>2]=(1.0-k)*+g[a+24>>2]+k*+g[a+40>>2];g[a+76>>2]=(1.0-k)*+g[a+28>>2]+k*+g[a+44>>2];return+(+g[b+24>>2])}function Wh(a,b,c,d,e,f,h,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;n=i;m=a;do{m=m+16|0}while((m|0)!=(a+48|0));g[a>>2]=+g[b>>2];g[a+4>>2]=+g[c>>2];g[a+8>>2]=+g[d>>2];g[a+12>>2]=0.0;g[a+16>>2]=+g[e>>2];g[a+20>>2]=+g[f>>2];g[a+24>>2]=+g[h>>2];g[a+28>>2]=0.0;g[a+32>>2]=+g[j>>2];g[a+36>>2]=+g[k>>2];g[a+40>>2]=+g[l>>2];g[a+44>>2]=0.0;i=n;return}function Xh(a){a=a|0;return}function Yh(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Zh(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0;d=i;i=i+176|0;Wh(d+128|0,a+68|0,a+84|0,a+100|0,a+72|0,a+88|0,a+104|0,a+76|0,a+92|0,a+108|0);l=-+g[a+116>>2];k=-+g[a+120>>2];h=-+g[a+124>>2];e=+g[d+128>>2]*l+ +g[d+132>>2]*k+ +g[d+136>>2]*h;f=+g[d+144>>2]*l+ +g[d+148>>2]*k+ +g[d+152>>2]*h;h=+g[d+160>>2]*l+ +g[d+164>>2]*k+ +g[d+168>>2]*h;j=d;do{j=j+16|0}while((j|0)!=(d+48|0));c[d+0>>2]=c[d+128>>2];c[d+4>>2]=c[d+132>>2];c[d+8>>2]=c[d+136>>2];c[d+12>>2]=c[d+140>>2];c[d+16>>2]=c[d+144>>2];c[d+20>>2]=c[d+148>>2];c[d+24>>2]=c[d+152>>2];c[d+28>>2]=c[d+156>>2];c[d+32>>2]=c[d+160>>2];c[d+36>>2]=c[d+164>>2];c[d+40>>2]=c[d+168>>2];c[d+44>>2]=c[d+172>>2];g[d+48>>2]=e;g[d+52>>2]=f;g[d+56>>2]=h;g[d+60>>2]=0.0;$h(d+64|0,d,a+4|0);c[b+0>>2]=c[d+64>>2];c[b+4>>2]=c[d+68>>2];c[b+8>>2]=c[d+72>>2];c[b+12>>2]=c[d+76>>2];c[b+16>>2]=c[d+80>>2];c[b+20>>2]=c[d+84>>2];c[b+24>>2]=c[d+88>>2];c[b+28>>2]=c[d+92>>2];c[b+32>>2]=c[d+96>>2];c[b+36>>2]=c[d+100>>2];c[b+40>>2]=c[d+104>>2];c[b+44>>2]=c[d+108>>2];c[b+48>>2]=c[d+112>>2];c[b+52>>2]=c[d+116>>2];c[b+56>>2]=c[d+120>>2];c[b+60>>2]=c[d+124>>2];i=d;return}function _h(a,b){a=a|0;b=b|0;var d=0;d=i;i=i+64|0;$h(d,b,a+68|0);c[a+4>>2]=c[d+0>>2];c[a+8>>2]=c[d+4>>2];c[a+12>>2]=c[d+8>>2];c[a+16>>2]=c[d+12>>2];c[a+20>>2]=c[d+16>>2];c[a+24>>2]=c[d+20>>2];c[a+28>>2]=c[d+24>>2];c[a+32>>2]=c[d+28>>2];c[a+36>>2]=c[d+32>>2];c[a+40>>2]=c[d+36>>2];c[a+44>>2]=c[d+40>>2];c[a+48>>2]=c[d+44>>2];c[a+52>>2]=c[d+48>>2];c[a+56>>2]=c[d+52>>2];c[a+60>>2]=c[d+56>>2];c[a+64>>2]=c[d+60>>2];i=d;return}function $h(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=i;i=i+96|0;s=+g[d>>2];h=+g[b>>2];r=+g[d+16>>2];j=+g[b+4>>2];q=+g[d+32>>2];l=+g[b+8>>2];g[e+80>>2]=s*h+r*j+q*l;p=+g[d+4>>2];o=+g[d+20>>2];n=+g[d+36>>2];g[e+76>>2]=p*h+o*j+n*l;m=+g[d+8>>2];f=+g[d+24>>2];k=+g[d+40>>2];g[e+72>>2]=m*h+f*j+k*l;l=+g[b+16>>2];j=+g[b+20>>2];h=+g[b+24>>2];g[e+68>>2]=s*l+r*j+q*h;g[e+64>>2]=p*l+o*j+n*h;g[e+60>>2]=m*l+f*j+k*h;h=+g[b+32>>2];j=+g[b+36>>2];l=+g[b+40>>2];g[e+56>>2]=s*h+r*j+q*l;g[e+52>>2]=p*h+o*j+n*l;g[e+48>>2]=m*h+f*j+k*l;Wh(e,e+80|0,e+76|0,e+72|0,e+68|0,e+64|0,e+60|0,e+56|0,e+52|0,e+48|0);l=+g[d+48>>2];k=+g[d+52>>2];j=+g[d+56>>2];f=l*+g[b>>2]+k*+g[b+4>>2]+j*+g[b+8>>2]+ +g[b+48>>2];h=l*+g[b+16>>2]+k*+g[b+20>>2]+j*+g[b+24>>2]+ +g[b+52>>2];j=l*+g[b+32>>2]+k*+g[b+36>>2]+j*+g[b+40>>2]+ +g[b+56>>2];b=a;do{b=b+16|0}while((b|0)!=(a+48|0));c[a+0>>2]=c[e+0>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];c[a+16>>2]=c[e+16>>2];c[a+20>>2]=c[e+20>>2];c[a+24>>2]=c[e+24>>2];c[a+28>>2]=c[e+28>>2];c[a+32>>2]=c[e+32>>2];c[a+36>>2]=c[e+36>>2];c[a+40>>2]=c[e+40>>2];c[a+44>>2]=c[e+44>>2];g[a+48>>2]=f;g[a+52>>2]=h;g[a+56>>2]=j;g[a+60>>2]=0.0;i=e;return}function ai(a){a=a|0;return}function bi(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function ci(a,c){a=a|0;c=c|0;var d=0;d=i;if((b[c+4>>1]&b[a+6>>1])<<16>>16==0){c=0;i=d;return c|0}c=(b[a+4>>1]&b[c+6>>1])<<16>>16!=0;i=d;return c|0}function di(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0.0,k=0;k=i;j=+cb(664,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0);i=k;return+j}function ei(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0,l=0;e=i;if((a[b+527>>0]|0)!=0){c[d>>2]=0;c[d+4>>2]=0;i=e;return}c[d>>2]=3;c[d+4>>2]=3;l=c[b+28>>2]|0;k=c[b+32>>2]|0;fi(b,l+4|0,k+4|0,l+264|0,k+264|0);if(((a[b+526>>0]|0)!=0?(f=c[d>>2]|0,c[d>>2]=f+1,h=c[d+4>>2]|0,c[d+4>>2]=h+ -1,j=+g[b+456>>2],+g[b+444>>2]<j):0)?+g[b+448>>2]<j:0){c[d>>2]=f+2;c[d+4>>2]=h+ -2}if((a[b+525>>0]|0)==0){i=e;return}c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+ -1;i=e;return}function fi(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,R=0.0,U=0.0,W=0.0,X=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0;j=i;i=i+272|0;g[b+504>>2]=0.0;g[b+500>>2]=0.0;a[b+525>>0]=0;a[b+526>>0]=0;if((a[b+552>>0]|0)!=0?(a[b+527>>0]|0)==0:0){ia=+g[b+556>>2];ba=+g[b+560>>2];ja=+g[b+564>>2];ca=+g[b+568>>2];ea=ia*(2.0/(ia*ia+ba*ba+ja*ja+ca*ca));la=ba*(2.0/(ia*ia+ba*ba+ja*ja+ca*ca));fa=ja*(2.0/(ia*ia+ba*ba+ja*ja+ca*ca));$h(j+208|0,d,b+300|0);$h(j+144|0,e,b+364|0);H=+g[j+144>>2];J=+g[j+148>>2];m=+g[j+152>>2];W=(1.0-(ba*la+ja*fa))*H+(ia*la+ca*fa)*J+(ia*fa-ca*la)*m;X=(ia*la-ca*fa)*H+(1.0-(ia*ea+ja*fa))*J+(ba*fa+ca*ea)*m;Z=(ia*fa+ca*la)*H+(ba*fa-ca*ea)*J+(1.0-(ia*ea+ba*la))*m;K=+g[j+160>>2];L=+g[j+164>>2];l=+g[j+168>>2];_=(1.0-(ba*la+ja*fa))*K+(ia*la+ca*fa)*L+(ia*fa-ca*la)*l;$=(ia*la-ca*fa)*K+(1.0-(ia*ea+ja*fa))*L+(ba*fa+ca*ea)*l;aa=(ia*fa+ca*la)*K+(ba*fa-ca*ea)*L+(1.0-(ia*ea+ba*la))*l;M=+g[j+176>>2];N=+g[j+180>>2];O=+g[j+184>>2];ha=(1.0-(ba*la+ja*fa))*M+(ia*la+ca*fa)*N+(ia*fa-ca*la)*O;ja=(ia*la-ca*fa)*M+(1.0-(ia*ea+ja*fa))*N+(ba*fa+ca*ea)*O;la=(ia*fa+ca*la)*M+(ba*fa-ca*ea)*N+(1.0-(ia*ea+ba*la))*O;ba=+g[j+208>>2];ea=+g[j+224>>2];ia=+g[j+240>>2];ca=+g[j+212>>2];fa=+g[j+228>>2];ka=+g[j+244>>2];da=+g[j+216>>2];ga=+g[j+232>>2];ma=+g[j+248>>2];R=-+g[j+256>>2];U=-+g[j+260>>2];k=-+g[j+264>>2];m=H*0.0+J*0.0+m*0.0+ +g[j+192>>2]+(Z*(da*R+ga*U+ma*k)+(W*(ba*R+ea*U+ia*k)+X*(ca*R+fa*U+ka*k)));l=K*0.0+L*0.0+l*0.0+ +g[j+196>>2]+(aa*(da*R+ga*U+ma*k)+(_*(ba*R+ea*U+ia*k)+$*(ca*R+fa*U+ka*k)));k=M*0.0+N*0.0+O*0.0+ +g[j+200>>2]+(la*(da*R+ga*U+ma*k)+(ha*(ba*R+ea*U+ia*k)+ja*(ca*R+fa*U+ka*k)));g[j+80>>2]=W*ba+X*ca+Z*da;g[j+84>>2]=W*ea+X*fa+Z*ga;g[j+88>>2]=W*ia+X*ka+Z*ma;g[j+92>>2]=0.0;g[j+96>>2]=_*ba+$*ca+aa*da;g[j+100>>2]=_*ea+$*fa+aa*ga;g[j+104>>2]=_*ia+$*ka+aa*ma;g[j+108>>2]=0.0;g[j+112>>2]=ha*ba+ja*ca+la*da;g[j+116>>2]=ha*ea+ja*fa+la*ga;g[j+120>>2]=ha*ia+ja*ka+la*ma;g[j+124>>2]=0.0;g[j+128>>2]=m;g[j+132>>2]=l;g[j+136>>2]=k;g[j+140>>2]=0.0;Qh(j+80|0,j+64|0);k=+g[j+64>>2];l=+g[j+68>>2];m=+g[j+72>>2];if(+P(+(k*k+l*l+m*m))<1.1920928955078125e-7){i=j;return}g[b+472>>2]=0.0;ma=1.0/+Q(+(k*k+l*l+m*m));g[b+460>>2]=k*ma;g[b+464>>2]=l*ma;g[b+468>>2]=m*ma;k=+g[j+76>>2];k=k<-1.0?-1.0:k;ma=+V(+(k>1.0?1.0:k))*2.0;g[b+504>>2]=ma;if(+P(+ma)<1.1920928955078125e-7){i=j;return}a[b+526>>0]=1;i=j;return}Qh(d,j+48|0);Qh(b+300|0,j+32|0);n=+g[j+60>>2];A=+g[j+32>>2];k=+g[j+48>>2];C=+g[j+44>>2];D=+g[j+52>>2];l=+g[j+40>>2];B=+g[j+56>>2];m=+g[j+36>>2];Qh(e,j+16|0);Qh(b+364|0,j);s=+g[j+28>>2];o=+g[j>>2];v=+g[j+16>>2];q=+g[j+12>>2];r=+g[j+20>>2];w=+g[j+8>>2];p=+g[j+24>>2];u=+g[j+4>>2];y=-(s*o+v*q+r*w-p*u);z=-(o*p+(q*r+s*u)-v*w);x=-(s*w+q*p+v*u-o*r);H=(n*A+k*C+D*l-B*m)*(s*q-o*v-r*u-w*p)+(n*C-A*k-D*m-l*B)*y+(n*l+C*B+k*m-A*D)*z-(A*B+(C*D+n*m)-k*l)*x;N=(n*A+k*C+D*l-B*m)*x+((A*B+(C*D+n*m)-k*l)*(s*q-o*v-r*u-w*p)+(n*C-A*k-D*m-l*B)*z)-(n*l+C*B+k*m-A*D)*y;O=(A*B+(C*D+n*m)-k*l)*y+((n*l+C*B+k*m-A*D)*(s*q-o*v-r*u-w*p)+(n*C-A*k-D*m-l*B)*x)-(n*A+k*C+D*l-B*m)*z;R=(n*C-A*k-D*m-l*B)*(s*q-o*v-r*u-w*p)-(n*A+k*C+D*l-B*m)*y-(A*B+(C*D+n*m)-k*l)*z-(n*l+C*B+k*m-A*D)*x;E=-H-N*0.0-O*0.0;G=(O+R*0.0-H*0.0)*-O+(R*(R+N*0.0-O*0.0)+E*-H)-(R*0.0+H*0.0-N)*-N;L=(R*0.0+H*0.0-N)*-H+(R*(O+R*0.0-H*0.0)+E*-N)-(R+N*0.0-O*0.0)*-O;E=(R+N*0.0-O*0.0)*-N+(R*(R*0.0+H*0.0-N)+E*-O)-(O+R*0.0-H*0.0)*-H;K=1.0/+Q(+(E*E+(G*G+L*L)));if(K*E*0.0+(K*L*0.0+K*G)<-.9999998807907104){if(+P(0.0)>.7071067690849304){F=0.0;E=t;M=t;G=0.0}else{F=-0.0;E=1.0;M=0.0;G=0.0}}else{ma=+Q(+((K*E*0.0+(K*L*0.0+K*G)+1.0)*2.0));F=(K*E*0.0-K*L*0.0)*(1.0/ma);E=(K*G*0.0-K*E)*(1.0/ma);M=(K*L-K*G*0.0)*(1.0/ma);G=ma*.5}U=1.0/+Q(+(G*G+(M*M+(E*E+F*F))));K=F*U;L=E*U;M=M*U;U=G*U;ma=1.0/+Q(+((R*U-H*-K-N*-L-O*-M)*(R*U-H*-K-N*-L-O*-M)+((N*-K+(O*U+R*-M)-H*-L)*(N*-K+(O*U+R*-M)-H*-L)+((O*-L+(H*U+R*-K)-N*-M)*(O*-L+(H*U+R*-K)-N*-M)+(H*-M+(N*U+R*-L)-O*-K)*(H*-M+(N*U+R*-L)-O*-K)))));G=ma*(O*-L+(H*U+R*-K)-N*-M);F=ma*(H*-M+(N*U+R*-L)-O*-K);E=ma*(N*-K+(O*U+R*-M)-H*-L);H=ma*(R*U-H*-K-N*-L-O*-M);N=+g[b+444>>2];O=+g[b+456>>2];if(N>=O?(J=+g[b+448>>2],J>=O):0){O=U<-1.0?-1.0:U;R=+V(+(O>1.0?1.0:O))*2.0;if(R>1.1920928955078125e-7){W=1.0/+Q(+(M*M+(K*K+L*L)));if(+P(+(L*W))>1.1920928955078125e-7){U=+Q(+((M*W*M*W/(L*W*L*W)+1.0)/(1.0/(J*J)+M*W*M*W/(L*W*L*W)/(N*N))));O=K*W;K=L*W;L=M*W}else{U=N;O=K*W;K=L*W;L=M*W}}else{U=0.0;O=0.0;K=0.0;L=0.0}W=+g[b+428>>2];M=U*W;if(R>M){a[b+526>>0]=1;if(R<U&W<.9999998807907104){U=(R-M)/(U-M)}else{U=1.0}g[b+528>>2]=U;g[b+504>>2]=R-M;if(+P(+K)>1.1920928955078125e-7){J=+P(+(K*-L/K*(J/N)));if(!(L<-0.0)){J=-J}L=1.0/+Q(+(K*K+O*O+J*J));O=O*L;K=K*L;L=-(J*L)}la=-O;ka=-K;ja=-L;ha=(o*p+(q*r+s*u)-v*w)*ja+(s*q-o*v-r*u-w*p)*la-(s*w+q*p+v*u-o*r)*ka;ma=(s*q-o*v-r*u-w*p)*ka+(s*w+q*p+v*u-o*r)*la-(s*o+v*q+r*w-p*u)*ja;ia=(s*q-o*v-r*u-w*p)*ja+(s*o+v*q+r*w-p*u)*ka-(o*p+(q*r+s*u)-v*w)*la;ja=-((s*o+v*q+r*w-p*u)*la)-(o*p+(q*r+s*u)-v*w)*ka-(s*w+q*p+v*u-o*r)*ja;ka=ma*x+((s*q-o*v-r*u-w*p)*ha+ja*y)-ia*z;la=ia*y+((s*q-o*v-r*u-w*p)*ma+ja*z)-ha*x;ma=ha*z+((s*q-o*v-r*u-w*p)*ia+ja*x)-ma*y;g[b+460>>2]=ka;g[b+464>>2]=la;g[b+468>>2]=ma;g[b+472>>2]=0.0;c[b+536>>2]=0;c[b+540>>2]=0;c[b+544>>2]=0;c[b+548>>2]=0;g[b+492>>2]=1.0/(ka*(+g[f>>2]*ka+ +g[f+16>>2]*la+ +g[f+32>>2]*ma)+la*(ka*+g[f+4>>2]+la*+g[f+20>>2]+ma*+g[f+36>>2])+ma*(ka*+g[f+8>>2]+la*+g[f+24>>2]+ma*+g[f+40>>2])+(ka*(ka*+g[h>>2]+la*+g[h+16>>2]+ma*+g[h+32>>2])+la*(ka*+g[h+4>>2]+la*+g[h+20>>2]+ma*+g[h+36>>2])+ma*(ka*+g[h+8>>2]+la*+g[h+24>>2]+ma*+g[h+40>>2])))}}else{I=23}a:do{if((I|0)==23){L=+g[b+300>>2];R=+g[b+316>>2];N=+g[b+332>>2];J=+g[d>>2];W=+g[d+4>>2];X=+g[d+8>>2];Z=+g[d+16>>2];U=+g[d+20>>2];M=+g[d+24>>2];K=+g[d+32>>2];O=+g[d+36>>2];ga=+g[d+40>>2];$=+g[b+304>>2];aa=+g[b+320>>2];ba=+g[b+336>>2];fa=+g[b+308>>2];ea=+g[b+324>>2];da=+g[b+340>>2];ja=+g[b+364>>2];ka=+g[b+380>>2];ha=+g[b+396>>2];ca=ja*+g[e>>2]+ka*+g[e+4>>2]+ha*+g[e+8>>2];_=ja*+g[e+16>>2]+ka*+g[e+20>>2]+ha*+g[e+24>>2];ha=ja*+g[e+32>>2]+ka*+g[e+36>>2]+ha*+g[e+40>>2];ka=(L*J+R*W+N*X)*ca+(L*Z+R*U+N*M)*_+(L*K+R*O+N*ga)*ha;ja=(J*$+W*aa+X*ba)*ca+(Z*$+U*aa+M*ba)*_+(K*$+O*aa+ga*ba)*ha;ia=(J*fa+W*ea+X*da)*ca+(Z*fa+U*ea+M*da)*_+(K*fa+O*ea+ga*da)*ha;la=+g[b+444>>2];ma=+g[b+456>>2];do{if(la<ma){la=+g[b+448>>2];if(la<ma){if(+P(+ja)<1.1920928955078125e-7?+P(+ia)<1.1920928955078125e-7:0){break a}a[b+526>>0]=1;g[b+460>>2]=-((L*K+R*O+N*ga)*_-(L*Z+R*U+N*M)*ha);g[b+464>>2]=-((L*J+R*W+N*X)*ha-(L*K+R*O+N*ga)*ca);g[b+468>>2]=-((L*Z+R*U+N*M)*ca-(L*J+R*W+N*X)*_);g[b+472>>2]=0.0;break a}if(+P(+ka)<1.1920928955078125e-7?+P(+ia)<1.1920928955078125e-7:0){break}a[b+526>>0]=1;if(la>=ma){ja=+Y(+ia,+ka);if(ja>la){ka=+S(+la);ja=0.0;ia=+T(+la);break}if(ja<-la){ka=+S(+la);ja=0.0;ia=-+T(+la)}else{ja=0.0}}}else{if(+P(+ka)<1.1920928955078125e-7?+P(+ja)<1.1920928955078125e-7:0){break}a[b+526>>0]=1;if(la>=ma){ia=+Y(+ja,+ka);if(ia>la){ka=+S(+la);ja=+T(+la);ia=0.0;break}if(ia<-la){ka=+S(+la);ja=-+T(+la);ia=0.0}else{ia=0.0}}}}while(0);la=(J*fa+W*ea+X*da)*ia+((J*$+W*aa+X*ba)*ja+(L*J+R*W+N*X)*ka);Z=(Z*fa+U*ea+M*da)*ia+((Z*$+U*aa+M*ba)*ja+(L*Z+R*U+N*M)*ka);ja=(K*fa+O*ea+ga*da)*ia+((K*$+O*aa+ga*ba)*ja+(L*K+R*O+N*ga)*ka);ka=1.0/+Q(+(ja*ja+(la*la+Z*Z)));g[b+472>>2]=0.0;ma=+Q(+((_*ka*ja-ha*ka*Z)*(_*ka*ja-ha*ka*Z)+(ha*ka*la-ca*ka*ja)*(ha*ka*la-ca*ka*ja)+(ca*ka*Z-_*ka*la)*(ca*ka*Z-_*ka*la)));g[b+504>>2]=ma;g[b+460>>2]=-((_*ka*ja-ha*ka*Z)*(1.0/ma));g[b+464>>2]=-((ha*ka*la-ca*ka*ja)*(1.0/ma));g[b+468>>2]=-((ca*ka*Z-_*ka*la)*(1.0/ma))}}while(0);J=+g[b+452>>2];if(!(J>=0.0)){g[b+512>>2]=0.0;i=j;return}K=H<-1.0?-1.0:H;K=+V(+(K>1.0?1.0:K))*2.0;if(K>3.1415927410125732){H=H>1.0?-1.0:-H;H=+V(+(H>1.0?1.0:H))*2.0;G=-G;F=-F;E=-E}else{H=K}g[b+512>>2]=H;if(H>1.1920928955078125e-7){ma=1.0/+Q(+(E*E+(F*F+G*G)));G=G*ma;F=F*ma;E=E*ma}L=+g[b+428>>2];if(H>J*L){a[b+525>>0]=1;K=H-J*L;if(H<J&L<.9999998807907104){H=K/(J-J*L)}else{H=1.0}g[b+532>>2]=H;g[b+508>>2]=K;la=-G;ka=-F;ja=-E;ha=(o*p+(q*r+s*u)-v*w)*ja+(s*q-o*v-r*u-w*p)*la-(s*w+q*p+v*u-o*r)*ka;ma=(s*q-o*v-r*u-w*p)*ka+(s*w+q*p+v*u-o*r)*la-(s*o+v*q+r*w-p*u)*ja;ia=(s*q-o*v-r*u-w*p)*ja+(s*o+v*q+r*w-p*u)*ka-(o*p+(q*r+s*u)-v*w)*la;ja=-((s*o+v*q+r*w-p*u)*la)-(o*p+(q*r+s*u)-v*w)*ka-(s*w+q*p+v*u-o*r)*ja;ka=ma*x+((s*q-o*v-r*u-w*p)*ha+ja*y)-ia*z;la=ia*y+((s*q-o*v-r*u-w*p)*ma+ja*z)-ha*x;ma=ha*z+((s*q-o*v-r*u-w*p)*ia+ja*x)-ma*y;g[b+476>>2]=ka;g[b+480>>2]=la;g[b+484>>2]=ma;g[b+488>>2]=0.0;g[b+496>>2]=1.0/(ka*(+g[f>>2]*ka+ +g[f+16>>2]*la+ +g[f+32>>2]*ma)+la*(ka*+g[f+4>>2]+la*+g[f+20>>2]+ma*+g[f+36>>2])+ma*(ka*+g[f+8>>2]+la*+g[f+24>>2]+ma*+g[f+40>>2])+(ka*(ka*+g[h>>2]+la*+g[h+16>>2]+ma*+g[h+32>>2])+la*(ka*+g[h+4>>2]+la*+g[h+20>>2]+ma*+g[h+36>>2])+ma*(ka*+g[h+8>>2]+la*+g[h+24>>2]+ma*+g[h+40>>2])))}if((a[b+526>>0]|0)==0){i=j;return}ha=-G;ma=-F;ja=-E;ga=(A*B+(C*D+n*m)-k*l)*ja+(n*C-A*k-D*m-l*B)*ha-(n*l+C*B+k*m-A*D)*ma;la=(n*C-A*k-D*m-l*B)*ma+(n*l+C*B+k*m-A*D)*ha-(n*A+k*C+D*l-B*m)*ja;ia=(n*C-A*k-D*m-l*B)*ja+(n*A+k*C+D*l-B*m)*ma-(A*B+(C*D+n*m)-k*l)*ha;ja=-((n*A+k*C+D*l-B*m)*ha)-(A*B+(C*D+n*m)-k*l)*ma-(n*l+C*B+k*m-A*D)*ja;ma=-(n*A+k*C+D*l-B*m);ha=-(A*B+(C*D+n*m)-k*l);ka=-(n*l+C*B+k*m-A*D);g[b+536>>2]=la*ka+((n*C-A*k-D*m-l*B)*ga+ja*ma)-ia*ha;g[b+540>>2]=ia*ma+((n*C-A*k-D*m-l*B)*la+ja*ha)-ga*ka;g[b+544>>2]=ga*ha+((n*C-A*k-D*m-l*B)*ia+ja*ka)-la*ma;g[b+548>>2]=0.0;i=j;return}function gi(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0;e=i;i=i+64|0;n=c[b+28>>2]|0;t=c[b+32>>2]|0;fi(b,n+4|0,t+4|0,n+264|0,t+264|0);k=c[d+8>>2]|0;g[k>>2]=1.0;l=c[d+24>>2]|0;g[k+(l+1<<2)>>2]=1.0;g[k+((l<<1)+2<<2)>>2]=1.0;o=+g[b+348>>2];w=+g[b+352>>2];q=+g[b+356>>2];v=+g[n+4>>2]*o+ +g[n+8>>2]*w+ +g[n+12>>2]*q;s=o*+g[n+20>>2]+w*+g[n+24>>2]+q*+g[n+28>>2];q=o*+g[n+36>>2]+w*+g[n+40>>2]+q*+g[n+44>>2];k=c[d+12>>2]|0;g[k>>2]=0.0;g[k+4>>2]=q;g[k+8>>2]=-s;g[k+12>>2]=0.0;g[k+(l<<2)>>2]=-q;g[k+(l+1<<2)>>2]=0.0;g[k+(l+2<<2)>>2]=v;g[k+(l+3<<2)>>2]=0.0;g[k+(l<<1<<2)>>2]=s;g[k+((l<<1|1)<<2)>>2]=-v;g[k+((l<<1)+2<<2)>>2]=0.0;g[k+((l<<1)+3<<2)>>2]=0.0;k=c[d+16>>2]|0;g[k>>2]=-1.0;g[k+(l+1<<2)>>2]=-1.0;g[k+((l<<1)+2<<2)>>2]=-1.0;w=+g[b+412>>2];o=+g[b+416>>2];r=+g[b+420>>2];p=+g[t+4>>2]*w+ +g[t+8>>2]*o+ +g[t+12>>2]*r;u=w*+g[t+20>>2]+o*+g[t+24>>2]+r*+g[t+28>>2];r=w*+g[t+36>>2]+o*+g[t+40>>2]+r*+g[t+44>>2];k=c[d+20>>2]|0;g[k>>2]=0.0;g[k+4>>2]=-r;g[k+8>>2]=u;g[k+12>>2]=0.0;g[k+(l<<2)>>2]=r;g[k+(l+1<<2)>>2]=0.0;g[k+(l+2<<2)>>2]=-p;g[k+(l+3<<2)>>2]=0.0;g[k+(l<<1<<2)>>2]=-u;g[k+((l<<1|1)<<2)>>2]=p;g[k+((l<<1)+2<<2)>>2]=0.0;g[k+((l<<1)+3<<2)>>2]=0.0;l=c[b+592>>2]|0;o=+g[((l&2|0)==0?d+4|0:b+600|0)>>2]*+g[d>>2];f=c[d+24>>2]|0;h=c[d+28>>2]|0;m=c[d+36>>2]|0;j=c[d+40>>2]|0;g[h>>2]=o*(p+ +g[t+52>>2]-v- +g[n+52>>2]);g[m>>2]=-3.4028234663852886e+38;g[j>>2]=3.4028234663852886e+38;if((l&1|0)==0){g[h+(f<<2)>>2]=o*(u+ +g[t+56>>2]-s- +g[n+56>>2]);g[m+(f<<2)>>2]=-3.4028234663852886e+38;g[j+(f<<2)>>2]=3.4028234663852886e+38;g[h+(f<<1<<2)>>2]=o*(r+ +g[t+60>>2]-q- +g[n+60>>2]);g[m+(f<<1<<2)>>2]=-3.4028234663852886e+38;g[j+(f<<1<<2)>>2]=3.4028234663852886e+38}else{x=c[d+32>>2]|0;g[x>>2]=+g[b+596>>2];g[h+(f<<2)>>2]=o*(u+ +g[t+56>>2]-s- +g[n+56>>2]);g[m+(f<<2)>>2]=-3.4028234663852886e+38;g[j+(f<<2)>>2]=3.4028234663852886e+38;g[x+(f<<2)>>2]=+g[b+596>>2];g[h+(f<<1<<2)>>2]=o*(r+ +g[t+60>>2]-q- +g[n+60>>2]);g[m+(f<<1<<2)>>2]=-3.4028234663852886e+38;g[j+(f<<1<<2)>>2]=3.4028234663852886e+38;g[x+(f<<1<<2)>>2]=+g[b+596>>2]}do{if((a[b+526>>0]|0)==0){f=f*3|0}else{t=c[d+12>>2]|0;o=+g[b+456>>2];if(+g[b+444>>2]<o?+g[b+448>>2]<o:0){$h(e,n+4|0,b+300|0);p=+g[e+4>>2];q=+g[e+20>>2];r=+g[e+36>>2];u=+g[e+8>>2];v=+g[e+24>>2];w=+g[e+40>>2];n=c[d+24>>2]|0;x=n+(f*3|0)|0;g[t+(f*3<<2)>>2]=p;g[t+((f*3|0)+1<<2)>>2]=q;g[t+((f*3|0)+2<<2)>>2]=r;g[t+(x<<2)>>2]=u;g[t+(x+1<<2)>>2]=v;g[t+(x+2<<2)>>2]=w;g[k+(f*3<<2)>>2]=-p;g[k+((f*3|0)+1<<2)>>2]=-q;g[k+((f*3|0)+2<<2)>>2]=-r;g[k+(x<<2)>>2]=-u;g[k+(x+1<<2)>>2]=-v;g[k+(x+2<<2)>>2]=-w;s=+g[d>>2]*+g[b+436>>2];h=c[d+28>>2]|0;g[h+(f*3<<2)>>2]=s*(p*+g[b+460>>2]+q*+g[b+464>>2]+r*+g[b+468>>2]);g[h+(x<<2)>>2]=s*(u*+g[b+460>>2]+v*+g[b+464>>2]+w*+g[b+468>>2]);m=c[d+36>>2]|0;g[m+(f*3<<2)>>2]=-3.4028234663852886e+38;j=c[d+40>>2]|0;g[j+(f*3<<2)>>2]=3.4028234663852886e+38;g[m+(x<<2)>>2]=-3.4028234663852886e+38;g[j+(x<<2)>>2]=3.4028234663852886e+38;f=n+x|0;break}w=+g[b+436>>2];u=w*+g[b+460>>2]*w;v=w*w*+g[b+464>>2];w=w*w*+g[b+468>>2];g[t+(f*3<<2)>>2]=u;g[t+((f*3|0)+1<<2)>>2]=v;g[t+((f*3|0)+2<<2)>>2]=w;g[k+(f*3<<2)>>2]=-u;g[k+((f*3|0)+1<<2)>>2]=-v;g[k+((f*3|0)+2<<2)>>2]=-w;g[h+(f*3<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+504>>2];if((l&4|0)!=0){g[(c[d+32>>2]|0)+(f*3<<2)>>2]=+g[b+604>>2]}g[m+(f*3<<2)>>2]=0.0;g[j+(f*3<<2)>>2]=3.4028234663852886e+38;f=f+(f*3|0)|0}}while(0);if((a[b+525>>0]|0)==0){i=e;return}w=+g[b+436>>2];u=w*+g[b+476>>2]*w;v=w*w*+g[b+480>>2];w=w*w*+g[b+484>>2];l=c[d+12>>2]|0;t=c[d+20>>2]|0;g[l+(f<<2)>>2]=u;n=f+1|0;g[l+(n<<2)>>2]=v;x=f+2|0;g[l+(x<<2)>>2]=w;g[t+(f<<2)>>2]=-u;g[t+(n<<2)>>2]=-v;g[t+(x<<2)>>2]=-w;g[h+(f<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+508>>2];if((c[b+592>>2]&4|0)!=0){g[(c[d+32>>2]|0)+(f<<2)>>2]=+g[b+604>>2]}if(!(+g[b+452>>2]>0.0)){g[m+(f<<2)>>2]=-3.4028234663852886e+38;g[j+(f<<2)>>2]=3.4028234663852886e+38;i=e;return}d=m+(f<<2)|0;if(+g[b+508>>2]>0.0){g[d>>2]=0.0;g[j+(f<<2)>>2]=3.4028234663852886e+38;i=e;return}else{g[d>>2]=-3.4028234663852886e+38;g[j+(f<<2)>>2]=0.0;i=e;return}}function hi(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0;d=i;i=i+176|0;if((a[b+527>>0]|0)==0){i=d;return}g[b+36>>2]=0.0;g[b+520>>2]=0.0;g[b+516>>2]=0.0;c[b+576>>2]=0;c[b+580>>2]=0;c[b+584>>2]=0;c[b+588>>2]=0;a:do{if((a[b+524>>0]|0)==0){L=c[b+28>>2]|0;A=+g[b+348>>2];z=+g[b+352>>2];f=+g[b+356>>2];e=A*+g[L+20>>2]+z*+g[L+24>>2]+f*+g[L+28>>2]+ +g[L+56>>2];y=c[b+32>>2]|0;j=+g[b+412>>2];k=+g[y+4>>2];l=+g[b+416>>2];m=+g[y+8>>2];n=+g[b+420>>2];x=+g[y+12>>2];q=+g[y+20>>2];r=+g[y+24>>2];s=+g[y+28>>2];u=+g[y+36>>2];v=+g[y+40>>2];w=+g[y+44>>2];p=+g[y+52>>2];t=+g[y+56>>2];o=+g[y+60>>2];B=j*q+l*r+n*s+t-e;h=A*+g[L+4>>2]+z*+g[L+8>>2]+f*+g[L+12>>2]+ +g[L+52>>2];f=A*+g[L+36>>2]+z*+g[L+40>>2]+f*+g[L+44>>2]+ +g[L+60>>2];z=j*k+l*m+n*x+p-h;A=j*u+l*v+n*w+o-f;if(z*z+B*B+A*A>1.1920928955078125e-7){K=1.0/+Q(+(z*z+B*B+A*A));g[d+128>>2]=z*K;g[d+132>>2]=B*K;g[d+136>>2]=A*K;g[d+140>>2]=0.0;A=A*K;B=B*K;z=z*K}else{g[d+128>>2]=1.0;g[d+132>>2]=0.0;g[d+136>>2]=0.0;g[d+140>>2]=0.0;A=0.0;B=0.0;z=1.0}if(+P(+A)>.7071067690849304){H=A*A+B*B;I=1.0/+Q(+H);g[d+144>>2]=0.0;K=-(I*A);g[d+148>>2]=K;J=I*B;g[d+152>>2]=J;g[d+160>>2]=H*I;g[d+164>>2]=-(z*J);g[d+168>>2]=z*K}else{J=z*z+B*B;K=1.0/+Q(+J);I=-(B*K);g[d+144>>2]=I;H=K*z;g[d+148>>2]=H;g[d+152>>2]=0.0;g[d+160>>2]=-(A*H);g[d+164>>2]=A*I;g[d+168>>2]=J*K}G=k;B=q;C=u;D=m;E=r;J=v;A=x;F=s;K=w;z=p;I=t;H=o;L=0;while(1){M=c[b+28>>2]|0;g[d+80>>2]=+g[M+4>>2];g[d+84>>2]=+g[M+20>>2];g[d+88>>2]=+g[M+36>>2];g[d+92>>2]=0.0;g[d+96>>2]=+g[M+8>>2];g[d+100>>2]=+g[M+24>>2];g[d+104>>2]=+g[M+40>>2];g[d+108>>2]=0.0;g[d+112>>2]=+g[M+12>>2];g[d+116>>2]=+g[M+28>>2];g[d+120>>2]=+g[M+44>>2];g[d+124>>2]=0.0;g[d+32>>2]=G;g[d+36>>2]=B;g[d+40>>2]=C;g[d+44>>2]=0.0;g[d+48>>2]=D;g[d+52>>2]=E;g[d+56>>2]=J;g[d+60>>2]=0.0;g[d+64>>2]=A;g[d+68>>2]=F;g[d+72>>2]=K;g[d+76>>2]=0.0;J=e- +g[M+56>>2];K=f- +g[M+60>>2];g[d+16>>2]=h- +g[M+52>>2];g[d+20>>2]=J;g[d+24>>2]=K;g[d+28>>2]=0.0;g[d>>2]=j*k+l*m+n*x+p-z;g[d+4>>2]=j*q+l*r+n*s+t-I;g[d+8>>2]=j*u+l*v+n*w+o-H;g[d+12>>2]=0.0;ti(b+(L*84|0)+48|0,d+80|0,d+32|0,d+16|0,d,d+128+(L<<4)|0,M+396|0,+g[M+344>>2],y+396|0,+g[y+344>>2]);L=L+1|0;if((L|0)==3){y=b+32|0;break a}y=c[b+32>>2]|0;G=+g[y+4>>2];B=+g[y+20>>2];C=+g[y+36>>2];D=+g[y+8>>2];E=+g[y+24>>2];J=+g[y+40>>2];A=+g[y+12>>2];F=+g[y+28>>2];K=+g[y+44>>2];z=+g[y+52>>2];I=+g[y+56>>2];H=+g[y+60>>2]}}else{y=b+32|0}}while(0);L=c[b+28>>2]|0;M=c[y>>2]|0;fi(b,L+4|0,M+4|0,L+264|0,M+264|0);i=d;return}



function Zi(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0;e=i;i=i+16|0;Mv(1664);s=c[b+232>>2]|0;if((s|0)>0){f=0;do{h=c[(c[b+240>>2]|0)+(f<<2)>>2]|0;if((c[h+204>>2]&3|0)==0){k=+g[h+444>>2];n=+R(+(1.0-k),+d);p=n*+g[h+312>>2];g[h+312>>2]=p;m=n*+g[h+316>>2];g[h+316>>2]=m;n=n*+g[h+320>>2];g[h+320>>2]=n;j=+g[h+448>>2];q=+R(+(1.0-j),+d);l=q*+g[h+328>>2];g[h+328>>2]=l;o=q*+g[h+332>>2];g[h+332>>2]=o;q=q*+g[h+336>>2];g[h+336>>2]=q;do{if((a[h+452>>0]|0)!=0){if(q*q+(l*l+o*o)<+g[h+464>>2]?p*p+m*m+n*n<+g[h+460>>2]:0){r=+g[h+456>>2];g[h+328>>2]=l*r;g[h+332>>2]=r*o;g[h+336>>2]=r*q;g[h+312>>2]=r*p;g[h+316>>2]=r*m;g[h+320>>2]=r*n;p=r*p;m=r*m;n=r*n;l=l*r;o=r*o;q=r*q}r=+Q(+(p*p+m*m+n*n));do{if(r<k){if(r>.004999999888241291){p=p-p*(1.0/r)*.004999999888241291;g[h+312>>2]=p;m=m-m*(1.0/r)*.004999999888241291;g[h+316>>2]=m;n=n-n*(1.0/r)*.004999999888241291;g[h+320>>2]=n;break}else{c[h+312>>2]=0;c[h+316>>2]=0;c[h+320>>2]=0;c[h+324>>2]=0;p=0.0;m=0.0;n=0.0;break}}}while(0);k=+Q(+(l*l+o*o+q*q));if(k<j){if(k>.004999999888241291){g[h+328>>2]=l-l*(1.0/k)*.004999999888241291;g[h+332>>2]=o-o*(1.0/k)*.004999999888241291;g[h+336>>2]=q-q*(1.0/k)*.004999999888241291;break}else{c[h+328>>2]=0;c[h+332>>2]=0;c[h+336>>2]=0;c[h+340>>2]=0;break}}}}while(0);ji(h+4|0,p,m,n,h+328|0,d,h+68|0);s=c[b+232>>2]|0}f=f+1|0}while((f|0)<(s|0))}b=c[4354]|0;s=(c[b+16>>2]|0)+ -1|0;c[b+16>>2]=s;if((s|0)!=0){i=e;return}do{if((c[b+4>>2]|0)!=0){wb(e|0,0)|0;s=c[4340]|0;g[b+8>>2]=+(((c[e+4>>2]|0)-(c[s+4>>2]|0)+(((c[e>>2]|0)-(c[s>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3+ +g[b+8>>2];if((c[b+16>>2]|0)==0){b=c[4354]|0;break}else{i=e;return}}}while(0);c[4354]=c[b+20>>2];i=e;return}function _i(b,d){b=b|0;d=d|0;var e=0,f=0;e=i;if((a[b+273>>0]|0)!=0?(f=c[b+200>>2]|0,(f|0)!=0):0){c[4338]=(c[4338]|0)+1;dw(c[f+ -4>>2]|0)}a[b+273>>0]=0;c[b+200>>2]=d;c[(c[b+196>>2]|0)+8>>2]=d;i=e;return}function $i(a){a=a|0;return c[a+200>>2]|0}function aj(a){a=a|0;return c[a+212>>2]|0}function bj(a,b){a=a|0;b=b|0;return c[(c[a+220>>2]|0)+(b<<2)>>2]|0}function cj(a,b){a=a|0;b=b|0;return c[(c[a+220>>2]|0)+(b<<2)>>2]|0}function dj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0;d=i;Db[c[(c[b>>2]|0)+32>>2]&255](b);e=Qb[c[(c[b>>2]|0)+16>>2]&31](b,104,1)|0;f=c[e+8>>2]|0;h=f+0|0;j=h+104|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(j|0));g[f+88>>2]=+g[a+248>>2];g[f+92>>2]=+g[a+252>>2];g[f+96>>2]=+g[a+256>>2];g[f+100>>2]=+g[a+260>>2];g[f>>2]=+g[a+92>>2];g[f+4>>2]=+g[a+96>>2];g[f+8>>2]=+g[a+100>>2];g[f+12>>2]=+g[a+104>>2];g[f+16>>2]=+g[a+108>>2];g[f+20>>2]=+g[a+116>>2];g[f+24>>2]=+g[a+120>>2];g[f+28>>2]=+g[a+124>>2];g[f+32>>2]=+g[a+128>>2];g[f+36>>2]=+g[a+132>>2];g[f+40>>2]=+g[a+140>>2];g[f+44>>2]=+g[a+144>>2];g[f+48>>2]=+g[a+148>>2];g[f+52>>2]=+g[a+152>>2];g[f+56>>2]=+g[a+168>>2];g[f+60>>2]=+g[a+172>>2];c[f+64>>2]=c[a+112>>2];c[f+68>>2]=c[a+156>>2];c[f+72>>2]=c[a+160>>2];c[f+76>>2]=c[a+164>>2];c[f+80>>2]=c[a+136>>2];Bb[c[(c[b>>2]|0)+20>>2]&31](b,e,1696,1145853764,f);f=c[a+8>>2]|0;if((f|0)>0){e=0;do{h=c[(c[a+16>>2]|0)+(e<<2)>>2]|0;if((c[h+236>>2]&2|0)!=0){j=Hb[c[(c[h>>2]|0)+16>>2]&127](h)|0;j=Qb[c[(c[b>>2]|0)+16>>2]&31](b,j,1)|0;f=Qb[c[(c[h>>2]|0)+20>>2]&31](h,c[j+8>>2]|0,b)|0;Bb[c[(c[b>>2]|0)+20>>2]&31](b,j,f,1497645650,h);f=c[a+8>>2]|0}e=e+1|0}while((e|0)<(f|0))}if((c[a+212>>2]|0)<=0){ln(a,b);j=c[b>>2]|0;j=j+36|0;j=c[j>>2]|0;Db[j&255](b);i=d;return}e=0;do{j=c[(c[a+220>>2]|0)+(e<<2)>>2]|0;f=Hb[c[(c[j>>2]|0)+36>>2]&127](j)|0;f=Qb[c[(c[b>>2]|0)+16>>2]&31](b,f,1)|0;h=Qb[c[(c[j>>2]|0)+40>>2]&31](j,c[f+8>>2]|0,b)|0;Bb[c[(c[b>>2]|0)+20>>2]&31](b,f,h,1397641027,j);e=e+1|0}while((e|0)<(c[a+212>>2]|0));ln(a,b);j=c[b>>2]|0;j=j+36|0;j=c[j>>2]|0;Db[j&255](b);i=d;return}function ej(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function fj(a){a=a|0;return c[a+72>>2]|0}function gj(a){a=a|0;return 2}function hj(a,b){a=a|0;b=b|0;return}function ij(a,b){a=a|0;b=+b;var d=0,e=0,f=0;d=i;i=i+16|0;Mv(1368);if((c[a+280>>2]|0)>0){e=0;do{f=c[(c[a+288>>2]|0)+(e<<2)>>2]|0;kc[c[(c[f>>2]|0)+8>>2]&1](f,a,b);e=e+1|0}while((e|0)<(c[a+280>>2]|0))}a=c[4354]|0;f=(c[a+16>>2]|0)+ -1|0;c[a+16>>2]=f;if((f|0)!=0){i=d;return}do{if((c[a+4>>2]|0)!=0){wb(d|0,0)|0;f=c[4340]|0;g[a+8>>2]=+(((c[d+4>>2]|0)-(c[f+4>>2]|0)+(((c[d>>2]|0)-(c[f>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3+ +g[a+8>>2];if((c[a+16>>2]|0)==0){a=c[4354]|0;break}else{i=d;return}}}while(0);c[4354]=c[a+20>>2];i=d;return}function jj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;while(1){f=c[a+12>>2]|0;g=c[f+(((b+d|0)/2|0)<<2)>>2]|0;l=b;k=d;while(1){h=c[(c[g+28>>2]|0)+208>>2]|0;if((h|0)>-1){while(1){j=c[f+(l<<2)>>2]|0;m=c[(c[j+28>>2]|0)+208>>2]|0;if(!((m|0)>-1)){m=c[(c[j+32>>2]|0)+208>>2]|0}if((m|0)<(h|0)){l=l+1|0}else{break}}}else{m=c[(c[g+32>>2]|0)+208>>2]|0;while(1){j=c[f+(l<<2)>>2]|0;n=c[(c[j+28>>2]|0)+208>>2]|0;if(!((n|0)>-1)){n=c[(c[j+32>>2]|0)+208>>2]|0}if((n|0)<(m|0)){l=l+1|0}else{break}}}if((h|0)>-1){while(1){m=c[f+(k<<2)>>2]|0;n=c[(c[m+28>>2]|0)+208>>2]|0;if(!((n|0)>-1)){n=c[(c[m+32>>2]|0)+208>>2]|0}if((h|0)<(n|0)){k=k+ -1|0}else{break}}}else{h=c[(c[g+32>>2]|0)+208>>2]|0;while(1){m=c[f+(k<<2)>>2]|0;n=c[(c[m+28>>2]|0)+208>>2]|0;if(!((n|0)>-1)){n=c[(c[m+32>>2]|0)+208>>2]|0}if((h|0)<(n|0)){k=k+ -1|0}else{break}}}if((l|0)<=(k|0)){c[f+(l<<2)>>2]=m;c[(c[a+12>>2]|0)+(k<<2)>>2]=j;l=l+1|0;k=k+ -1|0}if((l|0)>(k|0)){break}f=c[a+12>>2]|0}if((k|0)>(b|0)){jj(a,b,k)}if((l|0)<(d|0)){b=l}else{break}}i=e;return}function kj(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function lj(a){a=a|0;return a+12|0}function mj(a){a=a|0;return 1848}function nj(a,b){a=a|0;b=b|0;g[a>>2]=1.0;g[a+4>>2]=1.0;g[a+8>>2]=1.0;g[a+12>>2]=0.0;return}function oj(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function pj(a){a=a|0;return+(+g[a+28>>2]*+g[a+12>>2])}function qj(a){a=a|0;return 52}function rj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;e=i;f=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;h=Zb[c[(c[d>>2]|0)+28>>2]&31](d,f)|0;c[b>>2]=h;if((h|0)!=0){Fb[c[(c[d>>2]|0)+48>>2]&127](d,f)}c[b+4>>2]=c[a+4>>2];g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];i=e;return 1816}function sj(a){a=a|0;return 0}function tj(a,b,c){a=a|0;b=b|0;c=c|0;return}function uj(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function vj(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;e=i;g=c[d>>2]|0;f=c[a+80>>2]|0;if((g|0)==(f|0)){d=0;i=e;return d|0}if((b[a+10>>1]&b[d+4>>1])<<16>>16==0){d=0;i=e;return d|0}if((b[d+6>>1]&b[a+8>>1])<<16>>16==0){d=0;i=e;return d|0}d=c[a+92>>2]|0;d=Qb[c[(c[d>>2]|0)+28>>2]&31](d,f,g)|0;i=e;return d|0}function wj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0;e=i;f=c[b>>2]|0;if((f|0)==(c[a+80>>2]|0)){h=1.0;i=e;return+h}if((c[f+204>>2]&4|0)!=0){h=1.0;i=e;return+h}if((+g[a+28>>2]- +g[a+12>>2])*+g[b+8>>2]+(+g[a+32>>2]- +g[a+16>>2])*+g[b+12>>2]+(+g[a+36>>2]- +g[a+20>>2])*+g[b+16>>2]>=-+g[a+84>>2]){h=1.0;i=e;return+h}g[a+4>>2]=+g[b+40>>2];c[a+76>>2]=f;if(d){c[a+44>>2]=c[b+8>>2];c[a+48>>2]=c[b+12>>2];c[a+52>>2]=c[b+16>>2];c[a+56>>2]=c[b+20>>2]}else{m=+g[b+8>>2];l=+g[b+12>>2];k=+g[b+16>>2];j=m*+g[f+20>>2]+l*+g[f+24>>2]+k*+g[f+28>>2];h=m*+g[f+36>>2]+l*+g[f+40>>2]+k*+g[f+44>>2];g[a+44>>2]=+g[f+4>>2]*m+ +g[f+8>>2]*l+ +g[f+12>>2]*k;g[a+48>>2]=j;g[a+52>>2]=h;g[a+56>>2]=0.0}c[a+60>>2]=c[b+24>>2];c[a+64>>2]=c[b+28>>2];c[a+68>>2]=c[b+32>>2];c[a+72>>2]=c[b+36>>2];m=+g[b+40>>2];i=e;return+m}function xj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0;e=i;g[a+4>>2]=+g[b+40>>2];f=c[b>>2]|0;c[a+76>>2]=f;if(d){c[a+44>>2]=c[b+8>>2];c[a+48>>2]=c[b+12>>2];c[a+52>>2]=c[b+16>>2];c[a+56>>2]=c[b+20>>2];d=a+60|0;a=b+24|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];h=+g[b+40>>2];i=e;return+h}else{m=+g[b+8>>2];l=+g[b+12>>2];k=+g[b+16>>2];j=m*+g[f+20>>2]+l*+g[f+24>>2]+k*+g[f+28>>2];h=m*+g[f+36>>2]+l*+g[f+40>>2]+k*+g[f+44>>2];g[a+44>>2]=+g[f+4>>2]*m+ +g[f+8>>2]*l+ +g[f+12>>2]*k;g[a+48>>2]=j;g[a+52>>2]=h;g[a+56>>2]=0.0;d=a+60|0;a=b+24|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];h=+g[b+40>>2];i=e;return+h}return 0.0}function yj(a,c){a=a|0;c=c|0;var d=0;d=i;if((b[a+10>>1]&b[c+4>>1])<<16>>16==0){a=0;i=d;return a|0}a=(b[c+6>>1]&b[a+8>>1])<<16>>16!=0;i=d;return a|0}function zj(a){a=a|0;return}function Aj(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Bj(a){a=a|0;var b=0;b=i;Ej(a);i=b;return}function Cj(a){a=a|0;var b=0;b=i;Ej(a);if((a|0)==0){i=b;return}dw(a);i=b;return}function Dj(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;if((h|0)<0){r=c[b+8>>2]|0;+$b[c[(c[r>>2]|0)+12>>2]&3](r,d,e,f,g,c[b+12>>2]|0,c[b+16>>2]|0,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);i=j;return}m=c[b+16>>2]|0;a:do{if((m|0)>0){l=c[b+12>>2]|0;o=0;while(1){k=l+(o<<2)|0;p=c[k>>2]|0;n=c[(c[p+28>>2]|0)+208>>2]|0;if((n|0)>-1){p=n}else{p=c[(c[p+32>>2]|0)+208>>2]|0}n=o+1|0;if((p|0)==(h|0)){break a}if((n|0)<(m|0)){o=n}else{o=n;k=0;break}}}else{o=0;k=0}}while(0);if((o|0)<(m|0)){n=c[b+12>>2]|0;l=0;do{q=c[n+(o<<2)>>2]|0;p=c[(c[q+28>>2]|0)+208>>2]|0;if(!((p|0)>-1)){p=c[(c[q+32>>2]|0)+208>>2]|0}l=((p|0)==(h|0))+l|0;o=o+1|0}while((o|0)<(m|0))}else{l=0}m=c[b+4>>2]|0;if((c[m+72>>2]|0)<2){r=c[b+8>>2]|0;+$b[c[(c[r>>2]|0)+12>>2]&3](r,d,e,f,g,k,l,m,c[b+20>>2]|0,c[b+24>>2]|0);i=j;return}if((e|0)>0){o=c[b+32>>2]|0;p=c[b+36>>2]|0;h=0;while(1){m=d+(h<<2)|0;if((o|0)==(p|0)){n=(p|0)==0?1:p<<1;if((p|0)<(n|0)){if((n|0)==0){o=0}else{c[4336]=(c[4336]|0)+1;o=cw((n<<2|3)+16|0)|0;if((o|0)==0){o=0}else{c[(o+19&-16)+ -4>>2]=o;o=o+19&-16}p=c[b+32>>2]|0}if((p|0)>0){r=0;do{q=o+(r<<2)|0;if((q|0)!=0){c[q>>2]=c[(c[b+40>>2]|0)+(r<<2)>>2]}r=r+1|0}while((r|0)!=(p|0))}q=c[b+40>>2]|0;if((q|0)!=0){if((a[b+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[q+ -4>>2]|0);p=c[b+32>>2]|0}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=o;c[b+36>>2]=n;o=p}else{o=p;n=p}}else{n=p}p=(c[b+40>>2]|0)+(o<<2)|0;if((p|0)!=0){c[p>>2]=c[m>>2]}o=o+1|0;c[b+32>>2]=o;h=h+1|0;if((h|0)==(e|0)){break}else{p=n}}}if((g|0)>0){h=c[b+52>>2]|0;n=c[b+56>>2]|0;e=0;while(1){d=f+(e<<2)|0;if((h|0)==(n|0)){m=(n|0)==0?1:n<<1;if((n|0)<(m|0)){if((m|0)==0){h=0}else{c[4336]=(c[4336]|0)+1;h=cw((m<<2|3)+16|0)|0;if((h|0)==0){h=0}else{c[(h+19&-16)+ -4>>2]=h;h=h+19&-16}n=c[b+52>>2]|0}if((n|0)>0){o=0;do{p=h+(o<<2)|0;if((p|0)!=0){c[p>>2]=c[(c[b+60>>2]|0)+(o<<2)>>2]}o=o+1|0}while((o|0)!=(n|0))}o=c[b+60>>2]|0;if((o|0)!=0){if((a[b+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[o+ -4>>2]|0);n=c[b+52>>2]|0}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=h;c[b+56>>2]=m;h=n}else{h=n;m=n}}else{m=n}n=(c[b+60>>2]|0)+(h<<2)|0;if((n|0)!=0){c[n>>2]=c[d>>2]}h=h+1|0;c[b+52>>2]=h;e=e+1|0;if((e|0)==(g|0)){break}else{n=m}}}if((l|0)>0){e=c[b+72>>2]|0;m=c[b+76>>2]|0;f=0;while(1){g=k+(f<<2)|0;if((e|0)==(m|0)){d=(m|0)==0?1:m<<1;if((m|0)<(d|0)){if((d|0)==0){e=0}else{c[4336]=(c[4336]|0)+1;e=cw((d<<2|3)+16|0)|0;if((e|0)==0){e=0}else{c[(e+19&-16)+ -4>>2]=e;e=e+19&-16}m=c[b+72>>2]|0}if((m|0)>0){h=0;do{n=e+(h<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[b+80>>2]|0)+(h<<2)>>2]}h=h+1|0}while((h|0)!=(m|0))}h=c[b+80>>2]|0;if((h|0)!=0){if((a[b+84>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0);m=c[b+72>>2]|0}c[b+80>>2]=0}a[b+84>>0]=1;c[b+80>>2]=e;c[b+76>>2]=d;e=m}else{e=m;d=m}}else{d=m}m=(c[b+80>>2]|0)+(e<<2)|0;if((m|0)!=0){c[m>>2]=c[g>>2]}e=e+1|0;c[b+72>>2]=e;f=f+1|0;if((f|0)==(l|0)){break}else{m=d}}}else{e=c[b+72>>2]|0}if(((c[b+52>>2]|0)+e|0)<=(c[(c[b+4>>2]|0)+72>>2]|0)){i=j;return}Ui(b);i=j;return}function Ej(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=2096;e=c[b+80>>2]|0;if((e|0)!=0){if((a[b+84>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+80>>2]=0}a[b+84>>0]=1;c[b+80>>2]=0;c[b+72>>2]=0;c[b+76>>2]=0;e=c[b+60>>2]|0;if((e|0)!=0){if((a[b+64>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;e=c[b+40>>2]|0;if((e|0)==0){a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;e=b+36|0;c[e>>2]=0;i=d;return}if((a[b+44>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+40>>2]=0;a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;e=b+36|0;c[e>>2]=0;i=d;return}function Fj(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;b=i;i=i+144|0;g[a+36>>2]=0.0;c[b+128>>2]=0;c[b+132>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;d=0;do{e=b+128+(d<<2)|0;g[e>>2]=1.0;h=c[a+28>>2]|0;G=+g[h+4>>2];g[b+80>>2]=G;C=+g[h+20>>2];g[b+84>>2]=C;j=+g[h+36>>2];g[b+88>>2]=j;g[b+92>>2]=0.0;F=+g[h+8>>2];g[b+96>>2]=F;B=+g[h+24>>2];g[b+100>>2]=B;u=+g[h+40>>2];g[b+104>>2]=u;g[b+108>>2]=0.0;E=+g[h+12>>2];g[b+112>>2]=E;A=+g[h+28>>2];g[b+116>>2]=A;n=+g[h+44>>2];g[b+120>>2]=n;g[b+124>>2]=0.0;f=c[a+32>>2]|0;x=+g[f+4>>2];g[b+32>>2]=x;t=+g[f+20>>2];g[b+36>>2]=t;o=+g[f+36>>2];g[b+40>>2]=o;g[b+44>>2]=0.0;w=+g[f+8>>2];g[b+48>>2]=w;s=+g[f+24>>2];g[b+52>>2]=s;m=+g[f+40>>2];g[b+56>>2]=m;g[b+60>>2]=0.0;v=+g[f+12>>2];g[b+64>>2]=v;r=+g[f+28>>2];g[b+68>>2]=r;k=+g[f+44>>2];g[b+72>>2]=k;g[b+76>>2]=0.0;y=+g[a+300>>2];q=+g[a+304>>2];l=+g[a+308>>2];D=+g[h+52>>2];z=+g[h+56>>2];p=+g[h+60>>2];g[b+16>>2]=y*G+q*F+l*E+D-D;g[b+20>>2]=y*C+q*B+l*A+z-z;g[b+24>>2]=y*j+q*u+l*n+p-p;g[b+28>>2]=0.0;p=+g[a+316>>2];n=+g[a+320>>2];l=+g[a+324>>2];u=+g[f+52>>2];q=+g[f+56>>2];j=+g[f+60>>2];g[b>>2]=p*x+n*w+l*v+u-u;g[b+4>>2]=p*t+n*s+l*r+q-q;g[b+8>>2]=p*o+n*m+l*k+j-j;g[b+12>>2]=0.0;h=c[a+28>>2]|0;ti(a+(d*84|0)+48|0,b+80|0,b+32|0,b+16|0,b,b+128|0,h+396|0,+g[h+344>>2],f+396|0,+g[f+344>>2]);g[e>>2]=0.0;d=d+1|0}while((d|0)!=3);i=b;return}function Gj(b,d){b=b|0;d=d|0;var e=0;e=i;if((a[b+344>>0]|0)==0){c[d>>2]=3;c[d+4>>2]=3;i=e;return}else{c[d>>2]=0;c[d+4>>2]=0;i=e;return}}function Hj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0;d=i;h=c[a+28>>2]|0;p=c[a+32>>2]|0;e=c[b+8>>2]|0;g[e>>2]=1.0;n=c[b+24>>2]|0;g[e+(n+1<<2)>>2]=1.0;g[e+((n<<1)+2<<2)>>2]=1.0;q=+g[a+300>>2];r=+g[a+304>>2];m=+g[a+308>>2];f=+g[h+4>>2]*q+ +g[h+8>>2]*r+ +g[h+12>>2]*m;k=q*+g[h+20>>2]+r*+g[h+24>>2]+m*+g[h+28>>2];m=q*+g[h+36>>2]+r*+g[h+40>>2]+m*+g[h+44>>2];e=c[b+12>>2]|0;g[e>>2]=0.0;g[e+4>>2]=m;g[e+8>>2]=-k;g[e+12>>2]=0.0;g[e+(n<<2)>>2]=-m;g[e+(n+1<<2)>>2]=0.0;g[e+(n+2<<2)>>2]=f;g[e+(n+3<<2)>>2]=0.0;g[e+(n<<1<<2)>>2]=k;g[e+((n<<1|1)<<2)>>2]=-f;g[e+((n<<1)+2<<2)>>2]=0.0;g[e+((n<<1)+3<<2)>>2]=0.0;e=c[b+16>>2]|0;g[e>>2]=-1.0;g[e+(n+1<<2)>>2]=-1.0;g[e+((n<<1)+2<<2)>>2]=-1.0;r=+g[a+316>>2];q=+g[a+320>>2];l=+g[a+324>>2];o=+g[p+4>>2]*r+ +g[p+8>>2]*q+ +g[p+12>>2]*l;j=r*+g[p+20>>2]+q*+g[p+24>>2]+l*+g[p+28>>2];l=r*+g[p+36>>2]+q*+g[p+40>>2]+l*+g[p+44>>2];e=c[b+20>>2]|0;g[e>>2]=0.0;g[e+4>>2]=-l;g[e+8>>2]=j;g[e+12>>2]=0.0;g[e+(n<<2)>>2]=l;g[e+(n+1<<2)>>2]=0.0;g[e+(n+2<<2)>>2]=-o;g[e+(n+3<<2)>>2]=0.0;g[e+(n<<1<<2)>>2]=-j;g[e+((n<<1|1)<<2)>>2]=o;g[e+((n<<1)+2<<2)>>2]=0.0;g[e+((n<<1)+3<<2)>>2]=0.0;n=c[a+332>>2]|0;r=+g[((n&1|0)==0?b+4|0:a+336|0)>>2]*+g[b>>2];e=c[b+24>>2]|0;s=c[b+28>>2]|0;g[s>>2]=r*(o+ +g[p+52>>2]-f- +g[h+52>>2]);g[s+(e<<2)>>2]=r*(j+ +g[p+56>>2]-k- +g[h+56>>2]);g[s+(e<<1<<2)>>2]=r*(l+ +g[p+60>>2]-m- +g[h+60>>2]);if((n&2|0)!=0){s=c[b+32>>2]|0;g[s>>2]=+g[a+340>>2];g[s+(e<<2)>>2]=+g[a+340>>2];g[s+(e<<1<<2)>>2]=+g[a+340>>2]}f=+g[a+356>>2];if(f>0.0){g[c[b+36>>2]>>2]=-f;g[c[b+40>>2]>>2]=f;j=+g[a+356>>2]}else{j=f}if(j>0.0){g[(c[b+36>>2]|0)+(e<<2)>>2]=-f;g[(c[b+40>>2]|0)+(e<<2)>>2]=f;j=+g[a+356>>2]}if(!(j>0.0)){s=a+352|0;r=+g[s>>2];s=b+52|0;g[s>>2]=r;i=d;return}g[(c[b+36>>2]|0)+(e<<1<<2)>>2]=-f;g[(c[b+40>>2]|0)+(e<<1<<2)>>2]=f;s=a+352|0;r=+g[s>>2];s=b+52|0;g[s>>2]=r;i=d;return}function Ij(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0;f=i;if(!((e|0)==-1)){i=f;return}if((b|0)==2|(b|0)==1){g[a+336>>2]=d;c[a+332>>2]=c[a+332>>2]|1;i=f;return}else if((b|0)==4|(b|0)==3){g[a+340>>2]=d;c[a+332>>2]=c[a+332>>2]|2;i=f;return}else{i=f;return}}function Jj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0;d=i;do{if((c|0)==-1){if((b|0)==2|(b|0)==1){e=+g[a+336>>2];break}else if((b|0)==4|(b|0)==3){e=+g[a+340>>2];break}else{e=3.4028234663852886e+38;break}}else{e=3.4028234663852886e+38}}while(0);i=d;return+e}function Kj(a){a=a|0;return}function Lj(a){a=a|0;var b=0;b=i;if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function Mj(a){a=a|0;return 84}function Nj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;uk(a,b,c)|0;g[b+52>>2]=+g[a+300>>2];g[b+56>>2]=+g[a+304>>2];g[b+60>>2]=+g[a+308>>2];g[b+64>>2]=+g[a+312>>2];g[b+68>>2]=+g[a+316>>2];g[b+72>>2]=+g[a+320>>2];g[b+76>>2]=+g[a+324>>2];g[b+80>>2]=+g[a+328>>2];i=d;return 2320}function Oj(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;e=i;c[b+236>>2]=2;c[b+312>>2]=0;c[b+316>>2]=0;c[b+320>>2]=0;c[b+324>>2]=0;c[b+328>>2]=0;c[b+332>>2]=0;c[b+336>>2]=0;c[b+340>>2]=0;g[b+544>>2]=1.0;g[b+548>>2]=1.0;g[b+552>>2]=1.0;g[b+556>>2]=0.0;g[b+348>>2]=1.0;g[b+352>>2]=1.0;g[b+356>>2]=1.0;l=b+360|0;k=l+36|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(k|0));c[b+412>>2]=0;c[b+416>>2]=0;c[b+420>>2]=0;c[b+424>>2]=0;c[b+428>>2]=0;c[b+432>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;h=+g[d+92>>2];f=+g[d+96>>2];if(h<0.0){h=0.0}else{h=h>1.0?1.0:h}g[b+444>>2]=h;if(f<0.0){f=0.0}else{f=f>1.0?1.0:f}g[b+448>>2]=f;g[b+472>>2]=+g[d+112>>2];g[b+476>>2]=+g[d+116>>2];k=c[d+4>>2]|0;c[b+480>>2]=k;c[b+608>>2]=0;c[b+612>>2]=0;a[b+452>>0]=a[d+120>>0]|0;g[b+456>>2]=+g[d+124>>2];g[b+460>>2]=+g[d+128>>2];g[b+464>>2]=+g[d+132>>2];g[b+468>>2]=+g[d+136>>2];if((k|0)==0){c[b+4>>2]=c[d+8>>2];c[b+8>>2]=c[d+12>>2];c[b+12>>2]=c[d+16>>2];c[b+16>>2]=c[d+20>>2];c[b+20>>2]=c[d+24>>2];c[b+24>>2]=c[d+28>>2];c[b+28>>2]=c[d+32>>2];c[b+32>>2]=c[d+36>>2];c[b+36>>2]=c[d+40>>2];c[b+40>>2]=c[d+44>>2];c[b+44>>2]=c[d+48>>2];c[b+48>>2]=c[d+52>>2];c[b+52>>2]=c[d+56>>2];c[b+56>>2]=c[d+60>>2];c[b+60>>2]=c[d+64>>2];c[b+64>>2]=c[d+68>>2];m=b+20|0;k=b+36|0;n=b+52|0;l=b+4|0}else{Fb[c[(c[k>>2]|0)+8>>2]&127](k,b+4|0);m=b+20|0;k=b+36|0;n=b+52|0;l=b+4|0}c[b+68>>2]=c[l+0>>2];c[b+72>>2]=c[l+4>>2];c[b+76>>2]=c[l+8>>2];c[b+80>>2]=c[l+12>>2];c[b+84>>2]=c[m+0>>2];c[b+88>>2]=c[m+4>>2];c[b+92>>2]=c[m+8>>2];c[b+96>>2]=c[m+12>>2];c[b+100>>2]=c[k+0>>2];c[b+104>>2]=c[k+4>>2];c[b+108>>2]=c[k+8>>2];c[b+112>>2]=c[k+12>>2];c[b+116>>2]=c[n+0>>2];c[b+120>>2]=c[n+4>>2];c[b+124>>2]=c[n+8>>2];c[b+128>>2]=c[n+12>>2];c[b+132>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;c[b+144>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;c[b+156>>2]=0;c[b+160>>2]=0;g[b+224>>2]=+g[d+100>>2];g[b+232>>2]=+g[d+104>>2];g[b+228>>2]=+g[d+108>>2];Fb[c[(c[b>>2]|0)+12>>2]&127](b,c[d+72>>2]|0);k=c[602]|0;c[602]=k+1;c[b+508>>2]=k;h=+g[d>>2];k=c[b+204>>2]|0;if(h==0.0){c[b+204>>2]=k|1;g[b+344>>2]=0.0;f=0.0}else{c[b+204>>2]=k&-2;g[b+344>>2]=1.0/h;f=1.0/h}j=h*+g[b+384>>2];o=h*+g[b+388>>2];g[b+364>>2]=h*+g[b+380>>2];g[b+368>>2]=j;g[b+372>>2]=o;g[b+376>>2]=0.0;h=+g[d+76>>2];if(h!=0.0){h=1.0/h}else{h=0.0}j=+g[d+80>>2];if(j!=0.0){j=1.0/j}else{j=0.0}o=+g[d+84>>2];if(o!=0.0){o=1.0/o}else{o=0.0}g[b+396>>2]=h;g[b+400>>2]=j;g[b+404>>2]=o;g[b+408>>2]=0.0;D=f*+g[b+352>>2];x=f*+g[b+356>>2];g[b+560>>2]=f*+g[b+348>>2];g[b+564>>2]=D;g[b+568>>2]=x;g[b+572>>2]=0.0;x=+g[b+4>>2];D=x*h;w=+g[b+8>>2];C=w*j;v=+g[b+12>>2];B=v*o;u=+g[b+20>>2];A=h*u;t=+g[b+24>>2];z=j*t;s=+g[b+28>>2];y=o*s;r=+g[b+36>>2];q=h*r;p=+g[b+40>>2];f=j*p;j=+g[b+44>>2];h=o*j;g[b+264>>2]=x*D+w*C+v*B;g[b+268>>2]=D*u+C*t+B*s;g[b+272>>2]=D*r+C*p+B*j;g[b+276>>2]=0.0;g[b+280>>2]=x*A+w*z+v*y;g[b+284>>2]=u*A+t*z+s*y;g[b+288>>2]=A*r+z*p+y*j;g[b+292>>2]=0.0;g[b+296>>2]=x*q+w*f+v*h;g[b+300>>2]=u*q+t*f+s*h;g[b+304>>2]=r*q+p*f+j*h;g[b+308>>2]=0.0;c[b+504>>2]=0;c[b+512>>2]=0;c[b+516>>2]=0;c[b+520>>2]=0;c[b+524>>2]=0;c[b+528>>2]=0;c[b+532>>2]=0;c[b+536>>2]=0;c[b+540>>2]=0;h=+g[b+344>>2];j=h*+g[b+352>>2];o=h*+g[b+356>>2];g[b+560>>2]=+g[b+348>>2]*h;g[b+564>>2]=j;g[b+568>>2]=o;l=b+572|0;k=l+36|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(k|0));i=e;return}function Pj(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,h=0.0,i=0;i=c[a+204>>2]|0;if(b==0.0){c[a+204>>2]=i|1;g[a+344>>2]=0.0;e=0.0}else{c[a+204>>2]=i&-2;g[a+344>>2]=1.0/b;e=1.0/b}f=+g[a+384>>2]*b;h=+g[a+388>>2]*b;g[a+364>>2]=+g[a+380>>2]*b;g[a+368>>2]=f;g[a+372>>2]=h;g[a+376>>2]=0.0;b=+g[d>>2];if(b!=0.0){b=1.0/b}else{b=0.0}f=+g[d+4>>2];if(f!=0.0){f=1.0/f}else{f=0.0}h=+g[d+8>>2];if(h!=0.0){h=1.0/h}else{h=0.0}g[a+396>>2]=b;g[a+400>>2]=f;g[a+404>>2]=h;g[a+408>>2]=0.0;f=e*+g[a+352>>2];h=e*+g[a+356>>2];g[a+560>>2]=+g[a+348>>2]*e;g[a+564>>2]=f;g[a+568>>2]=h;g[a+572>>2]=0.0;return}function Qj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;j=i;if((c[a+204>>2]&2|0)==0){c[a+68>>2]=c[b+0>>2];c[a+72>>2]=c[b+4>>2];c[a+76>>2]=c[b+8>>2];c[a+80>>2]=c[b+12>>2];c[a+84>>2]=c[b+16>>2];c[a+88>>2]=c[b+20>>2];c[a+92>>2]=c[b+24>>2];c[a+96>>2]=c[b+28>>2];c[a+100>>2]=c[b+32>>2];c[a+104>>2]=c[b+36>>2];c[a+108>>2]=c[b+40>>2];c[a+112>>2]=c[b+44>>2];c[a+116>>2]=c[b+48>>2];c[a+120>>2]=c[b+52>>2];c[a+124>>2]=c[b+56>>2];c[a+128>>2]=c[b+60>>2];e=a+4|0;m=b;l=a+20|0;h=b+16|0;d=a+36|0;k=b+32|0;f=a+52|0;b=b+48|0}else{c[a+68>>2]=c[a+4>>2];c[a+72>>2]=c[a+8>>2];c[a+76>>2]=c[a+12>>2];c[a+80>>2]=c[a+16>>2];c[a+84>>2]=c[a+20>>2];c[a+88>>2]=c[a+24>>2];c[a+92>>2]=c[a+28>>2];c[a+96>>2]=c[a+32>>2];c[a+100>>2]=c[a+36>>2];c[a+104>>2]=c[a+40>>2];c[a+108>>2]=c[a+44>>2];c[a+112>>2]=c[a+48>>2];c[a+116>>2]=c[a+52>>2];c[a+120>>2]=c[a+56>>2];c[a+124>>2]=c[a+60>>2];c[a+128>>2]=c[a+64>>2];e=a+4|0;m=b;l=a+20|0;h=b+16|0;d=a+36|0;k=b+32|0;f=a+52|0;b=b+48|0}c[a+132>>2]=c[a+312>>2];c[a+136>>2]=c[a+316>>2];c[a+140>>2]=c[a+320>>2];c[a+144>>2]=c[a+324>>2];c[a+148>>2]=c[a+328>>2];c[a+152>>2]=c[a+332>>2];c[a+156>>2]=c[a+336>>2];c[a+160>>2]=c[a+340>>2];c[e+0>>2]=c[m+0>>2];c[e+4>>2]=c[m+4>>2];c[e+8>>2]=c[m+8>>2];c[e+12>>2]=c[m+12>>2];c[l+0>>2]=c[h+0>>2];c[l+4>>2]=c[h+4>>2];c[l+8>>2]=c[h+8>>2];c[l+12>>2]=c[h+12>>2];c[d+0>>2]=c[k+0>>2];c[d+4>>2]=c[k+4>>2];c[d+8>>2]=c[k+8>>2];c[d+12>>2]=c[k+12>>2];c[f+0>>2]=c[b+0>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];y=+g[a+4>>2];s=+g[a+396>>2];x=+g[a+8>>2];q=+g[a+400>>2];w=+g[a+12>>2];o=+g[a+404>>2];v=+g[a+20>>2];u=+g[a+24>>2];t=+g[a+28>>2];r=+g[a+36>>2];p=+g[a+40>>2];n=+g[a+44>>2];g[a+264>>2]=y*y*s+x*x*q+w*w*o;g[a+268>>2]=y*s*v+x*q*u+w*o*t;g[a+272>>2]=y*s*r+x*q*p+w*o*n;g[a+276>>2]=0.0;g[a+280>>2]=y*s*v+x*q*u+w*o*t;g[a+284>>2]=v*s*v+u*q*u+t*o*t;g[a+288>>2]=s*v*r+q*u*p+o*t*n;g[a+292>>2]=0.0;g[a+296>>2]=y*s*r+x*q*p+w*o*n;g[a+300>>2]=v*s*r+u*q*p+t*o*n;g[a+304>>2]=r*s*r+p*q*p+n*o*n;g[a+308>>2]=0.0;i=j;return}function Rj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;a:do{if((c[d+236>>2]&2|0)!=0?(f=c[b+488>>2]|0,(f|0)>0):0){b=c[b+496>>2]|0;g=0;while(1){h=c[b+(g<<2)>>2]|0;if((a[h+20>>0]|0)!=0){if((c[h+28>>2]|0)==(d|0)){d=0;break a}if((c[h+32>>2]|0)==(d|0)){d=0;break a}}g=g+1|0;if((g|0)>=(f|0)){d=1;break}}}else{d=1}}while(0);i=e;return d|0}function Sj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;h=c[b+488>>2]|0;a:do{if((h|0)>0){k=c[b+496>>2]|0;j=0;while(1){g=j+1|0;if((c[k+(j<<2)>>2]|0)==(d|0)){break}if((g|0)<(h|0)){j=g}else{break a}}if((j|0)!=(h|0)){k=b+256|0;c[k>>2]=1;i=e;return}}}while(0);if((h|0)==(c[b+492>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[b+488>>2]|0}if((h|0)>0){k=0;do{j=g+(k<<2)|0;if((j|0)!=0){c[j>>2]=c[(c[b+496>>2]|0)+(k<<2)>>2]}k=k+1|0}while((k|0)!=(h|0))}j=c[b+496>>2]|0;if((j|0)!=0){if((a[b+500>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[b+488>>2]|0}c[b+496>>2]=0}a[b+500>>0]=1;c[b+496>>2]=g;c[b+492>>2]=f}f=(c[b+496>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=d}c[b+488>>2]=h+1;k=b+256|0;c[k>>2]=1;i=e;return}function Tj(a){a=a|0;return 488}function Uj(a,b,e){a=a|0;b=b|0;e=e|0;var f=0;f=i;Mm(a,b,e)|0;g[b+256>>2]=+g[a+264>>2];g[b+260>>2]=+g[a+268>>2];g[b+264>>2]=+g[a+272>>2];g[b+268>>2]=+g[a+276>>2];g[b+272>>2]=+g[a+280>>2];g[b+276>>2]=+g[a+284>>2];g[b+280>>2]=+g[a+288>>2];g[b+284>>2]=+g[a+292>>2];g[b+288>>2]=+g[a+296>>2];g[b+292>>2]=+g[a+300>>2];g[b+296>>2]=+g[a+304>>2];g[b+300>>2]=+g[a+308>>2];g[b+304>>2]=+g[a+312>>2];g[b+308>>2]=+g[a+316>>2];g[b+312>>2]=+g[a+320>>2];g[b+316>>2]=+g[a+324>>2];g[b+320>>2]=+g[a+328>>2];g[b+324>>2]=+g[a+332>>2];g[b+328>>2]=+g[a+336>>2];g[b+332>>2]=+g[a+340>>2];g[b+448>>2]=+g[a+344>>2];g[b+336>>2]=+g[a+544>>2];g[b+340>>2]=+g[a+548>>2];g[b+344>>2]=+g[a+552>>2];g[b+348>>2]=+g[a+556>>2];g[b+352>>2]=+g[a+348>>2];g[b+356>>2]=+g[a+352>>2];g[b+360>>2]=+g[a+356>>2];g[b+364>>2]=+g[a+360>>2];g[b+368>>2]=+g[a+364>>2];g[b+372>>2]=+g[a+368>>2];g[b+376>>2]=+g[a+372>>2];g[b+380>>2]=+g[a+376>>2];g[b+384>>2]=+g[a+380>>2];g[b+388>>2]=+g[a+384>>2];g[b+392>>2]=+g[a+388>>2];g[b+396>>2]=+g[a+392>>2];g[b+400>>2]=+g[a+396>>2];g[b+404>>2]=+g[a+400>>2];g[b+408>>2]=+g[a+404>>2];g[b+412>>2]=+g[a+408>>2];g[b+416>>2]=+g[a+412>>2];g[b+420>>2]=+g[a+416>>2];g[b+424>>2]=+g[a+420>>2];g[b+428>>2]=+g[a+424>>2];g[b+432>>2]=+g[a+428>>2];g[b+436>>2]=+g[a+432>>2];g[b+440>>2]=+g[a+436>>2];g[b+444>>2]=+g[a+440>>2];g[b+452>>2]=+g[a+444>>2];g[b+456>>2]=+g[a+448>>2];c[b+484>>2]=d[a+452>>0]|0;g[b+460>>2]=+g[a+456>>2];g[b+464>>2]=+g[a+460>>2];g[b+468>>2]=+g[a+464>>2];g[b+472>>2]=+g[a+468>>2];g[b+476>>2]=+g[a+472>>2];g[b+480>>2]=+g[a+476>>2];i=f;return 2416}function Vj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[(c[b>>2]|0)+16>>2]|0;f=Hb[c[(c[a>>2]|0)+16>>2]&127](a)|0;f=Qb[e&31](b,f,1)|0;e=Qb[c[(c[a>>2]|0)+20>>2]&31](a,c[f+8>>2]|0,b)|0;Bb[c[(c[b>>2]|0)+20>>2]&31](b,f,e,1497645650,a);i=d;return}function Wj(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=2376;e=c[b+496>>2]|0;if((e|0)!=0){if((a[b+500>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+496>>2]=0}a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;i=d;return}function Xj(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=2376;e=c[b+496>>2]|0;if((e|0)==0){a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;e=c[4338]|0;e=e+1|0;c[4338]=e;e=b+ -4|0;e=c[e>>2]|0;dw(e);i=d;return}if((a[b+500>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;e=c[4338]|0;e=e+1|0;c[4338]=e;e=b+ -4|0;e=c[e>>2]|0;dw(e);i=d;return}function Yj(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+192>>2]=b;c[a+200>>2]=b;return}function Zj(a){a=a|0;var b=0;b=i;_j(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}function _j(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=2488;e=c[b+176>>2]|0;if((e|0)!=0){if((a[b+180>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+176>>2]=0}a[b+180>>0]=1;c[b+176>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;e=c[b+156>>2]|0;if((e|0)!=0){if((a[b+160>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+156>>2]=0}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;e=c[b+136>>2]|0;if((e|0)!=0){if((a[b+140>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;e=c[b+116>>2]|0;if((e|0)!=0){if((a[b+120>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;e=c[b+96>>2]|0;if((e|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;e=c[b+76>>2]|0;if((e|0)!=0){if((a[b+80>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;e=c[b+56>>2]|0;if((e|0)!=0){if((a[b+60>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;e=c[b+36>>2]|0;if((e|0)!=0){if((a[b+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;e=c[b+16>>2]|0;if((e|0)==0){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;e=b+12|0;c[e>>2]=0;i=d;return}if((a[b+20>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;e=b+12|0;c[e>>2]=0;i=d;return}function $j(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0;j=i;k=+g[d+100>>2];h=+g[d+16>>2];e=+g[d+20>>2];f=+g[d+24>>2];l=+g[d+108>>2];l=+g[d+112>>2]-k*+g[d+116>>2]-(h*+g[a+64>>2]+e*+g[a+68>>2]+f*+g[a+72>>2]+(+g[d>>2]*+g[a+80>>2]+ +g[d+4>>2]*+g[a+84>>2]+ +g[d+8>>2]*+g[a+88>>2]))*l-l*(+g[d+48>>2]*+g[b+64>>2]+ +g[d+52>>2]*+g[b+68>>2]+ +g[d+56>>2]*+g[b+72>>2]+(+g[d+32>>2]*+g[b+80>>2]+ +g[d+36>>2]*+g[b+84>>2]+ +g[d+40>>2]*+g[b+88>>2]));m=+g[d+120>>2];do{if(!(k+l<m)){m=+g[d+124>>2];if(k+l>m){g[d+100>>2]=m;l=m-k;break}else{g[d+100>>2]=k+l;break}}else{g[d+100>>2]=m;l=m-k}}while(0);if((c[a+240>>2]|0)!=0){m=l*+g[a+132>>2]*e*+g[a+116>>2];k=l*+g[a+136>>2]*f*+g[a+120>>2];g[a+64>>2]=+g[a+112>>2]*l*+g[a+128>>2]*h+ +g[a+64>>2];g[a+68>>2]=m+ +g[a+68>>2];g[a+72>>2]=k+ +g[a+72>>2];k=l*+g[a+100>>2]*+g[d+68>>2];m=l*+g[a+104>>2]*+g[d+72>>2];g[a+80>>2]=l*+g[a+96>>2]*+g[d+64>>2]+ +g[a+80>>2];g[a+84>>2]=k+ +g[a+84>>2];g[a+88>>2]=m+ +g[a+88>>2]}if((c[b+240>>2]|0)==0){i=j;return}m=l*+g[b+132>>2]*+g[d+52>>2]*+g[b+116>>2];k=l*+g[b+136>>2]*+g[d+56>>2]*+g[b+120>>2];g[b+64>>2]=+g[b+112>>2]*l*+g[b+128>>2]*+g[d+48>>2]+ +g[b+64>>2];g[b+68>>2]=m+ +g[b+68>>2];g[b+72>>2]=k+ +g[b+72>>2];k=l*+g[b+100>>2]*+g[d+84>>2];m=l*+g[b+104>>2]*+g[d+88>>2];g[b+80>>2]=l*+g[b+96>>2]*+g[d+80>>2]+ +g[b+80>>2];g[b+84>>2]=k+ +g[b+84>>2];g[b+88>>2]=m+ +g[b+88>>2];i=j;return}function ak(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0;j=i;m=+g[d+100>>2];h=+g[d+16>>2];e=+g[d+20>>2];f=+g[d+24>>2];n=+g[d+108>>2];n=+g[d+112>>2]-m*+g[d+116>>2]-(h*+g[a+64>>2]+e*+g[a+68>>2]+f*+g[a+72>>2]+(+g[d>>2]*+g[a+80>>2]+ +g[d+4>>2]*+g[a+84>>2]+ +g[d+8>>2]*+g[a+88>>2]))*n-n*(+g[d+48>>2]*+g[b+64>>2]+ +g[d+52>>2]*+g[b+68>>2]+ +g[d+56>>2]*+g[b+72>>2]+(+g[d+32>>2]*+g[b+80>>2]+ +g[d+36>>2]*+g[b+84>>2]+ +g[d+40>>2]*+g[b+88>>2]));l=+g[d+120>>2];if(m+n<l){k=l-m}else{k=n;l=m+n}g[d+100>>2]=l;if((c[a+240>>2]|0)!=0){n=k*+g[a+132>>2]*e*+g[a+116>>2];m=k*+g[a+136>>2]*f*+g[a+120>>2];g[a+64>>2]=+g[a+112>>2]*k*+g[a+128>>2]*h+ +g[a+64>>2];g[a+68>>2]=n+ +g[a+68>>2];g[a+72>>2]=m+ +g[a+72>>2];m=k*+g[a+100>>2]*+g[d+68>>2];n=k*+g[a+104>>2]*+g[d+72>>2];g[a+80>>2]=k*+g[a+96>>2]*+g[d+64>>2]+ +g[a+80>>2];g[a+84>>2]=m+ +g[a+84>>2];g[a+88>>2]=n+ +g[a+88>>2]}if((c[b+240>>2]|0)==0){i=j;return}n=k*+g[b+132>>2]*+g[d+52>>2]*+g[b+116>>2];m=k*+g[b+136>>2]*+g[d+56>>2]*+g[b+120>>2];g[b+64>>2]=+g[b+112>>2]*k*+g[b+128>>2]*+g[d+48>>2]+ +g[b+64>>2];g[b+68>>2]=n+ +g[b+68>>2];g[b+72>>2]=m+ +g[b+72>>2];m=k*+g[b+100>>2]*+g[d+84>>2];n=k*+g[b+104>>2]*+g[d+88>>2];g[b+80>>2]=k*+g[b+96>>2]*+g[d+80>>2]+ +g[b+80>>2];g[b+84>>2]=m+ +g[b+84>>2];g[b+88>>2]=n+ +g[b+88>>2];i=j;return}function bk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0;j=i;l=+g[d+128>>2];if(!(l!=0.0)){i=j;return}c[618]=(c[618]|0)+1;k=+g[d+96>>2];f=+g[d+16>>2];h=+g[d+20>>2];e=+g[d+24>>2];n=+g[d+108>>2];n=l-k*+g[d+116>>2]-(f*+g[a+144>>2]+h*+g[a+148>>2]+e*+g[a+152>>2]+(+g[d>>2]*+g[a+160>>2]+ +g[d+4>>2]*+g[a+164>>2]+ +g[d+8>>2]*+g[a+168>>2]))*n-n*(+g[d+48>>2]*+g[b+144>>2]+ +g[d+52>>2]*+g[b+148>>2]+ +g[d+56>>2]*+g[b+152>>2]+(+g[d+32>>2]*+g[b+160>>2]+ +g[d+36>>2]*+g[b+164>>2]+ +g[d+40>>2]*+g[b+168>>2]));m=+g[d+120>>2];if(k+n<m){l=m-k}else{l=n;m=k+n}g[d+96>>2]=m;if((c[a+240>>2]|0)!=0){n=l*+g[a+132>>2]*h*+g[a+116>>2];m=l*+g[a+136>>2]*e*+g[a+120>>2];g[a+144>>2]=+g[a+112>>2]*l*+g[a+128>>2]*f+ +g[a+144>>2];g[a+148>>2]=n+ +g[a+148>>2];g[a+152>>2]=m+ +g[a+152>>2];m=l*+g[a+100>>2]*+g[d+68>>2];n=l*+g[a+104>>2]*+g[d+72>>2];g[a+160>>2]=l*+g[a+96>>2]*+g[d+64>>2]+ +g[a+160>>2];g[a+164>>2]=m+ +g[a+164>>2];g[a+168>>2]=n+ +g[a+168>>2]}if((c[b+240>>2]|0)==0){i=j;return}n=l*+g[b+132>>2]*+g[d+52>>2]*+g[b+116>>2];m=l*+g[b+136>>2]*+g[d+56>>2]*+g[b+120>>2];g[b+144>>2]=+g[b+112>>2]*l*+g[b+128>>2]*+g[d+48>>2]+ +g[b+144>>2];g[b+148>>2]=n+ +g[b+148>>2];g[b+152>>2]=m+ +g[b+152>>2];m=l*+g[b+100>>2]*+g[d+84>>2];n=l*+g[b+104>>2]*+g[d+88>>2];g[b+160>>2]=l*+g[b+96>>2]*+g[d+80>>2]+ +g[b+160>>2];g[b+164>>2]=m+ +g[b+164>>2];g[b+168>>2]=n+ +g[b+168>>2];i=j;return}function ck(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0;e=i;if(!((b|0)!=0?(c[b+236>>2]&2|0)!=0:0)){b=0}f=(b|0)==0;c[a+64>>2]=0;c[a+68>>2]=0;c[a+72>>2]=0;c[a+76>>2]=0;c[a+80>>2]=0;c[a+84>>2]=0;c[a+88>>2]=0;c[a+92>>2]=0;c[a+144>>2]=0;c[a+148>>2]=0;c[a+152>>2]=0;c[a+156>>2]=0;c[a+160>>2]=0;c[a+164>>2]=0;c[a+168>>2]=0;c[a+172>>2]=0;if(f){g[a>>2]=1.0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;g[a+20>>2]=1.0;c[a+24>>2]=0;c[a+28>>2]=0;c[a+32>>2]=0;c[a+36>>2]=0;g[a+40>>2]=1.0;c[a+44>>2]=0;c[a+48>>2]=0;c[a+52>>2]=0;c[a+56>>2]=0;c[a+60>>2]=0;c[a+240>>2]=0;c[a+128>>2]=0;c[a+132>>2]=0;c[a+136>>2]=0;c[a+140>>2]=0;g[a+96>>2]=1.0;g[a+100>>2]=1.0;g[a+104>>2]=1.0;g[a+108>>2]=0.0;g[a+112>>2]=1.0;g[a+116>>2]=1.0;g[a+120>>2]=1.0;g[a+124>>2]=0.0;b=a+176|0;a=b+64|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));i=e;return}else{f=b+4|0;c[a+0>>2]=c[f+0>>2];c[a+4>>2]=c[f+4>>2];c[a+8>>2]=c[f+8>>2];c[a+12>>2]=c[f+12>>2];f=b+20|0;c[a+16>>2]=c[f+0>>2];c[a+20>>2]=c[f+4>>2];c[a+24>>2]=c[f+8>>2];c[a+28>>2]=c[f+12>>2];f=b+36|0;c[a+32>>2]=c[f+0>>2];c[a+36>>2]=c[f+4>>2];c[a+40>>2]=c[f+8>>2];c[a+44>>2]=c[f+12>>2];f=b+52|0;c[a+48>>2]=c[f+0>>2];c[a+52>>2]=c[f+4>>2];c[a+56>>2]=c[f+8>>2];c[a+60>>2]=c[f+12>>2];f=b+344|0;m=+g[f>>2];n=b+348|0;l=m*+g[b+352>>2];k=m*+g[b+356>>2];g[a+128>>2]=m*+g[n>>2];g[a+132>>2]=l;g[a+136>>2]=k;g[a+140>>2]=0.0;c[a+240>>2]=b;o=b+544|0;c[a+96>>2]=c[o+0>>2];c[a+100>>2]=c[o+4>>2];c[a+104>>2]=c[o+8>>2];c[a+108>>2]=c[o+12>>2];c[a+112>>2]=c[n+0>>2];c[a+116>>2]=c[n+4>>2];c[a+120>>2]=c[n+8>>2];c[a+124>>2]=c[n+12>>2];n=b+312|0;c[a+176>>2]=c[n+0>>2];c[a+180>>2]=c[n+4>>2];c[a+184>>2]=c[n+8>>2];c[a+188>>2]=c[n+12>>2];n=b+328|0;c[a+192>>2]=c[n+0>>2];c[a+196>>2]=c[n+4>>2];c[a+200>>2]=c[n+8>>2];c[a+204>>2]=c[n+12>>2];k=+g[f>>2];l=k*+g[b+416>>2]*d;m=k*+g[b+420>>2]*d;g[a+208>>2]=k*+g[b+412>>2]*d;g[a+212>>2]=l;g[a+216>>2]=m;g[a+220>>2]=0.0;m=+g[b+428>>2];l=+g[b+432>>2];k=+g[b+436>>2];j=(m*+g[b+268>>2]+l*+g[b+284>>2]+k*+g[b+300>>2])*d;h=(m*+g[b+272>>2]+l*+g[b+288>>2]+k*+g[b+304>>2])*d;g[a+224>>2]=(+g[b+264>>2]*m+ +g[b+280>>2]*l+ +g[b+296>>2]*k)*d;g[a+228>>2]=j;g[a+232>>2]=h;g[a+236>>2]=0.0;i=e;return}}function dk(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;d=i;if((a|0)==0){i=d;return}if((c[a+180>>2]&1|0)==0){i=d;return}r=+g[a+4>>2];t=+g[b>>2];o=+g[a+20>>2];s=+g[b+4>>2];l=+g[a+36>>2];e=+g[b+8>>2];q=+g[a+8>>2];n=+g[a+24>>2];j=+g[a+40>>2];p=+g[a+12>>2];m=+g[a+28>>2];f=+g[a+44>>2];k=(r*t+o*s+l*e)*+g[a+164>>2];h=(t*q+s*n+e*j)*+g[a+168>>2];e=(t*p+s*m+e*f)*+g[a+172>>2];g[b>>2]=r*k+q*h+p*e;g[b+4>>2]=o*k+n*h+m*e;g[b+8>>2]=l*k+j*h+f*e;g[b+12>>2]=0.0;i=d;return}function ek(b,d,e,f,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0.0,H=0.0,I=0.0;p=i;q=c[b+68>>2]|0;if((q|0)==(c[b+72>>2]|0)?(r=(q|0)==0?1:q<<1,(q|0)<(r|0)):0){if((r|0)==0){x=q;E=0}else{c[4336]=(c[4336]|0)+1;x=cw((r*152|3)+16|0)|0;if((x|0)==0){E=0}else{c[(x+19&-16)+ -4>>2]=x;E=x+19&-16}x=c[b+68>>2]|0}if((x|0)>0){F=0;do{mw(E+(F*152|0)|0,(c[b+76>>2]|0)+(F*152|0)|0,152)|0;F=F+1|0}while((F|0)!=(x|0))}x=c[b+76>>2]|0;if((x|0)!=0){if((a[b+80>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[x+ -4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=E;c[b+72>>2]=r;r=c[b+68>>2]|0}else{r=q}c[b+68>>2]=r+1;r=c[b+76>>2]|0;c[r+(q*152|0)+140>>2]=h;h=c[b+16>>2]|0;x=c[h+(e*244|0)+240>>2]|0;b=c[h+(f*244|0)+240>>2]|0;c[r+(q*152|0)+144>>2]=e;c[r+(q*152|0)+148>>2]=f;t=+g[j+84>>2];g[r+(q*152|0)+104>>2]=t;c[r+(q*152|0)+132>>2]=0;g[r+(q*152|0)+100>>2]=0.0;g[r+(q*152|0)+96>>2]=0.0;if((x|0)!=0){c[r+(q*152|0)+16>>2]=c[d+0>>2];c[r+(q*152|0)+20>>2]=c[d+4>>2];c[r+(q*152|0)+24>>2]=c[d+8>>2];c[r+(q*152|0)+28>>2]=c[d+12>>2];B=+g[k+4>>2];C=+g[r+(q*152|0)+24>>2];D=+g[k+8>>2];w=+g[r+(q*152|0)+20>>2];y=+g[r+(q*152|0)+16>>2];v=+g[k>>2];g[r+(q*152|0)>>2]=B*C-D*w;g[r+(q*152|0)+4>>2]=D*y-C*v;g[r+(q*152|0)+8>>2]=w*v-B*y;g[r+(q*152|0)+12>>2]=0.0;z=((B*C-D*w)*+g[x+280>>2]+(D*y-C*v)*+g[x+284>>2]+(w*v-B*y)*+g[x+288>>2])*+g[x+548>>2];A=((B*C-D*w)*+g[x+296>>2]+(D*y-C*v)*+g[x+300>>2]+(w*v-B*y)*+g[x+304>>2])*+g[x+552>>2];g[r+(q*152|0)+64>>2]=((B*C-D*w)*+g[x+264>>2]+ +g[x+268>>2]*(D*y-C*v)+(w*v-B*y)*+g[x+272>>2])*+g[x+544>>2];g[r+(q*152|0)+68>>2]=z;g[r+(q*152|0)+72>>2]=A;g[r+(q*152|0)+76>>2]=0.0;w=B*C-D*w}else{c[r+(q*152|0)+64>>2]=0;c[r+(q*152|0)+68>>2]=0;c[r+(q*152|0)+72>>2]=0;c[r+(q*152|0)+76>>2]=0;c[r+(q*152|0)+0>>2]=0;c[r+(q*152|0)+4>>2]=0;c[r+(q*152|0)+8>>2]=0;c[r+(q*152|0)+12>>2]=0;c[r+(q*152|0)+16>>2]=0;c[r+(q*152|0)+20>>2]=0;c[r+(q*152|0)+24>>2]=0;c[r+(q*152|0)+28>>2]=0;w=0.0}if((b|0)!=0){C=-+g[d>>2];s=-+g[d+4>>2];v=-+g[d+8>>2];g[r+(q*152|0)+48>>2]=C;g[r+(q*152|0)+52>>2]=s;g[r+(q*152|0)+56>>2]=v;g[r+(q*152|0)+60>>2]=0.0;G=+g[l+4>>2];B=+g[l+8>>2];D=+g[l>>2];g[r+(q*152|0)+32>>2]=G*v-B*s;g[r+(q*152|0)+36>>2]=B*C-D*v;g[r+(q*152|0)+40>>2]=D*s-G*C;g[r+(q*152|0)+44>>2]=0.0;y=((G*v-B*s)*+g[b+264>>2]+ +g[b+268>>2]*(B*C-D*v)+(D*s-G*C)*+g[b+272>>2])*+g[b+544>>2];z=((G*v-B*s)*+g[b+280>>2]+(B*C-D*v)*+g[b+284>>2]+(D*s-G*C)*+g[b+288>>2])*+g[b+548>>2];A=((G*v-B*s)*+g[b+296>>2]+(B*C-D*v)*+g[b+300>>2]+(D*s-G*C)*+g[b+304>>2])*+g[b+552>>2];g[r+(q*152|0)+80>>2]=y;g[r+(q*152|0)+84>>2]=z;g[r+(q*152|0)+88>>2]=A;g[r+(q*152|0)+92>>2]=0.0;u=D*s-G*C;s=G*v-B*s;v=B*C-D*v}else{c[r+(q*152|0)+80>>2]=0;c[r+(q*152|0)+84>>2]=0;c[r+(q*152|0)+88>>2]=0;c[r+(q*152|0)+92>>2]=0;c[r+(q*152|0)+32>>2]=0;c[r+(q*152|0)+36>>2]=0;c[r+(q*152|0)+40>>2]=0;c[r+(q*152|0)+44>>2]=0;c[r+(q*152|0)+48>>2]=0;c[r+(q*152|0)+52>>2]=0;c[r+(q*152|0)+56>>2]=0;c[r+(q*152|0)+60>>2]=0;u=0.0;y=0.0;z=0.0;A=0.0;s=0.0;v=0.0}if((x|0)!=0){G=+g[r+(q*152|0)+68>>2];H=+g[k+8>>2];I=+g[r+(q*152|0)+72>>2];C=+g[k+4>>2];B=+g[k>>2];D=+g[r+(q*152|0)+64>>2];B=+g[x+344>>2]+((G*H-I*C)*+g[d>>2]+(I*B-H*D)*+g[d+4>>2]+(C*D-G*B)*+g[d+8>>2])}else{B=0.0}if((b|0)!=0){H=-y;y=-z;C=-A;D=+g[l+8>>2];G=+g[l+4>>2];I=+g[l>>2];y=+g[b+344>>2]+((D*y-G*C)*+g[d>>2]+(I*C-D*H)*+g[d+4>>2]+(G*H-I*y)*+g[d+8>>2])}else{y=0.0}m=m/(B+y);g[r+(q*152|0)+108>>2]=m;if((x|0)!=0){A=+g[h+(e*244|0)+176>>2]+ +g[h+(e*244|0)+208>>2];y=+g[h+(e*244|0)+184>>2]+ +g[h+(e*244|0)+216>>2];z=+g[h+(e*244|0)+180>>2]+ +g[h+(e*244|0)+212>>2]}else{A=0.0;y=0.0;z=0.0}if((x|0)!=0){C=+g[h+(e*244|0)+192>>2];B=+g[h+(e*244|0)+196>>2];D=+g[h+(e*244|0)+200>>2]}else{C=0.0;B=0.0;D=0.0}w=A*+g[r+(q*152|0)+16>>2]+z*+g[r+(q*152|0)+20>>2]+y*+g[r+(q*152|0)+24>>2]+(C*w+B*+g[r+(q*152|0)+4>>2]+D*+g[r+(q*152|0)+8>>2]);if((b|0)!=0){y=+g[h+(f*244|0)+176>>2]+ +g[h+(f*244|0)+208>>2];z=+g[h+(f*244|0)+184>>2]+ +g[h+(f*244|0)+216>>2];A=+g[h+(f*244|0)+180>>2]+ +g[h+(f*244|0)+212>>2]}else{y=0.0;z=0.0;A=0.0}y=y*+g[r+(q*152|0)+48>>2]+A*+g[r+(q*152|0)+52>>2]+z*+g[r+(q*152|0)+56>>2];if((b|0)==0){H=0.0;I=0.0;G=0.0;G=G*s;H=H*v;H=G+H;I=I*u;I=H+I;I=y+I;I=w+I;I=n-I;I=m*I;F=r+(q*152|0)+112|0;g[F>>2]=I;F=r+(q*152|0)+116|0;g[F>>2]=o;I=-t;F=r+(q*152|0)+120|0;g[F>>2]=I;F=r+(q*152|0)+124|0;g[F>>2]=t;i=p;return}H=+g[h+(f*244|0)+196>>2];I=+g[h+(f*244|0)+200>>2];G=+g[h+(f*244|0)+192>>2];G=G*s;H=H*v;H=G+H;I=I*u;I=H+I;I=y+I;I=w+I;I=n-I;I=m*I;F=r+(q*152|0)+112|0;g[F>>2]=I;F=r+(q*152|0)+116|0;g[F>>2]=o;I=-t;F=r+(q*152|0)+120|0;g[F>>2]=I;F=r+(q*152|0)+124|0;g[F>>2]=t;i=p;return}function fk(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0;l=i;k=c[b+88>>2]|0;if((k|0)==(c[b+92>>2]|0)?(m=(k|0)==0?1:k<<1,(k|0)<(m|0)):0){if((m|0)==0){B=k;u=0}else{c[4336]=(c[4336]|0)+1;u=cw((m*152|3)+16|0)|0;if((u|0)==0){u=0}else{c[(u+19&-16)+ -4>>2]=u;u=u+19&-16}B=c[b+88>>2]|0}if((B|0)>0){C=0;do{mw(u+(C*152|0)|0,(c[b+96>>2]|0)+(C*152|0)|0,152)|0;C=C+1|0}while((C|0)!=(B|0))}B=c[b+96>>2]|0;if((B|0)!=0){if((a[b+100>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[B+ -4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=u;c[b+92>>2]=m;m=c[b+88>>2]|0}else{m=k}c[b+88>>2]=m+1;m=c[b+96>>2]|0;c[m+(k*152|0)+140>>2]=h;c[m+(k*152|0)+16>>2]=0;c[m+(k*152|0)+20>>2]=0;c[m+(k*152|0)+24>>2]=0;c[m+(k*152|0)+28>>2]=0;g[m+(k*152|0)+48>>2]=-0.0;g[m+(k*152|0)+52>>2]=-0.0;g[m+(k*152|0)+56>>2]=-0.0;g[m+(k*152|0)+60>>2]=0.0;b=c[b+16>>2]|0;u=c[b+(e*244|0)+240>>2]|0;h=c[b+(f*244|0)+240>>2]|0;c[m+(k*152|0)+144>>2]=e;c[m+(k*152|0)+148>>2]=f;n=+g[j+88>>2];g[m+(k*152|0)+104>>2]=n;c[m+(k*152|0)+132>>2]=0;g[m+(k*152|0)+100>>2]=0.0;g[m+(k*152|0)+96>>2]=0.0;o=-+g[d>>2];p=-+g[d+4>>2];q=-+g[d+8>>2];g[m+(k*152|0)>>2]=o;g[m+(k*152|0)+4>>2]=p;g[m+(k*152|0)+8>>2]=q;g[m+(k*152|0)+12>>2]=0.0;if((u|0)!=0){s=(+g[u+264>>2]*o+ +g[u+268>>2]*p+ +g[u+272>>2]*q)*+g[u+544>>2];t=(+g[u+296>>2]*o+ +g[u+300>>2]*p+ +g[u+304>>2]*q)*+g[u+552>>2];r=(+g[u+280>>2]*o+ +g[u+284>>2]*p+ +g[u+288>>2]*q)*+g[u+548>>2]}else{s=0.0;t=0.0;r=0.0}g[m+(k*152|0)+64>>2]=s;g[m+(k*152|0)+68>>2]=r;g[m+(k*152|0)+72>>2]=t;g[m+(k*152|0)+76>>2]=0.0;s=+g[d>>2];t=+g[d+4>>2];r=+g[d+8>>2];A=+g[d+12>>2];g[m+(k*152|0)+32>>2]=s;g[m+(k*152|0)+36>>2]=t;g[m+(k*152|0)+40>>2]=r;g[m+(k*152|0)+44>>2]=A;if((h|0)!=0){x=(s*+g[h+264>>2]+t*+g[h+268>>2]+r*+g[h+272>>2])*+g[h+544>>2];v=(s*+g[h+296>>2]+t*+g[h+300>>2]+r*+g[h+304>>2])*+g[h+552>>2];w=(s*+g[h+280>>2]+t*+g[h+284>>2]+r*+g[h+288>>2])*+g[h+548>>2]}else{x=0.0;v=0.0;w=0.0}g[m+(k*152|0)+80>>2]=x;g[m+(k*152|0)+84>>2]=w;g[m+(k*152|0)+88>>2]=v;g[m+(k*152|0)+92>>2]=0.0;if((u|0)!=0){w=+g[u+296>>2]*o+ +g[u+300>>2]*p+ +g[u+304>>2]*q;x=+g[u+280>>2]*o+ +g[u+284>>2]*p+ +g[u+288>>2]*q;A=+g[u+264>>2]*o+ +g[u+268>>2]*p+ +g[u+272>>2]*q}else{w=0.0;x=0.0;A=0.0}if((h|0)!=0){y=s*+g[h+296>>2]+t*+g[h+300>>2]+r*+g[h+304>>2];z=s*+g[h+280>>2]+t*+g[h+284>>2]+r*+g[h+288>>2];v=+g[h+264>>2]*s+ +g[h+268>>2]*t+ +g[h+272>>2]*r}else{y=0.0;z=0.0;v=0.0}v=1.0/(A*o+x*p+w*q+0.0+(v*s+z*t+y*r));g[m+(k*152|0)+108>>2]=v;if((u|0)!=0){w=+g[b+(e*244|0)+192>>2];y=+g[b+(e*244|0)+196>>2];x=+g[b+(e*244|0)+200>>2];z=(+g[b+(e*244|0)+176>>2]+ +g[b+(e*244|0)+208>>2])*0.0+(+g[b+(e*244|0)+180>>2]+ +g[b+(e*244|0)+212>>2])*0.0+(+g[b+(e*244|0)+184>>2]+ +g[b+(e*244|0)+216>>2])*0.0}else{w=0.0;y=0.0;x=0.0;z=0.0}o=z+(w*o+y*p+x*q);if((h|0)==0){x=0.0;y=0.0;A=0.0;z=-0.0;x=x*s;y=y*t;y=x+y;A=A*r;A=y+A;A=z+A;A=o+A;A=0.0-A;A=v*A;C=m+(k*152|0)+112|0;g[C>>2]=A;C=m+(k*152|0)+116|0;g[C>>2]=0.0;A=-n;C=m+(k*152|0)+120|0;g[C>>2]=A;C=m+(k*152|0)+124|0;g[C>>2]=n;i=l;return}x=+g[b+(f*244|0)+192>>2];y=+g[b+(f*244|0)+196>>2];A=+g[b+(f*244|0)+200>>2];z=(+g[b+(f*244|0)+176>>2]+ +g[b+(f*244|0)+208>>2])*-0.0+(+g[b+(f*244|0)+180>>2]+ +g[b+(f*244|0)+212>>2])*-0.0+(+g[b+(f*244|0)+184>>2]+ +g[b+(f*244|0)+216>>2])*-0.0;x=x*s;y=y*t;y=x+y;A=A*r;A=y+A;A=z+A;A=o+A;A=0.0-A;A=v*A;C=m+(k*152|0)+112|0;g[C>>2]=A;C=m+(k*152|0)+116|0;g[C>>2]=0.0;A=-n;C=m+(k*152|0)+120|0;g[C>>2]=A;C=m+(k*152|0)+124|0;g[C>>2]=n;i=l;return}function gk(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0;e=i;i=i+496|0;f=c[b+212>>2]|0;if((f|0)>-1){b=f;i=e;return b|0}do{if((c[b+236>>2]&2|0)!=0){if(!(+g[b+344>>2]!=0.0)?(c[b+204>>2]&2|0)==0:0){break}f=c[a+8>>2]|0;jw(e+244|0,0,244)|0;ck(hk(a+4|0,e+244|0)|0,b,d);c[b+212>>2]=f;b=f;i=e;return b|0}}while(0);f=c[a+188>>2]|0;if((f|0)>=0){b=f;i=e;return b|0}c[a+188>>2]=c[a+8>>2];jw(e|0,0,244)|0;ck(hk(a+4|0,e)|0,0,d);b=c[a+188>>2]|0;i=e;return b|0}function hk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=c[b+4>>2]|0;if((f|0)==(c[b+8>>2]|0)?(g=(f|0)==0?1:f<<1,(f|0)<(g|0)):0){if((g|0)==0){h=f;j=0}else{c[4336]=(c[4336]|0)+1;h=cw((g*244|3)+16|0)|0;if((h|0)==0){j=0}else{c[(h+19&-16)+ -4>>2]=h;j=h+19&-16}h=c[b+4>>2]|0}if((h|0)>0){k=0;do{m=j+(k*244|0)|0;l=c[b+12>>2]|0;n=l+(k*244|0)|0;c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=j+(k*244|0)+16|0;n=l+(k*244|0)+16|0;c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=j+(k*244|0)+32|0;n=l+(k*244|0)+32|0;c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=j+(k*244|0)+48|0;n=l+(k*244|0)+48|0;c[m+0>>2]=c[n+0>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];mw(j+(k*244|0)+64|0,l+(k*244|0)+64|0,180)|0;k=k+1|0}while((k|0)!=(h|0))}h=c[b+12>>2]|0;if((h|0)!=0){if((a[b+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=j;c[b+8>>2]=g;g=c[b+4>>2]|0}else{g=f}c[b+4>>2]=g+1;n=c[b+12>>2]|0;c[n+(f*244|0)+0>>2]=c[d+0>>2];c[n+(f*244|0)+4>>2]=c[d+4>>2];c[n+(f*244|0)+8>>2]=c[d+8>>2];c[n+(f*244|0)+12>>2]=c[d+12>>2];c[n+(f*244|0)+16>>2]=c[d+16>>2];c[n+(f*244|0)+20>>2]=c[d+20>>2];c[n+(f*244|0)+24>>2]=c[d+24>>2];c[n+(f*244|0)+28>>2]=c[d+28>>2];c[n+(f*244|0)+32>>2]=c[d+32>>2];c[n+(f*244|0)+36>>2]=c[d+36>>2];c[n+(f*244|0)+40>>2]=c[d+40>>2];c[n+(f*244|0)+44>>2]=c[d+44>>2];c[n+(f*244|0)+48>>2]=c[d+48>>2];c[n+(f*244|0)+52>>2]=c[d+52>>2];c[n+(f*244|0)+56>>2]=c[d+56>>2];c[n+(f*244|0)+60>>2]=c[d+60>>2];mw(n+(f*244|0)+64|0,d+64|0,180)|0;i=e;return(c[b+12>>2]|0)+(f*244|0)|0}function ik(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0.0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0,N=0,O=0,R=0.0,S=0,T=0.0,U=0.0,V=0.0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0;w=i;i=i+80|0;if((e|0)<=0){i=w;return}q=0;do{h=c[d+(q<<2)>>2]|0;u=c[h+740>>2]|0;v=c[h+744>>2]|0;r=gk(b,u,+g[f+12>>2])|0;s=gk(b,v,+g[f+12>>2])|0;t=c[b+16>>2]|0;do{if((t+(r*244|0)|0)!=0){if((+g[t+(r*244|0)+128>>2]==0.0?+g[t+(r*244|0)+132>>2]==0.0:0)?+g[t+(r*244|0)+136>>2]==0.0:0){if((t+(s*244|0)|0)==0){break}if((+g[t+(s*244|0)+128>>2]==0.0?+g[t+(s*244|0)+132>>2]==0.0:0)?+g[t+(s*244|0)+136>>2]==0.0:0){break}}z=c[h+748>>2]|0;if((z|0)>0){y=0;L=1;do{A=h+(y*184|0)+4|0;S=h+(y*184|0)+84|0;if(+g[S>>2]<=+g[h+756>>2]){z=c[b+28>>2]|0;if((z|0)==(c[b+32>>2]|0)?(m=(z|0)==0?1:z<<1,(z|0)<(m|0)):0){if((m|0)==0){B=z;D=0}else{c[4336]=(c[4336]|0)+1;B=cw((m*152|3)+16|0)|0;if((B|0)==0){D=0}else{c[(B+19&-16)+ -4>>2]=B;D=B+19&-16}B=c[b+28>>2]|0}if((B|0)>0){E=0;do{mw(D+(E*152|0)|0,(c[b+36>>2]|0)+(E*152|0)|0,152)|0;E=E+1|0}while((E|0)!=(B|0))}B=c[b+36>>2]|0;if((B|0)!=0){if((a[b+40>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[B+ -4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=D;c[b+32>>2]=m;B=c[b+28>>2]|0}else{B=z}c[b+28>>2]=B+1;B=c[b+36>>2]|0;N=(c[u+236>>2]&2|0)==0?0:u;M=(c[v+236>>2]&2|0)==0?0:v;c[B+(z*152|0)+144>>2]=r;c[B+(z*152|0)+148>>2]=s;c[B+(z*152|0)+132>>2]=A;Y=+g[h+(y*184|0)+52>>2]- +g[u+52>>2];_=+g[h+(y*184|0)+56>>2]- +g[u+56>>2];Z=+g[h+(y*184|0)+60>>2]- +g[u+60>>2];g[w+64>>2]=Y;g[w+68>>2]=_;g[w+72>>2]=Z;g[w+76>>2]=0.0;T=+g[h+(y*184|0)+36>>2]- +g[v+52>>2];V=+g[h+(y*184|0)+40>>2]- +g[v+56>>2];U=+g[h+(y*184|0)+44>>2]- +g[v+60>>2];g[w+48>>2]=T;g[w+52>>2]=V;g[w+56>>2]=U;g[w+60>>2]=0.0;if((c[t+(r*244|0)+240>>2]|0)==0){C=0.0;J=0.0;H=0.0}else{ga=+g[t+(r*244|0)+192>>2]+ +g[t+(r*244|0)+224>>2];H=+g[t+(r*244|0)+196>>2]+ +g[t+(r*244|0)+228>>2];J=+g[t+(r*244|0)+200>>2]+ +g[t+(r*244|0)+232>>2];C=+g[t+(r*244|0)+176>>2]+ +g[t+(r*244|0)+208>>2]+(H*Z-J*_);J=+g[t+(r*244|0)+180>>2]+ +g[t+(r*244|0)+212>>2]+(J*Y-ga*Z);H=+g[t+(r*244|0)+184>>2]+ +g[t+(r*244|0)+216>>2]+(ga*_-H*Y)}if((c[t+(s*244|0)+240>>2]|0)==0){K=0.0;G=0.0;I=0.0}else{ga=+g[t+(s*244|0)+192>>2]+ +g[t+(s*244|0)+224>>2];I=+g[t+(s*244|0)+196>>2]+ +g[t+(s*244|0)+228>>2];G=+g[t+(s*244|0)+200>>2]+ +g[t+(s*244|0)+232>>2];K=+g[t+(s*244|0)+176>>2]+ +g[t+(s*244|0)+208>>2]+(I*U-G*V);G=+g[t+(s*244|0)+180>>2]+ +g[t+(s*244|0)+212>>2]+(G*T-ga*U);I=+g[t+(s*244|0)+184>>2]+ +g[t+(s*244|0)+216>>2]+(ga*V-I*T)}C=C-K;G=J-G;H=H-I;E=h+(y*184|0)+68|0;K=+g[E>>2];F=h+(y*184|0)+72|0;J=+g[F>>2];D=h+(y*184|0)+76|0;I=+g[D>>2];O=c[b+16>>2]|0;W=c[O+(r*244|0)+240>>2]|0;X=c[O+(s*244|0)+240>>2]|0;if((W|0)!=0){ea=((_*I-Z*J)*+g[W+264>>2]+(Z*K-I*Y)*+g[W+268>>2]+(J*Y-_*K)*+g[W+272>>2])*+g[W+544>>2];ga=((_*I-Z*J)*+g[W+280>>2]+(Z*K-I*Y)*+g[W+284>>2]+(J*Y-_*K)*+g[W+288>>2])*+g[W+548>>2];fa=((_*I-Z*J)*+g[W+296>>2]+(Z*K-I*Y)*+g[W+300>>2]+(J*Y-_*K)*+g[W+304>>2])*+g[W+552>>2]}else{ea=0.0;ga=0.0;fa=0.0}g[B+(z*152|0)+64>>2]=ea;g[B+(z*152|0)+68>>2]=ga;g[B+(z*152|0)+72>>2]=fa;g[B+(z*152|0)+76>>2]=0.0;aa=+g[D>>2];R=+g[F>>2];$=+g[E>>2];if((X|0)!=0){ca=(+g[X+264>>2]*-(V*aa-U*R)+ +g[X+268>>2]*-(U*$-aa*T)+ +g[X+272>>2]*-(R*T-V*$))*+g[X+544>>2];ba=(+g[X+280>>2]*-(V*aa-U*R)+ +g[X+284>>2]*-(U*$-aa*T)+ +g[X+288>>2]*-(R*T-V*$))*+g[X+548>>2];da=(+g[X+296>>2]*-(V*aa-U*R)+ +g[X+300>>2]*-(U*$-aa*T)+ +g[X+304>>2]*-(R*T-V*$))*+g[X+552>>2]}else{ca=0.0;ba=0.0;da=0.0}g[B+(z*152|0)+80>>2]=ca;g[B+(z*152|0)+84>>2]=ba;g[B+(z*152|0)+88>>2]=da;g[B+(z*152|0)+92>>2]=0.0;if((W|0)!=0){ea=+g[W+344>>2]+((ga*Z-fa*_)*+g[E>>2]+(fa*Y-Z*ea)*+g[F>>2]+(_*ea-ga*Y)*+g[D>>2])}else{ea=0.0}if((X|0)!=0){ga=-ca;ba=-ba;fa=-da;ba=+g[X+344>>2]+((U*ba-V*fa)*+g[E>>2]+(T*fa-U*ga)*+g[F>>2]+(V*ga-T*ba)*+g[D>>2])}else{ba=0.0}g[B+(z*152|0)+108>>2]=1.0/(ea+ba);if((W|0)!=0){c[B+(z*152|0)+16>>2]=c[E+0>>2];c[B+(z*152|0)+20>>2]=c[E+4>>2];c[B+(z*152|0)+24>>2]=c[E+8>>2];c[B+(z*152|0)+28>>2]=c[E+12>>2];g[B+(z*152|0)>>2]=_*I-Z*J;g[B+(z*152|0)+4>>2]=Z*K-I*Y;g[B+(z*152|0)+8>>2]=J*Y-_*K;g[B+(z*152|0)+12>>2]=0.0}else{c[B+(z*152|0)+0>>2]=0;c[B+(z*152|0)+4>>2]=0;c[B+(z*152|0)+8>>2]=0;c[B+(z*152|0)+12>>2]=0;c[B+(z*152|0)+16>>2]=0;c[B+(z*152|0)+20>>2]=0;c[B+(z*152|0)+24>>2]=0;c[B+(z*152|0)+28>>2]=0}if((X|0)!=0){fa=-+g[F>>2];ga=-+g[D>>2];g[B+(z*152|0)+48>>2]=-+g[E>>2];g[B+(z*152|0)+52>>2]=fa;g[B+(z*152|0)+56>>2]=ga;g[B+(z*152|0)+60>>2]=0.0;g[B+(z*152|0)+32>>2]=-(V*aa-U*R);g[B+(z*152|0)+36>>2]=-(U*$-aa*T);g[B+(z*152|0)+40>>2]=-(R*T-V*$);g[B+(z*152|0)+44>>2]=0.0}else{c[B+(z*152|0)+32>>2]=0;c[B+(z*152|0)+36>>2]=0;c[B+(z*152|0)+40>>2]=0;c[B+(z*152|0)+44>>2]=0;c[B+(z*152|0)+48>>2]=0;c[B+(z*152|0)+52>>2]=0;c[B+(z*152|0)+56>>2]=0;c[B+(z*152|0)+60>>2]=0}R=+g[S>>2]+ +g[f+56>>2];if((W|0)!=0){ea=+g[W+332>>2];fa=+g[W+336>>2];ga=+g[W+328>>2];$=ea*Z-fa*_+ +g[W+312>>2];_=_*ga-ea*Y+ +g[W+320>>2];Z=+g[W+316>>2]+(fa*Y-Z*ga)}else{$=0.0;_=0.0;Z=0.0}if((X|0)!=0){ea=+g[X+332>>2];fa=+g[X+336>>2];ga=+g[X+328>>2];Y=ea*U-fa*V+ +g[X+312>>2];V=V*ga-ea*T+ +g[X+320>>2];T=+g[X+316>>2]+(fa*T-U*ga)}else{Y=0.0;V=0.0;T=0.0}T=+g[E>>2]*($-Y)+(Z-T)*+g[F>>2]+(_-V)*+g[D>>2];g[B+(z*152|0)+104>>2]=+g[h+(y*184|0)+88>>2];T=T*+g[h+(y*184|0)+96>>2];T=!(T>=-0.0)?-T:0.0;if((c[f+64>>2]&4|0)!=0){U=+g[h+(y*184|0)+124>>2]*+g[f+60>>2];g[B+(z*152|0)+100>>2]=U;if((W|0)!=0?(c[O+(r*244|0)+240>>2]|0)!=0:0){ga=U*+g[O+(r*244|0)+132>>2]*+g[B+(z*152|0)+20>>2]*+g[W+352>>2]*+g[O+(r*244|0)+116>>2];fa=U*+g[O+(r*244|0)+136>>2]*+g[B+(z*152|0)+24>>2]*+g[W+356>>2]*+g[O+(r*244|0)+120>>2];g[O+(r*244|0)+64>>2]=+g[O+(r*244|0)+112>>2]*U*+g[O+(r*244|0)+128>>2]*+g[B+(z*152|0)+16>>2]*+g[W+348>>2]+ +g[O+(r*244|0)+64>>2];g[O+(r*244|0)+68>>2]=ga+ +g[O+(r*244|0)+68>>2];g[O+(r*244|0)+72>>2]=fa+ +g[O+(r*244|0)+72>>2];fa=U*+g[O+(r*244|0)+100>>2]*+g[B+(z*152|0)+68>>2];ga=U*+g[O+(r*244|0)+104>>2]*+g[B+(z*152|0)+72>>2];g[O+(r*244|0)+80>>2]=U*+g[O+(r*244|0)+96>>2]*+g[B+(z*152|0)+64>>2]+ +g[O+(r*244|0)+80>>2];g[O+(r*244|0)+84>>2]=fa+ +g[O+(r*244|0)+84>>2];g[O+(r*244|0)+88>>2]=ga+ +g[O+(r*244|0)+88>>2]}if((X|0)!=0?(x=+g[B+(z*152|0)+100>>2],(c[O+(s*244|0)+240>>2]|0)!=0):0){ga=+g[B+(z*152|0)+88>>2];fa=+g[B+(z*152|0)+84>>2];ea=+g[B+(z*152|0)+80>>2];ca=x*+g[O+(s*244|0)+132>>2]*+g[B+(z*152|0)+52>>2]*+g[X+352>>2]*+g[O+(s*244|0)+116>>2];da=x*+g[O+(s*244|0)+136>>2]*+g[B+(z*152|0)+56>>2]*+g[X+356>>2]*+g[O+(s*244|0)+120>>2];g[O+(s*244|0)+64>>2]=+g[O+(s*244|0)+112>>2]*x*+g[O+(s*244|0)+128>>2]*+g[B+(z*152|0)+48>>2]*+g[X+348>>2]+ +g[O+(s*244|0)+64>>2];g[O+(s*244|0)+68>>2]=ca+ +g[O+(s*244|0)+68>>2];g[O+(s*244|0)+72>>2]=da+ +g[O+(s*244|0)+72>>2];fa=fa*+g[O+(s*244|0)+100>>2]*-x;ga=ga*+g[O+(s*244|0)+104>>2]*-x;g[O+(s*244|0)+80>>2]=+g[O+(s*244|0)+80>>2]-ea*+g[O+(s*244|0)+96>>2]*-x;g[O+(s*244|0)+84>>2]=+g[O+(s*244|0)+84>>2]-fa;g[O+(s*244|0)+88>>2]=+g[O+(s*244|0)+88>>2]-ga}}else{g[B+(z*152|0)+100>>2]=0.0}g[B+(z*152|0)+96>>2]=0.0;if((c[O+(r*244|0)+240>>2]|0)==0){ba=0.0;_=0.0;$=0.0;ca=0.0;fa=0.0;ea=0.0}else{ba=+g[O+(r*244|0)+208>>2];_=+g[O+(r*244|0)+212>>2];$=+g[O+(r*244|0)+216>>2];ca=+g[O+(r*244|0)+224>>2];fa=+g[O+(r*244|0)+228>>2];ea=+g[O+(r*244|0)+232>>2]}if((c[O+(s*244|0)+240>>2]|0)==0){Z=0.0;Y=0.0;V=0.0;U=0.0;da=0.0;aa=0.0}else{Z=+g[O+(s*244|0)+208>>2];Y=+g[O+(s*244|0)+212>>2];V=+g[O+(s*244|0)+216>>2];U=+g[O+(s*244|0)+224>>2];da=+g[O+(s*244|0)+228>>2];aa=+g[O+(s*244|0)+232>>2]}T=T-((ba+ +g[O+(r*244|0)+176>>2])*+g[B+(z*152|0)+16>>2]+(_+ +g[O+(r*244|0)+180>>2])*+g[B+(z*152|0)+20>>2]+($+ +g[O+(r*244|0)+184>>2])*+g[B+(z*152|0)+24>>2]+((ca+ +g[O+(r*244|0)+192>>2])*+g[B+(z*152|0)>>2]+(fa+ +g[O+(r*244|0)+196>>2])*+g[B+(z*152|0)+4>>2]+(ea+ +g[O+(r*244|0)+200>>2])*+g[B+(z*152|0)+8>>2])+((Z+ +g[O+(s*244|0)+176>>2])*+g[B+(z*152|0)+48>>2]+(Y+ +g[O+(s*244|0)+180>>2])*+g[B+(z*152|0)+52>>2]+(V+ +g[O+(s*244|0)+184>>2])*+g[B+(z*152|0)+56>>2]+((U+ +g[O+(s*244|0)+192>>2])*+g[B+(z*152|0)+32>>2]+(da+ +g[O+(s*244|0)+196>>2])*+g[B+(z*152|0)+36>>2]+(aa+ +g[O+(s*244|0)+200>>2])*+g[B+(z*152|0)+40>>2])));O=(c[f+44>>2]|0)==0;if(!O?!(R>+g[f+48>>2]):0){S=f+36|0}else{S=f+32|0}if(R>0.0){V=0.0;U=T-R/+g[f+12>>2]}else{V=-(R*+g[S>>2])/+g[f+12>>2];U=T}ga=+g[B+(z*152|0)+108>>2];T=V*ga;U=U*ga;if(!O?!(R>+g[f+48>>2]):0){g[B+(z*152|0)+112>>2]=U;g[B+(z*152|0)+128>>2]=T}else{g[B+(z*152|0)+112>>2]=T+U;g[B+(z*152|0)+128>>2]=0.0}g[B+(z*152|0)+116>>2]=0.0;g[B+(z*152|0)+120>>2]=0.0;g[B+(z*152|0)+124>>2]=1.0e10;c[B+(z*152|0)+140>>2]=c[b+68>>2];if((N|0)==0){T=0.0;U=0.0;R=0.0}else{T=+g[N+328>>2];U=+g[N+332>>2];R=+g[N+336>>2]}if((M|0)==0){Z=0.0;Y=0.0;V=0.0}else{Z=+g[M+328>>2];Y=+g[M+332>>2];V=+g[M+336>>2]}T=Z-T;U=Y-U;R=V-R;g[w+32>>2]=T;g[w+36>>2]=U;g[w+40>>2]=R;g[w+44>>2]=0.0;do{if((L|0)>0?+g[h+(y*184|0)+92>>2]>0.0:0){L=L+ -1|0;V=+Q(+(T*T+U*U+R*R));if(V>+g[f+80>>2]){T=T*(1.0/V);g[w+32>>2]=T;U=U*(1.0/V);g[w+36>>2]=U;R=R*(1.0/V);g[w+40>>2]=R;if((u|0)!=0?(c[u+180>>2]&2|0)!=0:0){Y=+g[u+4>>2];$=+g[u+20>>2];ca=+g[u+36>>2];Z=+g[u+8>>2];aa=+g[u+24>>2];ea=+g[u+40>>2];_=+g[u+12>>2];ba=+g[u+28>>2];ga=+g[u+44>>2];da=(Y*T+$*U+R*ca)*+g[u+164>>2];fa=(T*Z+U*aa+R*ea)*+g[u+168>>2];R=(T*_+U*ba+R*ga)*+g[u+172>>2];g[w+32>>2]=Y*da+Z*fa+_*R;g[w+36>>2]=$*da+aa*fa+ba*R;g[w+40>>2]=ca*da+ea*fa+ga*R;g[w+44>>2]=0.0;T=Y*da+Z*fa+_*R;U=$*da+aa*fa+ba*R;R=ca*da+ea*fa+ga*R}if((v|0)!=0?(c[v+180>>2]&2|0)!=0:0){Y=+g[v+4>>2];$=+g[v+20>>2];ca=+g[v+36>>2];Z=+g[v+8>>2];aa=+g[v+24>>2];ea=+g[v+40>>2];_=+g[v+12>>2];ba=+g[v+28>>2];ga=+g[v+44>>2];da=(Y*T+$*U+ca*R)*+g[v+164>>2];fa=(T*Z+U*aa+R*ea)*+g[v+168>>2];R=(T*_+U*ba+R*ga)*+g[v+172>>2];g[w+32>>2]=Y*da+Z*fa+_*R;g[w+36>>2]=$*da+aa*fa+ba*R;g[w+40>>2]=ca*da+ea*fa+ga*R;g[w+44>>2]=0.0;T=Y*da+Z*fa+_*R;U=$*da+aa*fa+ba*R;R=ca*da+ea*fa+ga*R}if(!(+Q(+(T*T+U*U+R*R))>.001)){break}fk(b,w+32|0,r,s,z,A);break}fk(b,E,r,s,z,A);U=+g[D>>2];if(+P(+U)>.7071067690849304){R=+g[F>>2];ga=1.0/+Q(+(U*U+R*R));g[w+16>>2]=0.0;g[w+20>>2]=-(ga*U);g[w+24>>2]=ga*R;g[w>>2]=(U*U+R*R)*ga;fa=+g[E>>2];g[w+4>>2]=-(fa*ga*R);T=0.0;Y=-(ga*U);Z=ga*R;V=(U*U+R*R)*ga;R=-(fa*ga*R);U=fa*-(ga*U)}else{ea=+g[E>>2];fa=+g[F>>2];ga=1.0/+Q(+(ea*ea+fa*fa));g[w+16>>2]=-(fa*ga);g[w+20>>2]=ga*ea;g[w+24>>2]=0.0;g[w>>2]=-(U*ga*ea);g[w+4>>2]=U*-(fa*ga);T=-(fa*ga);Y=ga*ea;Z=0.0;V=-(U*ga*ea);R=U*-(fa*ga);U=(ea*ea+fa*fa)*ga}g[w+8>>2]=U;if((u|0)!=0?(c[u+180>>2]&2|0)!=0:0){ia=+g[u+4>>2];$=+g[u+20>>2];ca=+g[u+36>>2];ha=+g[u+8>>2];aa=+g[u+24>>2];ea=+g[u+40>>2];_=+g[u+12>>2];ba=+g[u+28>>2];ga=+g[u+44>>2];da=(ia*T+$*Y+ca*Z)*+g[u+164>>2];fa=(T*ha+Y*aa+Z*ea)*+g[u+168>>2];Z=(T*_+Y*ba+Z*ga)*+g[u+172>>2];g[w+16>>2]=ia*da+ha*fa+_*Z;g[w+20>>2]=$*da+aa*fa+ba*Z;g[w+24>>2]=ca*da+ea*fa+ga*Z;g[w+28>>2]=0.0;T=ia*da+ha*fa+_*Z;Y=$*da+aa*fa+ba*Z;Z=ca*da+ea*fa+ga*Z}if((v|0)!=0?(c[v+180>>2]&2|0)!=0:0){_=+g[v+4>>2];ba=+g[v+20>>2];ea=+g[v+36>>2];$=+g[v+8>>2];ca=+g[v+24>>2];ga=+g[v+40>>2];aa=+g[v+12>>2];da=+g[v+28>>2];ia=+g[v+44>>2];fa=(_*T+ba*Y+ea*Z)*+g[v+164>>2];ha=(T*$+Y*ca+Z*ga)*+g[v+168>>2];Z=(T*aa+Y*da+Z*ia)*+g[v+172>>2];g[w+16>>2]=_*fa+$*ha+aa*Z;g[w+20>>2]=ba*fa+ca*ha+da*Z;g[w+24>>2]=ea*fa+ga*ha+ia*Z;g[w+28>>2]=0.0;T=_*fa+$*ha+aa*Z;Y=ba*fa+ca*ha+da*Z;Z=ea*fa+ga*ha+ia*Z}if((u|0)!=0?(c[u+180>>2]&2|0)!=0:0){_=+g[u+4>>2];ba=+g[u+20>>2];ea=+g[u+36>>2];$=+g[u+8>>2];ca=+g[u+24>>2];ga=+g[u+40>>2];aa=+g[u+12>>2];da=+g[u+28>>2];ia=+g[u+44>>2];fa=(_*V+ba*R+ea*U)*+g[u+164>>2];ha=(V*$+R*ca+U*ga)*+g[u+168>>2];U=(V*aa+R*da+U*ia)*+g[u+172>>2];g[w>>2]=_*fa+$*ha+aa*U;g[w+4>>2]=ba*fa+ca*ha+da*U;g[w+8>>2]=ea*fa+ga*ha+ia*U;g[w+12>>2]=0.0;V=_*fa+$*ha+aa*U;R=ba*fa+ca*ha+da*U;U=ea*fa+ga*ha+ia*U}if((v|0)!=0?(c[v+180>>2]&2|0)!=0:0){_=+g[v+4>>2];ba=+g[v+20>>2];ea=+g[v+36>>2];$=+g[v+8>>2];ca=+g[v+24>>2];ga=+g[v+40>>2];aa=+g[v+12>>2];da=+g[v+28>>2];ia=+g[v+44>>2];fa=(_*V+ba*R+ea*U)*+g[v+164>>2];ha=(V*$+R*ca+U*ga)*+g[v+168>>2];U=(V*aa+R*da+U*ia)*+g[v+172>>2];g[w>>2]=_*fa+$*ha+aa*U;g[w+4>>2]=ba*fa+ca*ha+da*U;g[w+8>>2]=ea*fa+ga*ha+ia*U;g[w+12>>2]=0.0;V=_*fa+$*ha+aa*U;R=ba*fa+ca*ha+da*U;U=ea*fa+ga*ha+ia*U}if(+Q(+(T*T+Y*Y+Z*Z))>.001){fk(b,w+16|0,r,s,z,A)}if(+Q(+(V*V+R*R+U*U))>.001){fk(b,w,r,s,z,A)}}}while(0);if((c[f+64>>2]&32|0)!=0?(a[h+(y*184|0)+120>>0]|0)!=0:0){ek(b,h+(y*184|0)+156|0,r,s,z,A,w+64|0,w+48|0,1.0,+g[h+(y*184|0)+136>>2],+g[h+(y*184|0)+144>>2]);if((c[f+64>>2]&16|0)!=0){ek(b,h+(y*184|0)+172|0,r,s,z,A,w+64|0,w+48|0,1.0,+g[h+(y*184|0)+140>>2],+g[h+(y*184|0)+148>>2])}}else{j=106}do{if((j|0)==106){j=0;M=h+(y*184|0)+156|0;U=+g[E>>2];R=+g[F>>2];T=+g[D>>2];V=C-(K*C+G*J+H*I)*U;Y=G-(K*C+G*J+H*I)*R;C=H-(K*C+G*J+H*I)*T;g[h+(y*184|0)+156>>2]=V;O=h+(y*184|0)+160|0;g[O>>2]=Y;N=h+(y*184|0)+164|0;g[N>>2]=C;g[h+(y*184|0)+168>>2]=0.0;if((c[f+64>>2]&64|0)==0?V*V+Y*Y+C*C>1.1920928955078125e-7:0){ia=1.0/+Q(+(V*V+Y*Y+C*C));g[M>>2]=V*ia;g[O>>2]=ia*Y;g[N>>2]=ia*C;dk(u,M);dk(v,M);ek(b,M,r,s,z,A,w+64|0,w+48|0,1.0,0.0,0.0);if((c[f+64>>2]&16|0)==0){break}X=h+(y*184|0)+172|0;ga=+g[O>>2];da=+g[D>>2];ca=+g[N>>2];ea=+g[F>>2];ha=+g[E>>2];fa=+g[M>>2];g[h+(y*184|0)+172>>2]=ga*da-ca*ea;g[h+(y*184|0)+184>>2]=0.0;ia=1.0/+Q(+((ga*da-ca*ea)*(ga*da-ca*ea)+(ca*ha-da*fa)*(ca*ha-da*fa)+(ea*fa-ga*ha)*(ea*fa-ga*ha)));g[X>>2]=(ga*da-ca*ea)*ia;g[h+(y*184|0)+176>>2]=(ca*ha-da*fa)*ia;g[h+(y*184|0)+180>>2]=(ea*fa-ga*ha)*ia;dk(u,X);dk(v,X);ek(b,X,r,s,z,A,w+64|0,w+48|0,1.0,0.0,0.0);break}D=h+(y*184|0)+172|0;if(+P(+T)>.7071067690849304){ia=1.0/+Q(+(T*T+R*R));g[M>>2]=0.0;g[O>>2]=-(ia*T);g[N>>2]=ia*R;g[D>>2]=(T*T+R*R)*ia;g[h+(y*184|0)+176>>2]=-(U*ia*R);g[h+(y*184|0)+180>>2]=U*-(ia*T)}else{ia=1.0/+Q(+(U*U+R*R));g[M>>2]=-(R*ia);g[O>>2]=ia*U;g[N>>2]=0.0;g[D>>2]=-(T*ia*U);g[h+(y*184|0)+176>>2]=T*-(R*ia);g[h+(y*184|0)+180>>2]=(U*U+R*R)*ia}dk(u,M);dk(v,M);ek(b,M,r,s,z,A,w+64|0,w+48|0,1.0,0.0,0.0);E=c[f+64>>2]|0;if((E&16|0)!=0){dk(u,D);dk(v,D);ek(b,D,r,s,z,A,w+64|0,w+48|0,1.0,0.0,0.0);E=c[f+64>>2]|0}if((E&80|0)==80){a[h+(y*184|0)+120>>0]=1}}}while(0);A=c[b+16>>2]|0;E=c[A+(r*244|0)+240>>2]|0;D=c[A+(s*244|0)+240>>2]|0;B=c[B+(z*152|0)+140>>2]|0;z=c[b+76>>2]|0;F=c[f+64>>2]|0;if((F&4|0)!=0){C=+g[h+(y*184|0)+128>>2]*+g[f+60>>2];g[z+(B*152|0)+100>>2]=C;if((E|0)!=0){ga=+g[E+344>>2];ia=C*ga*+g[z+(B*152|0)+20>>2]*+g[E+352>>2]*+g[A+(r*244|0)+116>>2];ha=C*ga*+g[z+(B*152|0)+24>>2]*+g[E+356>>2]*+g[A+(r*244|0)+120>>2];g[A+(r*244|0)+64>>2]=+g[A+(r*244|0)+112>>2]*C*ga*+g[z+(B*152|0)+16>>2]*+g[E+348>>2]+ +g[A+(r*244|0)+64>>2];g[A+(r*244|0)+68>>2]=ia+ +g[A+(r*244|0)+68>>2];g[A+(r*244|0)+72>>2]=ha+ +g[A+(r*244|0)+72>>2];ha=C*+g[A+(r*244|0)+100>>2]*+g[z+(B*152|0)+68>>2];ia=C*+g[A+(r*244|0)+104>>2]*+g[z+(B*152|0)+72>>2];g[A+(r*244|0)+80>>2]=C*+g[A+(r*244|0)+96>>2]*+g[z+(B*152|0)+64>>2]+ +g[A+(r*244|0)+80>>2];g[A+(r*244|0)+84>>2]=ha+ +g[A+(r*244|0)+84>>2];g[A+(r*244|0)+88>>2]=ia+ +g[A+(r*244|0)+88>>2]}if((D|0)!=0?(l=+g[D+344>>2],k=+g[z+(B*152|0)+100>>2],(c[A+(s*244|0)+240>>2]|0)!=0):0){ia=+g[z+(B*152|0)+88>>2];ha=+g[z+(B*152|0)+84>>2];ga=+g[z+(B*152|0)+80>>2];ea=k*l*+g[z+(B*152|0)+52>>2]*+g[D+352>>2]*+g[A+(s*244|0)+116>>2];fa=k*l*+g[z+(B*152|0)+56>>2]*+g[D+356>>2]*+g[A+(s*244|0)+120>>2];g[A+(s*244|0)+64>>2]=+g[A+(s*244|0)+112>>2]*k*l*+g[z+(B*152|0)+48>>2]*+g[D+348>>2]+ +g[A+(s*244|0)+64>>2];g[A+(s*244|0)+68>>2]=ea+ +g[A+(s*244|0)+68>>2];g[A+(s*244|0)+72>>2]=fa+ +g[A+(s*244|0)+72>>2];ha=ha*+g[A+(s*244|0)+100>>2]*-k;ia=ia*+g[A+(s*244|0)+104>>2]*-k;g[A+(s*244|0)+80>>2]=+g[A+(s*244|0)+80>>2]-ga*+g[A+(s*244|0)+96>>2]*-k;g[A+(s*244|0)+84>>2]=+g[A+(s*244|0)+84>>2]-ha;g[A+(s*244|0)+88>>2]=+g[A+(s*244|0)+88>>2]-ia}}else{g[z+(B*152|0)+100>>2]=0.0}do{if((F&16|0)!=0){if((F&4|0)==0){g[z+((B+1|0)*152|0)+100>>2]=0.0;break}C=+g[h+(y*184|0)+132>>2]*+g[f+60>>2];g[z+((B+1|0)*152|0)+100>>2]=C;if((E|0)!=0?(n=+g[E+344>>2],(c[A+(r*244|0)+240>>2]|0)!=0):0){ia=C*n*+g[z+((B+1|0)*152|0)+20>>2]*+g[A+(r*244|0)+116>>2];ha=C*n*+g[z+((B+1|0)*152|0)+24>>2]*+g[A+(r*244|0)+120>>2];g[A+(r*244|0)+64>>2]=+g[A+(r*244|0)+112>>2]*C*n*+g[z+((B+1|0)*152|0)+16>>2]+ +g[A+(r*244|0)+64>>2];g[A+(r*244|0)+68>>2]=ia+ +g[A+(r*244|0)+68>>2];g[A+(r*244|0)+72>>2]=ha+ +g[A+(r*244|0)+72>>2];ha=C*+g[A+(r*244|0)+100>>2]*+g[z+((B+1|0)*152|0)+68>>2];ia=C*+g[A+(r*244|0)+104>>2]*+g[z+((B+1|0)*152|0)+72>>2];g[A+(r*244|0)+80>>2]=C*+g[A+(r*244|0)+96>>2]*+g[z+((B+1|0)*152|0)+64>>2]+ +g[A+(r*244|0)+80>>2];g[A+(r*244|0)+84>>2]=ha+ +g[A+(r*244|0)+84>>2];g[A+(r*244|0)+88>>2]=ia+ +g[A+(r*244|0)+88>>2]}if((D|0)!=0?(p=+g[D+344>>2],o=+g[z+((B+1|0)*152|0)+100>>2],(c[A+(s*244|0)+240>>2]|0)!=0):0){ia=+g[z+((B+1|0)*152|0)+88>>2];ha=+g[z+((B+1|0)*152|0)+84>>2];ga=+g[z+((B+1|0)*152|0)+80>>2];ea=o*p*+g[z+((B+1|0)*152|0)+52>>2]*+g[A+(s*244|0)+116>>2];fa=o*p*+g[z+((B+1|0)*152|0)+56>>2]*+g[A+(s*244|0)+120>>2];g[A+(s*244|0)+64>>2]=+g[A+(s*244|0)+112>>2]*o*p*+g[z+((B+1|0)*152|0)+48>>2]+ +g[A+(s*244|0)+64>>2];g[A+(s*244|0)+68>>2]=ea+ +g[A+(s*244|0)+68>>2];g[A+(s*244|0)+72>>2]=fa+ +g[A+(s*244|0)+72>>2];ha=ha*+g[A+(s*244|0)+100>>2]*-o;ia=ia*+g[A+(s*244|0)+104>>2]*-o;g[A+(s*244|0)+80>>2]=+g[A+(s*244|0)+80>>2]-ga*+g[A+(s*244|0)+96>>2]*-o;g[A+(s*244|0)+84>>2]=+g[A+(s*244|0)+84>>2]-ha;g[A+(s*244|0)+88>>2]=+g[A+(s*244|0)+88>>2]-ia}}}while(0);z=c[h+748>>2]|0}y=y+1|0}while((y|0)<(z|0))}}}while(0);q=q+1|0}while((q|0)!=(e|0));i=w;return}



function au(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0;j=i;n=(a[b+28>>0]|0)!=0;k=n?e:d;n=n?d:e;d=c[b+12>>2]|0;if((d|0)<=0){F=1.0;i=j;return+F}e=(c[k+192>>2]|0)+24|0;o=+g[k+4>>2];p=+g[k+8>>2];q=+g[k+12>>2];r=+g[k+16>>2];s=+g[k+20>>2];t=+g[k+24>>2];m=+g[k+28>>2];v=+g[k+32>>2];w=+g[k+36>>2];x=+g[k+40>>2];y=+g[k+44>>2];z=+g[k+48>>2];A=+g[k+52>>2];B=+g[k+56>>2];C=+g[k+60>>2];l=+g[k+64>>2];E=c[k+260>>2]|0;D=1.0;u=0;do{R=c[e>>2]|0;Q=+g[R+(u*80|0)>>2];P=+g[R+(u*80|0)+16>>2];O=+g[R+(u*80|0)+32>>2];N=+g[R+(u*80|0)+4>>2];M=+g[R+(u*80|0)+20>>2];L=+g[R+(u*80|0)+36>>2];K=+g[R+(u*80|0)+8>>2];J=+g[R+(u*80|0)+24>>2];I=+g[R+(u*80|0)+40>>2];H=+g[R+(u*80|0)+48>>2];G=+g[R+(u*80|0)+52>>2];F=+g[R+(u*80|0)+56>>2];c[k+260>>2]=E+1;g[k+4>>2]=o*Q+p*P+q*O;g[k+8>>2]=o*N+p*M+q*L;g[k+12>>2]=o*K+p*J+q*I;g[k+16>>2]=0.0;g[k+20>>2]=s*Q+t*P+m*O;g[k+24>>2]=s*N+t*M+m*L;g[k+28>>2]=s*K+t*J+m*I;g[k+32>>2]=0.0;g[k+36>>2]=w*Q+x*P+y*O;g[k+40>>2]=w*N+x*M+y*L;g[k+44>>2]=w*K+x*J+y*I;g[k+48>>2]=0.0;g[k+52>>2]=A+(o*H+p*G+q*F);g[k+56>>2]=B+(s*H+t*G+m*F);g[k+60>>2]=C+(w*H+x*G+y*F);g[k+64>>2]=0.0;E=c[(c[b+20>>2]|0)+(u<<2)>>2]|0;F=+Pb[c[(c[E>>2]|0)+12>>2]&15](E,k,n,f,h);D=F<D?F:D;E=(c[k+260>>2]|0)+1|0;c[k+260>>2]=E;g[k+4>>2]=o;g[k+8>>2]=p;g[k+12>>2]=q;g[k+16>>2]=r;g[k+20>>2]=s;g[k+24>>2]=t;g[k+28>>2]=m;g[k+32>>2]=v;g[k+36>>2]=w;g[k+40>>2]=x;g[k+44>>2]=y;g[k+48>>2]=z;g[k+52>>2]=A;g[k+56>>2]=B;g[k+60>>2]=C;g[k+64>>2]=l;u=u+1|0}while((u|0)!=(d|0));i=j;return+D}function bu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;f=c[a+12>>2]|0;if((f|0)<=0){i=d;return}e=0;do{g=c[(c[a+20>>2]|0)+(e<<2)>>2]|0;if((g|0)!=0){Fb[c[(c[g>>2]|0)+16>>2]&127](g,b);f=c[a+12>>2]|0}e=e+1|0}while((e|0)<(f|0));i=d;return}function cu(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function du(a,b){a=a|0;b=b|0;var d=0;d=i;b=c[b+36>>2]|0;_t(a,c[(c[(c[(c[a+4>>2]|0)+4>>2]|0)+24>>2]|0)+(b*80|0)+64>>2]|0,b);i=d;return}function eu(a){a=a|0;var b=0;b=i;fu(a);if((a|0)==0){i=b;return}dw(a);i=b;return}function fu(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;c[b>>2]=15536;f=c[b+8>>2]|0;e=c[f+8>>2]|0;if((e|0)>0){g=0;do{h=c[(c[f+16>>2]|0)+(g*12|0)+8>>2]|0;if((h|0)!=0){Db[c[c[h>>2]>>2]&255](h);j=c[b+4>>2]|0;Fb[c[(c[j>>2]|0)+60>>2]&127](j,h)}g=g+1|0}while((g|0)!=(e|0));f=c[b+8>>2]|0}lv(f);e=c[b+8>>2]|0;Db[c[c[e>>2]>>2]&255](e);e=c[b+8>>2]|0;if((e|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}e=c[b+24>>2]|0;if((e|0)==0){a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;j=b+20|0;c[j>>2]=0;i=d;return}if((a[b+28>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[b+24>>2]=0;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;j=b+20|0;c[j>>2]=0;i=d;return}function gu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;a=c[a+8>>2]|0;f=c[a+8>>2]|0;if((f|0)<=0){i=d;return}e=0;do{g=c[(c[a+16>>2]|0)+(e*12|0)+8>>2]|0;if((g|0)!=0){Fb[c[(c[g>>2]|0)+16>>2]&127](g,b);f=c[a+8>>2]|0}e=e+1|0}while((e|0)<(f|0));i=d;return}function hu(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0,ha=0,ia=0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0;j=i;i=i+192|0;m=c[d+4>>2]|0;k=c[e+4>>2]|0;if((c[m+68>>2]|0)==(c[b+40>>2]|0)?(c[k+68>>2]|0)==(c[b+44>>2]|0):0){n=b+8|0}else{n=c[b+8>>2]|0;W=c[n+8>>2]|0;if((W|0)>0){X=0;do{Y=c[(c[n+16>>2]|0)+(X*12|0)+8>>2]|0;if((Y|0)!=0){Db[c[c[Y>>2]>>2]&255](Y);ia=c[b+4>>2]|0;Fb[c[(c[ia>>2]|0)+60>>2]&127](ia,Y)}X=X+1|0}while((X|0)!=(W|0));n=c[b+8>>2]|0}lv(n);n=b+8|0}W=j+180|0;a[W>>0]=1;X=j+176|0;c[X>>2]=0;Y=j+168|0;c[Y>>2]=0;c[j+172>>2]=0;Z=c[n>>2]|0;ga=c[Z+8>>2]|0;if((ga|0)>0){_=0;do{$=c[(c[Z+16>>2]|0)+(_*12|0)+8>>2]|0;if(($|0)!=0){Fb[c[(c[$>>2]|0)+16>>2]&127]($,j+164|0);ha=c[Y>>2]|0;if((ha|0)>0){$=0;do{ga=c[(c[X>>2]|0)+($<<2)>>2]|0;if((c[ga+748>>2]|0)!=0){c[h+4>>2]=ga;ha=c[ga+740>>2]|0;ia=c[(c[h+8>>2]|0)+8>>2]|0;if((ha|0)==(ia|0)){Xr(ga,ha+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0)}else{Xr(ga,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,ia+4|0)}c[h+4>>2]=0;ha=c[Y>>2]|0}$=$+1|0}while(($|0)<(ha|0))}if((ha|0)<0){if((c[j+172>>2]|0)<0){$=c[X>>2]|0;if((ha|0)>0){ga=0;do{if((ga|0)!=0){c[0+(ga<<2)>>2]=c[$+(ga<<2)>>2]}ga=ga+1|0}while((ga|0)!=(ha|0))}if(($|0)!=0){if((a[W>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[$+ -4>>2]|0)}c[X>>2]=0}a[W>>0]=1;c[X>>2]=0;c[j+172>>2]=0}do{$=(c[X>>2]|0)+(ha<<2)|0;if(($|0)!=0){c[$>>2]=0}ha=ha+1|0}while((ha|0)!=0)}c[Y>>2]=0;ga=c[Z+8>>2]|0}_=_+1|0}while((_|0)<(ga|0));Z=c[X>>2]|0;if((Z|0)!=0){if((a[W>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[Z+ -4>>2]|0)}c[X>>2]=0}}a[W>>0]=1;c[X>>2]=0;c[Y>>2]=0;c[j+172>>2]=0;ha=c[m+64>>2]|0;ia=c[k+64>>2]|0;_=c[b+4>>2]|0;$=c[n>>2]|0;ga=c[b+32>>2]|0;c[j+128>>2]=15624;c[j+132>>2]=0;c[j+136>>2]=d;c[j+140>>2]=e;c[j+144>>2]=_;c[j+148>>2]=f;c[j+152>>2]=h;c[j+156>>2]=$;c[j+160>>2]=ga;h=c[d+12>>2]|0;t=+g[h>>2];v=+g[h+16>>2];x=+g[h+32>>2];w=+g[h+4>>2];s=+g[h+20>>2];r=+g[h+36>>2];q=+g[h+8>>2];p=+g[h+24>>2];o=+g[h+40>>2];u=-+g[h+48>>2];L=-+g[h+52>>2];y=-+g[h+56>>2];h=c[e+12>>2]|0;C=+g[h>>2];D=+g[h+16>>2];E=+g[h+32>>2];F=+g[h+4>>2];G=+g[h+20>>2];H=+g[h+36>>2];I=+g[h+8>>2];J=+g[h+24>>2];K=+g[h+40>>2];z=+g[h+48>>2];A=+g[h+52>>2];B=+g[h+56>>2];h=c[ha>>2]|0;f=c[ia>>2]|0;if(!((h|0)==0|(f|0)==0)){c[4336]=(c[4336]|0)+1;Y=cw(1043)|0;c[(Y+19&-16)+ -4>>2]=Y;c[(Y+19&-16)>>2]=h;c[(Y+19&-16)+4>>2]=f;O=+P(+(t*C+v*D+x*E));N=+P(+(t*F+v*G+x*H));Q=+P(+(t*I+v*J+x*K));V=+P(+(w*C+s*D+r*E));U=+P(+(w*F+s*G+r*H));T=+P(+(w*I+s*J+r*K));S=+P(+(q*C+p*D+o*E));M=+P(+(q*F+p*G+o*H));R=+P(+(q*I+p*J+o*K));f=1;$=128;Z=128;Y=Y+19&-16;_=124;do{X=f+ -1|0;h=c[Y+(X<<3)>>2]|0;W=c[Y+(X<<3)+4>>2]|0;na=+g[W+16>>2];ma=+g[W>>2];la=+g[W+20>>2];ka=+g[W+4>>2];ja=+g[W+24>>2];da=+g[W+8>>2];aa=t*u+v*L+x*y+(t*z+v*A+x*B)+((t*C+v*D+x*E)*(na+ma)*.5+(t*F+v*G+x*H)*(la+ka)*.5+(t*I+v*J+x*K)*(ja+da)*.5);ca=w*u+s*L+r*y+(w*z+s*A+r*B)+((w*C+s*D+r*E)*(na+ma)*.5+(w*F+s*G+r*H)*(la+ka)*.5+(w*I+s*J+r*K)*(ja+da)*.5);ea=q*u+p*L+o*y+(q*z+p*A+o*B)+((q*C+p*D+o*E)*(na+ma)*.5+(q*F+p*G+o*H)*(la+ka)*.5+(q*I+p*J+o*K)*(ja+da)*.5);fa=((na-ma)*.5+0.0)*O+((la-ka)*.5+0.0)*N+((ja-da)*.5+0.0)*Q;ba=((na-ma)*.5+0.0)*V+((la-ka)*.5+0.0)*U+((ja-da)*.5+0.0)*T;da=((na-ma)*.5+0.0)*S+((la-ka)*.5+0.0)*M+((ja-da)*.5+0.0)*R;do{if(((((+g[h>>2]<=fa+aa?+g[h+16>>2]>=aa-fa:0)?+g[h+4>>2]<=ca+ba:0)?+g[h+20>>2]>=ca-ba:0)?+g[h+8>>2]<=ea+da:0)?+g[h+24>>2]>=ea-da:0){if((X|0)>(_|0)){_=Z<<1;if((Z|0)<(_|0)&($|0)<(_|0)){if((Z|0)!=0){c[4336]=(c[4336]|0)+1;$=cw((Z<<4|3)+16|0)|0;if(($|0)==0){$=0}else{c[($+19&-16)+ -4>>2]=$;$=$+19&-16}if((Z|0)>0){ga=0;while(1){ha=$+(ga<<3)|0;if((ha|0)!=0){oa=Y+(ga<<3)|0;ia=c[oa+4>>2]|0;c[ha>>2]=c[oa>>2];c[ha+4>>2]=ia}ga=ga+1|0;if((ga|0)==(Z|0)){Z=$;break}}}else{Z=$}}else{Z=0}if((Y|0)==0){$=_;Y=Z}else{c[4338]=(c[4338]|0)+1;dw(c[Y+ -4>>2]|0);$=_;Y=Z}}Z=_;_=_+ -4|0}ga=(c[W+40>>2]|0)!=0;if((c[h+40>>2]|0)==0){if(ga){oa=c[W+36>>2]|0;ia=Y+(X<<3)|0;c[ia>>2]=h;c[ia+4>>2]=oa;ia=c[W+40>>2]|0;oa=Y+(f<<3)|0;c[oa>>2]=h;c[oa+4>>2]=ia;f=f+1|0;break}else{ic[c[(c[j+128>>2]|0)+8>>2]&63](j+128|0,h,W);f=X;break}}else{X=Y+(X<<3)|0;ha=c[h+36>>2]|0;if(ga){ia=c[W+36>>2]|0;c[X>>2]=ha;c[X+4>>2]=ia;ia=c[W+36>>2]|0;oa=Y+(f<<3)|0;c[oa>>2]=c[h+40>>2];c[oa+4>>2]=ia;oa=c[W+40>>2]|0;ia=Y+(f+1<<3)|0;c[ia>>2]=c[h+36>>2];c[ia+4>>2]=oa;ia=c[W+40>>2]|0;oa=Y+(f+2<<3)|0;c[oa>>2]=c[h+40>>2];c[oa+4>>2]=ia;f=f+3|0;break}else{c[X>>2]=ha;c[X+4>>2]=W;oa=Y+(f<<3)|0;c[oa>>2]=c[h+40>>2];c[oa+4>>2]=W;f=f+1|0;break}}}else{f=X}}while(0)}while((f|0)!=0);if((Y|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[Y+ -4>>2]|0)}}h=c[n>>2]|0;if((c[h+8>>2]|0)>0){f=0;while(1){X=c[h+16>>2]|0;W=c[X+(f*12|0)+8>>2]|0;do{if((W|0)!=0){oa=c[X+(f*12|0)>>2]|0;ia=c[m+24>>2]|0;ha=c[ia+(oa*80|0)+64>>2]|0;ga=c[d+12>>2]|0;na=+g[ga>>2];K=+g[ga+4>>2];J=+g[ga+8>>2];ka=+g[ga+16>>2];fa=+g[ga+20>>2];da=+g[ga+24>>2];ja=+g[ga+32>>2];ca=+g[ga+36>>2];Q=+g[ga+40>>2];ba=+g[ia+(oa*80|0)>>2];aa=+g[ia+(oa*80|0)+16>>2];V=+g[ia+(oa*80|0)+32>>2];U=+g[ia+(oa*80|0)+4>>2];T=+g[ia+(oa*80|0)+20>>2];S=+g[ia+(oa*80|0)+36>>2];ea=+g[ia+(oa*80|0)+8>>2];R=+g[ia+(oa*80|0)+24>>2];O=+g[ia+(oa*80|0)+40>>2];ma=+g[ia+(oa*80|0)+48>>2];la=+g[ia+(oa*80|0)+52>>2];L=+g[ia+(oa*80|0)+56>>2];N=+g[ga+48>>2]+(na*ma+K*la+J*L);M=+g[ga+52>>2]+(ka*ma+fa*la+da*L);L=+g[ga+56>>2]+(ja*ma+ca*la+Q*L);g[j>>2]=na*ba+K*aa+J*V;g[j+4>>2]=na*U+K*T+J*S;g[j+8>>2]=na*ea+K*R+J*O;g[j+12>>2]=0.0;g[j+16>>2]=ka*ba+fa*aa+da*V;g[j+20>>2]=ka*U+fa*T+da*S;g[j+24>>2]=ka*ea+fa*R+da*O;g[j+28>>2]=0.0;g[j+32>>2]=ja*ba+ca*aa+Q*V;g[j+36>>2]=ja*U+ca*T+Q*S;g[j+40>>2]=ja*ea+ca*R+Q*O;g[j+44>>2]=0.0;g[j+48>>2]=N;g[j+52>>2]=M;g[j+56>>2]=L;g[j+60>>2]=0.0;mc[c[(c[ha>>2]|0)+8>>2]&63](ha,j,j+112|0,j+96|0);ha=c[(c[h+16>>2]|0)+(f*12|0)+4>>2]|0;ga=c[k+24>>2]|0;oa=c[ga+(ha*80|0)+64>>2]|0;ia=c[e+12>>2]|0;L=+g[ia>>2];M=+g[ia+4>>2];N=+g[ia+8>>2];O=+g[ia+16>>2];Q=+g[ia+20>>2];R=+g[ia+24>>2];ca=+g[ia+32>>2];ea=+g[ia+36>>2];ja=+g[ia+40>>2];S=+g[ga+(ha*80|0)>>2];T=+g[ga+(ha*80|0)+16>>2];U=+g[ga+(ha*80|0)+32>>2];V=+g[ga+(ha*80|0)+4>>2];aa=+g[ga+(ha*80|0)+20>>2];ba=+g[ga+(ha*80|0)+36>>2];da=+g[ga+(ha*80|0)+8>>2];fa=+g[ga+(ha*80|0)+24>>2];ka=+g[ga+(ha*80|0)+40>>2];J=+g[ga+(ha*80|0)+48>>2];K=+g[ga+(ha*80|0)+52>>2];na=+g[ga+(ha*80|0)+56>>2];la=+g[ia+48>>2]+(L*J+M*K+N*na);ma=+g[ia+52>>2]+(O*J+Q*K+R*na);na=+g[ia+56>>2]+(ca*J+ea*K+ja*na);g[j>>2]=L*S+M*T+N*U;g[j+4>>2]=L*V+M*aa+N*ba;g[j+8>>2]=L*da+M*fa+N*ka;g[j+12>>2]=0.0;g[j+16>>2]=O*S+Q*T+R*U;g[j+20>>2]=O*V+Q*aa+R*ba;g[j+24>>2]=O*da+Q*fa+R*ka;g[j+28>>2]=0.0;g[j+32>>2]=ca*S+ea*T+ja*U;g[j+36>>2]=ca*V+ea*aa+ja*ba;g[j+40>>2]=ca*da+ea*fa+ja*ka;g[j+44>>2]=0.0;g[j+48>>2]=la;g[j+52>>2]=ma;g[j+56>>2]=na;g[j+60>>2]=0.0;mc[c[(c[oa>>2]|0)+8>>2]&63](oa,j,j+80|0,j+64|0);if(!(+g[j+112>>2]>+g[j+64>>2])?!(+g[j+96>>2]<+g[j+80>>2]):0){X=1}else{X=0}if(!(!(+g[j+120>>2]>+g[j+72>>2])?!(+g[j+104>>2]<+g[j+88>>2]):0)){X=0}if(!(+g[j+116>>2]>+g[j+68>>2])?!(+g[j+100>>2]<+g[j+84>>2]|X^1):0){break}Db[c[c[W>>2]>>2]&255](W);X=c[b+4>>2]|0;Fb[c[(c[X>>2]|0)+60>>2]&127](X,W);W=c[h+16>>2]|0;X=c[W+(f*12|0)>>2]|0;W=c[W+(f*12|0)+4>>2]|0;Z=c[b+16>>2]|0;if((Z|0)==(c[b+20>>2]|0)?(l=(Z|0)==0?1:Z<<1,(Z|0)<(l|0)):0){if((l|0)==0){Y=0}else{c[4336]=(c[4336]|0)+1;Y=cw((l*12|3)+16|0)|0;if((Y|0)==0){Y=0}else{c[(Y+19&-16)+ -4>>2]=Y;Y=Y+19&-16}Z=c[b+16>>2]|0}if((Z|0)>0){$=0;do{_=Y+($*12|0)|0;if((_|0)!=0){oa=(c[b+24>>2]|0)+($*12|0)|0;c[_+0>>2]=c[oa+0>>2];c[_+4>>2]=c[oa+4>>2];c[_+8>>2]=c[oa+8>>2]}$=$+1|0}while(($|0)!=(Z|0))}Z=c[b+24>>2]|0;if((Z|0)!=0){if((a[b+28>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[Z+ -4>>2]|0)}c[b+24>>2]=0}a[b+28>>0]=1;c[b+24>>2]=Y;c[b+20>>2]=l;Z=c[b+16>>2]|0}_=c[b+24>>2]|0;Y=_+(Z*12|0)|0;if((Y|0)!=0){c[Y>>2]=X;c[_+(Z*12|0)+4>>2]=W;c[_+(Z*12|0)+8>>2]=0;Z=c[b+16>>2]|0}c[b+16>>2]=Z+1}}while(0);f=f+1|0;if((f|0)>=(c[h+8>>2]|0)){d=b+24|0;k=b+16|0;break}}}else{d=b+24|0;k=b+16|0}if((c[k>>2]|0)>0){e=0;do{ia=c[n>>2]|0;oa=c[d>>2]|0;Qb[c[(c[ia>>2]|0)+8>>2]&31](ia,c[oa+(e*12|0)>>2]|0,c[oa+(e*12|0)+4>>2]|0)|0;e=e+1|0}while((e|0)<(c[k>>2]|0))}e=c[d>>2]|0;if((e|0)==0){a[b+28>>0]=1;c[d>>2]=0;c[k>>2]=0;oa=b+20|0;c[oa>>2]=0;i=j;return}if((a[b+28>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[e+ -4>>2]|0)}c[d>>2]=0;a[b+28>>0]=1;c[d>>2]=0;c[k>>2]=0;oa=b+20|0;c[oa>>2]=0;i=j;return}function iu(a){a=a|0;return}function ju(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0.0}function ku(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function lu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0;f=i;i=i+240|0;c[a+4>>2]=(c[a+4>>2]|0)+1;b=c[b+36>>2]|0;d=c[d+36>>2]|0;l=c[a+8>>2]|0;K=c[(c[l+4>>2]|0)+24>>2]|0;j=c[K+(b*80|0)+64>>2]|0;J=(c[(c[a+12>>2]|0)+4>>2]|0)+24|0;k=c[(c[J>>2]|0)+(d*80|0)+64>>2]|0;l=c[l+12>>2]|0;m=+g[l>>2];H=+g[l+4>>2];I=+g[l+8>>2];p=+g[l+16>>2];r=+g[l+20>>2];t=+g[l+24>>2];q=+g[l+32>>2];u=+g[l+36>>2];C=+g[l+40>>2];v=+g[K+(b*80|0)>>2];w=+g[K+(b*80|0)+16>>2];x=+g[K+(b*80|0)+32>>2];y=+g[K+(b*80|0)+4>>2];z=+g[K+(b*80|0)+20>>2];A=+g[K+(b*80|0)+36>>2];s=+g[K+(b*80|0)+8>>2];B=+g[K+(b*80|0)+24>>2];D=+g[K+(b*80|0)+40>>2];n=+g[K+(b*80|0)+48>>2];o=+g[K+(b*80|0)+52>>2];G=+g[K+(b*80|0)+56>>2];E=+g[l+48>>2]+(m*n+H*o+I*G);F=+g[l+52>>2]+(p*n+r*o+t*G);G=+g[l+56>>2]+(q*n+u*o+C*G);g[f+176>>2]=m*v+H*w+I*x;g[f+180>>2]=m*y+H*z+I*A;g[f+184>>2]=m*s+H*B+I*D;g[f+188>>2]=0.0;g[f+192>>2]=p*v+r*w+t*x;g[f+196>>2]=p*y+r*z+t*A;g[f+200>>2]=p*s+r*B+t*D;g[f+204>>2]=0.0;g[f+208>>2]=q*v+u*w+C*x;g[f+212>>2]=q*y+u*z+C*A;g[f+216>>2]=q*s+u*B+C*D;g[f+220>>2]=0.0;g[f+224>>2]=E;g[f+228>>2]=F;g[f+232>>2]=G;g[f+236>>2]=0.0;l=c[(c[a+12>>2]|0)+12>>2]|0;G=+g[l>>2];F=+g[l+4>>2];E=+g[l+8>>2];D=+g[l+16>>2];C=+g[l+20>>2];B=+g[l+24>>2];u=+g[l+32>>2];s=+g[l+36>>2];q=+g[l+40>>2];J=c[J>>2]|0;A=+g[J+(d*80|0)>>2];z=+g[J+(d*80|0)+16>>2];y=+g[J+(d*80|0)+32>>2];x=+g[J+(d*80|0)+4>>2];w=+g[J+(d*80|0)+20>>2];v=+g[J+(d*80|0)+36>>2];t=+g[J+(d*80|0)+8>>2];r=+g[J+(d*80|0)+24>>2];p=+g[J+(d*80|0)+40>>2];I=+g[J+(d*80|0)+48>>2];H=+g[J+(d*80|0)+52>>2];m=+g[J+(d*80|0)+56>>2];o=+g[l+48>>2]+(G*I+F*H+E*m);n=+g[l+52>>2]+(D*I+C*H+B*m);m=+g[l+56>>2]+(u*I+s*H+q*m);g[f+112>>2]=G*A+F*z+E*y;g[f+116>>2]=G*x+F*w+E*v;g[f+120>>2]=G*t+F*r+E*p;g[f+124>>2]=0.0;g[f+128>>2]=D*A+C*z+B*y;g[f+132>>2]=D*x+C*w+B*v;g[f+136>>2]=D*t+C*r+B*p;g[f+140>>2]=0.0;g[f+144>>2]=u*A+s*z+q*y;g[f+148>>2]=u*x+s*w+q*v;g[f+152>>2]=u*t+s*r+q*p;g[f+156>>2]=0.0;g[f+160>>2]=o;g[f+164>>2]=n;g[f+168>>2]=m;g[f+172>>2]=0.0;mc[c[(c[j>>2]|0)+8>>2]&63](j,f+176|0,f+96|0,f+80|0);mc[c[(c[k>>2]|0)+8>>2]&63](k,f+112|0,f+64|0,f+48|0);if(!(+g[f+96>>2]>+g[f+48>>2])?!(+g[f+80>>2]<+g[f+64>>2]):0){l=1}else{l=0}if(!(!(+g[f+104>>2]>+g[f+56>>2])?!(+g[f+88>>2]<+g[f+72>>2]):0)){l=0}if(+g[f+100>>2]>+g[f+52>>2]){i=f;return}if(+g[f+84>>2]<+g[f+68>>2]|l^1){i=f;return}J=c[a+8>>2]|0;K=c[J+8>>2]|0;c[f+24>>2]=J;c[f+28>>2]=j;c[f+32>>2]=K;c[f+36>>2]=f+176;c[f+40>>2]=-1;c[f+44>>2]=b;K=c[a+12>>2]|0;j=c[K+8>>2]|0;c[f>>2]=K;c[f+4>>2]=k;c[f+8>>2]=j;c[f+12>>2]=f+112;c[f+16>>2]=-1;c[f+20>>2]=d;j=c[a+28>>2]|0;c[4228]=(c[4228]|0)+1;k=((d<<16|b)+~((d<<16|b)<<15)>>10^(d<<16|b)+~((d<<16|b)<<15))*9|0;k=(c[j+12>>2]|0)+ -1&((k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11));a:do{if((k|0)<(c[j+32>>2]|0)?(h=c[(c[j+40>>2]|0)+(k<<2)>>2]|0,!((h|0)==-1)):0){k=c[j+16>>2]|0;while(1){if((c[k+(h*12|0)>>2]|0)==(b|0)?(c[k+(h*12|0)+4>>2]|0)==(d|0):0){break}h=c[(c[j+60>>2]|0)+(h<<2)>>2]|0;if((h|0)==-1){e=17;break a}}if((k+(h*12|0)|0)!=0){h=c[k+(h*12|0)+8>>2]|0}else{e=17}}else{e=17}}while(0);if((e|0)==17){h=c[a+16>>2]|0;h=Lb[c[(c[h>>2]|0)+8>>2]&31](h,f+24|0,f,c[a+32>>2]|0)|0;K=c[a+28>>2]|0;c[(Qb[c[(c[K>>2]|0)+12>>2]&31](K,b,d)|0)+8>>2]=h}l=c[a+24>>2]|0;J=c[l+8>>2]|0;K=c[l+12>>2]|0;c[l+8>>2]=f+24;c[(c[a+24>>2]|0)+12>>2]=f;l=c[a+24>>2]|0;ic[c[(c[l>>2]|0)+8>>2]&63](l,-1,b);l=c[a+24>>2]|0;ic[c[(c[l>>2]|0)+12>>2]&63](l,-1,d);Bb[c[(c[h>>2]|0)+8>>2]&31](h,f+24|0,f,c[a+20>>2]|0,c[a+24>>2]|0);c[(c[a+24>>2]|0)+8>>2]=J;c[(c[a+24>>2]|0)+12>>2]=K;i=f;return}function mu(a,b){a=a|0;b=b|0;return}function nu(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=15760;c[a+12>>2]=15792;d=c[a+60>>2]|0;Fb[c[(c[d>>2]|0)+20>>2]&127](d,c[a+76>>2]|0);d=c[a+60>>2]|0;Fb[c[(c[d>>2]|0)+16>>2]&127](d,c[a+76>>2]|0);if((a|0)==0){i=b;return}dw(a);i=b;return}function ou(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=15760;c[a+12>>2]=15792;d=c[a+60>>2]|0;Fb[c[(c[d>>2]|0)+20>>2]&127](d,c[a+76>>2]|0);d=c[a+60>>2]|0;Fb[c[(c[d>>2]|0)+16>>2]&127](d,c[a+76>>2]|0);i=b;return}function pu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((c[b+76>>2]|0)==0){i=e;return}h=c[d+4>>2]|0;if((h|0)==(c[d+8>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[d+4>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[d+12>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[d+12>>2]|0;if((j|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=g;c[d+8>>2]=f}f=(c[d+12>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=c[b+76>>2]}c[d+4>>2]=h+1;i=e;return}function qu(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=15792;d=c[a+48>>2]|0;Fb[c[(c[d>>2]|0)+20>>2]&127](d,c[a+64>>2]|0);d=c[a+48>>2]|0;Fb[c[(c[d>>2]|0)+16>>2]&127](d,c[a+64>>2]|0);if((a|0)==0){i=b;return}dw(a);i=b;return}function ru(a){a=a|0;var b=0,d=0;b=i;c[a>>2]=15792;d=c[a+48>>2]|0;Fb[c[(c[d>>2]|0)+20>>2]&127](d,c[a+64>>2]|0);d=c[a+48>>2]|0;Fb[c[(c[d>>2]|0)+16>>2]&127](d,c[a+64>>2]|0);i=b;return}function su(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0;f=i;i=i+128|0;k=+g[b>>2];m=+g[b+16>>2];l=k<m?k:m;j=+g[b+32>>2];if((l<j?l:j)>+g[a+28>>2]){i=f;return}h=k>m?b:b+16|0;if(+g[(+g[h>>2]>j?h:b+32|0)>>2]<+g[a+12>>2]){i=f;return}k=+g[b+8>>2];l=+g[b+24>>2];m=k<l?k:l;j=+g[b+40>>2];if((m<j?m:j)>+g[a+36>>2]){i=f;return}h=k>l?b+8|0:b+24|0;if(+g[(+g[h>>2]>j?h:b+40|0)>>2]<+g[a+20>>2]){i=f;return}k=+g[b+4>>2];l=+g[b+20>>2];m=k<l?k:l;j=+g[b+36>>2];if((m<j?m:j)>+g[a+32>>2]){i=f;return}h=k>l?b+4|0:b+20|0;if(+g[(+g[h>>2]>j?h:b+36|0)>>2]<+g[a+16>>2]){i=f;return}h=c[a+48>>2]|0;n=c[a+4>>2]|0;if((c[(c[n+4>>2]|0)+4>>2]|0)>=20){i=f;return}c[f+32>>2]=0;g[f+36>>2]=1.0;g[f+40>>2]=1.0;g[f+44>>2]=1.0;g[f+48>>2]=0.0;c[f+76>>2]=0;c[f+24>>2]=13864;c[f+28>>2]=1;c[f+80>>2]=c[b+0>>2];c[f+84>>2]=c[b+4>>2];c[f+88>>2]=c[b+8>>2];c[f+92>>2]=c[b+12>>2];c[f+96>>2]=c[b+16>>2];c[f+100>>2]=c[b+20>>2];c[f+104>>2]=c[b+24>>2];c[f+108>>2]=c[b+28>>2];c[f+112>>2]=c[b+32>>2];c[f+116>>2]=c[b+36>>2];c[f+120>>2]=c[b+40>>2];c[f+124>>2]=c[b+44>>2];g[f+68>>2]=+g[a+56>>2];p=c[a+8>>2]|0;o=c[p+8>>2]|0;b=c[p+12>>2]|0;c[f>>2]=p;c[f+4>>2]=f+24;c[f+8>>2]=o;c[f+12>>2]=b;c[f+16>>2]=d;c[f+20>>2]=e;b=Lb[c[(c[h>>2]|0)+8>>2]&31](h,n,f,c[a+64>>2]|0)|0;o=c[a+44>>2]|0;n=c[o+8>>2]|0;if((c[n+8>>2]|0)==(c[(c[a+8>>2]|0)+8>>2]|0)){c[o+8>>2]=f;p=c[a+44>>2]|0;ic[c[(c[p>>2]|0)+8>>2]&63](p,d,e)}else{n=c[o+12>>2]|0;c[o+12>>2]=f;p=c[a+44>>2]|0;ic[c[(c[p>>2]|0)+12>>2]&63](p,d,e)}Bb[c[(c[b>>2]|0)+8>>2]&31](b,c[a+4>>2]|0,f,c[a+52>>2]|0,c[a+44>>2]|0);d=c[a+44>>2]|0;if((c[(c[d+8>>2]|0)+8>>2]|0)==(c[(c[a+8>>2]|0)+8>>2]|0)){c[d+8>>2]=n}else{c[d+12>>2]=n}Db[c[c[b>>2]>>2]&255](b);Fb[c[(c[h>>2]|0)+60>>2]&127](h,b);c[f+24>>2]=13384;a=c[f+76>>2]|0;if((a|0)==0){i=f;return}Db[c[c[a>>2]>>2]&255](a);a=c[f+76>>2]|0;if((a|0)==0){i=f;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=f;return}function tu(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;j=i;i=i+64|0;l=(a[b+8>>0]|0)!=0;k=l?e:d;e=l?d:e;d=c[e+4>>2]|0;if(!(((c[d+4>>2]|0)+ -21|0)>>>0<9)){i=j;return}if((c[(c[k+4>>2]|0)+4>>2]|0)>=20){i=j;return}m=+Tb[c[(c[d>>2]|0)+48>>2]&15](d);c[h+4>>2]=c[b+76>>2];c[b+16>>2]=k;c[b+20>>2]=e;c[b+64>>2]=f;g[b+68>>2]=m;c[b+56>>2]=h;f=c[e+12>>2]|0;B=+g[f>>2];A=+g[f+16>>2];z=+g[f+32>>2];y=+g[f+4>>2];x=+g[f+20>>2];w=+g[f+36>>2];s=+g[f+8>>2];q=+g[f+24>>2];o=+g[f+40>>2];v=-+g[f+48>>2];u=-+g[f+52>>2];t=-+g[f+56>>2];f=c[k+12>>2]|0;K=+g[f>>2];J=+g[f+16>>2];I=+g[f+32>>2];H=+g[f+4>>2];G=+g[f+20>>2];F=+g[f+36>>2];E=+g[f+8>>2];D=+g[f+24>>2];C=+g[f+40>>2];r=+g[f+48>>2];p=+g[f+52>>2];n=+g[f+56>>2];g[j>>2]=B*K+A*J+z*I;g[j+4>>2]=B*H+A*G+z*F;g[j+8>>2]=B*E+A*D+z*C;g[j+12>>2]=0.0;g[j+16>>2]=y*K+x*J+w*I;g[j+20>>2]=y*H+x*G+w*F;g[j+24>>2]=y*E+x*D+w*C;g[j+28>>2]=0.0;g[j+32>>2]=s*K+q*J+o*I;g[j+36>>2]=s*H+q*G+o*F;g[j+40>>2]=s*E+q*D+o*C;g[j+44>>2]=0.0;g[j+48>>2]=B*v+A*u+z*t+(B*r+A*p+z*n);g[j+52>>2]=y*v+x*u+w*t+(y*r+x*p+w*n);g[j+56>>2]=s*v+q*u+o*t+(s*r+q*p+o*n);g[j+60>>2]=0.0;f=c[(c[b+16>>2]|0)+4>>2]|0;mc[c[(c[f>>2]|0)+8>>2]&63](f,j,b+24|0,b+40|0);g[b+40>>2]=+g[b+40>>2]+m;g[b+44>>2]=+g[b+44>>2]+m;g[b+48>>2]=+g[b+48>>2]+m;g[b+24>>2]=+g[b+24>>2]-m;g[b+28>>2]=+g[b+28>>2]-m;g[b+32>>2]=+g[b+32>>2]-m;f=c[b+76>>2]|0;l=c[e+8>>2]|0;c[f+740>>2]=c[k+8>>2];c[f+744>>2]=l;mc[c[(c[d>>2]|0)+64>>2]&63](d,b+12|0,b+24|0,b+40|0);f=c[h+4>>2]|0;do{if((c[f+748>>2]|0)!=0){k=c[f+740>>2]|0;d=c[(c[h+8>>2]|0)+8>>2]|0;if((k|0)==(d|0)){Xr(f,k+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);break}else{Xr(f,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,d+4|0);break}}}while(0);c[b+16>>2]=0;c[b+20>>2]=0;i=j;return}function uu(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0;h=i;i=i+240|0;f=(a[b+8>>0]|0)!=0;b=f?e:d;e=f?d:e;S=+g[b+116>>2]- +g[b+52>>2];T=+g[b+120>>2]- +g[b+56>>2];U=+g[b+124>>2]- +g[b+60>>2];V=+g[b+252>>2];if(S*S+T*T+U*U<V*V){V=1.0;i=h;return+V}o=+g[e+4>>2];q=+g[e+20>>2];s=+g[e+36>>2];A=+g[e+8>>2];B=+g[e+24>>2];j=+g[e+40>>2];D=+g[e+12>>2];m=+g[e+28>>2];F=+g[e+44>>2];R=-+g[e+52>>2];S=-+g[e+56>>2];T=-+g[e+60>>2];p=+g[b+4>>2];r=+g[b+20>>2];t=+g[b+36>>2];u=+g[b+8>>2];v=+g[b+24>>2];w=+g[b+40>>2];x=+g[b+12>>2];y=+g[b+28>>2];z=+g[b+44>>2];K=+g[b+52>>2];J=+g[b+56>>2];I=+g[b+60>>2];G=o*R+q*S+s*T+(o*K+q*J+s*I);H=A*R+B*S+j*T+(A*K+B*J+j*I);I=D*R+m*S+F*T+(D*K+m*J+F*I);J=+g[b+68>>2];K=+g[b+84>>2];L=+g[b+100>>2];M=+g[b+72>>2];N=+g[b+88>>2];O=+g[b+104>>2];P=+g[b+76>>2];C=+g[b+92>>2];n=+g[b+108>>2];U=+g[b+116>>2];V=+g[b+120>>2];E=+g[b+124>>2];l=o*R+q*S+s*T+(o*U+q*V+s*E);k=A*R+B*S+j*T+(A*U+B*V+j*E);E=D*R+m*S+F*T+(D*U+m*V+F*E);e=c[e+192>>2]|0;if(!(((c[e+4>>2]|0)+ -21|0)>>>0<9)){V=1.0;i=h;return+V}g[h+224>>2]=G;g[h+228>>2]=H;g[h+232>>2]=I;g[h+236>>2]=0.0;if(l<G){g[h+224>>2]=l;U=l}else{U=G}if(k<H){g[h+228>>2]=k;V=k}else{V=H}if(E<I){g[h+232>>2]=E;R=E}else{R=I}g[h+208>>2]=G;g[h+212>>2]=H;g[h+216>>2]=I;g[h+220>>2]=0.0;if(G<l){g[h+208>>2]=l;S=l}else{S=G}if(H<k){g[h+212>>2]=k;T=k}else{T=H}if(I<E){g[h+216>>2]=E;Q=E}else{Q=I}W=+g[b+248>>2];g[h+224>>2]=U-W;g[h+228>>2]=V-W;g[h+232>>2]=R-W;g[h+208>>2]=W+S;g[h+212>>2]=W+T;g[h+216>>2]=W+Q;c[h>>2]=15920;g[h+4>>2]=o*p+q*r+s*t;g[h+8>>2]=o*u+q*v+s*w;g[h+12>>2]=o*x+q*y+s*z;g[h+16>>2]=0.0;g[h+20>>2]=A*p+B*r+j*t;g[h+24>>2]=A*u+B*v+j*w;g[h+28>>2]=A*x+B*y+j*z;g[h+32>>2]=0.0;g[h+36>>2]=D*p+m*r+F*t;g[h+40>>2]=D*u+m*v+F*w;g[h+44>>2]=D*x+m*y+F*z;g[h+48>>2]=0.0;g[h+52>>2]=G;g[h+56>>2]=H;g[h+60>>2]=I;g[h+64>>2]=0.0;g[h+68>>2]=o*J+q*K+s*L;g[h+72>>2]=o*M+q*N+s*O;g[h+76>>2]=o*P+q*C+s*n;g[h+80>>2]=0.0;g[h+84>>2]=A*J+B*K+j*L;g[h+88>>2]=A*M+B*N+j*O;g[h+92>>2]=A*P+B*C+j*n;g[h+96>>2]=0.0;g[h+100>>2]=D*J+m*K+F*L;g[h+104>>2]=D*M+m*N+F*O;g[h+108>>2]=D*P+m*C+F*n;g[h+112>>2]=0.0;g[h+116>>2]=l;g[h+120>>2]=k;g[h+124>>2]=E;g[h+128>>2]=0.0;g[h+196>>2]=W;g[h+200>>2]=+g[b+244>>2];if((e|0)==0){W=1.0;i=h;return+W}mc[c[(c[e>>2]|0)+64>>2]&63](e,h,h+224|0,h+208|0);j=+g[h+200>>2];if(!(j<+g[b+244>>2])){W=1.0;i=h;return+W}g[b+244>>2]=j;W=j;i=h;return+W}function vu(a){a=a|0;return}function wu(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function xu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0;e=i;i=i+784|0;g[e+712>>2]=1.0;c[e+716>>2]=0;c[e+720>>2]=0;c[e+724>>2]=0;c[e+728>>2]=0;g[e+732>>2]=1.0;c[e+736>>2]=0;c[e+740>>2]=0;c[e+744>>2]=0;c[e+748>>2]=0;g[e+752>>2]=1.0;f=e+756|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[e+536>>2]=7744;c[e+704>>2]=0;g[e+708>>2]=0.0;g[e+700>>2]=+g[b+200>>2];j=+g[b+196>>2];c[e+488>>2]=0;g[e+492>>2]=1.0;g[e+496>>2]=1.0;g[e+500>>2]=1.0;g[e+504>>2]=0.0;c[e+480>>2]=14168;c[e+484>>2]=8;g[e+508>>2]=j;g[e+524>>2]=j;c[e+384>>2]=0;g[e+388>>2]=1.0;g[e+392>>2]=1.0;g[e+396>>2]=1.0;g[e+400>>2]=0.0;g[e+420>>2]=.03999999910593033;c[e+428>>2]=0;c[e+376>>2]=13864;c[e+380>>2]=1;c[e+432>>2]=c[d+0>>2];c[e+436>>2]=c[d+4>>2];c[e+440>>2]=c[d+8>>2];c[e+444>>2]=c[d+12>>2];c[e+448>>2]=c[d+16>>2];c[e+452>>2]=c[d+20>>2];c[e+456>>2]=c[d+24>>2];c[e+460>>2]=c[d+28>>2];c[e+464>>2]=c[d+32>>2];c[e+468>>2]=c[d+36>>2];c[e+472>>2]=c[d+40>>2];c[e+476>>2]=c[d+44>>2];g[e+324>>2]=9999999747378752.0e-20;a[e+348>>0]=0;c[e>>2]=14480;c[e+4>>2]=e+16;c[e+8>>2]=e+480;c[e+12>>2]=e+376;if(dt(e,b+4|0,b+68|0,e+712|0,e+712|0,e+536|0)|0?(h=+g[e+700>>2],+g[b+200>>2]>h):0){g[b+200>>2]=h}c[e+376>>2]=13384;b=c[e+428>>2]|0;if((b|0)==0){i=e;return}Db[c[c[b>>2]>>2]&255](b);b=c[e+428>>2]|0;if((b|0)==0){i=e;return}c[4338]=(c[4338]|0)+1;dw(c[b+ -4>>2]|0);i=e;return}function yu(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function zu(a){a=a|0;return}function Au(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=16144;if((a[b+16>>0]|0)==0){dw(b);i=d;return}e=c[b+20>>2]|0;if((e|0)==0){dw(b);i=d;return}f=c[b+4>>2]|0;Fb[c[(c[f>>2]|0)+16>>2]&127](f,e);dw(b);i=d;return}function Bu(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=16144;if((a[b+16>>0]|0)==0){i=d;return}e=c[b+20>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Fb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function Cu(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,R=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0,ha=0,ia=0.0,ja=0.0,ka=0,la=0.0,ma=0.0,na=0.0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0;j=i;i=i+832|0;u=c[b+20>>2]|0;if((u|0)==0){u=c[b+4>>2]|0;u=Qb[c[(c[u>>2]|0)+12>>2]&31](u,c[d+8>>2]|0,c[e+8>>2]|0)|0;c[b+20>>2]=u;a[b+16>>0]=1}c[h+4>>2]=u;m=c[d+4>>2]|0;l=c[e+4>>2]|0;x=c[m+4>>2]|0;if((x|0)==10?(c[l+4>>2]|0)==10:0){n=+g[(c[b+20>>2]|0)+752>>2];ua=c[m+52>>2]|0;D=+g[m+(ua<<2)+28>>2];p=+g[m+(((ua+2|0)%3|0)<<2)+28>>2];va=c[l+52>>2]|0;C=+g[l+(va<<2)+28>>2];q=+g[l+(((va+2|0)%3|0)<<2)+28>>2];wa=c[d+12>>2]|0;b=c[e+12>>2]|0;t=+g[wa+(ua<<2)>>2];r=+g[wa+(ua<<2)+16>>2];s=+g[wa+(ua<<2)+32>>2];G=+g[b+(va<<2)>>2];E=+g[b+(va<<2)+16>>2];B=+g[b+(va<<2)+32>>2];A=+g[b+48>>2]- +g[wa+48>>2];z=+g[b+52>>2]- +g[wa+52>>2];y=+g[b+56>>2]- +g[wa+56>>2];H=1.0-(t*G+r*E+s*B)*(t*G+r*E+s*B);if(!(H==0.0)){I=(t*A+r*z+s*y-(t*G+r*E+s*B)*(G*A+E*z+B*y))/H;if(!(I<-D)){if(I>D){I=D}}else{I=-D}}else{I=0.0}H=(t*G+r*E+s*B)*I-(G*A+E*z+B*y);if(H<-C){H=(t*G+r*E+s*B)*-C+(t*A+r*z+s*y);if(!(H<-D)){if(H>D){C=-C}else{D=H;C=-C}}else{D=-D;C=-C}}else{if(H>C){H=C*(t*G+r*E+s*B)+(t*A+r*z+s*y);if(!(H<-D)){if(!(H>D)){D=H}}else{D=-D}}else{D=I;C=H}}G=G*C;E=E*C;B=B*C;A=G+(A-t*D);z=E+(z-r*D);C=B+(y-s*D);y=+Q(+(C*C+(A*A+z*z)));if(!(y-p-q>n)){do{if(C*C+(A*A+z*z)<=1.4210854715202004e-14){if(+P(+s)>.7071067690849304){na=1.0/+Q(+(r*r+s*s));g[j+320>>2]=0.0;g[j+324>>2]=-(s*na);g[j+328>>2]=r*na;A=0.0;s=-(s*na);r=r*na;break}else{s=1.0/+Q(+(t*t+r*r));g[j+320>>2]=-(r*s);g[j+324>>2]=t*s;g[j+328>>2]=0.0;A=-(r*s);s=t*s;r=0.0;break}}else{g[j+320>>2]=A*-(1.0/y);g[j+324>>2]=z*-(1.0/y);g[j+328>>2]=C*-(1.0/y);g[j+332>>2]=0.0;A=A*-(1.0/y);s=z*-(1.0/y);r=C*-(1.0/y)}}while(0);ma=q*s+(E+ +g[b+52>>2]);na=q*r+(B+ +g[b+56>>2]);g[j+304>>2]=q*A+(G+ +g[b+48>>2]);g[j+308>>2]=ma;g[j+312>>2]=na;g[j+316>>2]=0.0}if(y-p-q<n){hc[c[(c[h>>2]|0)+16>>2]&15](h,j+320|0,j+304|0,y-p-q);u=c[h+4>>2]|0}if((c[u+748>>2]|0)==0){i=j;return}d=c[u+740>>2]|0;b=c[(c[h+8>>2]|0)+8>>2]|0;if((d|0)==(b|0)){Xr(u,d+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Xr(u,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,b+4|0);i=j;return}}else{pa=l+4|0}g[j+296>>2]=999999984306749400.0;J=c[b+8>>2]|0;ga=c[b+12>>2]|0;c[j+88>>2]=11040;g[j+92>>2]=0.0;g[j+96>>2]=1.0;g[j+100>>2]=0.0;g[j+104>>2]=0.0;c[j+108>>2]=ga;c[j+112>>2]=J;c[j+116>>2]=m;c[j+120>>2]=l;c[j+124>>2]=x;c[j+128>>2]=c[pa>>2];g[j+132>>2]=+Tb[c[(c[m>>2]|0)+48>>2]&15](m);g[j+136>>2]=+Tb[c[(c[l>>2]|0)+48>>2]&15](l);a[j+140>>0]=0;c[j+148>>2]=-1;c[j+160>>2]=1;c[j+164>>2]=1;c[j+116>>2]=m;c[j+120>>2]=l;ma=+Tb[c[(c[m>>2]|0)+48>>2]&15](m);na=+Tb[c[(c[l>>2]|0)+48>>2]&15](l);na=ma+na+ +g[(c[b+20>>2]|0)+752>>2];g[j+296>>2]=na*na;x=c[d+12>>2]|0;c[j+168>>2]=c[x+0>>2];c[j+172>>2]=c[x+4>>2];c[j+176>>2]=c[x+8>>2];c[j+180>>2]=c[x+12>>2];J=j+184|0;c[J+0>>2]=c[x+16>>2];c[J+4>>2]=c[x+20>>2];c[J+8>>2]=c[x+24>>2];c[J+12>>2]=c[x+28>>2];ga=j+200|0;c[ga+0>>2]=c[x+32>>2];c[ga+4>>2]=c[x+36>>2];c[ga+8>>2]=c[x+40>>2];c[ga+12>>2]=c[x+44>>2];O=j+216|0;c[O+0>>2]=c[x+48>>2];c[O+4>>2]=c[x+52>>2];c[O+8>>2]=c[x+56>>2];c[O+12>>2]=c[x+60>>2];x=j+232|0;u=c[e+12>>2]|0;c[x+0>>2]=c[u+0>>2];c[x+4>>2]=c[u+4>>2];c[x+8>>2]=c[u+8>>2];c[x+12>>2]=c[u+12>>2];ha=j+248|0;c[ha+0>>2]=c[u+16>>2];c[ha+4>>2]=c[u+20>>2];c[ha+8>>2]=c[u+24>>2];c[ha+12>>2]=c[u+28>>2];aa=j+264|0;c[aa+0>>2]=c[u+32>>2];c[aa+4>>2]=c[u+36>>2];c[aa+8>>2]=c[u+40>>2];c[aa+12>>2]=c[u+44>>2];F=j+280|0;c[F+0>>2]=c[u+48>>2];c[F+4>>2]=c[u+52>>2];c[F+8>>2]=c[u+56>>2];c[F+12>>2]=c[u+60>>2];u=c[m+4>>2]|0;do{if((u|0)<7?(v=c[pa>>2]|0,(v|0)<7):0){c[j+80>>2]=16552;if((u|0)==0){r=0.0}else{r=+Tb[c[(c[m>>2]|0)+48>>2]&15](m);v=c[pa>>2]|0}if((v|0)==0){C=0.0}else{C=+Tb[c[(c[l>>2]|0)+48>>2]&15](l)}c[j+40>>2]=16360;c[j+44>>2]=h;g[j+64>>2]=r;g[j+68>>2]=C;a[j+76>>0]=0;u=c[m+52>>2]|0;if((u|0)!=0){v=c[l+52>>2]|0;if((v|0)==0){if((c[pa>>2]|0)!=1){break}v=j+32|0;a[v>>0]=1;u=j+28|0;c[u>>2]=0;o=j+20|0;c[o>>2]=0;k=j+24|0;c[k>>2]=0;x=c[e+12>>2]|0;ma=+g[l+56>>2];na=+g[l+60>>2];n=+g[l+64>>2];q=ma*+g[x>>2]+na*+g[x+4>>2]+n*+g[x+8>>2]+ +g[x+48>>2];p=ma*+g[x+16>>2]+na*+g[x+20>>2]+n*+g[x+24>>2]+ +g[x+52>>2];n=ma*+g[x+32>>2]+na*+g[x+36>>2]+n*+g[x+40>>2]+ +g[x+56>>2];c[4336]=(c[4336]|0)+1;x=cw(35)|0;if((x|0)==0){x=0}else{c[(x+19&-16)+ -4>>2]=x;x=x+19&-16}F=c[u>>2]|0;if((F|0)!=0){if((a[v>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[F+ -4>>2]|0)}c[u>>2]=0}a[v>>0]=1;c[u>>2]=x;c[k>>2]=1;F=c[o>>2]|0;g[x+(F<<4)>>2]=q;g[x+(F<<4)+4>>2]=p;g[x+(F<<4)+8>>2]=n;g[x+(F<<4)+12>>2]=0.0;F=c[o>>2]|0;c[o>>2]=F+1;x=c[e+12>>2]|0;ma=+g[l+72>>2];na=+g[l+76>>2];n=+g[l+80>>2];q=ma*+g[x>>2]+na*+g[x+4>>2]+n*+g[x+8>>2]+ +g[x+48>>2];p=ma*+g[x+16>>2]+na*+g[x+20>>2]+n*+g[x+24>>2]+ +g[x+52>>2];n=ma*+g[x+32>>2]+na*+g[x+36>>2]+n*+g[x+40>>2]+ +g[x+56>>2];x=c[k>>2]|0;if((F+1|0)==(x|0)){x=(F+1|0)==0?1:F+1<<1;if((F+1|0)<(x|0)){if((x|0)!=0?(c[4336]=(c[4336]|0)+1,oa=cw((x<<4|3)+16|0)|0,(oa|0)!=0):0){c[(oa+19&-16)+ -4>>2]=oa;J=oa+19&-16}else{J=0}if((F|0)>-1){O=0;do{wa=J+(O<<4)|0;va=(c[u>>2]|0)+(O<<4)|0;c[wa+0>>2]=c[va+0>>2];c[wa+4>>2]=c[va+4>>2];c[wa+8>>2]=c[va+8>>2];c[wa+12>>2]=c[va+12>>2];O=O+1|0}while((O|0)!=(F+1|0))}F=c[u>>2]|0;if((F|0)!=0){if((a[v>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[F+ -4>>2]|0)}c[u>>2]=0}a[v>>0]=1;c[u>>2]=J;c[k>>2]=x;J=c[o>>2]|0}else{J=F+1|0;x=F+1|0}}else{J=F+1|0}F=c[u>>2]|0;g[F+(J<<4)>>2]=q;g[F+(J<<4)+4>>2]=p;g[F+(J<<4)+8>>2]=n;g[F+(J<<4)+12>>2]=0.0;J=J+1|0;c[o>>2]=J;wa=c[e+12>>2]|0;ma=+g[l+88>>2];na=+g[l+92>>2];p=+g[l+96>>2];n=ma*+g[wa>>2]+na*+g[wa+4>>2]+p*+g[wa+8>>2]+ +g[wa+48>>2];q=ma*+g[wa+16>>2]+na*+g[wa+20>>2]+p*+g[wa+24>>2]+ +g[wa+52>>2];p=ma*+g[wa+32>>2]+na*+g[wa+36>>2]+p*+g[wa+40>>2]+ +g[wa+56>>2];if((J|0)==(x|0)){e=(x|0)==0?1:x<<1;if((x|0)<(e|0)){if((e|0)!=0?(c[4336]=(c[4336]|0)+1,ka=cw((e<<4|3)+16|0)|0,(ka|0)!=0):0){c[(ka+19&-16)+ -4>>2]=ka;F=ka+19&-16}else{F=0}if((x|0)>0){J=0;do{wa=F+(J<<4)|0;va=(c[u>>2]|0)+(J<<4)|0;c[wa+0>>2]=c[va+0>>2];c[wa+4>>2]=c[va+4>>2];c[wa+8>>2]=c[va+8>>2];c[wa+12>>2]=c[va+12>>2];J=J+1|0}while((J|0)!=(x|0))}x=c[u>>2]|0;if((x|0)!=0){if((a[v>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[x+ -4>>2]|0)}c[u>>2]=0}a[v>>0]=1;c[u>>2]=F;c[k>>2]=e;x=c[o>>2]|0}}else{x=J}g[F+(x<<4)>>2]=n;g[F+(x<<4)+4>>2]=q;g[F+(x<<4)+8>>2]=p;g[F+(x<<4)+12>>2]=0.0;c[o>>2]=(c[o>>2]|0)+1;n=+g[(c[b+20>>2]|0)+752>>2];_q(j+88|0,j+168|0,j+80|0,c[f+20>>2]|0,0);r=+g[j+92>>2];q=+g[j+96>>2];p=+g[j+100>>2];if(r*r+q*q+p*p>1.1920928955078125e-7){ma=1.0/(r*r+q*q+p*p);g[j>>2]=r*ma;g[j+4>>2]=q*ma;g[j+8>>2]=p*ma;g[j+12>>2]=0.0;ma=+g[j+144>>2];na=+Tb[c[(c[m>>2]|0)+48>>2]&15](m);na=ma-na- +Tb[c[(c[l>>2]|0)+48>>2]&15](l);qv(j,c[m+52>>2]|0,c[d+12>>2]|0,j+16|0,na-n,n,h)}do{if((a[b+16>>0]|0)!=0?(w=c[h+4>>2]|0,(c[w+748>>2]|0)!=0):0){b=c[w+740>>2]|0;d=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(d|0)){Xr(w,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);break}else{Xr(w,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,d+4|0);break}}}while(0);h=c[u>>2]|0;if((h|0)!=0){if((a[v>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[h+ -4>>2]|0)}c[u>>2]=0}a[v>>0]=1;c[u>>2]=0;c[o>>2]=0;c[k>>2]=0;i=j;return}n=+g[(c[b+20>>2]|0)+752>>2];if((a[f+24>>0]|0)==0){_q(j+88|0,j+168|0,j+40|0,c[f+20>>2]|0,0);p=+g[j+72>>2];if((a[j+76>>0]|0)!=0&p<0.0){N=+g[j+48>>2];K=+g[j+52>>2];L=+g[j+56>>2];M=+g[j+60>>2];o=105}}else{w=c[d+12>>2]|0;f=c[e+12>>2]|0;c[4252]=(c[4252]|0)+1;ia=+g[u+64>>2];ja=+g[u+68>>2];C=+g[w+4>>2];la=+g[u+72>>2];G=+g[w+8>>2];E=+g[w+16>>2];H=+g[w+20>>2];U=+g[w+24>>2];R=+g[w+32>>2];V=+g[w+36>>2];W=+g[w+40>>2];ma=+g[v+64>>2];na=+g[v+68>>2];p=+g[v+72>>2];r=ia*+g[w>>2]+ja*C+la*G+ +g[w+48>>2]-(ma*+g[f>>2]+na*+g[f+4>>2]+p*+g[f+8>>2]+ +g[f+48>>2]);q=ia*E+ja*H+la*U+ +g[w+52>>2]-(ma*+g[f+16>>2]+na*+g[f+20>>2]+p*+g[f+24>>2]+ +g[f+52>>2]);p=ia*R+ja*V+la*W+ +g[w+56>>2]-(ma*+g[f+32>>2]+na*+g[f+36>>2]+p*+g[f+40>>2]+ +g[f+56>>2]);x=c[u+28>>2]|0;a:do{if((x|0)>0){I=3.4028234663852886e+38;F=0;N=0.0;K=0.0;L=0.0;M=0.0;D=0.0;while(1){wa=c[u+36>>2]|0;la=+g[wa+(F*36|0)+20>>2];ma=+g[wa+(F*36|0)+24>>2];na=+g[wa+(F*36|0)+28>>2];C=la*+g[w>>2]+ma*C+na*G;E=la*E+ma*H+na*U;G=la*R+ma*V+na*W;g[j+400>>2]=C;g[j+404>>2]=E;g[j+408>>2]=G;g[j+412>>2]=0.0;if(r*C+q*E+p*G<0.0){g[j+400>>2]=C*-1.0;g[j+404>>2]=E*-1.0;g[j+408>>2]=G*-1.0;C=C*-1.0;E=E*-1.0;G=G*-1.0}c[4248]=(c[4248]|0)+1;if(pv(w,f,r,q,p,C,E,G,u,v,I)|0){c[4250]=(c[4250]|0)+1;$u(u,w,j+400|0,j+808|0,j+784|0,j+464|0,j+448|0);$u(v,f,j+400|0,j+720|0,j+480|0,j+432|0,j+416|0);E=+g[j+784>>2];C=+g[j+720>>2];if(!(E<C)?(A=+g[j+480>>2],B=+g[j+808>>2],!(A<B)):0){J=1;D=E-C<A-B?E-C:A-B}else{J=0}if(!J){u=0;break a}if(D<I){I=D;N=+g[j+400>>2];K=+g[j+404>>2];L=+g[j+408>>2];M=+g[j+412>>2]}}F=F+1|0;if((F|0)>=(x|0)){o=52;break a}C=+g[w+4>>2];G=+g[w+8>>2];E=+g[w+16>>2];H=+g[w+20>>2];U=+g[w+24>>2];R=+g[w+32>>2];V=+g[w+36>>2];W=+g[w+40>>2]}}else{I=3.4028234663852886e+38;N=0.0;K=0.0;L=0.0;M=0.0;o=52}}while(0);b:do{if((o|0)==52){x=c[v+28>>2]|0;if((x|0)>0){F=0;A=0.0;do{wa=c[v+36>>2]|0;ma=+g[wa+(F*36|0)+20>>2];na=+g[wa+(F*36|0)+24>>2];C=+g[wa+(F*36|0)+28>>2];B=ma*+g[f>>2]+na*+g[f+4>>2]+C*+g[f+8>>2];D=ma*+g[f+16>>2]+na*+g[f+20>>2]+C*+g[f+24>>2];C=ma*+g[f+32>>2]+na*+g[f+36>>2]+C*+g[f+40>>2];g[j+384>>2]=B;g[j+388>>2]=D;g[j+392>>2]=C;g[j+396>>2]=0.0;if(r*B+q*D+p*C<0.0){g[j+384>>2]=B*-1.0;g[j+388>>2]=D*-1.0;g[j+392>>2]=C*-1.0;B=B*-1.0;D=D*-1.0;C=C*-1.0}c[4248]=(c[4248]|0)+1;if(pv(w,f,r,q,p,B,D,C,u,v,I)|0){c[4250]=(c[4250]|0)+1;$u(u,w,j+384|0,j+808|0,j+784|0,j+464|0,j+448|0);$u(v,f,j+384|0,j+720|0,j+480|0,j+432|0,j+416|0);C=+g[j+784>>2];B=+g[j+720>>2];if(!(C<B)?(z=+g[j+480>>2],y=+g[j+808>>2],!(z<y)):0){J=1;A=C-B<z-y?C-B:z-y}else{J=0}if(!J){u=0;break b}if(A<I){I=A;N=+g[j+384>>2];K=+g[j+388>>2];L=+g[j+392>>2];M=+g[j+396>>2]}}F=F+1|0}while((F|0)<(x|0))}F=c[u+48>>2]|0;if((F|0)>0){aa=c[v+48>>2]|0;B=0.0;C=0.0;D=0.0;E=0.0;G=0.0;H=0.0;x=0;J=-1;O=-1;ca=0.0;R=0.0;ea=0.0;W=0.0;da=0.0;Z=0.0;ba=0.0;$=0.0;_=0.0;Y=0.0;X=0.0;V=0.0;U=0.0;do{wa=c[u+56>>2]|0;ma=+g[wa+(x<<4)>>2];na=+g[wa+(x<<4)+4>>2];z=+g[wa+(x<<4)+8>>2];A=ma*+g[w>>2]+na*+g[w+4>>2]+z*+g[w+8>>2];y=ma*+g[w+16>>2]+na*+g[w+20>>2]+z*+g[w+24>>2];z=ma*+g[w+32>>2]+na*+g[w+36>>2]+z*+g[w+40>>2];if((aa|0)>0){F=0;do{wa=c[v+56>>2]|0;ma=+g[wa+(F<<4)>>2];na=+g[wa+(F<<4)+4>>2];ja=+g[wa+(F<<4)+8>>2];fa=ma*+g[f>>2]+na*+g[f+4>>2]+ja*+g[f+8>>2];ia=ma*+g[f+16>>2]+na*+g[f+20>>2]+ja*+g[f+24>>2];ja=ma*+g[f+32>>2]+na*+g[f+36>>2]+ja*+g[f+40>>2];g[j+368>>2]=y*ja-z*ia;g[j+372>>2]=z*fa-A*ja;g[j+376>>2]=A*ia-y*fa;g[j+380>>2]=0.0;if(!((!(+P(+(y*ja-z*ia))>1.0e-6)?!(+P(+(z*fa-A*ja))>1.0e-6):0)?!(+P(+(A*ia-y*fa))>1.0e-6):0)){ma=1.0/+Q(+((y*ja-z*ia)*(y*ja-z*ia)+(z*fa-A*ja)*(z*fa-A*ja)+(A*ia-y*fa)*(A*ia-y*fa)));la=(y*ja-z*ia)*ma;g[j+368>>2]=la;na=(z*fa-A*ja)*ma;g[j+372>>2]=na;ma=(A*ia-y*fa)*ma;g[j+376>>2]=ma;if(r*la+q*na+p*ma<0.0){g[j+368>>2]=la*-1.0;g[j+372>>2]=na*-1.0;g[j+376>>2]=ma*-1.0;la=la*-1.0;na=na*-1.0;ma=ma*-1.0}c[4248]=(c[4248]|0)+1;if(pv(w,f,r,q,p,la,na,ma,u,v,I)|0){c[4250]=(c[4250]|0)+1;$u(u,w,j+368|0,j+808|0,j+784|0,j+464|0,j+448|0);$u(v,f,j+368|0,j+720|0,j+480|0,j+432|0,j+416|0);ma=+g[j+784>>2];la=+g[j+720>>2];do{if(!(ma<la)?(s=+g[j+480>>2],t=+g[j+808>>2],!(s<t)):0){if(ma-la<s-t){aa=1;ca=ma-la;ea=+g[j+448>>2];da=+g[j+452>>2];ba=+g[j+456>>2];_=+g[j+432>>2];X=+g[j+436>>2];U=+g[j+440>>2];break}else{aa=1;ca=s-t;ea=+g[j+464>>2];da=+g[j+468>>2];ba=+g[j+472>>2];_=+g[j+416>>2];X=+g[j+420>>2];U=+g[j+424>>2];break}}else{aa=0}}while(0);if(!aa){u=0;break b}if(ca<I){B=ja;C=z;D=ia;E=y;G=fa;H=A;I=ca;J=x;O=F;N=+g[j+368>>2];K=+g[j+372>>2];L=+g[j+376>>2];M=+g[j+380>>2];R=ea;W=da;Z=ba;$=_;Y=X;V=U}}}F=F+1|0;aa=c[v+48>>2]|0}while((F|0)<(aa|0));F=c[u+48>>2]|0}x=x+1|0}while((x|0)<(F|0))}else{B=0.0;C=0.0;D=0.0;E=0.0;G=0.0;H=0.0;J=-1;O=-1;R=0.0;W=0.0;Z=0.0;$=0.0;Y=0.0;V=0.0}if((O|J|0)>-1){y=$-R;t=Y-W;s=V-Z;R=H*G+E*D+C*B;I=H*y+E*t+C*s;A=G*y+D*t+B*s;if(!(1.0-R*R==0.0)){if(!((I-R*A)/(1.0-R*R)<-1.0000000150474662e+30)){if((I-R*A)/(1.0-R*R)>1.0000000150474662e+30){z=1.0000000150474662e+30}else{z=(I-R*A)/(1.0-R*R)}}else{z=-1.0000000150474662e+30}}else{z=0.0}A=R*z-A;if(A<-1.0000000150474662e+30){if(!(R*-1.0000000150474662e+30+I<-1.0000000150474662e+30)){if(R*-1.0000000150474662e+30+I>1.0000000150474662e+30){z=1.0000000150474662e+30;I=-1.0000000150474662e+30}else{z=R*-1.0000000150474662e+30+I;I=-1.0000000150474662e+30}}else{z=-1.0000000150474662e+30;I=-1.0000000150474662e+30}}else{if(A>1.0000000150474662e+30){if(!(R*1.0000000150474662e+30+I<-1.0000000150474662e+30)){if(R*1.0000000150474662e+30+I>1.0000000150474662e+30){z=1.0000000150474662e+30;I=1.0000000150474662e+30}else{z=R*1.0000000150474662e+30+I;I=1.0000000150474662e+30}}else{z=-1.0000000150474662e+30;I=1.0000000150474662e+30}}else{I=A}}A=G*I;D=I*D;B=I*B;y=y-H*z+A;t=t-z*E+D;z=s-z*C+B;g[j+352>>2]=y;g[j+356>>2]=t;g[j+360>>2]=z;g[j+364>>2]=0.0;if(y*y+t*t+z*z>1.1920928955078125e-7){s=+Q(+(y*y+t*t+z*z));g[j+352>>2]=y*(1.0/s);g[j+356>>2]=1.0/s*t;g[j+360>>2]=1.0/s*z;if(y*(1.0/s)*r+1.0/s*t*q+1.0/s*z*p<0.0){g[j+352>>2]=y*(1.0/s)*-1.0;g[j+356>>2]=1.0/s*t*-1.0;g[j+360>>2]=1.0/s*z*-1.0}g[j+336>>2]=$+A;g[j+340>>2]=Y+D;g[j+344>>2]=V+B;g[j+348>>2]=0.0;hc[c[(c[h>>2]|0)+16>>2]&15](h,j+352|0,j+336|0,-s)}}if(r*N+q*K+p*L<0.0){u=1;N=-N;K=-K;L=-L;M=0.0}else{u=1}}}while(0);if(u){p=-1.0000000150474662e+30;o=105}}if((o|0)==105){m=c[m+52>>2]|0;l=c[l+52>>2]|0;d=c[d+12>>2]|0;e=c[e+12>>2]|0;p=p-n;s=1.0/+Q(+(N*N+K*K+L*L));q=N*s;r=K*s;s=L*s;g[j+808>>2]=q;g[j+812>>2]=r;g[j+816>>2]=s;g[j+820>>2]=M;u=c[l+28>>2]|0;o=c[l+36>>2]|0;if((u|0)>0){G=+g[e>>2];H=+g[e+4>>2];E=+g[e+8>>2];D=+g[e+16>>2];I=+g[e+20>>2];y=+g[e+24>>2];t=+g[e+32>>2];L=+g[e+36>>2];K=+g[e+40>>2];w=-1;C=-3.4028234663852886e+38;v=0;while(1){B=+g[o+(v*36|0)+20>>2];A=+g[o+(v*36|0)+24>>2];z=+g[o+(v*36|0)+28>>2];f=(B*G+A*H+z*E)*q+(B*D+A*I+z*y)*r+(B*t+A*L+z*K)*s>C;w=f?v:w;v=v+1|0;if((v|0)>=(u|0)){break}else{C=f?(B*G+A*H+z*E)*q+(B*D+A*I+z*y)*r+(B*t+A*L+z*K)*s:C}}}else{w=-1}a[j+800>>0]=1;u=j+796|0;c[u>>2]=0;c[j+788>>2]=0;c[j+792>>2]=0;v=c[o+(w*36|0)+4>>2]|0;c:do{if((v|0)>0){o=o+(w*36|0)+12|0;J=0;x=0;O=0;f=0;while(1){wa=c[(c[o>>2]|0)+(f<<2)>>2]|0;va=c[l+16>>2]|0;ma=+g[va+(wa<<4)>>2];na=+g[va+(wa<<4)+4>>2];r=+g[va+(wa<<4)+8>>2];q=ma*+g[e>>2]+na*+g[e+4>>2]+r*+g[e+8>>2]+ +g[e+48>>2];s=ma*+g[e+16>>2]+na*+g[e+20>>2]+r*+g[e+24>>2]+ +g[e+52>>2];r=ma*+g[e+32>>2]+na*+g[e+36>>2]+r*+g[e+40>>2]+ +g[e+56>>2];if((J|0)==(x|0)){F=(x|0)==0?1:x<<1;if((x|0)<(F|0)){if((F|0)!=0?(c[4336]=(c[4336]|0)+1,k=cw((F<<4|3)+16|0)|0,(k|0)!=0):0){c[(k+19&-16)+ -4>>2]=k;J=k+19&-16}else{J=0}if((x|0)>0){O=0;do{wa=J+(O<<4)|0;va=(c[u>>2]|0)+(O<<4)|0;c[wa+0>>2]=c[va+0>>2];c[wa+4>>2]=c[va+4>>2];c[wa+8>>2]=c[va+8>>2];c[wa+12>>2]=c[va+12>>2];O=O+1|0}while((O|0)!=(x|0))}x=c[u>>2]|0;if((x|0)!=0){if((a[j+800>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[x+ -4>>2]|0)}c[u>>2]=0}a[j+800>>0]=1;c[u>>2]=J;c[j+792>>2]=F;F=J;x=c[j+788>>2]|0}else{F=O}}else{F=O;x=J}g[F+(x<<4)>>2]=q;g[F+(x<<4)+4>>2]=s;g[F+(x<<4)+8>>2]=r;g[F+(x<<4)+12>>2]=0.0;J=(c[j+788>>2]|0)+1|0;c[j+788>>2]=J;f=f+1|0;if((f|0)>=(v|0)){break c}x=c[j+792>>2]|0;O=F}}else{F=0}}while(0);if((w|0)>-1){qv(j+808|0,m,d,j+784|0,p,n,h);F=c[u>>2]|0}if((F|0)!=0){if((a[j+800>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[F+ -4>>2]|0)}c[u>>2]=0}}if((a[b+16>>0]|0)==0){i=j;return}d=c[h+4>>2]|0;if((c[d+748>>2]|0)==0){i=j;return}b=c[d+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;if((b|0)==(e|0)){Xr(d,b+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Xr(d,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,e+4|0);i=j;return}}}}while(0);_q(j+88|0,j+168|0,h,c[f+20>>2]|0,0);if(((c[b+28>>2]|0)!=0?(c[(c[h+4>>2]|0)+748>>2]|0)<(c[b+32>>2]|0):0)?(n=+g[j+92>>2],p=+g[j+96>>2],q=+g[j+100>>2],n*n+p*p+q*q>1.1920928955078125e-7):0){r=1.0/(n*n+p*p+q*q);if(+P(+(q*r))>.7071067690849304){A=1.0/+Q(+(q*r*q*r+p*r*p*r));y=0.0;z=-(q*r*A);A=p*r*A}else{z=1.0/+Q(+(n*r*n*r+p*r*p*r));y=-(p*r*z);z=n*r*z;A=0.0}s=+Tb[c[(c[m>>2]|0)+16>>2]&15](m);t=+Tb[c[(c[l>>2]|0)+16>>2]&15](l);B=.019999999552965164/(s<t?s:t);if(s<t){c[j+720>>2]=c[j+168>>2];c[j+724>>2]=c[j+172>>2];c[j+728>>2]=c[j+176>>2];c[j+732>>2]=c[j+180>>2];c[j+736>>2]=c[J+0>>2];c[j+740>>2]=c[J+4>>2];c[j+744>>2]=c[J+8>>2];c[j+748>>2]=c[J+12>>2];c[j+752>>2]=c[ga+0>>2];c[j+756>>2]=c[ga+4>>2];c[j+760>>2]=c[ga+8>>2];c[j+764>>2]=c[ga+12>>2];c[j+768>>2]=c[O+0>>2];c[j+772>>2]=c[O+4>>2];c[j+776>>2]=c[O+8>>2];c[j+780>>2]=c[O+12>>2]}else{c[j+720>>2]=c[x+0>>2];c[j+724>>2]=c[x+4>>2];c[j+728>>2]=c[x+8>>2];c[j+732>>2]=c[x+12>>2];c[j+736>>2]=c[ha+0>>2];c[j+740>>2]=c[ha+4>>2];c[j+744>>2]=c[ha+8>>2];c[j+748>>2]=c[ha+12>>2];c[j+752>>2]=c[aa+0>>2];c[j+756>>2]=c[aa+4>>2];c[j+760>>2]=c[aa+8>>2];c[j+764>>2]=c[aa+12>>2];c[j+768>>2]=c[F+0>>2];c[j+772>>2]=c[F+4>>2];c[j+776>>2]=c[F+8>>2];c[j+780>>2]=c[F+12>>2]}va=c[b+28>>2]|0;if((va|0)>0){C=A*A+(z*z+y*y);B=B>.39269909262657166?.19634954631328583:B*.5;ka=j+516|0;w=j+532|0;u=j+548|0;o=j+564|0;oa=j+580|0;qa=j+596|0;ua=j+612|0;ta=j+628|0;sa=j+644|0;l=j+660|0;k=j+736|0;v=j+676|0;m=j+752|0;ra=j+692|0;pa=j+768|0;if(C>1.1920928955078125e-7){C=+T(+B)/+Q(+C);y=y*C;z=z*C;A=A*C;B=+S(+B);C=+Q(+(q*r*q*r+(n*r*n*r+p*r*p*r)));if(s<t){wa=0;do{Y=+(wa|0)*(6.2831854820251465/+(va|0))*.5;ja=+T(+Y)/C;Y=+S(+Y);da=A*-(p*r*ja)+(y*Y+B*-(n*r*ja))-z*-(q*r*ja);ma=y*-(q*r*ja)+(z*Y+B*-(p*r*ja))-A*-(n*r*ja);ea=z*-(n*r*ja)+(A*Y+B*-(q*r*ja))-y*-(p*r*ja);X=B*Y-y*-(n*r*ja)-z*-(p*r*ja)-A*-(q*r*ja);ia=q*r*ja*ma+(n*r*ja*X+Y*da)-p*r*ja*ea;la=n*r*ja*ea+(Y*ma+p*r*ja*X)-q*r*ja*da;W=p*r*ja*da+(q*r*ja*X+Y*ea)-n*r*ja*ma;ea=Y*X-n*r*ja*da-p*r*ja*ma-q*r*ja*ea;ja=ia*(2.0/(ea*ea+(W*W+(ia*ia+la*la))));ma=la*(2.0/(ea*ea+(W*W+(ia*ia+la*la))));da=W*(2.0/(ea*ea+(W*W+(ia*ia+la*la))));xa=c[d+12>>2]|0;X=+g[xa>>2];Y=+g[xa+16>>2];Z=+g[xa+32>>2];_=+g[xa+4>>2];$=+g[xa+20>>2];ba=+g[xa+36>>2];ca=+g[xa+8>>2];fa=+g[xa+24>>2];na=+g[xa+40>>2];g[j+168>>2]=(ia*da+ea*ma)*Z+(Y*(ia*ma-ea*da)+X*(1.0-(la*ma+W*da)));g[j+172>>2]=(1.0-(la*ma+W*da))*_+(ia*ma-ea*da)*$+(ia*da+ea*ma)*ba;g[j+176>>2]=(1.0-(la*ma+W*da))*ca+(ia*ma-ea*da)*fa+(ia*da+ea*ma)*na;g[j+180>>2]=0.0;g[j+184>>2]=(la*da-ea*ja)*Z+(X*(ia*ma+ea*da)+Y*(1.0-(ia*ja+W*da)));g[j+188>>2]=(ia*ma+ea*da)*_+(1.0-(ia*ja+W*da))*$+(la*da-ea*ja)*ba;g[j+192>>2]=(ia*ma+ea*da)*ca+(1.0-(ia*ja+W*da))*fa+(la*da-ea*ja)*na;g[j+196>>2]=0.0;g[j+200>>2]=X*(ia*da-ea*ma)+Y*(la*da+ea*ja)+Z*(1.0-(ia*ja+la*ma));g[j+204>>2]=(ia*da-ea*ma)*_+(la*da+ea*ja)*$+(1.0-(ia*ja+la*ma))*ba;g[j+208>>2]=(ia*da-ea*ma)*ca+(la*da+ea*ja)*fa+(1.0-(ia*ja+la*ma))*na;g[j+212>>2]=0.0;xa=c[e+12>>2]|0;c[x+0>>2]=c[xa+0>>2];c[x+4>>2]=c[xa+4>>2];c[x+8>>2]=c[xa+8>>2];c[x+12>>2]=c[xa+12>>2];c[ha+0>>2]=c[xa+16>>2];c[ha+4>>2]=c[xa+20>>2];c[ha+8>>2]=c[xa+24>>2];c[ha+12>>2]=c[xa+28>>2];c[aa+0>>2]=c[xa+32>>2];c[aa+4>>2]=c[xa+36>>2];c[aa+8>>2]=c[xa+40>>2];c[aa+12>>2]=c[xa+44>>2];c[F+0>>2]=c[xa+48>>2];c[F+4>>2]=c[xa+52>>2];c[F+8>>2]=c[xa+56>>2];c[F+12>>2]=c[xa+60>>2];xa=c[f+20>>2]|0;c[j+480>>2]=16280;c[j+512>>2]=h;c[ka+0>>2]=c[j+168>>2];c[ka+4>>2]=c[j+172>>2];c[ka+8>>2]=c[j+176>>2];c[ka+12>>2]=c[j+180>>2];c[w+0>>2]=c[J+0>>2];c[w+4>>2]=c[J+4>>2];c[w+8>>2]=c[J+8>>2];c[w+12>>2]=c[J+12>>2];c[u+0>>2]=c[ga+0>>2];c[u+4>>2]=c[ga+4>>2];c[u+8>>2]=c[ga+8>>2];c[u+12>>2]=c[ga+12>>2];c[o+0>>2]=c[O+0>>2];c[o+4>>2]=c[O+4>>2];c[o+8>>2]=c[O+8>>2];c[o+12>>2]=c[O+12>>2];c[oa+0>>2]=c[x+0>>2];c[oa+4>>2]=c[x+4>>2];c[oa+8>>2]=c[x+8>>2];c[oa+12>>2]=c[x+12>>2];c[qa+0>>2]=c[ha+0>>2];c[qa+4>>2]=c[ha+4>>2];c[qa+8>>2]=c[ha+8>>2];c[qa+12>>2]=c[ha+12>>2];c[ua+0>>2]=c[aa+0>>2];c[ua+4>>2]=c[aa+4>>2];c[ua+8>>2]=c[aa+8>>2];c[ua+12>>2]=c[aa+12>>2];c[ta+0>>2]=c[F+0>>2];c[ta+4>>2]=c[F+4>>2];c[ta+8>>2]=c[F+8>>2];c[ta+12>>2]=c[F+12>>2];c[sa+0>>2]=c[j+720>>2];c[sa+4>>2]=c[j+724>>2];c[sa+8>>2]=c[j+728>>2];c[sa+12>>2]=c[j+732>>2];c[l+0>>2]=c[k+0>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];c[v+0>>2]=c[m+0>>2];c[v+4>>2]=c[m+4>>2];c[v+8>>2]=c[m+8>>2];c[v+12>>2]=c[m+12>>2];c[ra+0>>2]=c[pa+0>>2];c[ra+4>>2]=c[pa+4>>2];c[ra+8>>2]=c[pa+8>>2];c[ra+12>>2]=c[pa+12>>2];a[j+708>>0]=s<t|0;c[j+712>>2]=xa;_q(j+88|0,j+168|0,j+480|0,xa,0);va=c[b+28>>2]|0;wa=wa+1|0}while((wa|0)<(va|0))}else{wa=0;do{Y=+(wa|0)*(6.2831854820251465/+(va|0))*.5;ja=+T(+Y)/C;Y=+S(+Y);xa=c[d+12>>2]|0;c[j+168>>2]=c[xa+0>>2];c[j+172>>2]=c[xa+4>>2];c[j+176>>2]=c[xa+8>>2];c[j+180>>2]=c[xa+12>>2];c[J+0>>2]=c[xa+16>>2];c[J+4>>2]=c[xa+20>>2];c[J+8>>2]=c[xa+24>>2];c[J+12>>2]=c[xa+28>>2];c[ga+0>>2]=c[xa+32>>2];c[ga+4>>2]=c[xa+36>>2];c[ga+8>>2]=c[xa+40>>2];c[ga+12>>2]=c[xa+44>>2];c[O+0>>2]=c[xa+48>>2];c[O+4>>2]=c[xa+52>>2];c[O+8>>2]=c[xa+56>>2];c[O+12>>2]=c[xa+60>>2];da=A*-(p*r*ja)+(y*Y+B*-(n*r*ja))-z*-(q*r*ja);ma=y*-(q*r*ja)+(z*Y+B*-(p*r*ja))-A*-(n*r*ja);ea=z*-(n*r*ja)+(A*Y+B*-(q*r*ja))-y*-(p*r*ja);X=B*Y-y*-(n*r*ja)-z*-(p*r*ja)-A*-(q*r*ja);ia=q*r*ja*ma+(n*r*ja*X+Y*da)-p*r*ja*ea;la=n*r*ja*ea+(Y*ma+p*r*ja*X)-q*r*ja*da;W=p*r*ja*da+(q*r*ja*X+Y*ea)-n*r*ja*ma;ea=Y*X-n*r*ja*da-p*r*ja*ma-q*r*ja*ea;ja=ia*(2.0/(ea*ea+(W*W+(ia*ia+la*la))));ma=la*(2.0/(ea*ea+(W*W+(ia*ia+la*la))));da=W*(2.0/(ea*ea+(W*W+(ia*ia+la*la))));xa=c[e+12>>2]|0;X=+g[xa>>2];Y=+g[xa+16>>2];Z=+g[xa+32>>2];_=+g[xa+4>>2];$=+g[xa+20>>2];ba=+g[xa+36>>2];ca=+g[xa+8>>2];fa=+g[xa+24>>2];na=+g[xa+40>>2];g[j+232>>2]=(ia*da+ea*ma)*Z+(Y*(ia*ma-ea*da)+X*(1.0-(la*ma+W*da)));g[j+236>>2]=(1.0-(la*ma+W*da))*_+(ia*ma-ea*da)*$+(ia*da+ea*ma)*ba;g[j+240>>2]=(1.0-(la*ma+W*da))*ca+(ia*ma-ea*da)*fa+(ia*da+ea*ma)*na;g[j+244>>2]=0.0;g[j+248>>2]=(la*da-ea*ja)*Z+(X*(ia*ma+ea*da)+Y*(1.0-(ia*ja+W*da)));g[j+252>>2]=(ia*ma+ea*da)*_+(1.0-(ia*ja+W*da))*$+(la*da-ea*ja)*ba;g[j+256>>2]=(ia*ma+ea*da)*ca+(1.0-(ia*ja+W*da))*fa+(la*da-ea*ja)*na;g[j+260>>2]=0.0;g[j+264>>2]=X*(ia*da-ea*ma)+Y*(la*da+ea*ja)+Z*(1.0-(ia*ja+la*ma));g[j+268>>2]=(ia*da-ea*ma)*_+(la*da+ea*ja)*$+(1.0-(ia*ja+la*ma))*ba;g[j+272>>2]=(ia*da-ea*ma)*ca+(la*da+ea*ja)*fa+(1.0-(ia*ja+la*ma))*na;g[j+276>>2]=0.0;xa=c[f+20>>2]|0;c[j+480>>2]=16280;c[j+512>>2]=h;c[ka+0>>2]=c[j+168>>2];c[ka+4>>2]=c[j+172>>2];c[ka+8>>2]=c[j+176>>2];c[ka+12>>2]=c[j+180>>2];c[w+0>>2]=c[J+0>>2];c[w+4>>2]=c[J+4>>2];c[w+8>>2]=c[J+8>>2];c[w+12>>2]=c[J+12>>2];c[u+0>>2]=c[ga+0>>2];c[u+4>>2]=c[ga+4>>2];c[u+8>>2]=c[ga+8>>2];c[u+12>>2]=c[ga+12>>2];c[o+0>>2]=c[O+0>>2];c[o+4>>2]=c[O+4>>2];c[o+8>>2]=c[O+8>>2];c[o+12>>2]=c[O+12>>2];c[oa+0>>2]=c[x+0>>2];c[oa+4>>2]=c[x+4>>2];c[oa+8>>2]=c[x+8>>2];c[oa+12>>2]=c[x+12>>2];c[qa+0>>2]=c[ha+0>>2];c[qa+4>>2]=c[ha+4>>2];c[qa+8>>2]=c[ha+8>>2];c[qa+12>>2]=c[ha+12>>2];c[ua+0>>2]=c[aa+0>>2];c[ua+4>>2]=c[aa+4>>2];c[ua+8>>2]=c[aa+8>>2];c[ua+12>>2]=c[aa+12>>2];c[ta+0>>2]=c[F+0>>2];c[ta+4>>2]=c[F+4>>2];c[ta+8>>2]=c[F+8>>2];c[ta+12>>2]=c[F+12>>2];c[sa+0>>2]=c[j+720>>2];c[sa+4>>2]=c[j+724>>2];c[sa+8>>2]=c[j+728>>2];c[sa+12>>2]=c[j+732>>2];c[l+0>>2]=c[k+0>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];c[v+0>>2]=c[m+0>>2];c[v+4>>2]=c[m+4>>2];c[v+8>>2]=c[m+8>>2];c[v+12>>2]=c[m+12>>2];c[ra+0>>2]=c[pa+0>>2];c[ra+4>>2]=c[pa+4>>2];c[ra+8>>2]=c[pa+8>>2];c[ra+12>>2]=c[pa+12>>2];a[j+708>>0]=s<t|0;c[j+712>>2]=xa;_q(j+88|0,j+168|0,j+480|0,xa,0);va=c[b+28>>2]|0;wa=wa+1|0}while((wa|0)<(va|0))}}else{if(s<t){d=0;do{d=d+1|0}while((d|0)<(va|0))}else{d=0;do{d=d+1|0}while((d|0)<(va|0))}}}}if((a[b+16>>0]|0)==0){i=j;return}b=c[h+4>>2]|0;if((c[b+748>>2]|0)==0){i=j;return}d=c[b+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;if((d|0)==(e|0)){Xr(b,d+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{Xr(b,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,e+4|0);i=j;return}}function Du(a){a=a|0;return}function Eu(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;f=i;i=i+624|0;p=+g[d+116>>2]- +g[d+52>>2];o=+g[d+120>>2]- +g[d+56>>2];n=+g[d+124>>2]- +g[d+60>>2];l=+g[e+116>>2]- +g[e+52>>2];k=+g[e+120>>2]- +g[e+56>>2];j=+g[e+124>>2]- +g[e+60>>2];m=+g[d+252>>2];if(p*p+o*o+n*n<m*m?(p=+g[e+252>>2],l*l+k*k+j*j<p*p):0){p=1.0;i=f;return+p}b=c[d+192>>2]|0;p=+g[e+248>>2];c[f+576>>2]=0;g[f+580>>2]=1.0;g[f+584>>2]=1.0;g[f+588>>2]=1.0;g[f+592>>2]=0.0;c[f+568>>2]=14168;c[f+572>>2]=8;g[f+596>>2]=p;g[f+612>>2]=p;c[f+392>>2]=7744;g[f+556>>2]=999999984306749400.0;c[f+560>>2]=0;g[f+564>>2]=0.0;g[f+340>>2]=9999999747378752.0e-20;a[f+364>>0]=0;c[f+16>>2]=10832;c[f+20>>2]=f+32;c[f+24>>2]=b;c[f+28>>2]=f+568;if(Wq(f+16|0,d+4|0,d+68|0,e+4|0,e+68|0,f+392|0)|0){k=+g[f+556>>2];if(+g[d+244>>2]>k){g[d+244>>2]=k}if(+g[e+244>>2]>k){g[e+244>>2]=k}if(!(k<1.0)){k=1.0}}else{k=1.0}b=c[e+192>>2]|0;p=+g[d+248>>2];c[f+576>>2]=0;g[f+580>>2]=1.0;g[f+584>>2]=1.0;g[f+588>>2]=1.0;g[f+592>>2]=0.0;c[f+568>>2]=14168;c[f+572>>2]=8;g[f+596>>2]=p;g[f+612>>2]=p;c[f+392>>2]=7744;g[f+556>>2]=999999984306749400.0;c[f+560>>2]=0;g[f+564>>2]=0.0;g[f+340>>2]=9999999747378752.0e-20;a[f+364>>0]=a[f+364>>0]&-16;c[f>>2]=10832;c[f+4>>2]=f+32;c[f+8>>2]=f+568;c[f+12>>2]=b;if(!(Wq(f,d+4|0,d+68|0,e+4|0,e+68|0,f+392|0)|0)){p=k;i=f;return+p}j=+g[f+556>>2];if(+g[d+244>>2]>j){g[d+244>>2]=j}if(+g[e+244>>2]>j){g[e+244>>2]=j}if(!(k>j)){p=k;i=f;return+p}p=j;i=f;return+p}function Fu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((c[b+20>>2]|0)==0){i=e;return}if((a[b+16>>0]|0)==0){i=e;return}h=c[d+4>>2]|0;if((h|0)==(c[d+8>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[d+4>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[d+12>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[d+12>>2]|0;if((j|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=g;c[d+8>>2]=f}f=(c[d+12>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=c[b+20>>2]}c[d+4>>2]=h+1;i=e;return}function Gu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;e=i;f=c[d>>2]|0;f=Zb[c[(c[f>>2]|0)+56>>2]&31](f,36)|0;if((f|0)==0){f=0;i=e;return f|0}h=c[d+4>>2]|0;k=c[b+12>>2]|0;j=c[b+8>>2]|0;g=c[b+16>>2]|0;b=c[b+20>>2]|0;c[f+4>>2]=c[d>>2];c[f>>2]=16144;c[f+8>>2]=k;c[f+12>>2]=j;a[f+16>>0]=0;c[f+20>>2]=h;a[f+24>>0]=0;c[f+28>>2]=g;c[f+32>>2]=b;i=e;return f|0}function Hu(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Iu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;l=i;i=i+16|0;n=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];m=+g[e>>2];k=+g[e+4>>2];o=+g[e+8>>2];if((a[b+228>>0]|0)==0){z=+g[b+100>>2];w=+g[b+116>>2];C=+g[b+132>>2];y=+g[b+104>>2];u=+g[b+120>>2];B=+g[b+136>>2];x=+g[b+108>>2];s=+g[b+124>>2];A=+g[b+140>>2];F=-+g[b+148>>2];E=-+g[b+152>>2];D=-+g[b+156>>2];I=+g[b+164>>2];r=+g[b+168>>2];J=+g[b+172>>2];H=+g[b+180>>2];G=+g[b+184>>2];q=+g[b+188>>2];v=+g[b+196>>2];t=+g[b+200>>2];p=+g[b+204>>2];r=o*(C*I+B*r+A*J)+(m*(z*I+y*r+x*J)+k*(w*I+u*r+s*J))+((x*F+s*E+A*D)*J+(I*(z*F+w*E+C*D)+r*(y*F+u*E+B*D))+ +g[b+212>>2]);q=o*(C*H+B*G+A*q)+(m*(z*H+y*G+x*q)+k*(w*H+u*G+s*q))+((z*F+w*E+C*D)*H+(y*F+u*E+B*D)*G+(x*F+s*E+A*D)*q+ +g[b+216>>2]);p=(z*F+w*E+C*D)*v+(y*F+u*E+B*D)*t+(x*F+s*E+A*D)*p+ +g[b+220>>2]+(o*(C*v+B*t+A*p)+(m*(z*v+y*t+x*p)+k*(w*v+u*t+s*p)));g[l>>2]=r;g[l+4>>2]=q;g[l+8>>2]=p;g[l+12>>2]=0.0;o=(n*f+m-r)*+g[d>>2]+(h*f+k-q)*+g[d+4>>2]+(j*f+o-p)*+g[d+8>>2];e=b+32|0;e=c[e>>2]|0;b=c[e>>2]|0;b=b+16|0;b=c[b>>2]|0;hc[b&15](e,d,l,o);i=l;return}else{z=+g[b+36>>2];C=+g[b+52>>2];w=+g[b+68>>2];A=+g[b+40>>2];E=+g[b+56>>2];x=+g[b+72>>2];B=+g[b+44>>2];G=+g[b+60>>2];y=+g[b+76>>2];t=-+g[b+84>>2];u=-+g[b+88>>2];v=-+g[b+92>>2];q=+g[b+164>>2];H=+g[b+168>>2];p=+g[b+172>>2];r=+g[b+180>>2];s=+g[b+184>>2];I=+g[b+188>>2];D=+g[b+196>>2];F=+g[b+200>>2];J=+g[b+204>>2];H=(j*f+o)*(w*q+x*H+y*p)+((n*f+m)*(z*q+A*H+B*p)+(h*f+k)*(C*q+E*H+G*p))+((B*t+G*u+y*v)*p+(q*(z*t+C*u+w*v)+H*(A*t+E*u+x*v))+ +g[b+212>>2]);I=(j*f+o)*(w*r+x*s+y*I)+((n*f+m)*(z*r+A*s+B*I)+(h*f+k)*(C*r+E*s+G*I))+((z*t+C*u+w*v)*r+(A*t+E*u+x*v)*s+(B*t+G*u+y*v)*I+ +g[b+216>>2]);J=(z*t+C*u+w*v)*D+(A*t+E*u+x*v)*F+(B*t+G*u+y*v)*J+ +g[b+220>>2]+((j*f+o)*(w*D+x*F+y*J)+((n*f+m)*(z*D+A*F+B*J)+(h*f+k)*(C*D+E*F+G*J)));g[l>>2]=H+n*(n*(H-m)+h*(I-k)+j*(J-o));g[l+4>>2]=I+h*(n*(H-m)+h*(I-k)+j*(J-o));g[l+8>>2]=J+j*(n*(H-m)+h*(I-k)+j*(J-o));g[l+12>>2]=0.0;J=n*(H-m)+h*(I-k)+j*(J-o);e=b+32|0;e=c[e>>2]|0;b=c[e>>2]|0;b=b+16|0;b=c[b>>2]|0;hc[b&15](e,d,l,J);i=l;return}}function Ju(a){a=a|0;return}function Ku(a){a=a|0;return}function Lu(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Mu(a,b,c){a=a|0;b=b|0;c=c|0;return}function Nu(a,b,c){a=a|0;b=b|0;c=c|0;return}function Ou(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0.0,k=0.0,l=0.0;h=i;i=i+16|0;g[b+32>>2]=f;c[b+8>>2]=c[d+0>>2];c[b+12>>2]=c[d+4>>2];c[b+16>>2]=c[d+8>>2];c[b+20>>2]=c[d+12>>2];j=+g[b+28>>2];l=+g[e+4>>2]-j*+g[d+4>>2];k=+g[e+8>>2]-j*+g[d+8>>2];g[h>>2]=+g[e>>2]- +g[d>>2]*j;g[h+4>>2]=l;g[h+8>>2]=k;g[h+12>>2]=0.0;f=+g[b+24>>2]+j+f;g[b+32>>2]=f;if(!(f<0.0)){e=b+4|0;e=c[e>>2]|0;b=c[e>>2]|0;b=b+16|0;b=c[b>>2]|0;hc[b&15](e,d,h,f);i=h;return}a[b+36>>0]=1;e=b+4|0;e=c[e>>2]|0;b=c[e>>2]|0;b=b+16|0;b=c[b>>2]|0;hc[b&15](e,d,h,f);i=h;return}function Pu(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Qu(a,b,c){a=a|0;b=b|0;c=c|0;return}function Ru(a,b,c){a=a|0;b=b|0;c=c|0;return}function Su(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function Tu(b){b=b|0;var d=0,e=0,f=0;d=i;c[b>>2]=16736;if((a[b+8>>0]|0)!=0){e=c[b+12>>2]|0;if((e|0)!=0){f=c[b+4>>2]|0;Fb[c[(c[f>>2]|0)+16>>2]&127](f,e)}if((b|0)==0){i=d;return}}dw(b);i=d;return}function Uu(b){b=b|0;var d=0,e=0;d=i;c[b>>2]=16736;if((a[b+8>>0]|0)==0){i=d;return}e=c[b+12>>2]|0;if((e|0)==0){i=d;return}b=c[b+4>>2]|0;Fb[c[(c[b>>2]|0)+16>>2]&127](b,e);i=d;return}function Vu(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0,R=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0;f=i;i=i+128|0;if((c[b+12>>2]|0)==0){i=f;return}j=(a[b+16>>0]|0)!=0;J=j?e:d;p=j?d:e;o=c[J+4>>2]|0;j=c[p+4>>2]|0;K=c[J+12>>2]|0;x=+g[K>>2];C=+g[K+16>>2];k=+g[K+32>>2];t=+g[K+4>>2];v=+g[K+20>>2];w=+g[K+36>>2];y=+g[K+8>>2];B=+g[K+24>>2];l=+g[K+40>>2];F=+g[K+48>>2];G=+g[K+52>>2];H=+g[K+56>>2];K=c[p+12>>2]|0;O=+g[K>>2];N=+g[K+16>>2];r=+g[K+32>>2];M=+g[K+4>>2];L=+g[K+20>>2];m=+g[K+36>>2];z=+g[K+8>>2];D=+g[K+24>>2];q=+g[K+40>>2];I=-+g[K+48>>2];u=-+g[K+52>>2];s=-+g[K+56>>2];K=c[(c[o>>2]|0)+64>>2]|0;E=-+g[j+48>>2];A=-+g[j+52>>2];n=-+g[j+56>>2];g[f+32>>2]=(x*O+C*N+k*r)*E+(x*M+C*L+k*m)*A+(x*z+C*D+k*q)*n;g[f+36>>2]=(t*O+v*N+w*r)*E+(t*M+v*L+w*m)*A+(t*z+v*D+w*q)*n;g[f+40>>2]=(y*O+B*N+l*r)*E+(y*M+B*L+l*m)*A+(y*z+B*D+l*q)*n;g[f+44>>2]=0.0;ic[K&63](f+48|0,o,f+32|0);n=+g[f+48>>2];A=+g[f+52>>2];E=+g[f+56>>2];r=F*O+G*N+H*r+(O*I+N*u+r*s)+((x*O+C*N+k*r)*n+(t*O+v*N+w*r)*A+(y*O+B*N+l*r)*E);m=F*M+G*L+H*m+(M*I+L*u+m*s)+((x*M+C*L+k*m)*n+(t*M+v*L+w*m)*A+(y*M+B*L+l*m)*E);E=F*z+G*D+H*q+(z*I+D*u+q*s)+((x*z+C*D+k*q)*n+(t*z+v*D+w*q)*A+(y*z+B*D+l*q)*E);q=+g[j+48>>2];l=+g[j+52>>2];D=+g[j+56>>2];B=D*E+(q*r+l*m)- +g[j+64>>2];K=c[p+12>>2]|0;z=+g[K>>2];y=+g[K+4>>2];A=+g[K+8>>2];w=+g[K+16>>2];v=+g[K+20>>2];t=+g[K+24>>2];n=+g[K+32>>2];k=+g[K+36>>2];C=+g[K+40>>2];x=+g[K+48>>2];s=+g[K+52>>2];u=+g[K+56>>2];K=c[b+12>>2]|0;J=B<+g[K+752>>2];c[h+4>>2]=K;if(J){K=c[p+12>>2]|0;N=q*+g[K+16>>2]+l*+g[K+20>>2]+D*+g[K+24>>2];O=q*+g[K+32>>2]+l*+g[K+36>>2]+D*+g[K+40>>2];g[f+16>>2]=+g[K>>2]*q+ +g[K+4>>2]*l+ +g[K+8>>2]*D;g[f+20>>2]=N;g[f+24>>2]=O;g[f+28>>2]=0.0;g[f>>2]=A*(E-D*B)+(z*(r-q*B)+y*(m-l*B))+x;g[f+4>>2]=(r-q*B)*w+(m-l*B)*v+(E-D*B)*t+s;g[f+8>>2]=(r-q*B)*n+(m-l*B)*k+(E-D*B)*C+u;g[f+12>>2]=0.0;hc[c[(c[h>>2]|0)+16>>2]&15](h,f+16|0,f,B)}if((c[o+4>>2]|0)<7?(c[(c[h+4>>2]|0)+748>>2]|0)<(c[b+24>>2]|0):0){l=+g[j+56>>2];if(+P(+l)>.7071067690849304){O=+g[j+52>>2];m=1.0/+Q(+(l*l+O*O));k=0.0;l=-(l*m);m=O*m}else{m=+g[j+48>>2];k=+g[j+52>>2];l=1.0/+Q(+(m*m+k*k));k=-(k*l);l=m*l;m=0.0}n=.019999999552965164/+Tb[c[(c[o>>2]|0)+16>>2]&15](o);q=+Q(+(m*m+(l*l+k*k)));O=n>.39269909262657166?.19634954631328583:n*.5;n=+T(+O)/q;k=k*n;l=l*n;n=m*n;m=+S(+O);p=c[b+20>>2]|0;if((p|0)>0){o=0;do{H=+g[j+48>>2];L=+g[j+52>>2];N=+g[j+56>>2];F=+(o|0)*(6.2831854820251465/+(p|0))*.5;O=+T(+F)/+Q(+(H*H+L*L+N*N));F=+S(+F);I=n*-(L*O)+(k*F+m*-(H*O))-l*-(N*O);M=k*-(N*O)+(l*F+m*-(L*O))-n*-(H*O);t=l*-(H*O)+(n*F+m*-(N*O))-k*-(L*O);G=m*F-k*-(H*O)-l*-(L*O)-n*-(N*O);s=N*O*M+(H*O*G+F*I)-L*O*t;r=H*O*t+(F*M+L*O*G)-N*O*I;q=L*O*I+(N*O*G+F*t)-H*O*M;t=F*G-H*O*I-L*O*M-N*O*t;p=(a[b+16>>0]|0)!=0;J=p?e:d;p=p?d:e;$=c[J+4>>2]|0;K=c[p+4>>2]|0;J=c[J+12>>2]|0;N=+g[J>>2];x=+g[J+4>>2];D=+g[J+8>>2];O=+g[J+16>>2];v=+g[J+20>>2];z=+g[J+24>>2];y=+g[J+32>>2];F=+g[J+36>>2];w=+g[J+40>>2];W=+g[J+48>>2];V=+g[J+52>>2];U=+g[J+56>>2];J=c[p+12>>2]|0;_=+g[J>>2];Z=+g[J+16>>2];C=+g[J+32>>2];Y=+g[J+4>>2];X=+g[J+20>>2];E=+g[J+36>>2];A=+g[J+8>>2];I=+g[J+24>>2];u=+g[J+40>>2];R=-+g[J+48>>2];L=-+g[J+52>>2];M=-+g[J+56>>2];ga=s*(2.0/(s*s+r*r+q*q+t*t));B=r*(2.0/(s*s+r*r+q*q+t*t));ha=q*(2.0/(s*s+r*r+q*q+t*t));ea=D*(s*ha-t*B)+(x*(s*B+t*ha)+N*(1.0-(r*B+q*ha)));ba=D*(r*ha+t*ga)+(N*(s*B-t*ha)+x*(1.0-(s*ga+q*ha)));H=N*(s*ha+t*B)+x*(r*ha-t*ga)+D*(1.0-(s*ga+r*B));da=z*(s*ha-t*B)+(v*(s*B+t*ha)+O*(1.0-(r*B+q*ha)));aa=z*(r*ha+t*ga)+(O*(s*B-t*ha)+v*(1.0-(s*ga+q*ha)));G=O*(s*ha+t*B)+v*(r*ha-t*ga)+z*(1.0-(s*ga+r*B));fa=w*(s*ha-t*B)+(F*(s*B+t*ha)+y*(1.0-(r*B+q*ha)));ca=w*(r*ha+t*ga)+(y*(s*B-t*ha)+F*(1.0-(s*ga+q*ha)));t=y*(s*ha+t*B)+F*(r*ha-t*ga)+w*(1.0-(s*ga+r*B));J=c[(c[$>>2]|0)+64>>2]|0;q=-+g[K+48>>2];B=-+g[K+52>>2];r=-+g[K+56>>2];g[f+96>>2]=(u*fa+(A*ea+I*da))*r+((C*fa+(_*ea+Z*da))*q+(E*fa+(Y*ea+X*da))*B);g[f+100>>2]=(u*ca+(A*ba+I*aa))*r+((C*ca+(_*ba+Z*aa))*q+(E*ca+(Y*ba+X*aa))*B);g[f+104>>2]=(u*t+(A*H+I*G))*r+((C*t+(_*H+Z*G))*q+(E*t+(Y*H+X*G))*B);g[f+108>>2]=0.0;ic[J&63](f+112|0,$,f+96|0);B=+g[f+112>>2];t=+g[f+116>>2];G=+g[f+120>>2];q=+g[K+48>>2];r=+g[K+52>>2];s=+g[K+56>>2];H=s*(W*A+V*I+U*u+(A*R+I*L+u*M)+((N*A+O*I+y*u)*B+(x*A+v*I+F*u)*t+(D*A+z*I+w*u)*G))+(q*(W*_+V*Z+U*C+(_*R+Z*L+C*M)+((N*_+O*Z+y*C)*B+(x*_+v*Z+F*C)*t+(D*_+z*Z+w*C)*G))+r*(W*Y+V*X+U*E+(Y*R+X*L+E*M)+((N*Y+O*X+y*E)*B+(x*Y+v*X+F*E)*t+(D*Y+z*X+w*E)*G)))- +g[K+64>>2];C=W*_+V*Z+U*C+(_*R+Z*L+C*M)+((N*_+O*Z+y*C)*B+(x*_+v*Z+F*C)*t+(D*_+z*Z+w*C)*G)-q*H;E=W*Y+V*X+U*E+(Y*R+X*L+E*M)+((N*Y+O*X+y*E)*B+(x*Y+v*X+F*E)*t+(D*Y+z*X+w*E)*G)-r*H;G=W*A+V*I+U*u+(A*R+I*L+u*M)+((N*A+O*I+y*u)*B+(x*A+v*I+F*u)*t+(D*A+z*I+w*u)*G)-s*H;J=c[p+12>>2]|0;u=+g[J>>2];w=+g[J+4>>2];t=+g[J+8>>2];I=+g[J+16>>2];z=+g[J+20>>2];A=+g[J+24>>2];D=+g[J+32>>2];F=+g[J+36>>2];v=+g[J+40>>2];x=+g[J+48>>2];B=+g[J+52>>2];y=+g[J+56>>2];J=c[b+12>>2]|0;K=H<+g[J+752>>2];c[h+4>>2]=J;if(K){$=c[p+12>>2]|0;ga=q*+g[$+16>>2]+r*+g[$+20>>2]+s*+g[$+24>>2];ha=q*+g[$+32>>2]+r*+g[$+36>>2]+s*+g[$+40>>2];g[f+80>>2]=+g[$>>2]*q+ +g[$+4>>2]*r+ +g[$+8>>2]*s;g[f+84>>2]=ga;g[f+88>>2]=ha;g[f+92>>2]=0.0;g[f+64>>2]=t*G+(u*C+w*E)+x;g[f+68>>2]=C*I+E*z+G*A+B;g[f+72>>2]=C*D+E*F+G*v+y;g[f+76>>2]=0.0;hc[c[(c[h>>2]|0)+16>>2]&15](h,f+80|0,f+64|0,H)}o=o+1|0;p=c[b+20>>2]|0}while((o|0)<(p|0))}}if((a[b+8>>0]|0)==0){i=f;return}if((c[(c[b+12>>2]|0)+748>>2]|0)==0){i=f;return}b=c[h+4>>2]|0;if((c[b+748>>2]|0)==0){i=f;return}d=c[b+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;if((d|0)==(e|0)){Xr(b,d+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=f;return}else{Xr(b,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,e+4|0);i=f;return}}function Wu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function Xu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;if((c[b+12>>2]|0)==0){i=e;return}if((a[b+8>>0]|0)==0){i=e;return}h=c[d+4>>2]|0;if((h|0)==(c[d+8>>2]|0)?(f=(h|0)==0?1:h<<1,(h|0)<(f|0)):0){if((f|0)==0){g=0}else{c[4336]=(c[4336]|0)+1;g=cw((f<<2|3)+16|0)|0;if((g|0)==0){g=0}else{c[(g+19&-16)+ -4>>2]=g;g=g+19&-16}h=c[d+4>>2]|0}if((h|0)>0){j=0;do{k=g+(j<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[d+12>>2]|0)+(j<<2)>>2]}j=j+1|0}while((j|0)!=(h|0))}j=c[d+12>>2]|0;if((j|0)!=0){if((a[d+16>>0]|0)!=0){c[4338]=(c[4338]|0)+1;dw(c[j+ -4>>2]|0);h=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=g;c[d+8>>2]=f}f=(c[d+12>>2]|0)+(h<<2)|0;if((f|0)!=0){c[f>>2]=c[b+12>>2]}c[d+4>>2]=h+1;i=e;return}function Yu(a){a=a|0;var b=0;b=i;Zu(a);if((a|0)==0){i=b;return}c[4338]=(c[4338]|0)+1;dw(c[a+ -4>>2]|0);i=b;return}



function Mv(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=c[4354]|0;if((c[d>>2]|0)!=(a|0)){f=c[d+24>>2]|0;a:do{if((f|0)==0){e=5}else{while(1){if((c[f>>2]|0)==(a|0)){d=f;break a}f=c[f+28>>2]|0;if((f|0)==0){e=5;break}}}}while(0);do{if((e|0)==5){while(1){f=cw(36)|0;if((f|0)!=0){e=9;break}e=c[4574]|0;c[4574]=e+0;if((e|0)==0){e=8;break}jc[e&1]();e=5}if((e|0)==8){f=vb(4)|0;c[f>>2]=18312;Ua(f|0,18360,237)}else if((e|0)==9){c[f>>2]=a;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=d;c[f+24>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;Lv(f);c[f+28>>2]=c[d+24>>2];c[d+24>>2]=f;d=f;break}}}while(0);c[4354]=d}e=d+4|0;c[e>>2]=(c[e>>2]|0)+1;e=d+16|0;f=c[e>>2]|0;c[e>>2]=f+1;if((f|0)!=0){i=b;return}wb(b|0,0)|0;f=c[4340]|0;c[d+12>>2]=(c[b+4>>2]|0)-(c[f+4>>2]|0)+(((c[b>>2]|0)-(c[f>>2]|0)|0)*1e6|0);i=b;return}function Nv(){var a=0,b=0,d=0;a=i;while(1){b=cw(8)|0;if((b|0)!=0){d=6;break}b=c[4574]|0;c[4574]=b+0;if((b|0)==0){d=5;break}jc[b&1]()}if((d|0)==5){d=vb(4)|0;c[d>>2]=18312;Ua(d|0,18360,237)}else if((d|0)==6){c[4340]=b;wb(b|0,0)|0;c[4342]=17408;c[17372>>2]=0;c[17376>>2]=0;c[17380>>2]=0;c[17384>>2]=0;c[17388>>2]=0;c[17392>>2]=0;c[17396>>2]=0;c[17400>>2]=0;Lv(17368);i=a;return}}function Ov(a){a=a|0;return}function Pv(a){a=a|0;return}function Qv(a){a=a|0;return}function Rv(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Sv(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Tv(a){a=a|0;var b=0;b=i;if((a|0)!=0){dw(a)}i=b;return}function Uv(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+112|0;if((d|0)==(e|0)){k=1;i=g;return k|0}if((e|0)==0){k=0;i=g;return k|0}h=c[e>>2]|0;j=e+(c[h+ -8>>2]|0)|0;h=c[h+ -4>>2]|0;c[g+56>>2]=17552;c[g+60>>2]=e;c[g+64>>2]=17496;k=g+68|0;e=k+40|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(e|0));b[g+108>>1]=0;a[g+110>>0]=0;do{if((h|0)!=17552){Bb[c[(c[h>>2]|0)+24>>2]&31](h,g+56|0,j,1,0);e=c[g+92>>2]|0;if((e|0)==1){if((c[g+80>>2]|0)!=1){if((c[g+96>>2]|0)!=0){k=0;i=g;return k|0}if((c[g+84>>2]|0)!=1){k=0;i=g;return k|0}if((c[g+88>>2]|0)!=1){k=0;i=g;return k|0}}h=c[g+72>>2]|0;break}else if((e|0)==0){if((c[g+96>>2]|0)!=1){k=0;i=g;return k|0}if((c[g+84>>2]|0)==1){h=(c[g+88>>2]|0)==1?c[g+76>>2]|0:0;break}else{k=0;i=g;return k|0}}else{k=0;i=g;return k|0}}else{c[g+104>>2]=1;Rb[c[(c[4388]|0)+20>>2]&7](h,g+56|0,j,j,1,0);h=(c[g+80>>2]|0)==1?j:0}}while(0);if((h|0)==0){k=0;i=g;return k|0}k=g+0|0;e=k+56|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(e|0));c[g>>2]=h;c[g+8>>2]=d;c[g+12>>2]=-1;c[g+48>>2]=1;mc[c[(c[h>>2]|0)+28>>2]&63](h,g,c[f>>2]|0,1);if((c[g+24>>2]|0)!=1){k=0;i=g;return k|0}c[f>>2]=c[g+16>>2];k=1;i=g;return k|0}function Vv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=i;if((c[d+8>>2]|0)!=(b|0)){i=g;return}b=c[d+16>>2]|0;if((b|0)==0){c[d+16>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((b|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;i=g;return}if((c[d+24>>2]|0)!=2){i=g;return}c[d+24>>2]=f;i=g;return}function Wv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=i;if((b|0)!=(c[d+8>>2]|0)){b=c[b+8>>2]|0;mc[c[(c[b>>2]|0)+28>>2]&63](b,d,e,f);i=g;return}b=c[d+16>>2]|0;if((b|0)==0){c[d+16>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((b|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;i=g;return}if((c[d+24>>2]|0)!=2){i=g;return}c[d+24>>2]=f;i=g;return}function Xv(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((b|0)==(c[d+8>>2]|0)){b=c[d+16>>2]|0;if((b|0)==0){c[d+16>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;i=g;return}if((b|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;i=g;return}if((c[d+24>>2]|0)!=2){i=g;return}c[d+24>>2]=f;i=g;return}h=c[b+12>>2]|0;j=c[b+20>>2]|0;if((j&1|0)==0){k=j>>8}else{k=c[(c[e>>2]|0)+(j>>8)>>2]|0}l=c[b+16>>2]|0;mc[c[(c[l>>2]|0)+28>>2]&63](l,d,e+k|0,(j&2|0)!=0?f:2);if((h|0)<=1){i=g;return}j=b+24|0;while(1){k=c[j+4>>2]|0;if((k&1|0)==0){l=k>>8}else{l=c[(c[e>>2]|0)+(k>>8)>>2]|0}m=c[j>>2]|0;mc[c[(c[m>>2]|0)+28>>2]&63](m,d,e+l|0,(k&2|0)!=0?f:2);if((a[d+54>>0]|0)!=0){e=16;break}j=j+8|0;if(!(j>>>0<(b+(h<<3)+16|0)>>>0)){e=16;break}}if((e|0)==16){i=g;return}}function Yv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}if((c[d+28>>2]|0)==1){i=h;return}c[d+28>>2]=f;i=h;return}if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;if((c[d+44>>2]|0)==4){i=h;return}l=c[b+12>>2]|0;a:do{if((l|0)>0){o=0;m=0;n=b+16|0;b:do{a[d+52>>0]=0;a[d+53>>0]=0;p=c[n+4>>2]|0;if((p&1|0)==0){q=p>>8}else{q=c[(c[e>>2]|0)+(p>>8)>>2]|0}r=c[n>>2]|0;Rb[c[(c[r>>2]|0)+20>>2]&7](r,d,e,e+q|0,2-(p>>>1&1)|0,g);if((a[d+54>>0]|0)!=0){break}do{if((a[d+53>>0]|0)!=0){if((a[d+52>>0]|0)==0){if((c[b+8>>2]&1|0)==0){m=1;break b}else{m=1;break}}if((c[d+24>>2]|0)==1){l=27;break a}if((c[b+8>>2]&2|0)==0){l=27;break a}else{o=1;m=1}}}while(0);n=n+8|0}while(n>>>0<(b+(l<<3)+16|0)>>>0);if(o){k=m;l=26}else{j=m;l=23}}else{j=0;l=23}}while(0);if((l|0)==23){c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(j){l=27}else{l=28}}else{k=j;l=26}}if((l|0)==26){if(k){l=27}else{l=28}}if((l|0)==27){c[d+44>>2]=3;i=h;return}else if((l|0)==28){c[d+44>>2]=4;i=h;return}}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}j=c[b+12>>2]|0;l=c[b+20>>2]|0;if((l&1|0)==0){k=l>>8}else{k=c[(c[e>>2]|0)+(l>>8)>>2]|0}r=c[b+16>>2]|0;Bb[c[(c[r>>2]|0)+24>>2]&31](r,d,e+k|0,(l&2|0)!=0?f:2,g);if((j|0)<=1){i=h;return}k=c[b+8>>2]|0;if((k&2|0)==0?(c[d+36>>2]|0)!=1:0){if((k&1|0)==0){k=b+24|0;while(1){if((a[d+54>>0]|0)!=0){l=53;break}if((c[d+36>>2]|0)==1){l=53;break}l=c[k+4>>2]|0;if((l&1|0)==0){m=l>>8}else{m=c[(c[e>>2]|0)+(l>>8)>>2]|0}r=c[k>>2]|0;Bb[c[(c[r>>2]|0)+24>>2]&31](r,d,e+m|0,(l&2|0)!=0?f:2,g);k=k+8|0;if(!(k>>>0<(b+(j<<3)+16|0)>>>0)){l=53;break}}if((l|0)==53){i=h;return}}m=b+24|0;while(1){if((a[d+54>>0]|0)!=0){l=53;break}if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==1:0){l=53;break}l=c[m+4>>2]|0;if((l&1|0)==0){k=l>>8}else{k=c[(c[e>>2]|0)+(l>>8)>>2]|0}r=c[m>>2]|0;Bb[c[(c[r>>2]|0)+24>>2]&31](r,d,e+k|0,(l&2|0)!=0?f:2,g);m=m+8|0;if(!(m>>>0<(b+(j<<3)+16|0)>>>0)){l=53;break}}if((l|0)==53){i=h;return}}m=b+24|0;while(1){if((a[d+54>>0]|0)!=0){l=53;break}k=c[m+4>>2]|0;if((k&1|0)==0){l=k>>8}else{l=c[(c[e>>2]|0)+(k>>8)>>2]|0}r=c[m>>2]|0;Bb[c[(c[r>>2]|0)+24>>2]&31](r,d,e+l|0,(k&2|0)!=0?f:2,g);m=m+8|0;if(!(m>>>0<(b+(j<<3)+16|0)>>>0)){l=53;break}}if((l|0)==53){i=h;return}}function Zv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){i=h;return}if((c[d+28>>2]|0)==1){i=h;return}c[d+28>>2]=f;i=h;return}if((b|0)!=(c[d>>2]|0)){b=c[b+8>>2]|0;Bb[c[(c[b>>2]|0)+24>>2]&31](b,d,e,f,g);i=h;return}if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;if((c[d+44>>2]|0)==4){i=h;return}a[d+52>>0]=0;a[d+53>>0]=0;b=c[b+8>>2]|0;Rb[c[(c[b>>2]|0)+20>>2]&7](b,d,e,e,1,g);if((a[d+53>>0]|0)!=0){if((a[d+52>>0]|0)==0){f=1;j=13}}else{f=0;j=13}do{if((j|0)==13){c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(f){break}}else{j=16}if((j|0)==16?f:0){break}c[d+44>>2]=4;i=h;return}}while(0);c[d+44>>2]=3;i=h;return}if((f|0)!=1){i=h;return}c[d+32>>2]=1;i=h;return}function _v(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=i;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){i=g;return}if((c[d+28>>2]|0)==1){i=g;return}c[d+28>>2]=f;i=g;return}if((c[d>>2]|0)!=(b|0)){i=g;return}if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1}c[d+44>>2]=4;i=g;return}if((f|0)!=1){i=g;return}c[d+32>>2]=1;i=g;return}function $v(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;if((b|0)!=(c[d+8>>2]|0)){l=a[d+52>>0]|0;m=a[d+53>>0]|0;k=c[b+12>>2]|0;a[d+52>>0]=0;a[d+53>>0]=0;n=c[b+20>>2]|0;if((n&1|0)==0){o=n>>8}else{o=c[(c[f>>2]|0)+(n>>8)>>2]|0}p=c[b+16>>2]|0;Rb[c[(c[p>>2]|0)+20>>2]&7](p,d,e,f+o|0,(n&2|0)!=0?g:2,h);a:do{if((k|0)>1){n=b+24|0;do{if((a[d+54>>0]|0)!=0){break a}if((a[d+52>>0]|0)==0){if((a[d+53>>0]|0)!=0?(c[b+8>>2]&1|0)==0:0){break a}}else{if((c[d+24>>2]|0)==1){break a}if((c[b+8>>2]&2|0)==0){break a}}a[d+52>>0]=0;a[d+53>>0]=0;o=c[n+4>>2]|0;if((o&1|0)==0){p=o>>8}else{p=c[(c[f>>2]|0)+(o>>8)>>2]|0}q=c[n>>2]|0;Rb[c[(c[q>>2]|0)+20>>2]&7](q,d,e,f+p|0,(o&2|0)!=0?g:2,h);n=n+8|0}while(n>>>0<(b+(k<<3)+16|0)>>>0)}}while(0);a[d+52>>0]=l;a[d+53>>0]=m;i=j;return}a[d+53>>0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52>>0]=1;k=c[d+16>>2]|0;if((k|0)==0){c[d+16>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=j;return}a[d+54>>0]=1;i=j;return}if((k|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;a[d+54>>0]=1;i=j;return}e=c[d+24>>2]|0;if((e|0)==2){c[d+24>>2]=g}else{g=e}if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=j;return}a[d+54>>0]=1;i=j;return}function aw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0;j=i;if((b|0)!=(c[d+8>>2]|0)){b=c[b+8>>2]|0;Rb[c[(c[b>>2]|0)+20>>2]&7](b,d,e,f,g,h);i=j;return}a[d+53>>0]=1;if((c[d+4>>2]|0)!=(f|0)){i=j;return}a[d+52>>0]=1;h=c[d+16>>2]|0;if((h|0)==0){c[d+16>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=j;return}a[d+54>>0]=1;i=j;return}if((h|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;a[d+54>>0]=1;i=j;return}e=c[d+24>>2]|0;if((e|0)==2){c[d+24>>2]=g}else{g=e}if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=j;return}a[d+54>>0]=1;i=j;return}function bw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;h=i;if((c[d+8>>2]|0)!=(b|0)){i=h;return}a[d+53>>0]=1;if((c[d+4>>2]|0)!=(f|0)){i=h;return}a[d+52>>0]=1;f=c[d+16>>2]|0;if((f|0)==0){c[d+16>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=h;return}a[d+54>>0]=1;i=h;return}if((f|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;a[d+54>>0]=1;i=h;return}e=c[d+24>>2]|0;if((e|0)==2){c[d+24>>2]=g}else{g=e}if(!((g|0)==1?(c[d+48>>2]|0)==1:0)){i=h;return}a[d+54>>0]=1;i=h;return}function cw(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;do{if(a>>>0<245){if(a>>>0<11){o=16}else{o=a+11&-8}u=o>>>3;s=c[4450]|0;if((s>>>u&3|0)!=0){e=c[17840+(((s>>>u&1^1)+u<<1)+2<<2)>>2]|0;d=c[e+8>>2]|0;do{if((17840+((s>>>u&1^1)+u<<1<<2)|0)!=(d|0)){if(d>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[d+12>>2]|0)==(e|0)){c[d+12>>2]=17840+((s>>>u&1^1)+u<<1<<2);c[17840+(((s>>>u&1^1)+u<<1)+2<<2)>>2]=d;break}else{tb()}}else{c[4450]=s&~(1<<(s>>>u&1^1)+u)}}while(0);c[e+4>>2]=(s>>>u&1^1)+u<<3|3;c[e+((s>>>u&1^1)+u<<3|4)>>2]=c[e+((s>>>u&1^1)+u<<3|4)>>2]|1;E=e+8|0;i=b;return E|0}if(o>>>0>(c[17808>>2]|0)>>>0){if((s>>>u|0)!=0){e=(s>>>u<<u&(2<<u|0-(2<<u))&0-(s>>>u<<u&(2<<u|0-(2<<u))))+ -1|0;d=e>>>(e>>>12&16)>>>(e>>>(e>>>12&16)>>>5&8);g=d>>>(d>>>2&4)>>>(d>>>(d>>>2&4)>>>1&2);g=(e>>>(e>>>12&16)>>>5&8|e>>>12&16|d>>>2&4|d>>>(d>>>2&4)>>>1&2|g>>>1&1)+(g>>>(g>>>1&1))|0;d=c[17840+((g<<1)+2<<2)>>2]|0;e=c[d+8>>2]|0;do{if((17840+(g<<1<<2)|0)!=(e|0)){if(e>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[e+12>>2]|0)==(d|0)){c[e+12>>2]=17840+(g<<1<<2);c[17840+((g<<1)+2<<2)>>2]=e;break}else{tb()}}else{c[4450]=s&~(1<<g)}}while(0);f=(g<<3)-o|0;c[d+4>>2]=o|3;e=d+o|0;c[d+(o|4)>>2]=f|1;c[d+(g<<3)>>2]=f;h=c[17808>>2]|0;if((h|0)!=0){g=c[17820>>2]|0;j=c[4450]|0;if((j&1<<(h>>>3)|0)!=0){j=c[17840+((h>>>3<<1)+2<<2)>>2]|0;if(j>>>0<(c[17816>>2]|0)>>>0){tb()}else{B=17840+((h>>>3<<1)+2<<2)|0;C=j}}else{c[4450]=j|1<<(h>>>3);B=17840+((h>>>3<<1)+2<<2)|0;C=17840+(h>>>3<<1<<2)|0}c[B>>2]=g;c[C+12>>2]=g;c[g+8>>2]=C;c[g+12>>2]=17840+(h>>>3<<1<<2)}c[17808>>2]=f;c[17820>>2]=e;E=d+8|0;i=b;return E|0}s=c[17804>>2]|0;if((s|0)!=0){e=((s&0-s)+ -1|0)>>>(((s&0-s)+ -1|0)>>>12&16);d=e>>>(e>>>5&8)>>>(e>>>(e>>>5&8)>>>2&4);d=c[18104+((e>>>5&8|((s&0-s)+ -1|0)>>>12&16|e>>>(e>>>5&8)>>>2&4|d>>>1&2|d>>>(d>>>1&2)>>>1&1)+(d>>>(d>>>1&2)>>>(d>>>(d>>>1&2)>>>1&1))<<2)>>2]|0;e=(c[d+4>>2]&-8)-o|0;f=d;while(1){h=c[f+16>>2]|0;if((h|0)==0){h=c[f+20>>2]|0;if((h|0)==0){break}}f=(c[h+4>>2]&-8)-o|0;g=f>>>0<e>>>0;e=g?f:e;f=h;d=g?h:d}h=c[17816>>2]|0;if(d>>>0<h>>>0){tb()}f=d+o|0;if(!(d>>>0<f>>>0)){tb()}g=c[d+24>>2]|0;k=c[d+12>>2]|0;do{if((k|0)==(d|0)){k=d+20|0;j=c[k>>2]|0;if((j|0)==0){k=d+16|0;j=c[k>>2]|0;if((j|0)==0){A=0;break}}while(1){m=j+20|0;l=c[m>>2]|0;if((l|0)!=0){j=l;k=m;continue}m=j+16|0;l=c[m>>2]|0;if((l|0)==0){break}else{j=l;k=m}}if(k>>>0<h>>>0){tb()}else{c[k>>2]=0;A=j;break}}else{j=c[d+8>>2]|0;if(j>>>0<h>>>0){tb()}if((c[j+12>>2]|0)!=(d|0)){tb()}if((c[k+8>>2]|0)==(d|0)){c[j+12>>2]=k;c[k+8>>2]=j;A=k;break}else{tb()}}}while(0);do{if((g|0)!=0){h=c[d+28>>2]|0;if((d|0)==(c[18104+(h<<2)>>2]|0)){c[18104+(h<<2)>>2]=A;if((A|0)==0){c[17804>>2]=c[17804>>2]&~(1<<h);break}}else{if(g>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[g+16>>2]|0)==(d|0)){c[g+16>>2]=A}else{c[g+20>>2]=A}if((A|0)==0){break}}if(A>>>0<(c[17816>>2]|0)>>>0){tb()}c[A+24>>2]=g;g=c[d+16>>2]|0;do{if((g|0)!=0){if(g>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[A+16>>2]=g;c[g+24>>2]=A;break}}}while(0);g=c[d+20>>2]|0;if((g|0)!=0){if(g>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[A+20>>2]=g;c[g+24>>2]=A;break}}}}while(0);if(e>>>0<16){E=e+o|0;c[d+4>>2]=E|3;E=d+(E+4)|0;c[E>>2]=c[E>>2]|1}else{c[d+4>>2]=o|3;c[d+(o|4)>>2]=e|1;c[d+(e+o)>>2]=e;g=c[17808>>2]|0;if((g|0)!=0){h=c[17820>>2]|0;j=c[4450]|0;if((j&1<<(g>>>3)|0)!=0){j=c[17840+((g>>>3<<1)+2<<2)>>2]|0;if(j>>>0<(c[17816>>2]|0)>>>0){tb()}else{y=17840+((g>>>3<<1)+2<<2)|0;z=j}}else{c[4450]=j|1<<(g>>>3);y=17840+((g>>>3<<1)+2<<2)|0;z=17840+(g>>>3<<1<<2)|0}c[y>>2]=h;c[z+12>>2]=h;c[h+8>>2]=z;c[h+12>>2]=17840+(g>>>3<<1<<2)}c[17808>>2]=e;c[17820>>2]=f}E=d+8|0;i=b;return E|0}}}else{if(!(a>>>0>4294967231)){o=a+11&-8;A=c[17804>>2]|0;if((A|0)!=0){if(((a+11|0)>>>8|0)!=0){if(o>>>0>16777215){B=31}else{B=(a+11|0)>>>8<<((((a+11|0)>>>8)+1048320|0)>>>16&8);B=14-((B+520192|0)>>>16&4|(((a+11|0)>>>8)+1048320|0)>>>16&8|((B<<((B+520192|0)>>>16&4))+245760|0)>>>16&2)+(B<<((B+520192|0)>>>16&4)<<(((B<<((B+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;B=o>>>(B+7|0)&1|B<<1}}else{B=0}C=c[18104+(B<<2)>>2]|0;a:do{if((C|0)==0){z=0-o|0;D=0;y=0}else{if((B|0)==31){y=0}else{y=25-(B>>>1)|0}z=0-o|0;D=0;a=o<<y;y=0;while(1){E=c[C+4>>2]&-8;if((E-o|0)>>>0<z>>>0){if((E|0)==(o|0)){z=E-o|0;D=C;y=C;break a}else{z=E-o|0;y=C}}E=c[C+20>>2]|0;C=c[C+(a>>>31<<2)+16>>2]|0;D=(E|0)==0|(E|0)==(C|0)?D:E;if((C|0)==0){break}else{a=a<<1}}}}while(0);if((D|0)==0&(y|0)==0){B=2<<B;if((A&(B|0-B)|0)==0){break}a=(A&(B|0-B)&0-(A&(B|0-B)))+ -1|0;E=a>>>(a>>>12&16)>>>(a>>>(a>>>12&16)>>>5&8);D=E>>>(E>>>2&4)>>>(E>>>(E>>>2&4)>>>1&2);D=c[18104+((a>>>(a>>>12&16)>>>5&8|a>>>12&16|E>>>2&4|E>>>(E>>>2&4)>>>1&2|D>>>1&1)+(D>>>(D>>>1&1))<<2)>>2]|0}if((D|0)!=0){while(1){B=(c[D+4>>2]&-8)-o|0;A=B>>>0<z>>>0;z=A?B:z;y=A?D:y;A=c[D+16>>2]|0;if((A|0)!=0){D=A;continue}D=c[D+20>>2]|0;if((D|0)==0){break}}}if((y|0)!=0?z>>>0<((c[17808>>2]|0)-o|0)>>>0:0){f=c[17816>>2]|0;if(y>>>0<f>>>0){tb()}d=y+o|0;if(!(y>>>0<d>>>0)){tb()}e=c[y+24>>2]|0;h=c[y+12>>2]|0;do{if((h|0)==(y|0)){h=y+20|0;g=c[h>>2]|0;if((g|0)==0){h=y+16|0;g=c[h>>2]|0;if((g|0)==0){x=0;break}}while(1){j=g+20|0;k=c[j>>2]|0;if((k|0)!=0){g=k;h=j;continue}j=g+16|0;k=c[j>>2]|0;if((k|0)==0){break}else{g=k;h=j}}if(h>>>0<f>>>0){tb()}else{c[h>>2]=0;x=g;break}}else{g=c[y+8>>2]|0;if(g>>>0<f>>>0){tb()}if((c[g+12>>2]|0)!=(y|0)){tb()}if((c[h+8>>2]|0)==(y|0)){c[g+12>>2]=h;c[h+8>>2]=g;x=h;break}else{tb()}}}while(0);do{if((e|0)!=0){f=c[y+28>>2]|0;if((y|0)==(c[18104+(f<<2)>>2]|0)){c[18104+(f<<2)>>2]=x;if((x|0)==0){c[17804>>2]=c[17804>>2]&~(1<<f);break}}else{if(e>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[e+16>>2]|0)==(y|0)){c[e+16>>2]=x}else{c[e+20>>2]=x}if((x|0)==0){break}}if(x>>>0<(c[17816>>2]|0)>>>0){tb()}c[x+24>>2]=e;e=c[y+16>>2]|0;do{if((e|0)!=0){if(e>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[x+16>>2]=e;c[e+24>>2]=x;break}}}while(0);e=c[y+20>>2]|0;if((e|0)!=0){if(e>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[x+20>>2]=e;c[e+24>>2]=x;break}}}}while(0);b:do{if(!(z>>>0<16)){c[y+4>>2]=o|3;c[y+(o|4)>>2]=z|1;c[y+(z+o)>>2]=z;e=z>>>3;if(z>>>0<256){f=c[4450]|0;if((f&1<<e|0)!=0){f=c[17840+((e<<1)+2<<2)>>2]|0;if(f>>>0<(c[17816>>2]|0)>>>0){tb()}else{u=17840+((e<<1)+2<<2)|0;v=f}}else{c[4450]=f|1<<e;u=17840+((e<<1)+2<<2)|0;v=17840+(e<<1<<2)|0}c[u>>2]=d;c[v+12>>2]=d;c[y+(o+8)>>2]=v;c[y+(o+12)>>2]=17840+(e<<1<<2);break}e=z>>>8;if((e|0)!=0){if(z>>>0>16777215){e=31}else{E=e<<((e+1048320|0)>>>16&8)<<(((e<<((e+1048320|0)>>>16&8))+520192|0)>>>16&4);e=14-(((e<<((e+1048320|0)>>>16&8))+520192|0)>>>16&4|(e+1048320|0)>>>16&8|(E+245760|0)>>>16&2)+(E<<((E+245760|0)>>>16&2)>>>15)|0;e=z>>>(e+7|0)&1|e<<1}}else{e=0}f=18104+(e<<2)|0;c[y+(o+28)>>2]=e;c[y+(o+20)>>2]=0;c[y+(o+16)>>2]=0;h=c[17804>>2]|0;g=1<<e;if((h&g|0)==0){c[17804>>2]=h|g;c[f>>2]=d;c[y+(o+24)>>2]=f;c[y+(o+12)>>2]=d;c[y+(o+8)>>2]=d;break}f=c[f>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}c:do{if((c[f+4>>2]&-8|0)!=(z|0)){e=z<<e;h=f;while(1){f=h+(e>>>31<<2)+16|0;g=c[f>>2]|0;if((g|0)==0){break}if((c[g+4>>2]&-8|0)==(z|0)){s=g;break c}else{e=e<<1;h=g}}if(f>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[f>>2]=d;c[y+(o+24)>>2]=h;c[y+(o+12)>>2]=d;c[y+(o+8)>>2]=d;break b}}else{s=f}}while(0);e=s+8|0;g=c[e>>2]|0;f=c[17816>>2]|0;if(s>>>0<f>>>0){tb()}if(g>>>0<f>>>0){tb()}else{c[g+12>>2]=d;c[e>>2]=d;c[y+(o+8)>>2]=g;c[y+(o+12)>>2]=s;c[y+(o+24)>>2]=0;break}}else{E=z+o|0;c[y+4>>2]=E|3;E=y+(E+4)|0;c[E>>2]=c[E>>2]|1}}while(0);E=y+8|0;i=b;return E|0}}}else{o=-1}}}while(0);s=c[17808>>2]|0;if(!(o>>>0>s>>>0)){e=s-o|0;d=c[17820>>2]|0;if(e>>>0>15){c[17820>>2]=d+o;c[17808>>2]=e;c[d+(o+4)>>2]=e|1;c[d+s>>2]=e;c[d+4>>2]=o|3}else{c[17808>>2]=0;c[17820>>2]=0;c[d+4>>2]=s|3;c[d+(s+4)>>2]=c[d+(s+4)>>2]|1}E=d+8|0;i=b;return E|0}s=c[17812>>2]|0;if(o>>>0<s>>>0){D=s-o|0;c[17812>>2]=D;E=c[17824>>2]|0;c[17824>>2]=E+o;c[E+(o+4)>>2]=D|1;c[E+4>>2]=o|3;E=E+8|0;i=b;return E|0}do{if((c[4568]|0)==0){s=lb(30)|0;if((s+ -1&s|0)==0){c[18280>>2]=s;c[18276>>2]=s;c[18284>>2]=-1;c[18288>>2]=-1;c[18292>>2]=0;c[18244>>2]=0;c[4568]=(ub(0)|0)&-16^1431655768;break}else{tb()}}}while(0);v=o+48|0;s=c[18280>>2]|0;x=o+47|0;u=s+x&0-s;if(!(u>>>0>o>>>0)){E=0;i=b;return E|0}y=c[18240>>2]|0;if((y|0)!=0?(E=c[18232>>2]|0,(E+u|0)>>>0<=E>>>0|(E+u|0)>>>0>y>>>0):0){E=0;i=b;return E|0}d:do{if((c[18244>>2]&4|0)==0){z=c[17824>>2]|0;e:do{if((z|0)!=0){y=18248|0;while(1){A=c[y>>2]|0;if(!(A>>>0>z>>>0)?(w=y+4|0,(A+(c[w>>2]|0)|0)>>>0>z>>>0):0){break}y=c[y+8>>2]|0;if((y|0)==0){n=182;break e}}if((y|0)!=0){z=s+x-(c[17812>>2]|0)&0-s;if(z>>>0<2147483647){n=fb(z|0)|0;A=(n|0)==((c[y>>2]|0)+(c[w>>2]|0)|0);w=n;y=z;s=A?n:-1;z=A?z:0;n=191}else{z=0}}else{n=182}}else{n=182}}while(0);do{if((n|0)==182){z=fb(0)|0;if((z|0)!=(-1|0)){s=c[18276>>2]|0;if((s+ -1&z|0)==0){A=u}else{A=u-z+(s+ -1+z&0-s)|0}w=c[18232>>2]|0;y=w+A|0;if(A>>>0>o>>>0&A>>>0<2147483647){s=c[18240>>2]|0;if((s|0)!=0?y>>>0<=w>>>0|y>>>0>s>>>0:0){z=0;break}n=fb(A|0)|0;w=n;y=A;s=(n|0)==(z|0)?z:-1;z=(n|0)==(z|0)?A:0;n=191}else{z=0}}else{z=0}}}while(0);f:do{if((n|0)==191){n=0-y|0;if((s|0)!=(-1|0)){p=z;n=202;break d}do{if((w|0)!=(-1|0)&y>>>0<2147483647&y>>>0<v>>>0?(t=c[18280>>2]|0,t=x-y+t&0-t,t>>>0<2147483647):0){if((fb(t|0)|0)==(-1|0)){fb(n|0)|0;break f}else{y=t+y|0;break}}}while(0);if((w|0)!=(-1|0)){s=w;p=y;n=202;break d}}}while(0);c[18244>>2]=c[18244>>2]|4;n=199}else{z=0;n=199}}while(0);if((((n|0)==199?u>>>0<2147483647:0)?(r=fb(u|0)|0,p=fb(0)|0,(p|0)!=(-1|0)&(r|0)!=(-1|0)&r>>>0<p>>>0):0)?(q=(p-r|0)>>>0>(o+40|0)>>>0,q):0){s=r;p=q?p-r|0:z;n=202}if((n|0)==202){q=(c[18232>>2]|0)+p|0;c[18232>>2]=q;if(q>>>0>(c[18236>>2]|0)>>>0){c[18236>>2]=q}q=c[17824>>2]|0;g:do{if((q|0)!=0){v=18248|0;while(1){r=c[v>>2]|0;t=v+4|0;u=c[t>>2]|0;if((s|0)==(r+u|0)){n=214;break}w=c[v+8>>2]|0;if((w|0)==0){break}else{v=w}}if(((n|0)==214?(c[v+12>>2]&8|0)==0:0)?q>>>0>=r>>>0&q>>>0<s>>>0:0){c[t>>2]=u+p;e=(c[17812>>2]|0)+p|0;if((q+8&7|0)==0){d=0}else{d=0-(q+8)&7}E=e-d|0;c[17824>>2]=q+d;c[17812>>2]=E;c[q+(d+4)>>2]=E|1;c[q+(e+4)>>2]=40;c[17828>>2]=c[18288>>2];break}if(s>>>0<(c[17816>>2]|0)>>>0){c[17816>>2]=s}r=s+p|0;t=18248|0;while(1){if((c[t>>2]|0)==(r|0)){n=224;break}u=c[t+8>>2]|0;if((u|0)==0){break}else{t=u}}if((n|0)==224?(c[t+12>>2]&8|0)==0:0){c[t>>2]=s;h=t+4|0;c[h>>2]=(c[h>>2]|0)+p;h=s+8|0;if((h&7|0)==0){h=0}else{h=0-h&7}k=s+(p+8)|0;if((k&7|0)==0){q=0}else{q=0-k&7}r=s+(q+p)|0;l=h+o|0;k=s+l|0;m=r-(s+h)-o|0;c[s+(h+4)>>2]=o|3;h:do{if((r|0)!=(c[17824>>2]|0)){if((r|0)==(c[17820>>2]|0)){E=(c[17808>>2]|0)+m|0;c[17808>>2]=E;c[17820>>2]=k;c[s+(l+4)>>2]=E|1;c[s+(E+l)>>2]=E;break}o=p+4|0;n=c[s+(o+q)>>2]|0;if((n&3|0)==1){do{if(!(n>>>0<256)){j=c[s+((q|24)+p)>>2]|0;t=c[s+(p+12+q)>>2]|0;do{if((t|0)==(r|0)){v=q|16;u=s+(o+v)|0;t=c[u>>2]|0;if((t|0)==0){u=s+(v+p)|0;t=c[u>>2]|0;if((t|0)==0){g=0;break}}while(1){v=t+20|0;w=c[v>>2]|0;if((w|0)!=0){t=w;u=v;continue}v=t+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{t=w;u=v}}if(u>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[u>>2]=0;g=t;break}}else{u=c[s+((q|8)+p)>>2]|0;if(u>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[u+12>>2]|0)!=(r|0)){tb()}if((c[t+8>>2]|0)==(r|0)){c[u+12>>2]=t;c[t+8>>2]=u;g=t;break}else{tb()}}}while(0);if((j|0)!=0){t=c[s+(p+28+q)>>2]|0;if((r|0)==(c[18104+(t<<2)>>2]|0)){c[18104+(t<<2)>>2]=g;if((g|0)==0){c[17804>>2]=c[17804>>2]&~(1<<t);break}}else{if(j>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[j+16>>2]|0)==(r|0)){c[j+16>>2]=g}else{c[j+20>>2]=g}if((g|0)==0){break}}if(g>>>0<(c[17816>>2]|0)>>>0){tb()}c[g+24>>2]=j;r=q|16;j=c[s+(r+p)>>2]|0;do{if((j|0)!=0){if(j>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[g+16>>2]=j;c[j+24>>2]=g;break}}}while(0);j=c[s+(o+r)>>2]|0;if((j|0)!=0){if(j>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[g+20>>2]=j;c[j+24>>2]=g;break}}}}else{g=c[s+((q|8)+p)>>2]|0;o=c[s+(p+12+q)>>2]|0;if((g|0)!=(17840+(n>>>3<<1<<2)|0)){if(g>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[g+12>>2]|0)!=(r|0)){tb()}}if((o|0)==(g|0)){c[4450]=c[4450]&~(1<<(n>>>3));break}if((o|0)!=(17840+(n>>>3<<1<<2)|0)){if(o>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[o+8>>2]|0)!=(r|0)){tb()}else{j=o+8|0}}else{j=o+8|0}c[g+12>>2]=o;c[j>>2]=g}}while(0);r=s+((n&-8|q)+p)|0;m=(n&-8)+m|0}g=r+4|0;c[g>>2]=c[g>>2]&-2;c[s+(l+4)>>2]=m|1;c[s+(m+l)>>2]=m;g=m>>>3;if(m>>>0<256){d=c[4450]|0;if((d&1<<g|0)!=0){d=c[17840+((g<<1)+2<<2)>>2]|0;if(d>>>0<(c[17816>>2]|0)>>>0){tb()}else{f=17840+((g<<1)+2<<2)|0;e=d}}else{c[4450]=d|1<<g;f=17840+((g<<1)+2<<2)|0;e=17840+(g<<1<<2)|0}c[f>>2]=k;c[e+12>>2]=k;c[s+(l+8)>>2]=e;c[s+(l+12)>>2]=17840+(g<<1<<2);break}e=m>>>8;if((e|0)!=0){if(m>>>0>16777215){e=31}else{E=e<<((e+1048320|0)>>>16&8)<<(((e<<((e+1048320|0)>>>16&8))+520192|0)>>>16&4);e=14-(((e<<((e+1048320|0)>>>16&8))+520192|0)>>>16&4|(e+1048320|0)>>>16&8|(E+245760|0)>>>16&2)+(E<<((E+245760|0)>>>16&2)>>>15)|0;e=m>>>(e+7|0)&1|e<<1}}else{e=0}j=18104+(e<<2)|0;c[s+(l+28)>>2]=e;c[s+(l+20)>>2]=0;c[s+(l+16)>>2]=0;f=c[17804>>2]|0;g=1<<e;if((f&g|0)==0){c[17804>>2]=f|g;c[j>>2]=k;c[s+(l+24)>>2]=j;c[s+(l+12)>>2]=k;c[s+(l+8)>>2]=k;break}g=c[j>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}i:do{if((c[g+4>>2]&-8|0)!=(m|0)){e=m<<e;while(1){f=g+(e>>>31<<2)+16|0;j=c[f>>2]|0;if((j|0)==0){break}if((c[j+4>>2]&-8|0)==(m|0)){d=j;break i}else{e=e<<1;g=j}}if(f>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[f>>2]=k;c[s+(l+24)>>2]=g;c[s+(l+12)>>2]=k;c[s+(l+8)>>2]=k;break h}}else{d=g}}while(0);f=d+8|0;e=c[f>>2]|0;g=c[17816>>2]|0;if(d>>>0<g>>>0){tb()}if(e>>>0<g>>>0){tb()}else{c[e+12>>2]=k;c[f>>2]=k;c[s+(l+8)>>2]=e;c[s+(l+12)>>2]=d;c[s+(l+24)>>2]=0;break}}else{E=(c[17812>>2]|0)+m|0;c[17812>>2]=E;c[17824>>2]=k;c[s+(l+4)>>2]=E|1}}while(0);E=s+(h|8)|0;i=b;return E|0}d=18248|0;while(1){e=c[d>>2]|0;if(!(e>>>0>q>>>0)?(m=c[d+4>>2]|0,(e+m|0)>>>0>q>>>0):0){break}d=c[d+8>>2]|0}if((e+(m+ -39)&7|0)==0){d=0}else{d=0-(e+(m+ -39))&7}d=e+(m+ -47+d)|0;d=d>>>0<(q+16|0)>>>0?q:d;f=s+8|0;if((f&7|0)==0){f=0}else{f=0-f&7}E=p+ -40-f|0;c[17824>>2]=s+f;c[17812>>2]=E;c[s+(f+4)>>2]=E|1;c[s+(p+ -36)>>2]=40;c[17828>>2]=c[18288>>2];c[d+4>>2]=27;c[d+8>>2]=c[18248>>2];c[d+12>>2]=c[18252>>2];c[d+16>>2]=c[18256>>2];c[d+20>>2]=c[18260>>2];c[18248>>2]=s;c[18252>>2]=p;c[18260>>2]=0;c[18256>>2]=d+8;c[d+28>>2]=7;if((d+32|0)>>>0<(e+m|0)>>>0){f=d+28|0;do{E=f;f=f+4|0;c[f>>2]=7}while((E+8|0)>>>0<(e+m|0)>>>0)}if((d|0)!=(q|0)){c[q+(d-q+4)>>2]=c[q+(d-q+4)>>2]&-2;c[q+4>>2]=d-q|1;c[q+(d-q)>>2]=d-q;if((d-q|0)>>>0<256){e=c[4450]|0;if((e&1<<((d-q|0)>>>3)|0)!=0){e=c[17840+(((d-q|0)>>>3<<1)+2<<2)>>2]|0;if(e>>>0<(c[17816>>2]|0)>>>0){tb()}else{k=17840+(((d-q|0)>>>3<<1)+2<<2)|0;l=e}}else{c[4450]=e|1<<((d-q|0)>>>3);k=17840+(((d-q|0)>>>3<<1)+2<<2)|0;l=17840+((d-q|0)>>>3<<1<<2)|0}c[k>>2]=q;c[l+12>>2]=q;c[q+8>>2]=l;c[q+12>>2]=17840+((d-q|0)>>>3<<1<<2);break}if(((d-q|0)>>>8|0)!=0){if((d-q|0)>>>0>16777215){e=31}else{e=(d-q|0)>>>8<<((((d-q|0)>>>8)+1048320|0)>>>16&8);e=14-((e+520192|0)>>>16&4|(((d-q|0)>>>8)+1048320|0)>>>16&8|((e<<((e+520192|0)>>>16&4))+245760|0)>>>16&2)+(e<<((e+520192|0)>>>16&4)<<(((e<<((e+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;e=(d-q|0)>>>(e+7|0)&1|e<<1}}else{e=0}j=18104+(e<<2)|0;c[q+28>>2]=e;c[q+20>>2]=0;c[q+16>>2]=0;f=c[17804>>2]|0;g=1<<e;if((f&g|0)==0){c[17804>>2]=f|g;c[j>>2]=q;c[q+24>>2]=j;c[q+12>>2]=q;c[q+8>>2]=q;break}j=c[j>>2]|0;if((e|0)==31){e=0}else{e=25-(e>>>1)|0}j:do{if((c[j+4>>2]&-8|0)!=(d-q|0)){e=d-q<<e;while(1){g=j+(e>>>31<<2)+16|0;f=c[g>>2]|0;if((f|0)==0){break}if((c[f+4>>2]&-8|0)==(d-q|0)){h=f;break j}else{e=e<<1;j=f}}if(g>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[g>>2]=q;c[q+24>>2]=j;c[q+12>>2]=q;c[q+8>>2]=q;break g}}else{h=j}}while(0);e=h+8|0;d=c[e>>2]|0;f=c[17816>>2]|0;if(h>>>0<f>>>0){tb()}if(d>>>0<f>>>0){tb()}else{c[d+12>>2]=q;c[e>>2]=q;c[q+8>>2]=d;c[q+12>>2]=h;c[q+24>>2]=0;break}}}else{E=c[17816>>2]|0;if((E|0)==0|s>>>0<E>>>0){c[17816>>2]=s}c[18248>>2]=s;c[18252>>2]=p;c[18260>>2]=0;c[17836>>2]=c[4568];c[17832>>2]=-1;d=0;do{E=d<<1;c[17840+(E+3<<2)>>2]=17840+(E<<2);c[17840+(E+2<<2)>>2]=17840+(E<<2);d=d+1|0}while((d|0)!=32);d=s+8|0;if((d&7|0)==0){d=0}else{d=0-d&7}E=p+ -40-d|0;c[17824>>2]=s+d;c[17812>>2]=E;c[s+(d+4)>>2]=E|1;c[s+(p+ -36)>>2]=40;c[17828>>2]=c[18288>>2]}}while(0);d=c[17812>>2]|0;if(d>>>0>o>>>0){D=d-o|0;c[17812>>2]=D;E=c[17824>>2]|0;c[17824>>2]=E+o;c[E+(o+4)>>2]=D|1;c[E+4>>2]=o|3;E=E+8|0;i=b;return E|0}}c[(pb()|0)>>2]=12;E=0;i=b;return E|0}function dw(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;if((a|0)==0){i=b;return}r=c[17816>>2]|0;if((a+ -8|0)>>>0<r>>>0){tb()}h=c[a+ -4>>2]|0;if((h&3|0)==1){tb()}k=a+((h&-8)+ -8)|0;do{if((h&1|0)==0){o=c[a+ -8>>2]|0;if((h&3|0)==0){i=b;return}m=a+(-8-o)|0;n=o+(h&-8)|0;if(m>>>0<r>>>0){tb()}if((m|0)==(c[17820>>2]|0)){if((c[a+((h&-8)+ -4)>>2]&3|0)!=3){d=m;p=n;break}c[17808>>2]=n;c[a+((h&-8)+ -4)>>2]=c[a+((h&-8)+ -4)>>2]&-2;c[a+(-8-o+4)>>2]=n|1;c[k>>2]=n;i=b;return}if(o>>>0<256){p=c[a+(-8-o+8)>>2]|0;d=c[a+(-8-o+12)>>2]|0;if((p|0)!=(17840+(o>>>3<<1<<2)|0)){if(p>>>0<r>>>0){tb()}if((c[p+12>>2]|0)!=(m|0)){tb()}}if((d|0)==(p|0)){c[4450]=c[4450]&~(1<<(o>>>3));d=m;p=n;break}if((d|0)!=(17840+(o>>>3<<1<<2)|0)){if(d>>>0<r>>>0){tb()}if((c[d+8>>2]|0)!=(m|0)){tb()}else{s=d+8|0}}else{s=d+8|0}c[p+12>>2]=d;c[s>>2]=p;d=m;p=n;break}s=c[a+(-8-o+24)>>2]|0;u=c[a+(-8-o+12)>>2]|0;do{if((u|0)==(m|0)){u=c[a+(-8-o+20)>>2]|0;if((u|0)==0){u=c[a+(-8-o+16)>>2]|0;if((u|0)==0){q=0;break}else{t=a+(-8-o+16)|0}}else{t=a+(-8-o+20)|0}while(1){w=u+20|0;v=c[w>>2]|0;if((v|0)!=0){u=v;t=w;continue}w=u+16|0;v=c[w>>2]|0;if((v|0)==0){break}else{u=v;t=w}}if(t>>>0<r>>>0){tb()}else{c[t>>2]=0;q=u;break}}else{t=c[a+(-8-o+8)>>2]|0;if(t>>>0<r>>>0){tb()}if((c[t+12>>2]|0)!=(m|0)){tb()}if((c[u+8>>2]|0)==(m|0)){c[t+12>>2]=u;c[u+8>>2]=t;q=u;break}else{tb()}}}while(0);if((s|0)!=0){r=c[a+(-8-o+28)>>2]|0;if((m|0)==(c[18104+(r<<2)>>2]|0)){c[18104+(r<<2)>>2]=q;if((q|0)==0){c[17804>>2]=c[17804>>2]&~(1<<r);d=m;p=n;break}}else{if(s>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[s+16>>2]|0)==(m|0)){c[s+16>>2]=q}else{c[s+20>>2]=q}if((q|0)==0){d=m;p=n;break}}if(q>>>0<(c[17816>>2]|0)>>>0){tb()}c[q+24>>2]=s;r=c[a+(-8-o+16)>>2]|0;do{if((r|0)!=0){if(r>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[q+16>>2]=r;c[r+24>>2]=q;break}}}while(0);o=c[a+(-8-o+20)>>2]|0;if((o|0)!=0){if(o>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[q+20>>2]=o;c[o+24>>2]=q;d=m;p=n;break}}else{d=m;p=n}}else{d=m;p=n}}else{d=a+ -8|0;p=h&-8}}while(0);if(!(d>>>0<k>>>0)){tb()}m=c[a+((h&-8)+ -4)>>2]|0;if((m&1|0)==0){tb()}if((m&2|0)==0){if((k|0)==(c[17824>>2]|0)){w=(c[17812>>2]|0)+p|0;c[17812>>2]=w;c[17824>>2]=d;c[d+4>>2]=w|1;if((d|0)!=(c[17820>>2]|0)){i=b;return}c[17820>>2]=0;c[17808>>2]=0;i=b;return}if((k|0)==(c[17820>>2]|0)){w=(c[17808>>2]|0)+p|0;c[17808>>2]=w;c[17820>>2]=d;c[d+4>>2]=w|1;c[d+w>>2]=w;i=b;return}p=(m&-8)+p|0;do{if(!(m>>>0<256)){l=c[a+((h&-8)+16)>>2]|0;n=c[a+(h&-8|4)>>2]|0;do{if((n|0)==(k|0)){n=c[a+((h&-8)+12)>>2]|0;if((n|0)==0){n=c[a+((h&-8)+8)>>2]|0;if((n|0)==0){j=0;break}else{m=a+((h&-8)+8)|0}}else{m=a+((h&-8)+12)|0}while(1){o=n+20|0;q=c[o>>2]|0;if((q|0)!=0){n=q;m=o;continue}o=n+16|0;q=c[o>>2]|0;if((q|0)==0){break}else{n=q;m=o}}if(m>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[m>>2]=0;j=n;break}}else{m=c[a+(h&-8)>>2]|0;if(m>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[m+12>>2]|0)!=(k|0)){tb()}if((c[n+8>>2]|0)==(k|0)){c[m+12>>2]=n;c[n+8>>2]=m;j=n;break}else{tb()}}}while(0);if((l|0)!=0){m=c[a+((h&-8)+20)>>2]|0;if((k|0)==(c[18104+(m<<2)>>2]|0)){c[18104+(m<<2)>>2]=j;if((j|0)==0){c[17804>>2]=c[17804>>2]&~(1<<m);break}}else{if(l>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[l+16>>2]|0)==(k|0)){c[l+16>>2]=j}else{c[l+20>>2]=j}if((j|0)==0){break}}if(j>>>0<(c[17816>>2]|0)>>>0){tb()}c[j+24>>2]=l;k=c[a+((h&-8)+8)>>2]|0;do{if((k|0)!=0){if(k>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[j+16>>2]=k;c[k+24>>2]=j;break}}}while(0);h=c[a+((h&-8)+12)>>2]|0;if((h|0)!=0){if(h>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[j+20>>2]=h;c[h+24>>2]=j;break}}}}else{j=c[a+(h&-8)>>2]|0;h=c[a+(h&-8|4)>>2]|0;if((j|0)!=(17840+(m>>>3<<1<<2)|0)){if(j>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[j+12>>2]|0)!=(k|0)){tb()}}if((h|0)==(j|0)){c[4450]=c[4450]&~(1<<(m>>>3));break}if((h|0)!=(17840+(m>>>3<<1<<2)|0)){if(h>>>0<(c[17816>>2]|0)>>>0){tb()}if((c[h+8>>2]|0)!=(k|0)){tb()}else{l=h+8|0}}else{l=h+8|0}c[j+12>>2]=h;c[l>>2]=j}}while(0);c[d+4>>2]=p|1;c[d+p>>2]=p;if((d|0)==(c[17820>>2]|0)){c[17808>>2]=p;i=b;return}}else{c[a+((h&-8)+ -4)>>2]=m&-2;c[d+4>>2]=p|1;c[d+p>>2]=p}h=p>>>3;if(p>>>0<256){e=c[4450]|0;if((e&1<<h|0)!=0){e=c[17840+((h<<1)+2<<2)>>2]|0;if(e>>>0<(c[17816>>2]|0)>>>0){tb()}else{f=17840+((h<<1)+2<<2)|0;g=e}}else{c[4450]=e|1<<h;f=17840+((h<<1)+2<<2)|0;g=17840+(h<<1<<2)|0}c[f>>2]=d;c[g+12>>2]=d;c[d+8>>2]=g;c[d+12>>2]=17840+(h<<1<<2);i=b;return}f=p>>>8;if((f|0)!=0){if(p>>>0>16777215){f=31}else{w=f<<((f+1048320|0)>>>16&8)<<(((f<<((f+1048320|0)>>>16&8))+520192|0)>>>16&4);f=14-(((f<<((f+1048320|0)>>>16&8))+520192|0)>>>16&4|(f+1048320|0)>>>16&8|(w+245760|0)>>>16&2)+(w<<((w+245760|0)>>>16&2)>>>15)|0;f=p>>>(f+7|0)&1|f<<1}}else{f=0}g=18104+(f<<2)|0;c[d+28>>2]=f;c[d+20>>2]=0;c[d+16>>2]=0;a=c[17804>>2]|0;h=1<<f;a:do{if((a&h|0)!=0){g=c[g>>2]|0;if((f|0)==31){f=0}else{f=25-(f>>>1)|0}b:do{if((c[g+4>>2]&-8|0)!=(p|0)){f=p<<f;h=g;while(1){a=h+(f>>>31<<2)+16|0;g=c[a>>2]|0;if((g|0)==0){break}if((c[g+4>>2]&-8|0)==(p|0)){e=g;break b}else{f=f<<1;h=g}}if(a>>>0<(c[17816>>2]|0)>>>0){tb()}else{c[a>>2]=d;c[d+24>>2]=h;c[d+12>>2]=d;c[d+8>>2]=d;break a}}else{e=g}}while(0);f=e+8|0;h=c[f>>2]|0;g=c[17816>>2]|0;if(e>>>0<g>>>0){tb()}if(h>>>0<g>>>0){tb()}else{c[h+12>>2]=d;c[f>>2]=d;c[d+8>>2]=h;c[d+12>>2]=e;c[d+24>>2]=0;break}}else{c[17804>>2]=a|h;c[g>>2]=d;c[d+24>>2]=g;c[d+12>>2]=d;c[d+8>>2]=d}}while(0);w=(c[17832>>2]|0)+ -1|0;c[17832>>2]=w;if((w|0)==0){d=18256|0}else{i=b;return}while(1){d=c[d>>2]|0;if((d|0)==0){break}else{d=d+8|0}}c[17832>>2]=-1;i=b;return}function ew(a){a=a|0;var b=0;b=i;qb(a|0);if((a|0)!=0){dw(a)}i=b;return}function fw(a){a=a|0;var b=0;b=i;qb(a|0);i=b;return}function gw(a){a=a|0;return 18328}function hw(){c[4592]=o}function iw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=b-d-(c>>>0>a>>>0|0)>>>0;return(E=b,a-c>>>0|0)|0}function jw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;h=b&3;g=d|d<<8|d<<16|d<<24;if(h){h=b+4-h|0;while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(f&~3|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function kw(b){b=b|0;var c=0;c=b;while(a[c>>0]|0){c=c+1|0}return c-b|0}function lw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return(E=b+d+(a+c>>>0>>>0<a>>>0|0)>>>0,a+c>>>0|0)|0}function mw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return nb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function nw(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else{mw(b,c,d)|0}return b|0}function ow(a){a=a|0;return(a&255)<<24|(a>>8&255)<<16|(a>>16&255)<<8|a>>>24|0}function pw(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}E=a<<c-32;return 0}function qw(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=0;return b>>>c-32|0}function rw(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=(b|0)<0?-1:0;return b>>c-32|0}function sw(b){b=b|0;var c=0;c=a[n+(b>>>24)>>0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)>>0]|0)+24|0}function tw(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)>>0]|0)+24|0}function uw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=aa(b&65535,a&65535)|0;e=(c>>>16)+(aa(b&65535,a>>>16)|0)|0;d=aa(b>>>16,a&65535)|0;return(E=(e>>>16)+(aa(b>>>16,a>>>16)|0)+(((e&65535)+d|0)>>>16)|0,e+d<<16|c&65535|0)|0}function vw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;a=iw(e^a,f^b,e,f)|0;b=E;g=iw((Aw(a,b,iw(g^c,h^d,g,h)|0,E,0)|0)^(g^e),E^(h^f),g^e,h^f)|0;return g|0}function ww(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+8|0;g=b>>31|((b|0)<0?-1:0)<<1;h=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;j=e>>31|((e|0)<0?-1:0)<<1;k=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=iw(g^a,h^b,g,h)|0;b=E;Aw(a,b,iw(j^d,k^e,j,k)|0,E,f|0)|0;j=iw(c[f>>2]^g,c[f+4>>2]^h,g,h)|0;h=E;i=f;return(E=h,j)|0}function xw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=uw(a,c)|0;f=E;return(E=(aa(b,c)|0)+(aa(d,a)|0)+f|f&0,e|0|0)|0}function yw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=Aw(a,b,c,d,0)|0;return a|0}function zw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+8|0;Aw(a,b,d,e,f|0)|0;i=f;return(E=c[f+4>>2]|0,c[f>>2]|0)|0}function Aw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if((b|0)==0){if((e|0)==0){if((f|0)!=0){c[f>>2]=(a>>>0)%(d>>>0);c[f+4>>2]=0}l=0;m=(a>>>0)/(d>>>0)>>>0;return(E=l,m)|0}else{if((f|0)==0){l=0;m=0;return(E=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;l=0;m=0;return(E=l,m)|0}}do{if((d|0)!=0){if((e|0)!=0){i=(sw(e|0)|0)-(sw(b|0)|0)|0;if(i>>>0<=31){h=i+1|0;g=a>>>((i+1|0)>>>0)&i-31>>31|b<<31-i;j=b>>>((i+1|0)>>>0)&i-31>>31;k=0;i=a<<31-i;break}if((f|0)==0){l=0;m=0;return(E=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;l=0;m=0;return(E=l,m)|0}if((d-1&d|0)!=0){i=(sw(d|0)|0)+33-(sw(b|0)|0)|0;h=i;g=32-i-1>>31&b>>>((i-32|0)>>>0)|(b<<32-i|a>>>(i>>>0))&i-32>>31;j=i-32>>31&b>>>(i>>>0);k=a<<64-i&32-i>>31;i=(b<<64-i|a>>>((i-32|0)>>>0))&32-i>>31|a<<32-i&i-33>>31;break}if((f|0)!=0){c[f>>2]=d-1&a;c[f+4>>2]=0}if((d|0)==1){l=b|b&0;m=a|0|0;return(E=l,m)|0}else{m=tw(d|0)|0;l=b>>>(m>>>0)|0;m=b<<32-m|a>>>(m>>>0)|0;return(E=l,m)|0}}else{if((e|0)==0){if((f|0)!=0){c[f>>2]=(b>>>0)%(d>>>0);c[f+4>>2]=0}l=0;m=(b>>>0)/(d>>>0)>>>0;return(E=l,m)|0}if((a|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(b>>>0)%(e>>>0)}l=0;m=(b>>>0)/(e>>>0)>>>0;return(E=l,m)|0}if((e-1&e|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=e-1&b|b&0}l=0;m=b>>>((tw(e|0)|0)>>>0);return(E=l,m)|0}i=(sw(e|0)|0)-(sw(b|0)|0)|0;if(i>>>0<=30){h=i+1|0;g=b<<31-i|a>>>((i+1|0)>>>0);j=b>>>((i+1|0)>>>0);k=0;i=a<<31-i;break}if((f|0)==0){l=0;m=0;return(E=l,m)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;l=0;m=0;return(E=l,m)|0}}while(0);if((h|0)==0){d=0;h=0}else{b=lw(d|0|0,e|e&0,-1,-1)|0;a=E;l=h;h=0;do{m=i;i=k>>>31|i<<1;k=h|k<<1;m=g<<1|m>>>31|0;j=g>>>31|j<<1|0;iw(b,a,m,j)|0;g=E;n=g>>31|((g|0)<0?-1:0)<<1;h=n&1;g=iw(m,j,n&(d|0),(((g|0)<0?-1:0)>>31|((g|0)<0?-1:0)<<1)&(e|e&0))|0;j=E;l=l-1|0}while((l|0)!=0);d=0}if((f|0)!=0){c[f>>2]=g;c[f+4>>2]=j}m=(k|0)>>>31|i<<1|(0<<1|k>>>31)&0|d;n=(k<<1|0>>>31)&-2|h;return(E=m,n)|0}function Bw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Bb[a&31](b|0,c|0,d|0,e|0,f|0)}function Cw(a,b,c){a=a|0;b=b|0;c=+c;Cb[a&15](b|0,+c)}function Dw(a,b){a=a|0;b=b|0;Db[a&255](b|0)}function Ew(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;Eb[a&0](b|0,c|0,d|0,+e,f|0,g|0)}function Fw(a,b,c){a=a|0;b=b|0;c=c|0;Fb[a&127](b|0,c|0)}function Gw(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return Gb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)|0}function Hw(a,b){a=a|0;b=b|0;return Hb[a&127](b|0)|0}function Iw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;Ib[a&3](b|0,c|0,+d,e|0)}function Jw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=f|0;g=g|0;Jb[a&0](b|0,+c,+d,e|0,f|0,g|0)}function Kw(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;Kb[a&0](b|0,+c,d|0,e|0)}function Lw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Lb[a&31](b|0,c|0,d|0,e|0)|0}function Mw(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;Mb[a&15](b|0,+c,d|0)}function Nw(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return+Nb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Ow(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=j|0;k=k|0;l=+l;Ob[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,j|0,k|0,+l)}function Pw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return+Pb[a&15](b|0,c|0,d|0,e|0,f|0)}function Qw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Qb[a&31](b|0,c|0,d|0)|0}function Rw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Rb[a&7](b|0,c|0,d|0,e|0,f|0,g|0)}function Sw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return Sb[a&3](b|0,c|0,+d)|0}function Tw(a,b){a=a|0;b=b|0;return+Tb[a&15](b|0)}function Uw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Ub[a&3](b|0,c|0,d|0,e|0,f|0,g|0)|0}function Vw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;return+Vb[a&3](b|0,c|0,d|0,+e,f|0,g|0)}function Ww(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;Wb[a&0](b|0,c|0,+d,e|0,f|0)}function Xw(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Xb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Yw(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;Yb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function Zw(a,b,c){a=a|0;b=b|0;c=c|0;return Zb[a&31](b|0,c|0)|0}function _w(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+_b[a&7](b|0,c|0,d|0)}function $w(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return+$b[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function ax(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ac[a&1](b|0,c|0,d|0,e|0,+f)}function bx(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return+bc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function cx(a,b,c){a=a|0;b=b|0;c=+c;return+cc[a&1](b|0,+c)}function dx(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=+j;k=k|0;l=+l;m=m|0;dc[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,+j,k|0,+l,m|0)}function ex(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;return+ec[a&3](b|0,c|0,+d,e|0,f|0)}function fx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+fc[a&1](b|0,c|0,d|0,e|0)}function gx(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return gc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)|0}function hx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;hc[a&15](b|0,c|0,d|0,+e)}function ix(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ic[a&63](b|0,c|0,d|0)}function jx(a){a=a|0;jc[a&1]()}function kx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;kc[a&1](b|0,c|0,+d)}function lx(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=+e;return lc[a&1](b|0,+c,d|0,+e)|0}function mx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;mc[a&63](b|0,c|0,d|0,e|0)}function nx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(0)}function ox(a,b){a=a|0;b=+b;ba(1)}function px(a){a=a|0;ba(2)}function qx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ba(3)}function rx(a,b){a=a|0;b=b|0;ba(4)}function sx(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ba(5);return 0}function tx(a){a=a|0;ba(6);return 0}function ux(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;ba(7)}function vx(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=d|0;e=e|0;f=f|0;ba(8)}function wx(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;ba(9)}function xx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(10);return 0}function yx(a,b,c){a=a|0;b=+b;c=c|0;ba(11)}function zx(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ba(12);return 0.0}function Ax(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=i|0;j=j|0;k=+k;ba(13)}function Bx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(14);return 0.0}function Cx(a,b,c){a=a|0;b=b|0;c=c|0;ba(15);return 0}function Dx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(16)}function Ex(a,b,c){a=a|0;b=b|0;c=+c;ba(17);return 0}function Fx(a){a=a|0;ba(18);return 0.0}function Gx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(19);return 0}function Hx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ba(20);return 0.0}function Ix(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ba(21)}function Jx(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ba(22)}function Kx(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ba(23)}function Lx(a,b){a=a|0;b=b|0;ba(24);return 0}function Mx(a,b,c){a=a|0;b=b|0;c=c|0;ba(25);return 0.0}function Nx(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ba(26);return 0.0}function Ox(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;ba(27)}function Px(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ba(28);return 0.0}function Qx(a,b){a=a|0;b=+b;ba(29);return 0.0}function Rx(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=+i;j=j|0;k=+k;l=l|0;ba(30)}function Sx(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ba(31);return 0.0}function Tx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(32);return 0.0}function Ux(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ba(33);return 0}function Vx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ba(34)}function Wx(a,b,c){a=a|0;b=b|0;c=c|0;ba(35)}function Xx(){ba(36)}function Yx(){zb()}function Zx(a,b,c){a=a|0;b=b|0;c=+c;ba(37)}function _x(a,b,c,d){a=a|0;b=+b;c=c|0;d=+d;ba(38);return 0}function $x(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(39)}




// EMSCRIPTEN_END_FUNCS
var Bb=[nx,Ak,Zo,Tp,Rq,_q,Xs,at,Lt,Qt,Tt,Zt,hu,tu,Cu,Vu,_v,Zv,Yv,nx,nx,nx,nx,nx,nx,nx,nx,nx,nx,nx,nx,nx];var Cb=[ox,Zi,Yi,Ki,Ci,wi,ij,nl,Ll,fm,_n,oo,Co,op,oj,ox];var Db=[px,Lh,Mh,Nh,Sh,Th,Xh,Yh,ai,bi,oi,pi,hi,vi,ui,Wm,Xm,xi,Ym,Ai,yi,Vi,zi,Xi,uj,zj,Aj,Bj,Cj,Kj,Lj,Fj,Wj,Xj,_j,Zj,pk,wk,xk,Jk,Qk,Rk,Sk,Tk,jl,kl,El,Dl,Pl,Ql,Sl,Tl,Vl,Wl,$l,am,im,jm,lm,mm,rm,qm,zm,Hm,Um,Tm,kn,jn,pn,on,sn,gn,un,en,wn,yn,zn,Cn,Dn,Fn,Gn,Kn,Ln,Jn,On,Un,Vn,Xn,Yn,$m,bo,fo,eo,ho,wo,xo,Fo,Go,Jo,Ko,Qo,Ro,Po,So,jp,kp,tp,up,xp,yp,Ip,Hp,_p,Sp,$p,Qp,bq,Lp,dq,iq,hq,nq,oq,qq,rq,tq,uq,wq,xq,zq,Aq,Cq,Dq,Fq,Gq,Iq,Jq,Lq,Mq,Oq,Pq,Tq,Uq,Xq,Yq,cn,In,$q,ar,pm,Jm,er,fr,gr,hr,mr,lr,qr,rr,tr,ur,zr,yr,Qr,Rr,Tr,Ur,Zr,Yr,is,hs,ts,us,ss,vs,Ms,Ls,Wi,kj,Ws,Vs,$s,_s,et,ft,lt,mt,tt,st,At,Ct,Et,Ft,Mt,Nt,Pt,Ot,Ut,Vt,Yt,Xt,$t,cu,fu,eu,iu,ku,ou,nu,ru,qu,vu,wu,zu,yu,Bu,Au,Du,Hu,Ku,Lu,Ju,Pu,Uu,Tu,Zu,Yu,kv,jv,uv,tv,Ov,Rv,Pv,Qv,Sv,Tv,fw,ew,px,px,px,px,px,px,px,px,px,px,px,px,px,px,px,px,px];var Eb=[qx];var Fb=[rx,Zh,_h,ei,gi,ej,Gi,dj,Mi,Ni,Oi,Di,Ei,Ii,Hi,_i,Pi,Qi,Ri,Si,Ti,hj,Gj,Hj,Yj,Vj,Ek,Ik,bl,fl,gl,ll,nj,Rm,Gl,Il,Jl,cm,em,um,tm,Bm,Zm,mn,Qn,$n,ko,go,vo,Bo,Io,Mo,lp,np,Vp,Zp,aq,cq,fq,Vq,ns,os,Nr,Pr,Hr,Wo,Os,Zs,ct,nt,ot,jt,kt,vt,St,bu,du,gu,mu,pu,Fu,Xu,Av,Bv,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx,rx];var Gb=[sx,Zq,cr,sx];var Hb=[tx,vc,qi,fj,$i,aj,gj,Mj,Tj,sk,Fk,Gk,Xk,Yk,Zk,$k,el,lj,ml,qj,sl,ul,vl,yl,wt,Kl,Nl,dm,gm,sj,km,nm,Cm,Em,Fm,Gm,mo,no,qo,Ao,Do,Ho,Lo,mp,pp,vp,zp,Wp,Xp,kq,lq,mq,or,Jr,Kr,Lr,Mr,Or,ys,Bs,Ds,Es,Hs,mj,pt,xv,qt,Bt,Sm,ov,gw,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx,tx];var Ib=[ux,li,Ij,ux];var Jb=[vx];var Kb=[wx];var Lb=[xx,Vk,vm,pq,sq,vq,yq,Bq,Eq,Hq,Kq,Nq,Qq,ms,pr,Fr,Gu,xx,xx,xx,xx,xx,xx,xx,xx,xx,xx,xx,xx,xx,xx,xx];var Mb=[yx,il,yt,_l,jo,zo,cp,bs,xs,Us,yx,yx,yx,yx,yx,yx];var Nb=[zx,di];var Ob=[Ax];var Pb=[Bx,Sq,Ys,bt,Rt,au,ju,uu,Eu,Wu,Bx,Bx,Bx,Bx,Bx,Bx];var Qb=[Cx,uk,ri,Nj,Uj,Uk,dl,rj,Hl,hm,sm,xm,wm,lo,Eo,qp,jq,ps,Ir,Dr,sv,Qm,mv,nv,Uv,Cx,Cx,Cx,Cx,Cx,Cx,Cx];var Rb=[Dx,Dj,Ck,Op,bw,aw,$v,Dx];var Sb=[Ex,Al,Js,Ex];var Tb=[Fx,Pm,ol,Ml,po,sp,wp,Ap,pj,Fx,Fx,Fx,Fx,Fx,Fx,Fx];var Ub=[Gx,Oo,Wq,dt];var Vb=[Hx,En,Hn,Hx];var Wb=[Ix];var Xb=[Jx,lk];var Yb=[Kx,vv,wv,Kx];var Zb=[Lx,Uh,ci,bj,cj,vj,yj,Rj,_r,Dm,Am,Im,vn,xn,An,Mn,Sn,Tn,Sr,Vr,Lx,Lx,Lx,Lx,Lx,Lx,Lx,Lx,Lx,Lx,Lx,Lx];var _b=[Mx,Vh,mi,wj,xj,Jj,Bn,Nn];var $b=[Nx,ok,kk,Nx];var ac=[Ox,Oh];var bc=[Px,jk,mk,Px];var cc=[Qx,Om];var dc=[Rx];var ec=[Sx,Wn,Zn,Sx];var fc=[Tx,nk];var gc=[Ux,yk,Jp,Ux];var hc=[Vx,Ph,ii,Vo,br,kr,Iu,Ou,Su,Vx,Vx,Vx,Vx,Vx,Vx,Vx];var ic=[Wx,ni,Li,qk,rk,zk,Hk,Wk,_k,al,cl,Nm,pl,ql,tl,xl,Bl,zt,Ol,Rl,Ul,Xl,Yo,Yl,tj,Pn,ao,uo,so,To,Uo,rp,fp,dp,ep,Mp,Yp,eq,Km,Lm,ir,jr,Cr,Ar,Br,Gr,$r,zs,Cs,Gs,Ns,Ss,Qs,yv,zv,lu,Mu,Nu,Qu,Ru,om,$o,_o,Wx];var jc=[Xx,Yx];var kc=[Zx,Rn];var lc=[_x,Bi];var mc=[$x,hn,dn,Fi,Ji,ik,Bk,Dk,hl,rl,Xo,wl,zl,ut,Fl,bm,Zl,ym,Vm,qn,rn,tn,rs,qs,io,yo,to,bp,gp,ip,hp,Np,Rp,sr,vr,as,ws,As,Fs,Is,Ks,Ts,Rs,rv,xt,Dt,Gt,su,xu,Vv,Wv,Xv,$x,$x,$x,$x,$x,$x,$x,$x,$x,$x,$x,$x];return{_emscripten_bind_btCollisionObject_setCollisionFlags_1:td,_strlen:kw,_emscripten_bind_btConstraintSetting_set_m_damping_1:zg,_emscripten_bind_btQuaternion_w_0:zf,_emscripten_bind_btTransform_getBasis_0:sh,_emscripten_bind_btTransform_getRotation_0:rh,_emscripten_bind_btVector3_setX_1:gg,_emscripten_bind_btAxisSweep3_btAxisSweep3_5:Sc,_emscripten_bind_btCollisionDispatcher_getNumManifolds_0:He,_emscripten_bind_btCollisionConfiguration___destroy___0:ve,_emscripten_bind_btCollisionObject_isActive_0:od,_emscripten_bind_btCylinderShape___destroy___0:Jh,_emscripten_bind_btQuadWord_w_0:Ah,_emscripten_bind_btPersistentManifold_getNumContacts_0:ze,_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4:vd,_emscripten_bind_btTypedConstraint___destroy___0:Kh,_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0:rg,_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2:Fc,_emscripten_bind_btSphereShape_btSphereShape_1:mg,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4:Ld,_emscripten_bind_btVector3_z_0:fg,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2:Kd,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3:zd,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1:yd,_emscripten_bind_btConeShapeX_calculateLocalInertia_2:ne,_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0:lf,_emscripten_bind_btTransform_getOrigin_0:qh,_emscripten_bind_btRigidBodyConstructionInfo___destroy___0:Wc,_emscripten_bind_btConeShapeZ_calculateLocalInertia_2:je,_emscripten_bind_btRigidBody_getWorldTransform_0:_g,_emscripten_bind_btPoint2PointConstraint_setPivotA_1:Md,_emscripten_bind_btQuaternion_setZ_1:Cf,_emscripten_bind_btConeShape_btConeShape_2:_d,_emscripten_bind_btManifoldPoint_set_m_localPointA_1:_c,_emscripten_bind_btCapsuleShape_calculateLocalInertia_2:Nc,_emscripten_bind_btRigidBody_setRestitution_1:Yg,_emscripten_bind_btVector3_y_0:eg,_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2:Bc,_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3:Dc,_emscripten_bind_btQuadWord_z_0:zh,_emscripten_bind_btConeShapeZ_btConeShapeZ_2:he,_emscripten_bind_btRigidBody_getMotionState_0:Qg,_emscripten_bind_btTransform_setRotation_1:ph,_emscripten_bind_btPoint2PointConstraint_get_m_setting_0:Qd,_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0:bd,_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0:Jc,_emscripten_bind_btAxisSweep3_btAxisSweep3_2:Pc,_emscripten_bind_btAxisSweep3_btAxisSweep3_3:Qc,_emscripten_bind_btConeShapeZ___destroy___0:ke,_memset:jw,_emscripten_bind_btBoxShape_calculateLocalInertia_2:Ee,_emscripten_bind_btPoint2PointConstraint_getPivotInA_0:Od,_emscripten_bind_btAxisSweep3_btAxisSweep3_4:Rc,_emscripten_bind_btCollisionObject_forceActivationState_1:ld,_emscripten_bind_btQuadWord_setX_1:Bh,_emscripten_bind_btOverlappingPairCache___destroy___0:ag,_emscripten_bind_btConeTwistConstraint_setLimit_2:Yd,_emscripten_bind_btQuadWord_setZ_1:Dh,_emscripten_bind_btRigidBody___destroy___0:bh,_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1:af,_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1:Ie,_emscripten_bind_btCollisionDispatcher___destroy___0:Je,_emscripten_bind_btStridingMeshInterface___destroy___0:id,_emscripten_bind_btDefaultMotionState_getWorldTransform_1:Ve,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1:Ed,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2:Ue,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3:Gd,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2:Fd,_emscripten_bind_RayResultCallback___destroy___0:Mf,_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0:Hd,_emscripten_bind_btManifoldPoint_get_m_localPointA_0:Zc,_emscripten_bind_btQuadWord_x_0:xh,_emscripten_bind_btPersistentManifold_getBody0_0:xe,_emscripten_bind_btConstraintSetting___destroy___0:Cg,_emscripten_bind_btConeShapeX_btConeShapeX_2:le,_emscripten_bind_btDispatcher_getNumManifolds_0:$e,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1:Te,_emscripten_bind_btBroadphaseInterface___destroy___0:jd,_emscripten_bind_btRigidBody_activate_1:Wg,_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1:Gf,_emscripten_bind_btRigidBody_setLinearFactor_1:Hg,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2:Wd,_emscripten_bind_btVector3_op_mul_1:kg,_emscripten_bind_btCylinderShapeX___destroy___0:fh,_emscripten_bind_btConcaveShape___destroy___0:Pf,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4:Xd,_emscripten_bind_btQuaternion_x_0:wf,_emscripten_bind_btVector3___destroy___0:lg,_emscripten_bind_btRigidBody_setAngularFactor_1:Rg,_emscripten_bind_btCapsuleShape___destroy___0:Oc,_emscripten_bind_btCollisionObject_activate_1:nd,_emscripten_bind_btCollisionObject_activate_0:md,_emscripten_bind_btConeShapeX_setLocalScaling_1:me,_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0:Xc,_emscripten_bind_ContactResultCallback___destroy___0:ge,_emscripten_bind_btQuaternion_z_0:yf,_emscripten_bind_btVector4_x_0:Uf,_emscripten_bind_btVector3_x_0:dg,_emscripten_bind_btConstraintSetting_btConstraintSetting_0:vg,_emscripten_bind_btVector4_op_mul_1:_f,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3:Uc,_emscripten_bind_btCollisionObject_getCollisionShape_0:kd,_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1:Ge,_emscripten_bind_btTriangleMeshShape___destroy___0:_e,_emscripten_bind_btTriangleMesh___destroy___0:ue,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4:Vc,_emscripten_bind_btManifoldPoint___destroy___0:hd,_i64Add:lw,_emscripten_bind_btQuaternion_btQuaternion_4:uf,_emscripten_bind_btCylinderShape_btCylinderShape_1:Gh,_emscripten_bind_btQuaternion___destroy___0:Ef,_emscripten_bind_btTransform_setIdentity_0:mh,_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1:cd,_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1:gd,_emscripten_bind_btVector3_setZ_1:ig,_emscripten_bind_btCollisionObject_setFriction_1:qd,_emscripten_bind_btRigidBody_isActive_0:Xg,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0:Qe,_emscripten_bind_btDefaultCollisionConfiguration___destroy___0:ee,_emscripten_bind_btRigidBody_setMassProps_2:Gg,_emscripten_bind_btQuaternion_setValue_4:vf,_emscripten_bind_btVector3_setValue_3:jg,_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1:ch,_emscripten_bind_btCapsuleShapeX___destroy___0:tf,_emscripten_bind_btMotionState_setWorldTransform_1:Ud,_emscripten_bind_btCylinderShape_setLocalScaling_1:Hh,_emscripten_bind_btQuadWord_setY_1:Ch,_emscripten_bind_btQuaternion_setY_1:Bf,_emscripten_bind_btConeShape_calculateLocalInertia_2:ae,_emscripten_bind_btCompoundShape_calculateLocalInertia_2:Oe,_emscripten_bind_btVector4_setX_1:Xf,_llvm_bswap_i32:ow,_emscripten_bind_btVector4_btVector4_0:Qf,_emscripten_bind_btConeShape_setLocalScaling_1:$d,_emscripten_bind_btConeShapeX___destroy___0:oe,_emscripten_bind_btCollisionObject_getCollisionFlags_0:sd,_emscripten_bind_btSphereShape_setLocalScaling_1:ng,_emscripten_bind_btCollisionWorld___destroy___0:wh,_emscripten_bind_btVector4_w_0:Sf,_emscripten_bind_btBoxShape_btBoxShape_1:Ce,_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0:fd,_emscripten_bind_btPersistentManifold_getContactPoint_1:Ae,_emscripten_bind_btBvhTriangleMeshShape___destroy___0:Gc,_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1:Bg,_free:dw,_emscripten_bind_btSphereShape___destroy___0:pg,_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0:gf,_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0:Yc,_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1:Dd,_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0:dd,_emscripten_bind_btVector4_setValue_4:Tf,_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1:Ec,_emscripten_bind_btRigidBody_setFriction_1:Zg,_emscripten_bind_btVector3_btVector3_3:cg,_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2:eh,_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0:Kc,_emscripten_bind_btQuaternion_setX_1:Af,_emscripten_bind_btRigidBody_getCollisionFlags_0:$g,_emscripten_bind_btCollisionShape_setLocalScaling_1:sg,_emscripten_bind_btRigidBody_activate_0:Vg,_emscripten_bind_btRigidBody_applyTorque_1:Ig,_emscripten_bind_btMatrix3x3_setEulerZYX_3:wc,_emscripten_bind_btVector4_y_0:Vf,_emscripten_bind_btCompoundShape_addChildShape_2:Me,_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0:qg,_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0:yc,_emscripten_bind_btCollisionWorld_getDispatcher_0:uh,_emscripten_bind_btConcaveShape_setLocalScaling_1:Nf,_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0:jf,_emscripten_bind_btDefaultMotionState___destroy___0:Xe,_emscripten_bind_btTriangleMesh_btTriangleMesh_0:pe,_emscripten_bind_btTriangleMesh_btTriangleMesh_1:qe,_emscripten_bind_btTriangleMesh_btTriangleMesh_2:re,_emscripten_bind_btTransform___destroy___0:th,_emscripten_bind_btManifoldPoint_set_m_localPointB_1:ad,_emscripten_bind_btQuadWord_setW_1:Eh,_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0:ef,_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1:ed,_i64Subtract:iw,_emscripten_bind_btManifoldPoint_get_m_localPointB_0:$c,_emscripten_bind_btQuaternion_y_0:xf,_emscripten_bind_btConstraintSetting_get_m_tau_0:wg,_emscripten_bind_btPoint2PointConstraint_set_m_setting_1:Rd,_emscripten_bind_btRigidBody_setDamping_2:Fg,_emscripten_bind_btRigidBody_btRigidBody_1:Eg,_emscripten_bind_btCollisionShape___destroy___0:ug,_emscripten_bind_btRigidBody_setLinearVelocity_1:Og,_emscripten_bind_RayResultCallback_set_m_collisionObject_1:Lf,_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0:Hc,_emscripten_bind_btPoint2PointConstraint___destroy___0:Sd,_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1:hf,_emscripten_bind_btAxisSweep3___destroy___0:Tc,_emscripten_bind_btCompoundShape_setLocalScaling_1:Ne,_emscripten_bind_RayResultCallback_get_m_collisionObject_0:Kf,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2:Cd,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1:Bd,_emscripten_bind_btVector4_setY_1:Yf,_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0:Ag,_emscripten_bind_btRigidBody_getCollisionShape_0:Tg,_emscripten_bind_ConcreteContactResultCallback___destroy___0:Ac,_emscripten_bind_btCylinderShapeZ___destroy___0:jh,_emscripten_bind_btRigidBody_applyImpulse_2:Lg,_malloc:cw,_emscripten_bind_btConeTwistConstraint___destroy___0:Zd,_emscripten_bind_btConcaveShape_calculateLocalInertia_2:Of,_emscripten_bind_btCollisionObject___destroy___0:ud,_emscripten_bind_btTransform_btTransform_2:lh,_emscripten_bind_btQuadWord___destroy___0:Fh,_emscripten_bind_btTransform_btTransform_0:kh,_emscripten_bind_btRigidBody_setAngularVelocity_1:Pg,_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2:ih,_emscripten_bind_btCapsuleShapeZ___destroy___0:If,_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2:qf,_emscripten_bind_btVector3_btVector3_0:bg,_emscripten_bind_btBoxShape___destroy___0:Fe,_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0:xd,_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2:Ze,_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0:nf,_emscripten_bind_btPersistentManifold_getBody1_0:ye,_emscripten_bind_btTriangleMesh_addTriangle_3:se,_emscripten_bind_btTriangleMesh_addTriangle_4:te,_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1:of,_emscripten_bind_btPersistentManifold___destroy___0:Be,_emscripten_bind_btMotionState_getWorldTransform_1:Td,_emscripten_bind_btCylinderShapeX_setLocalScaling_1:dh,_emscripten_bind_btMatrix3x3___destroy___0:xc,_emscripten_bind_btRigidBody_applyTorqueImpulse_1:Kg,_emscripten_bind_btCompoundShape___destroy___0:Pe,_emscripten_bind_btRigidBody_setCollisionFlags_1:ah,_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1:ff,_emscripten_bind_btCollisionShape_calculateLocalInertia_2:tg,_emscripten_bind_RayResultCallback_hasHit_0:Jf,_emscripten_bind_btConeShape___destroy___0:be,_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2:Ff,_emscripten_bind_btConstraintSolver___destroy___0:Dg,_emscripten_bind_btDbvtBroadphase___destroy___0:Ic,_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1:mf,_emscripten_bind_btCapsuleShape_btCapsuleShape_2:Lc,_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2:sf,_emscripten_bind_btConeShapeZ_setLocalScaling_1:ie,_emscripten_bind_btCapsuleShapeX_setLocalScaling_1:rf,_emscripten_bind_btRigidBody_forceActivationState_1:Ug,_emscripten_bind_btPoint2PointConstraint_setPivotB_1:Nd,_emscripten_bind_btRigidBody_applyForce_2:Jg,_emscripten_bind_btCapsuleShape_setLocalScaling_1:Mc,_emscripten_bind_btConstraintSetting_set_m_tau_1:xg,_emscripten_bind_btVector3_setY_1:hg,_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1:gh,_emscripten_bind_btTriangleMeshShape_setLocalScaling_1:Ye,_emscripten_bind_btCompoundShape_btCompoundShape_0:Ke,_emscripten_bind_btCompoundShape_btCompoundShape_1:Le,_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1:kf,_emscripten_bind_btPersistentManifold_btPersistentManifold_0:we,_emscripten_bind_btSphereShape_calculateLocalInertia_2:og,_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2:cf,_emscripten_bind_btVector4___destroy___0:$f,_emscripten_bind_btRigidBody_updateInertiaTensor_0:Ng,_emscripten_bind_btConstraintSetting_get_m_damping_0:yg,_emscripten_bind_btCylinderShapeZ_setLocalScaling_1:hh,_emscripten_bind_btBoxShape_setLocalScaling_1:De,_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7:zc,_emscripten_bind_btCollisionWorld_rayTest_3:vh,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0:ce,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1:de,_emscripten_bind_btQuaternion_setW_1:Df,_emscripten_bind_btVector4_btVector4_4:Rf,_emscripten_bind_btTransform_setOrigin_1:oh,_emscripten_bind_ClosestRayResultCallback_hasHit_0:df,_emscripten_bind_btCylinderShape_calculateLocalInertia_2:Ih,_emscripten_bind_btPoint2PointConstraint_getPivotInB_0:Pd,_emscripten_bind_btDispatcher___destroy___0:bf,_emscripten_bind_btDiscreteDynamicsWorld___destroy___0:Jd,_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1:Ad,_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1:wd,_memmove:nw,_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3:Id,_emscripten_bind_ContactResultCallback_addSingleResult_7:fe,_emscripten_bind_btDefaultMotionState_setWorldTransform_1:We,_emscripten_bind_btQuadWord_y_0:yh,_memcpy:mw,_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2:Hf,_emscripten_bind_btCollisionObject_setRestitution_1:pd,_emscripten_bind_ClosestRayResultCallback___destroy___0:pf,_emscripten_bind_btRigidBody_upcast_1:Sg,_emscripten_bind_btCollisionObject_getWorldTransform_0:rd,_emscripten_bind_btVector4_setZ_1:Zf,_emscripten_bind_btMotionState___destroy___0:Vd,_emscripten_bind_btVector4_z_0:Wf,__GLOBAL__I_a:Nv,runPostSets:hw,stackAlloc:nc,stackSave:oc,stackRestore:pc,setThrew:qc,setTempRet0:tc,getTempRet0:uc,dynCall_viiiii:Bw,dynCall_vid:Cw,dynCall_vi:Dw,dynCall_viiidii:Ew,dynCall_vii:Fw,dynCall_iiiiiiiiiii:Gw,dynCall_ii:Hw,dynCall_viidi:Iw,dynCall_viddiii:Jw,dynCall_vidii:Kw,dynCall_iiiii:Lw,dynCall_vidi:Mw,dynCall_diiiiiiii:Nw,dynCall_viiiiddddiid:Ow,dynCall_diiiii:Pw,dynCall_iiii:Qw,dynCall_viiiiii:Rw,dynCall_iiid:Sw,dynCall_di:Tw,dynCall_iiiiiii:Uw,dynCall_diiidii:Vw,dynCall_viidii:Ww,dynCall_viiiiiiiii:Xw,dynCall_viiiiiiiiii:Yw,dynCall_iii:Zw,dynCall_diii:_w,dynCall_diiiiiiiiii:$w,dynCall_viiiid:ax,dynCall_diiiiiiiii:bx,dynCall_did:cx,dynCall_viiiidddddidi:dx,dynCall_diidii:ex,dynCall_diiii:fx,dynCall_iiiiiiiiii:gx,dynCall_viiid:hx,dynCall_viii:ix,dynCall_v:jx,dynCall_viid:kx,dynCall_iidid:lx,dynCall_viiii:mx}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_viiidii": invoke_viiidii, "invoke_vii": invoke_vii, "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii, "invoke_ii": invoke_ii, "invoke_viidi": invoke_viidi, "invoke_viddiii": invoke_viddiii, "invoke_vidii": invoke_vidii, "invoke_iiiii": invoke_iiiii, "invoke_vidi": invoke_vidi, "invoke_diiiiiiii": invoke_diiiiiiii, "invoke_viiiiddddiid": invoke_viiiiddddiid, "invoke_diiiii": invoke_diiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiid": invoke_iiid, "invoke_di": invoke_di, "invoke_iiiiiii": invoke_iiiiiii, "invoke_diiidii": invoke_diiidii, "invoke_viidii": invoke_viidii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_diii": invoke_diii, "invoke_diiiiiiiiii": invoke_diiiiiiiiii, "invoke_viiiid": invoke_viiiid, "invoke_diiiiiiiii": invoke_diiiiiiiii, "invoke_did": invoke_did, "invoke_viiiidddddidi": invoke_viiiidddddidi, "invoke_diidii": invoke_diidii, "invoke_diiii": invoke_diiii, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_iidid": invoke_iidid, "invoke_viiii": invoke_viiii, "___cxa_throw": ___cxa_throw, "_cosf": _cosf, "__ZSt9terminatev": __ZSt9terminatev, "_fmod": _fmod, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_is_number_type": ___cxa_is_number_type, "_atan2f": _atan2f, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_fflush": _fflush, "___cxa_guard_release": ___cxa_guard_release, "_emscripten_asm_const_double": _emscripten_asm_const_double, "___setErrNo": ___setErrNo, "_fabsf": _fabsf, "_sbrk": _sbrk, "_llvm_pow_f32": _llvm_pow_f32, "___cxa_begin_catch": ___cxa_begin_catch, "_sinf": _sinf, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_sysconf": _sysconf, "_acosf": _acosf, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sqrtf": _sqrtf, "___errno_location": ___errno_location, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "___cxa_does_inherit": ___cxa_does_inherit, "__exit": __exit, "_abort": _abort, "_time": _time, "___cxa_allocate_exception": ___cxa_allocate_exception, "_gettimeofday": _gettimeofday, "_llvm_trap": _llvm_trap, "_exit": _exit, "___cxa_pure_virtual": ___cxa_pure_virtual, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTISt9exception": __ZTISt9exception }, buffer);
var _emscripten_bind_btCollisionObject_setCollisionFlags_1 = Module["_emscripten_bind_btCollisionObject_setCollisionFlags_1"] = asm["_emscripten_bind_btCollisionObject_setCollisionFlags_1"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _emscripten_bind_btConstraintSetting_set_m_damping_1 = Module["_emscripten_bind_btConstraintSetting_set_m_damping_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_damping_1"];
var _emscripten_bind_btQuaternion_w_0 = Module["_emscripten_bind_btQuaternion_w_0"] = asm["_emscripten_bind_btQuaternion_w_0"];
var _emscripten_bind_btTransform_getBasis_0 = Module["_emscripten_bind_btTransform_getBasis_0"] = asm["_emscripten_bind_btTransform_getBasis_0"];
var _emscripten_bind_btTransform_getRotation_0 = Module["_emscripten_bind_btTransform_getRotation_0"] = asm["_emscripten_bind_btTransform_getRotation_0"];
var _emscripten_bind_btVector3_setX_1 = Module["_emscripten_bind_btVector3_setX_1"] = asm["_emscripten_bind_btVector3_setX_1"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_5 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"];
var _emscripten_bind_btCollisionDispatcher_getNumManifolds_0 = Module["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"] = asm["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"];
var _emscripten_bind_btCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btCollisionConfiguration___destroy___0"];
var _emscripten_bind_btCollisionObject_isActive_0 = Module["_emscripten_bind_btCollisionObject_isActive_0"] = asm["_emscripten_bind_btCollisionObject_isActive_0"];
var _emscripten_bind_btCylinderShape___destroy___0 = Module["_emscripten_bind_btCylinderShape___destroy___0"] = asm["_emscripten_bind_btCylinderShape___destroy___0"];
var _emscripten_bind_btQuadWord_w_0 = Module["_emscripten_bind_btQuadWord_w_0"] = asm["_emscripten_bind_btQuadWord_w_0"];
var _emscripten_bind_btPersistentManifold_getNumContacts_0 = Module["_emscripten_bind_btPersistentManifold_getNumContacts_0"] = asm["_emscripten_bind_btPersistentManifold_getNumContacts_0"];
var _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4 = Module["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"];
var _emscripten_bind_btTypedConstraint___destroy___0 = Module["_emscripten_bind_btTypedConstraint___destroy___0"] = asm["_emscripten_bind_btTypedConstraint___destroy___0"];
var _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"];
var _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"];
var _emscripten_bind_btSphereShape_btSphereShape_1 = Module["_emscripten_bind_btSphereShape_btSphereShape_1"] = asm["_emscripten_bind_btSphereShape_btSphereShape_1"];
var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"];
var _emscripten_bind_btVector3_z_0 = Module["_emscripten_bind_btVector3_z_0"] = asm["_emscripten_bind_btVector3_z_0"];
var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"];
var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"];
var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"];
var _emscripten_bind_btConeShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"];
var _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"];
var _emscripten_bind_btTransform_getOrigin_0 = Module["_emscripten_bind_btTransform_getOrigin_0"] = asm["_emscripten_bind_btTransform_getOrigin_0"];
var _emscripten_bind_btRigidBodyConstructionInfo___destroy___0 = Module["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"];
var _emscripten_bind_btConeShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"];
var _emscripten_bind_btRigidBody_getWorldTransform_0 = Module["_emscripten_bind_btRigidBody_getWorldTransform_0"] = asm["_emscripten_bind_btRigidBody_getWorldTransform_0"];
var _emscripten_bind_btPoint2PointConstraint_setPivotA_1 = Module["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"];
var _emscripten_bind_btQuaternion_setZ_1 = Module["_emscripten_bind_btQuaternion_setZ_1"] = asm["_emscripten_bind_btQuaternion_setZ_1"];
var _emscripten_bind_btConeShape_btConeShape_2 = Module["_emscripten_bind_btConeShape_btConeShape_2"] = asm["_emscripten_bind_btConeShape_btConeShape_2"];
var _emscripten_bind_btManifoldPoint_set_m_localPointA_1 = Module["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"];
var _emscripten_bind_btCapsuleShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"];
var _emscripten_bind_btRigidBody_setRestitution_1 = Module["_emscripten_bind_btRigidBody_setRestitution_1"] = asm["_emscripten_bind_btRigidBody_setRestitution_1"];
var _emscripten_bind_btVector3_y_0 = Module["_emscripten_bind_btVector3_y_0"] = asm["_emscripten_bind_btVector3_y_0"];
var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2 = Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"] = asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"];
var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3 = Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"] = asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"];
var _emscripten_bind_btQuadWord_z_0 = Module["_emscripten_bind_btQuadWord_z_0"] = asm["_emscripten_bind_btQuadWord_z_0"];
var _emscripten_bind_btConeShapeZ_btConeShapeZ_2 = Module["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"] = asm["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"];
var _emscripten_bind_btRigidBody_getMotionState_0 = Module["_emscripten_bind_btRigidBody_getMotionState_0"] = asm["_emscripten_bind_btRigidBody_getMotionState_0"];
var _emscripten_bind_btTransform_setRotation_1 = Module["_emscripten_bind_btTransform_setRotation_1"] = asm["_emscripten_bind_btTransform_setRotation_1"];
var _emscripten_bind_btPoint2PointConstraint_get_m_setting_0 = Module["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"] = asm["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"];
var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"];
var _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_2 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_3 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"];
var _emscripten_bind_btConeShapeZ___destroy___0 = Module["_emscripten_bind_btConeShapeZ___destroy___0"] = asm["_emscripten_bind_btConeShapeZ___destroy___0"];
var _memset = Module["_memset"] = asm["_memset"];
var _emscripten_bind_btBoxShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBoxShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBoxShape_calculateLocalInertia_2"];
var _emscripten_bind_btPoint2PointConstraint_getPivotInA_0 = Module["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"];
var _emscripten_bind_btAxisSweep3_btAxisSweep3_4 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"];
var _emscripten_bind_btCollisionObject_forceActivationState_1 = Module["_emscripten_bind_btCollisionObject_forceActivationState_1"] = asm["_emscripten_bind_btCollisionObject_forceActivationState_1"];
var _emscripten_bind_btQuadWord_setX_1 = Module["_emscripten_bind_btQuadWord_setX_1"] = asm["_emscripten_bind_btQuadWord_setX_1"];
var _emscripten_bind_btOverlappingPairCache___destroy___0 = Module["_emscripten_bind_btOverlappingPairCache___destroy___0"] = asm["_emscripten_bind_btOverlappingPairCache___destroy___0"];
var _emscripten_bind_btConeTwistConstraint_setLimit_2 = Module["_emscripten_bind_btConeTwistConstraint_setLimit_2"] = asm["_emscripten_bind_btConeTwistConstraint_setLimit_2"];
var _emscripten_bind_btQuadWord_setZ_1 = Module["_emscripten_bind_btQuadWord_setZ_1"] = asm["_emscripten_bind_btQuadWord_setZ_1"];
var _emscripten_bind_btRigidBody___destroy___0 = Module["_emscripten_bind_btRigidBody___destroy___0"] = asm["_emscripten_bind_btRigidBody___destroy___0"];
var _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1 = Module["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"] = asm["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"];
var _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1 = Module["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"] = asm["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"];
var _emscripten_bind_btCollisionDispatcher___destroy___0 = Module["_emscripten_bind_btCollisionDispatcher___destroy___0"] = asm["_emscripten_bind_btCollisionDispatcher___destroy___0"];
var _emscripten_bind_btStridingMeshInterface___destroy___0 = Module["_emscripten_bind_btStridingMeshInterface___destroy___0"] = asm["_emscripten_bind_btStridingMeshInterface___destroy___0"];
var _emscripten_bind_btDefaultMotionState_getWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"];
var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"];
var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"];
var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"];
var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"];
var _emscripten_bind_RayResultCallback___destroy___0 = Module["_emscripten_bind_RayResultCallback___destroy___0"] = asm["_emscripten_bind_RayResultCallback___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"];
var _emscripten_bind_btManifoldPoint_get_m_localPointA_0 = Module["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"];
var _emscripten_bind_btQuadWord_x_0 = Module["_emscripten_bind_btQuadWord_x_0"] = asm["_emscripten_bind_btQuadWord_x_0"];
var _emscripten_bind_btPersistentManifold_getBody0_0 = Module["_emscripten_bind_btPersistentManifold_getBody0_0"] = asm["_emscripten_bind_btPersistentManifold_getBody0_0"];
var _emscripten_bind_btConstraintSetting___destroy___0 = Module["_emscripten_bind_btConstraintSetting___destroy___0"] = asm["_emscripten_bind_btConstraintSetting___destroy___0"];
var _emscripten_bind_btConeShapeX_btConeShapeX_2 = Module["_emscripten_bind_btConeShapeX_btConeShapeX_2"] = asm["_emscripten_bind_btConeShapeX_btConeShapeX_2"];
var _emscripten_bind_btDispatcher_getNumManifolds_0 = Module["_emscripten_bind_btDispatcher_getNumManifolds_0"] = asm["_emscripten_bind_btDispatcher_getNumManifolds_0"];
var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"];
var _emscripten_bind_btBroadphaseInterface___destroy___0 = Module["_emscripten_bind_btBroadphaseInterface___destroy___0"] = asm["_emscripten_bind_btBroadphaseInterface___destroy___0"];
var _emscripten_bind_btRigidBody_activate_1 = Module["_emscripten_bind_btRigidBody_activate_1"] = asm["_emscripten_bind_btRigidBody_activate_1"];
var _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"];
var _emscripten_bind_btRigidBody_setLinearFactor_1 = Module["_emscripten_bind_btRigidBody_setLinearFactor_1"] = asm["_emscripten_bind_btRigidBody_setLinearFactor_1"];
var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"];
var _emscripten_bind_btVector3_op_mul_1 = Module["_emscripten_bind_btVector3_op_mul_1"] = asm["_emscripten_bind_btVector3_op_mul_1"];
var _emscripten_bind_btCylinderShapeX___destroy___0 = Module["_emscripten_bind_btCylinderShapeX___destroy___0"] = asm["_emscripten_bind_btCylinderShapeX___destroy___0"];
var _emscripten_bind_btConcaveShape___destroy___0 = Module["_emscripten_bind_btConcaveShape___destroy___0"] = asm["_emscripten_bind_btConcaveShape___destroy___0"];
var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"];
var _emscripten_bind_btQuaternion_x_0 = Module["_emscripten_bind_btQuaternion_x_0"] = asm["_emscripten_bind_btQuaternion_x_0"];
var _emscripten_bind_btVector3___destroy___0 = Module["_emscripten_bind_btVector3___destroy___0"] = asm["_emscripten_bind_btVector3___destroy___0"];
var _emscripten_bind_btRigidBody_setAngularFactor_1 = Module["_emscripten_bind_btRigidBody_setAngularFactor_1"] = asm["_emscripten_bind_btRigidBody_setAngularFactor_1"];
var _emscripten_bind_btCapsuleShape___destroy___0 = Module["_emscripten_bind_btCapsuleShape___destroy___0"] = asm["_emscripten_bind_btCapsuleShape___destroy___0"];
var _emscripten_bind_btCollisionObject_activate_1 = Module["_emscripten_bind_btCollisionObject_activate_1"] = asm["_emscripten_bind_btCollisionObject_activate_1"];
var _emscripten_bind_btCollisionObject_activate_0 = Module["_emscripten_bind_btCollisionObject_activate_0"] = asm["_emscripten_bind_btCollisionObject_activate_0"];
var _emscripten_bind_btConeShapeX_setLocalScaling_1 = Module["_emscripten_bind_btConeShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btConeShapeX_setLocalScaling_1"];
var _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0 = Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"] = asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"];
var _emscripten_bind_ContactResultCallback___destroy___0 = Module["_emscripten_bind_ContactResultCallback___destroy___0"] = asm["_emscripten_bind_ContactResultCallback___destroy___0"];
var _emscripten_bind_btQuaternion_z_0 = Module["_emscripten_bind_btQuaternion_z_0"] = asm["_emscripten_bind_btQuaternion_z_0"];
var _emscripten_bind_btVector4_x_0 = Module["_emscripten_bind_btVector4_x_0"] = asm["_emscripten_bind_btVector4_x_0"];
var _emscripten_bind_btVector3_x_0 = Module["_emscripten_bind_btVector3_x_0"] = asm["_emscripten_bind_btVector3_x_0"];
var _emscripten_bind_btConstraintSetting_btConstraintSetting_0 = Module["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"] = asm["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"];
var _emscripten_bind_btVector4_op_mul_1 = Module["_emscripten_bind_btVector4_op_mul_1"] = asm["_emscripten_bind_btVector4_op_mul_1"];
var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"];
var _emscripten_bind_btCollisionObject_getCollisionShape_0 = Module["_emscripten_bind_btCollisionObject_getCollisionShape_0"] = asm["_emscripten_bind_btCollisionObject_getCollisionShape_0"];
var _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1 = Module["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"] = asm["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"];
var _emscripten_bind_btTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btTriangleMeshShape___destroy___0"];
var _emscripten_bind_btTriangleMesh___destroy___0 = Module["_emscripten_bind_btTriangleMesh___destroy___0"] = asm["_emscripten_bind_btTriangleMesh___destroy___0"];
var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"];
var _emscripten_bind_btManifoldPoint___destroy___0 = Module["_emscripten_bind_btManifoldPoint___destroy___0"] = asm["_emscripten_bind_btManifoldPoint___destroy___0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_bind_btQuaternion_btQuaternion_4 = Module["_emscripten_bind_btQuaternion_btQuaternion_4"] = asm["_emscripten_bind_btQuaternion_btQuaternion_4"];
var _emscripten_bind_btCylinderShape_btCylinderShape_1 = Module["_emscripten_bind_btCylinderShape_btCylinderShape_1"] = asm["_emscripten_bind_btCylinderShape_btCylinderShape_1"];
var _emscripten_bind_btQuaternion___destroy___0 = Module["_emscripten_bind_btQuaternion___destroy___0"] = asm["_emscripten_bind_btQuaternion___destroy___0"];
var _emscripten_bind_btTransform_setIdentity_0 = Module["_emscripten_bind_btTransform_setIdentity_0"] = asm["_emscripten_bind_btTransform_setIdentity_0"];
var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"];
var _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"];
var _emscripten_bind_btVector3_setZ_1 = Module["_emscripten_bind_btVector3_setZ_1"] = asm["_emscripten_bind_btVector3_setZ_1"];
var _emscripten_bind_btCollisionObject_setFriction_1 = Module["_emscripten_bind_btCollisionObject_setFriction_1"] = asm["_emscripten_bind_btCollisionObject_setFriction_1"];
var _emscripten_bind_btRigidBody_isActive_0 = Module["_emscripten_bind_btRigidBody_isActive_0"] = asm["_emscripten_bind_btRigidBody_isActive_0"];
var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"];
var _emscripten_bind_btDefaultCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"];
var _emscripten_bind_btRigidBody_setMassProps_2 = Module["_emscripten_bind_btRigidBody_setMassProps_2"] = asm["_emscripten_bind_btRigidBody_setMassProps_2"];
var _emscripten_bind_btQuaternion_setValue_4 = Module["_emscripten_bind_btQuaternion_setValue_4"] = asm["_emscripten_bind_btQuaternion_setValue_4"];
var _emscripten_bind_btVector3_setValue_3 = Module["_emscripten_bind_btVector3_setValue_3"] = asm["_emscripten_bind_btVector3_setValue_3"];
var _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1 = Module["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"] = asm["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"];
var _emscripten_bind_btCapsuleShapeX___destroy___0 = Module["_emscripten_bind_btCapsuleShapeX___destroy___0"] = asm["_emscripten_bind_btCapsuleShapeX___destroy___0"];
var _emscripten_bind_btMotionState_setWorldTransform_1 = Module["_emscripten_bind_btMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btMotionState_setWorldTransform_1"];
var _emscripten_bind_btCylinderShape_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShape_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShape_setLocalScaling_1"];
var _emscripten_bind_btQuadWord_setY_1 = Module["_emscripten_bind_btQuadWord_setY_1"] = asm["_emscripten_bind_btQuadWord_setY_1"];
var _emscripten_bind_btQuaternion_setY_1 = Module["_emscripten_bind_btQuaternion_setY_1"] = asm["_emscripten_bind_btQuaternion_setY_1"];
var _emscripten_bind_btConeShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShape_calculateLocalInertia_2"];
var _emscripten_bind_btCompoundShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"];
var _emscripten_bind_btVector4_setX_1 = Module["_emscripten_bind_btVector4_setX_1"] = asm["_emscripten_bind_btVector4_setX_1"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _emscripten_bind_btVector4_btVector4_0 = Module["_emscripten_bind_btVector4_btVector4_0"] = asm["_emscripten_bind_btVector4_btVector4_0"];
var _emscripten_bind_btConeShape_setLocalScaling_1 = Module["_emscripten_bind_btConeShape_setLocalScaling_1"] = asm["_emscripten_bind_btConeShape_setLocalScaling_1"];
var _emscripten_bind_btConeShapeX___destroy___0 = Module["_emscripten_bind_btConeShapeX___destroy___0"] = asm["_emscripten_bind_btConeShapeX___destroy___0"];
var _emscripten_bind_btCollisionObject_getCollisionFlags_0 = Module["_emscripten_bind_btCollisionObject_getCollisionFlags_0"] = asm["_emscripten_bind_btCollisionObject_getCollisionFlags_0"];
var _emscripten_bind_btSphereShape_setLocalScaling_1 = Module["_emscripten_bind_btSphereShape_setLocalScaling_1"] = asm["_emscripten_bind_btSphereShape_setLocalScaling_1"];
var _emscripten_bind_btCollisionWorld___destroy___0 = Module["_emscripten_bind_btCollisionWorld___destroy___0"] = asm["_emscripten_bind_btCollisionWorld___destroy___0"];
var _emscripten_bind_btVector4_w_0 = Module["_emscripten_bind_btVector4_w_0"] = asm["_emscripten_bind_btVector4_w_0"];
var _emscripten_bind_btBoxShape_btBoxShape_1 = Module["_emscripten_bind_btBoxShape_btBoxShape_1"] = asm["_emscripten_bind_btBoxShape_btBoxShape_1"];
var _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"];
var _emscripten_bind_btPersistentManifold_getContactPoint_1 = Module["_emscripten_bind_btPersistentManifold_getContactPoint_1"] = asm["_emscripten_bind_btPersistentManifold_getContactPoint_1"];
var _emscripten_bind_btBvhTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"];
var _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1 = Module["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"];
var _free = Module["_free"] = asm["_free"];
var _emscripten_bind_btSphereShape___destroy___0 = Module["_emscripten_bind_btSphereShape___destroy___0"] = asm["_emscripten_bind_btSphereShape___destroy___0"];
var _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"];
var _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"];
var _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"];
var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0 = Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"];
var _emscripten_bind_btVector4_setValue_4 = Module["_emscripten_bind_btVector4_setValue_4"] = asm["_emscripten_bind_btVector4_setValue_4"];
var _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"];
var _emscripten_bind_btRigidBody_setFriction_1 = Module["_emscripten_bind_btRigidBody_setFriction_1"] = asm["_emscripten_bind_btRigidBody_setFriction_1"];
var _emscripten_bind_btVector3_btVector3_3 = Module["_emscripten_bind_btVector3_btVector3_3"] = asm["_emscripten_bind_btVector3_btVector3_3"];
var _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"];
var _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"];
var _emscripten_bind_btQuaternion_setX_1 = Module["_emscripten_bind_btQuaternion_setX_1"] = asm["_emscripten_bind_btQuaternion_setX_1"];
var _emscripten_bind_btRigidBody_getCollisionFlags_0 = Module["_emscripten_bind_btRigidBody_getCollisionFlags_0"] = asm["_emscripten_bind_btRigidBody_getCollisionFlags_0"];
var _emscripten_bind_btCollisionShape_setLocalScaling_1 = Module["_emscripten_bind_btCollisionShape_setLocalScaling_1"] = asm["_emscripten_bind_btCollisionShape_setLocalScaling_1"];
var _emscripten_bind_btRigidBody_activate_0 = Module["_emscripten_bind_btRigidBody_activate_0"] = asm["_emscripten_bind_btRigidBody_activate_0"];
var _emscripten_bind_btRigidBody_applyTorque_1 = Module["_emscripten_bind_btRigidBody_applyTorque_1"] = asm["_emscripten_bind_btRigidBody_applyTorque_1"];
var _emscripten_bind_btMatrix3x3_setEulerZYX_3 = Module["_emscripten_bind_btMatrix3x3_setEulerZYX_3"] = asm["_emscripten_bind_btMatrix3x3_setEulerZYX_3"];
var _emscripten_bind_btVector4_y_0 = Module["_emscripten_bind_btVector4_y_0"] = asm["_emscripten_bind_btVector4_y_0"];
var _emscripten_bind_btCompoundShape_addChildShape_2 = Module["_emscripten_bind_btCompoundShape_addChildShape_2"] = asm["_emscripten_bind_btCompoundShape_addChildShape_2"];
var _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"];
var _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0 = Module["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"] = asm["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"];
var _emscripten_bind_btCollisionWorld_getDispatcher_0 = Module["_emscripten_bind_btCollisionWorld_getDispatcher_0"] = asm["_emscripten_bind_btCollisionWorld_getDispatcher_0"];
var _emscripten_bind_btConcaveShape_setLocalScaling_1 = Module["_emscripten_bind_btConcaveShape_setLocalScaling_1"] = asm["_emscripten_bind_btConcaveShape_setLocalScaling_1"];
var _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"];
var _emscripten_bind_btDefaultMotionState___destroy___0 = Module["_emscripten_bind_btDefaultMotionState___destroy___0"] = asm["_emscripten_bind_btDefaultMotionState___destroy___0"];
var _emscripten_bind_btTriangleMesh_btTriangleMesh_0 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"];
var _emscripten_bind_btTriangleMesh_btTriangleMesh_1 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"];
var _emscripten_bind_btTriangleMesh_btTriangleMesh_2 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"];
var _emscripten_bind_btTransform___destroy___0 = Module["_emscripten_bind_btTransform___destroy___0"] = asm["_emscripten_bind_btTransform___destroy___0"];
var _emscripten_bind_btManifoldPoint_set_m_localPointB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"];
var _emscripten_bind_btQuadWord_setW_1 = Module["_emscripten_bind_btQuadWord_setW_1"] = asm["_emscripten_bind_btQuadWord_setW_1"];
var _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"];
var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1 = Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _emscripten_bind_btManifoldPoint_get_m_localPointB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"];
var _emscripten_bind_btQuaternion_y_0 = Module["_emscripten_bind_btQuaternion_y_0"] = asm["_emscripten_bind_btQuaternion_y_0"];
var _emscripten_bind_btConstraintSetting_get_m_tau_0 = Module["_emscripten_bind_btConstraintSetting_get_m_tau_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_tau_0"];
var _emscripten_bind_btPoint2PointConstraint_set_m_setting_1 = Module["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"] = asm["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"];
var _emscripten_bind_btRigidBody_setDamping_2 = Module["_emscripten_bind_btRigidBody_setDamping_2"] = asm["_emscripten_bind_btRigidBody_setDamping_2"];
var _emscripten_bind_btRigidBody_btRigidBody_1 = Module["_emscripten_bind_btRigidBody_btRigidBody_1"] = asm["_emscripten_bind_btRigidBody_btRigidBody_1"];
var _emscripten_bind_btCollisionShape___destroy___0 = Module["_emscripten_bind_btCollisionShape___destroy___0"] = asm["_emscripten_bind_btCollisionShape___destroy___0"];
var _emscripten_bind_btRigidBody_setLinearVelocity_1 = Module["_emscripten_bind_btRigidBody_setLinearVelocity_1"] = asm["_emscripten_bind_btRigidBody_setLinearVelocity_1"];
var _emscripten_bind_RayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"];
var _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0 = Module["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"] = asm["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"];
var _emscripten_bind_btPoint2PointConstraint___destroy___0 = Module["_emscripten_bind_btPoint2PointConstraint___destroy___0"] = asm["_emscripten_bind_btPoint2PointConstraint___destroy___0"];
var _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"];
var _emscripten_bind_btAxisSweep3___destroy___0 = Module["_emscripten_bind_btAxisSweep3___destroy___0"] = asm["_emscripten_bind_btAxisSweep3___destroy___0"];
var _emscripten_bind_btCompoundShape_setLocalScaling_1 = Module["_emscripten_bind_btCompoundShape_setLocalScaling_1"] = asm["_emscripten_bind_btCompoundShape_setLocalScaling_1"];
var _emscripten_bind_RayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"];
var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"];
var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"];
var _emscripten_bind_btVector4_setY_1 = Module["_emscripten_bind_btVector4_setY_1"] = asm["_emscripten_bind_btVector4_setY_1"];
var _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0 = Module["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"];
var _emscripten_bind_btRigidBody_getCollisionShape_0 = Module["_emscripten_bind_btRigidBody_getCollisionShape_0"] = asm["_emscripten_bind_btRigidBody_getCollisionShape_0"];
var _emscripten_bind_ConcreteContactResultCallback___destroy___0 = Module["_emscripten_bind_ConcreteContactResultCallback___destroy___0"] = asm["_emscripten_bind_ConcreteContactResultCallback___destroy___0"];
var _emscripten_bind_btCylinderShapeZ___destroy___0 = Module["_emscripten_bind_btCylinderShapeZ___destroy___0"] = asm["_emscripten_bind_btCylinderShapeZ___destroy___0"];
var _emscripten_bind_btRigidBody_applyImpulse_2 = Module["_emscripten_bind_btRigidBody_applyImpulse_2"] = asm["_emscripten_bind_btRigidBody_applyImpulse_2"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _emscripten_bind_btConeTwistConstraint___destroy___0 = Module["_emscripten_bind_btConeTwistConstraint___destroy___0"] = asm["_emscripten_bind_btConeTwistConstraint___destroy___0"];
var _emscripten_bind_btConcaveShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"];
var _emscripten_bind_btCollisionObject___destroy___0 = Module["_emscripten_bind_btCollisionObject___destroy___0"] = asm["_emscripten_bind_btCollisionObject___destroy___0"];
var _emscripten_bind_btTransform_btTransform_2 = Module["_emscripten_bind_btTransform_btTransform_2"] = asm["_emscripten_bind_btTransform_btTransform_2"];
var _emscripten_bind_btQuadWord___destroy___0 = Module["_emscripten_bind_btQuadWord___destroy___0"] = asm["_emscripten_bind_btQuadWord___destroy___0"];
var _emscripten_bind_btTransform_btTransform_0 = Module["_emscripten_bind_btTransform_btTransform_0"] = asm["_emscripten_bind_btTransform_btTransform_0"];
var _emscripten_bind_btRigidBody_setAngularVelocity_1 = Module["_emscripten_bind_btRigidBody_setAngularVelocity_1"] = asm["_emscripten_bind_btRigidBody_setAngularVelocity_1"];
var _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"];
var _emscripten_bind_btCapsuleShapeZ___destroy___0 = Module["_emscripten_bind_btCapsuleShapeZ___destroy___0"] = asm["_emscripten_bind_btCapsuleShapeZ___destroy___0"];
var _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2 = Module["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"] = asm["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"];
var _emscripten_bind_btVector3_btVector3_0 = Module["_emscripten_bind_btVector3_btVector3_0"] = asm["_emscripten_bind_btVector3_btVector3_0"];
var _emscripten_bind_btBoxShape___destroy___0 = Module["_emscripten_bind_btBoxShape___destroy___0"] = asm["_emscripten_bind_btBoxShape___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"];
var _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"];
var _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"];
var _emscripten_bind_btPersistentManifold_getBody1_0 = Module["_emscripten_bind_btPersistentManifold_getBody1_0"] = asm["_emscripten_bind_btPersistentManifold_getBody1_0"];
var _emscripten_bind_btTriangleMesh_addTriangle_3 = Module["_emscripten_bind_btTriangleMesh_addTriangle_3"] = asm["_emscripten_bind_btTriangleMesh_addTriangle_3"];
var _emscripten_bind_btTriangleMesh_addTriangle_4 = Module["_emscripten_bind_btTriangleMesh_addTriangle_4"] = asm["_emscripten_bind_btTriangleMesh_addTriangle_4"];
var _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"];
var _emscripten_bind_btPersistentManifold___destroy___0 = Module["_emscripten_bind_btPersistentManifold___destroy___0"] = asm["_emscripten_bind_btPersistentManifold___destroy___0"];
var _emscripten_bind_btMotionState_getWorldTransform_1 = Module["_emscripten_bind_btMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btMotionState_getWorldTransform_1"];
var _emscripten_bind_btCylinderShapeX_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"];
var _emscripten_bind_btMatrix3x3___destroy___0 = Module["_emscripten_bind_btMatrix3x3___destroy___0"] = asm["_emscripten_bind_btMatrix3x3___destroy___0"];
var _emscripten_bind_btRigidBody_applyTorqueImpulse_1 = Module["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"] = asm["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"];
var _emscripten_bind_btCompoundShape___destroy___0 = Module["_emscripten_bind_btCompoundShape___destroy___0"] = asm["_emscripten_bind_btCompoundShape___destroy___0"];
var _emscripten_bind_btRigidBody_setCollisionFlags_1 = Module["_emscripten_bind_btRigidBody_setCollisionFlags_1"] = asm["_emscripten_bind_btRigidBody_setCollisionFlags_1"];
var _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"];
var _emscripten_bind_btCollisionShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"];
var _emscripten_bind_RayResultCallback_hasHit_0 = Module["_emscripten_bind_RayResultCallback_hasHit_0"] = asm["_emscripten_bind_RayResultCallback_hasHit_0"];
var _emscripten_bind_btConeShape___destroy___0 = Module["_emscripten_bind_btConeShape___destroy___0"] = asm["_emscripten_bind_btConeShape___destroy___0"];
var _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2 = Module["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"] = asm["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"];
var _emscripten_bind_btConstraintSolver___destroy___0 = Module["_emscripten_bind_btConstraintSolver___destroy___0"] = asm["_emscripten_bind_btConstraintSolver___destroy___0"];
var _emscripten_bind_btDbvtBroadphase___destroy___0 = Module["_emscripten_bind_btDbvtBroadphase___destroy___0"] = asm["_emscripten_bind_btDbvtBroadphase___destroy___0"];
var _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"];
var _emscripten_bind_btCapsuleShape_btCapsuleShape_2 = Module["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"] = asm["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"];
var _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"];
var _emscripten_bind_btConeShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btConeShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btConeShapeZ_setLocalScaling_1"];
var _emscripten_bind_btCapsuleShapeX_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"];
var _emscripten_bind_btRigidBody_forceActivationState_1 = Module["_emscripten_bind_btRigidBody_forceActivationState_1"] = asm["_emscripten_bind_btRigidBody_forceActivationState_1"];
var _emscripten_bind_btPoint2PointConstraint_setPivotB_1 = Module["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"];
var _emscripten_bind_btRigidBody_applyForce_2 = Module["_emscripten_bind_btRigidBody_applyForce_2"] = asm["_emscripten_bind_btRigidBody_applyForce_2"];
var _emscripten_bind_btCapsuleShape_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShape_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShape_setLocalScaling_1"];
var _emscripten_bind_btConstraintSetting_set_m_tau_1 = Module["_emscripten_bind_btConstraintSetting_set_m_tau_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_tau_1"];
var _emscripten_bind_btVector3_setY_1 = Module["_emscripten_bind_btVector3_setY_1"] = asm["_emscripten_bind_btVector3_setY_1"];
var _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1 = Module["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"] = asm["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"];
var _emscripten_bind_btTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"];
var _emscripten_bind_btCompoundShape_btCompoundShape_0 = Module["_emscripten_bind_btCompoundShape_btCompoundShape_0"] = asm["_emscripten_bind_btCompoundShape_btCompoundShape_0"];
var _emscripten_bind_btCompoundShape_btCompoundShape_1 = Module["_emscripten_bind_btCompoundShape_btCompoundShape_1"] = asm["_emscripten_bind_btCompoundShape_btCompoundShape_1"];
var _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"];
var _emscripten_bind_btPersistentManifold_btPersistentManifold_0 = Module["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"] = asm["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"];
var _emscripten_bind_btSphereShape_calculateLocalInertia_2 = Module["_emscripten_bind_btSphereShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btSphereShape_calculateLocalInertia_2"];
var _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2 = Module["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"] = asm["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"];
var _emscripten_bind_btVector4___destroy___0 = Module["_emscripten_bind_btVector4___destroy___0"] = asm["_emscripten_bind_btVector4___destroy___0"];
var _emscripten_bind_btRigidBody_updateInertiaTensor_0 = Module["_emscripten_bind_btRigidBody_updateInertiaTensor_0"] = asm["_emscripten_bind_btRigidBody_updateInertiaTensor_0"];
var _emscripten_bind_btConstraintSetting_get_m_damping_0 = Module["_emscripten_bind_btConstraintSetting_get_m_damping_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_damping_0"];
var _emscripten_bind_btCylinderShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"];
var _emscripten_bind_btBoxShape_setLocalScaling_1 = Module["_emscripten_bind_btBoxShape_setLocalScaling_1"] = asm["_emscripten_bind_btBoxShape_setLocalScaling_1"];
var _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"];
var _emscripten_bind_btCollisionWorld_rayTest_3 = Module["_emscripten_bind_btCollisionWorld_rayTest_3"] = asm["_emscripten_bind_btCollisionWorld_rayTest_3"];
var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"];
var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"];
var _emscripten_bind_btQuaternion_setW_1 = Module["_emscripten_bind_btQuaternion_setW_1"] = asm["_emscripten_bind_btQuaternion_setW_1"];
var _emscripten_bind_btVector4_btVector4_4 = Module["_emscripten_bind_btVector4_btVector4_4"] = asm["_emscripten_bind_btVector4_btVector4_4"];
var _emscripten_bind_btTransform_setOrigin_1 = Module["_emscripten_bind_btTransform_setOrigin_1"] = asm["_emscripten_bind_btTransform_setOrigin_1"];
var _emscripten_bind_ClosestRayResultCallback_hasHit_0 = Module["_emscripten_bind_ClosestRayResultCallback_hasHit_0"] = asm["_emscripten_bind_ClosestRayResultCallback_hasHit_0"];
var _emscripten_bind_btCylinderShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"];
var _emscripten_bind_btPoint2PointConstraint_getPivotInB_0 = Module["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"];
var _emscripten_bind_btDispatcher___destroy___0 = Module["_emscripten_bind_btDispatcher___destroy___0"] = asm["_emscripten_bind_btDispatcher___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld___destroy___0 = Module["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"];
var _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"];
var _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"];
var _emscripten_bind_ContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ContactResultCallback_addSingleResult_7"];
var _emscripten_bind_btDefaultMotionState_setWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"];
var _emscripten_bind_btQuadWord_y_0 = Module["_emscripten_bind_btQuadWord_y_0"] = asm["_emscripten_bind_btQuadWord_y_0"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"];
var _emscripten_bind_btCollisionObject_setRestitution_1 = Module["_emscripten_bind_btCollisionObject_setRestitution_1"] = asm["_emscripten_bind_btCollisionObject_setRestitution_1"];
var _emscripten_bind_ClosestRayResultCallback___destroy___0 = Module["_emscripten_bind_ClosestRayResultCallback___destroy___0"] = asm["_emscripten_bind_ClosestRayResultCallback___destroy___0"];
var _emscripten_bind_btRigidBody_upcast_1 = Module["_emscripten_bind_btRigidBody_upcast_1"] = asm["_emscripten_bind_btRigidBody_upcast_1"];
var _emscripten_bind_btCollisionObject_getWorldTransform_0 = Module["_emscripten_bind_btCollisionObject_getWorldTransform_0"] = asm["_emscripten_bind_btCollisionObject_getWorldTransform_0"];
var _emscripten_bind_btVector4_setZ_1 = Module["_emscripten_bind_btVector4_setZ_1"] = asm["_emscripten_bind_btVector4_setZ_1"];
var _emscripten_bind_btMotionState___destroy___0 = Module["_emscripten_bind_btMotionState___destroy___0"] = asm["_emscripten_bind_btMotionState___destroy___0"];
var _emscripten_bind_btVector4_z_0 = Module["_emscripten_bind_btVector4_z_0"] = asm["_emscripten_bind_btVector4_z_0"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_viiidii = Module["dynCall_viiidii"] = asm["dynCall_viiidii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = asm["dynCall_iiiiiiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viidi = Module["dynCall_viidi"] = asm["dynCall_viidi"];
var dynCall_viddiii = Module["dynCall_viddiii"] = asm["dynCall_viddiii"];
var dynCall_vidii = Module["dynCall_vidii"] = asm["dynCall_vidii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_vidi = Module["dynCall_vidi"] = asm["dynCall_vidi"];
var dynCall_diiiiiiii = Module["dynCall_diiiiiiii"] = asm["dynCall_diiiiiiii"];
var dynCall_viiiiddddiid = Module["dynCall_viiiiddddiid"] = asm["dynCall_viiiiddddiid"];
var dynCall_diiiii = Module["dynCall_diiiii"] = asm["dynCall_diiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiid = Module["dynCall_iiid"] = asm["dynCall_iiid"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_diiidii = Module["dynCall_diiidii"] = asm["dynCall_diiidii"];
var dynCall_viidii = Module["dynCall_viidii"] = asm["dynCall_viidii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_diiiiiiiiii = Module["dynCall_diiiiiiiiii"] = asm["dynCall_diiiiiiiiii"];
var dynCall_viiiid = Module["dynCall_viiiid"] = asm["dynCall_viiiid"];
var dynCall_diiiiiiiii = Module["dynCall_diiiiiiiii"] = asm["dynCall_diiiiiiiii"];
var dynCall_did = Module["dynCall_did"] = asm["dynCall_did"];
var dynCall_viiiidddddidi = Module["dynCall_viiiidddddidi"] = asm["dynCall_viiiidddddidi"];
var dynCall_diidii = Module["dynCall_diidii"] = asm["dynCall_diidii"];
var dynCall_diiii = Module["dynCall_diiii"] = asm["dynCall_diiii"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_iidid = Module["dynCall_iidid"] = asm["dynCall_iidid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






// Bindings utilities

function WrapperObject() {
}
WrapperObject.prototype = Object.create(WrapperObject.prototype);
WrapperObject.prototype.constructor = WrapperObject;
WrapperObject.prototype.__class__ = WrapperObject;
WrapperObject.__cache__ = {};
Module['WrapperObject'] = WrapperObject;

function getCache(__class__) {
  return (__class__ || WrapperObject).__cache__;
}
Module['getCache'] = getCache;

function wrapPointer(ptr, __class__) {
  var cache = getCache(__class__);
  var ret = cache[ptr];
  if (ret) return ret;
  ret = Object.create((__class__ || WrapperObject).prototype);
  ret.ptr = ptr;
  return cache[ptr] = ret;
}
Module['wrapPointer'] = wrapPointer;

function castObject(obj, __class__) {
  return wrapPointer(obj.ptr, __class__);
}
Module['castObject'] = castObject;

Module['NULL'] = wrapPointer(0);

function destroy(obj) {
  if (!obj['__destroy__']) throw 'Error: Cannot destroy object. (Did you create it yourself?)';
  obj['__destroy__']();
  // Remove from cache, so the object can be GC'd and refs added onto it released
  delete getCache(obj.__class__)[obj.ptr];
}
Module['destroy'] = destroy;

function compare(obj1, obj2) {
  return obj1.ptr === obj2.ptr;
}
Module['compare'] = compare;

function getPointer(obj) {
  return obj.ptr;
}
Module['getPointer'] = getPointer;

function getClass(obj) {
  return obj.__class__;
}
Module['getClass'] = getClass;

// Converts a value into a C-style string.
function ensureString(value) {
  if (typeof value == 'string') return allocate(intArrayFromString(value), 'i8', ALLOC_STACK);
  return value;
}


// btMatrix3x3
function btMatrix3x3() { throw "cannot construct a btMatrix3x3, no constructor in IDL" }
btMatrix3x3.prototype = Object.create(WrapperObject.prototype);
btMatrix3x3.prototype.constructor = btMatrix3x3;
btMatrix3x3.prototype.__class__ = btMatrix3x3;
btMatrix3x3.__cache__ = {};
Module['btMatrix3x3'] = btMatrix3x3;

btMatrix3x3.prototype.setEulerZYX = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  _emscripten_bind_btMatrix3x3_setEulerZYX_3(self, arg0, arg1, arg2);
};

  btMatrix3x3.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btMatrix3x3___destroy___0(self);
}
// ConcreteContactResultCallback
function ConcreteContactResultCallback() {
  this.ptr = _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0();
  getCache(ConcreteContactResultCallback)[this.ptr] = this;
};
ConcreteContactResultCallback.prototype = Object.create(ContactResultCallback.prototype);
ConcreteContactResultCallback.prototype.constructor = ConcreteContactResultCallback;
ConcreteContactResultCallback.prototype.__class__ = ConcreteContactResultCallback;
ConcreteContactResultCallback.__cache__ = {};
Module['ConcreteContactResultCallback'] = ConcreteContactResultCallback;

ConcreteContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg4 && typeof arg4 === 'object') arg4 = arg4.ptr;
  else arg4 = ensureString(arg4);
  if (arg5 && typeof arg5 === 'object') arg5 = arg5.ptr;
  else arg5 = ensureString(arg5);
  if (arg6 && typeof arg6 === 'object') arg6 = arg6.ptr;
  else arg6 = ensureString(arg6);
  return _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
};

  ConcreteContactResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_ConcreteContactResultCallback___destroy___0(self);
}
// btBvhTriangleMeshShape
function btBvhTriangleMeshShape(arg0, arg1, arg2) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2(arg0, arg1); getCache(btBvhTriangleMeshShape)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3(arg0, arg1, arg2);
  getCache(btBvhTriangleMeshShape)[this.ptr] = this;
};
btBvhTriangleMeshShape.prototype = Object.create(btTriangleMeshShape.prototype);
btBvhTriangleMeshShape.prototype.constructor = btBvhTriangleMeshShape;
btBvhTriangleMeshShape.prototype.__class__ = btBvhTriangleMeshShape;
btBvhTriangleMeshShape.__cache__ = {};
Module['btBvhTriangleMeshShape'] = btBvhTriangleMeshShape;

btBvhTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1(self, arg0);
};

btBvhTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btBvhTriangleMeshShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btBvhTriangleMeshShape___destroy___0(self);
}
// btDbvtBroadphase
function btDbvtBroadphase() {
  this.ptr = _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0();
  getCache(btDbvtBroadphase)[this.ptr] = this;
};
btDbvtBroadphase.prototype = Object.create(WrapperObject.prototype);
btDbvtBroadphase.prototype.constructor = btDbvtBroadphase;
btDbvtBroadphase.prototype.__class__ = btDbvtBroadphase;
btDbvtBroadphase.__cache__ = {};
Module['btDbvtBroadphase'] = btDbvtBroadphase;

  btDbvtBroadphase.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDbvtBroadphase___destroy___0(self);
}
// btSequentialImpulseConstraintSolver
function btSequentialImpulseConstraintSolver() {
  this.ptr = _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0();
  getCache(btSequentialImpulseConstraintSolver)[this.ptr] = this;
};
btSequentialImpulseConstraintSolver.prototype = Object.create(WrapperObject.prototype);
btSequentialImpulseConstraintSolver.prototype.constructor = btSequentialImpulseConstraintSolver;
btSequentialImpulseConstraintSolver.prototype.__class__ = btSequentialImpulseConstraintSolver;
btSequentialImpulseConstraintSolver.__cache__ = {};
Module['btSequentialImpulseConstraintSolver'] = btSequentialImpulseConstraintSolver;

  btSequentialImpulseConstraintSolver.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0(self);
}
// btCapsuleShape
function btCapsuleShape(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btCapsuleShape_btCapsuleShape_2(arg0, arg1);
  getCache(btCapsuleShape)[this.ptr] = this;
};
btCapsuleShape.prototype = Object.create(btCollisionShape.prototype);
btCapsuleShape.prototype.constructor = btCapsuleShape;
btCapsuleShape.prototype.__class__ = btCapsuleShape;
btCapsuleShape.__cache__ = {};
Module['btCapsuleShape'] = btCapsuleShape;

btCapsuleShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCapsuleShape_setLocalScaling_1(self, arg0);
};

btCapsuleShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCapsuleShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btCapsuleShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCapsuleShape___destroy___0(self);
}
// btAxisSweep3
function btAxisSweep3(arg0, arg1, arg2, arg3, arg4) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg4 && typeof arg4 === 'object') arg4 = arg4.ptr;
  else arg4 = ensureString(arg4);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_2(arg0, arg1); getCache(btAxisSweep3)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_3(arg0, arg1, arg2); getCache(btAxisSweep3)[this.ptr] = this;return }
  if (arg4 === undefined) { this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_4(arg0, arg1, arg2, arg3); getCache(btAxisSweep3)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_5(arg0, arg1, arg2, arg3, arg4);
  getCache(btAxisSweep3)[this.ptr] = this;
};
btAxisSweep3.prototype = Object.create(WrapperObject.prototype);
btAxisSweep3.prototype.constructor = btAxisSweep3;
btAxisSweep3.prototype.__class__ = btAxisSweep3;
btAxisSweep3.__cache__ = {};
Module['btAxisSweep3'] = btAxisSweep3;

  btAxisSweep3.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btAxisSweep3___destroy___0(self);
}
// btRigidBodyConstructionInfo
function btRigidBodyConstructionInfo(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3(arg0, arg1, arg2); getCache(btRigidBodyConstructionInfo)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4(arg0, arg1, arg2, arg3);
  getCache(btRigidBodyConstructionInfo)[this.ptr] = this;
};
btRigidBodyConstructionInfo.prototype = Object.create(WrapperObject.prototype);
btRigidBodyConstructionInfo.prototype.constructor = btRigidBodyConstructionInfo;
btRigidBodyConstructionInfo.prototype.__class__ = btRigidBodyConstructionInfo;
btRigidBodyConstructionInfo.__cache__ = {};
Module['btRigidBodyConstructionInfo'] = btRigidBodyConstructionInfo;

  btRigidBodyConstructionInfo.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btRigidBodyConstructionInfo___destroy___0(self);
}
// btManifoldPoint
function btManifoldPoint() { throw "cannot construct a btManifoldPoint, no constructor in IDL" }
btManifoldPoint.prototype = Object.create(WrapperObject.prototype);
btManifoldPoint.prototype.constructor = btManifoldPoint;
btManifoldPoint.prototype.__class__ = btManifoldPoint;
btManifoldPoint.__cache__ = {};
Module['btManifoldPoint'] = btManifoldPoint;

btManifoldPoint.prototype.getPositionWorldOnA = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0(self), btVector3);
};

btManifoldPoint.prototype.getPositionWorldOnB = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0(self), btVector3);
};

  btManifoldPoint.prototype.get_m_localPointA= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointA_0(self), btVector3);
}
  btManifoldPoint.prototype.set_m_localPointA= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btManifoldPoint_set_m_localPointA_1(self, arg0);
}
  btManifoldPoint.prototype.get_m_localPointB= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointB_0(self), btVector3);
}
  btManifoldPoint.prototype.set_m_localPointB= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btManifoldPoint_set_m_localPointB_1(self, arg0);
}
  btManifoldPoint.prototype.get_m_positionWorldOnB= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0(self), btVector3);
}
  btManifoldPoint.prototype.set_m_positionWorldOnB= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1(self, arg0);
}
  btManifoldPoint.prototype.get_m_positionWorldOnA= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0(self), btVector3);
}
  btManifoldPoint.prototype.set_m_positionWorldOnA= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1(self, arg0);
}
  btManifoldPoint.prototype.get_m_normalWorldOnB= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0(self), btVector3);
}
  btManifoldPoint.prototype.set_m_normalWorldOnB= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1(self, arg0);
}
  btManifoldPoint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btManifoldPoint___destroy___0(self);
}
// btStridingMeshInterface
function btStridingMeshInterface() { throw "cannot construct a btStridingMeshInterface, no constructor in IDL" }
btStridingMeshInterface.prototype = Object.create(WrapperObject.prototype);
btStridingMeshInterface.prototype.constructor = btStridingMeshInterface;
btStridingMeshInterface.prototype.__class__ = btStridingMeshInterface;
btStridingMeshInterface.__cache__ = {};
Module['btStridingMeshInterface'] = btStridingMeshInterface;

  btStridingMeshInterface.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btStridingMeshInterface___destroy___0(self);
}
// btBroadphaseInterface
function btBroadphaseInterface() { throw "cannot construct a btBroadphaseInterface, no constructor in IDL" }
btBroadphaseInterface.prototype = Object.create(WrapperObject.prototype);
btBroadphaseInterface.prototype.constructor = btBroadphaseInterface;
btBroadphaseInterface.prototype.__class__ = btBroadphaseInterface;
btBroadphaseInterface.__cache__ = {};
Module['btBroadphaseInterface'] = btBroadphaseInterface;

  btBroadphaseInterface.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btBroadphaseInterface___destroy___0(self);
}
// btCollisionObject
function btCollisionObject() { throw "cannot construct a btCollisionObject, no constructor in IDL" }
btCollisionObject.prototype = Object.create(WrapperObject.prototype);
btCollisionObject.prototype.constructor = btCollisionObject;
btCollisionObject.prototype.__class__ = btCollisionObject;
btCollisionObject.__cache__ = {};
Module['btCollisionObject'] = btCollisionObject;

btCollisionObject.prototype.getCollisionShape = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btCollisionObject_getCollisionShape_0(self), btCollisionShape);
};

btCollisionObject.prototype.forceActivationState = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCollisionObject_forceActivationState_1(self, arg0);
};

btCollisionObject.prototype.activate = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { _emscripten_bind_btCollisionObject_activate_0(self);  return }
  _emscripten_bind_btCollisionObject_activate_1(self, arg0);
};

btCollisionObject.prototype.isActive = function() {
  var self = this.ptr;
  return _emscripten_bind_btCollisionObject_isActive_0(self);
};

btCollisionObject.prototype.setRestitution = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCollisionObject_setRestitution_1(self, arg0);
};

btCollisionObject.prototype.setFriction = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCollisionObject_setFriction_1(self, arg0);
};

btCollisionObject.prototype.getWorldTransform = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btCollisionObject_getWorldTransform_0(self), btTransform);
};

btCollisionObject.prototype.getCollisionFlags = function() {
  var self = this.ptr;
  return _emscripten_bind_btCollisionObject_getCollisionFlags_0(self);
};

btCollisionObject.prototype.setCollisionFlags = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCollisionObject_setCollisionFlags_1(self, arg0);
};

  btCollisionObject.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionObject___destroy___0(self);
}
// btDiscreteDynamicsWorld
function btDiscreteDynamicsWorld(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  this.ptr = _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4(arg0, arg1, arg2, arg3);
  getCache(btDiscreteDynamicsWorld)[this.ptr] = this;
};
btDiscreteDynamicsWorld.prototype = Object.create(btCollisionWorld.prototype);
btDiscreteDynamicsWorld.prototype.constructor = btDiscreteDynamicsWorld;
btDiscreteDynamicsWorld.prototype.__class__ = btDiscreteDynamicsWorld;
btDiscreteDynamicsWorld.__cache__ = {};
Module['btDiscreteDynamicsWorld'] = btDiscreteDynamicsWorld;

btDiscreteDynamicsWorld.prototype.setGravity = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1(self, arg0);
};

btDiscreteDynamicsWorld.prototype.getGravity = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0(self), btVector3);
};

btDiscreteDynamicsWorld.prototype.addRigidBody = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg1 === undefined) { _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1(self, arg0);  return }
  if (arg2 === undefined) { _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(self, arg0, arg1);  return }
  _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3(self, arg0, arg1, arg2);
};

btDiscreteDynamicsWorld.prototype.removeRigidBody = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1(self, arg0);
};

btDiscreteDynamicsWorld.prototype.addConstraint = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg1 === undefined) { _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1(self, arg0);  return }
  _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2(self, arg0, arg1);
};

btDiscreteDynamicsWorld.prototype.removeConstraint = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1(self, arg0);
};

btDiscreteDynamicsWorld.prototype.stepSimulation = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg1 === undefined) { return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1(self, arg0) }
  if (arg2 === undefined) { return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2(self, arg0, arg1) }
  return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3(self, arg0, arg1, arg2);
};

btDiscreteDynamicsWorld.prototype.getDispatcher = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0(self), btDispatcher);
};

btDiscreteDynamicsWorld.prototype.rayTest = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3(self, arg0, arg1, arg2);
};

  btDiscreteDynamicsWorld.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDiscreteDynamicsWorld___destroy___0(self);
}
// btPoint2PointConstraint
function btPoint2PointConstraint(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2(arg0, arg1); getCache(btPoint2PointConstraint)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(arg0, arg1, arg2); getCache(btPoint2PointConstraint)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4(arg0, arg1, arg2, arg3);
  getCache(btPoint2PointConstraint)[this.ptr] = this;
};
btPoint2PointConstraint.prototype = Object.create(WrapperObject.prototype);
btPoint2PointConstraint.prototype.constructor = btPoint2PointConstraint;
btPoint2PointConstraint.prototype.__class__ = btPoint2PointConstraint;
btPoint2PointConstraint.__cache__ = {};
Module['btPoint2PointConstraint'] = btPoint2PointConstraint;

btPoint2PointConstraint.prototype.setPivotA = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btPoint2PointConstraint_setPivotA_1(self, arg0);
};

btPoint2PointConstraint.prototype.setPivotB = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btPoint2PointConstraint_setPivotB_1(self, arg0);
};

btPoint2PointConstraint.prototype.getPivotInA = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInA_0(self), btVector3);
};

btPoint2PointConstraint.prototype.getPivotInB = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInB_0(self), btVector3);
};

  btPoint2PointConstraint.prototype.get_m_setting= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btPoint2PointConstraint_get_m_setting_0(self), btConstraintSetting);
}
  btPoint2PointConstraint.prototype.set_m_setting= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btPoint2PointConstraint_set_m_setting_1(self, arg0);
}
  btPoint2PointConstraint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btPoint2PointConstraint___destroy___0(self);
}
// btMotionState
function btMotionState() { throw "cannot construct a btMotionState, no constructor in IDL" }
btMotionState.prototype = Object.create(WrapperObject.prototype);
btMotionState.prototype.constructor = btMotionState;
btMotionState.prototype.__class__ = btMotionState;
btMotionState.__cache__ = {};
Module['btMotionState'] = btMotionState;

btMotionState.prototype.getWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btMotionState_getWorldTransform_1(self, arg0);
};

btMotionState.prototype.setWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btMotionState_setWorldTransform_1(self, arg0);
};

  btMotionState.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btMotionState___destroy___0(self);
}
// btConeTwistConstraint
function btConeTwistConstraint(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2(arg0, arg1); getCache(btConeTwistConstraint)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(arg0, arg1, arg2); getCache(btConeTwistConstraint)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4(arg0, arg1, arg2, arg3);
  getCache(btConeTwistConstraint)[this.ptr] = this;
};
btConeTwistConstraint.prototype = Object.create(btTypedConstraint.prototype);
btConeTwistConstraint.prototype.constructor = btConeTwistConstraint;
btConeTwistConstraint.prototype.__class__ = btConeTwistConstraint;
btConeTwistConstraint.__cache__ = {};
Module['btConeTwistConstraint'] = btConeTwistConstraint;

btConeTwistConstraint.prototype.setLimit = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConeTwistConstraint_setLimit_2(self, arg0, arg1);
};

  btConeTwistConstraint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConeTwistConstraint___destroy___0(self);
}
// btConeShape
function btConeShape(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btConeShape_btConeShape_2(arg0, arg1);
  getCache(btConeShape)[this.ptr] = this;
};
btConeShape.prototype = Object.create(btCollisionShape.prototype);
btConeShape.prototype.constructor = btConeShape;
btConeShape.prototype.__class__ = btConeShape;
btConeShape.__cache__ = {};
Module['btConeShape'] = btConeShape;

btConeShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConeShape_setLocalScaling_1(self, arg0);
};

btConeShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConeShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btConeShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConeShape___destroy___0(self);
}
// btDefaultCollisionConfiguration
function btDefaultCollisionConfiguration(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0(); getCache(btDefaultCollisionConfiguration)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1(arg0);
  getCache(btDefaultCollisionConfiguration)[this.ptr] = this;
};
btDefaultCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
btDefaultCollisionConfiguration.prototype.constructor = btDefaultCollisionConfiguration;
btDefaultCollisionConfiguration.prototype.__class__ = btDefaultCollisionConfiguration;
btDefaultCollisionConfiguration.__cache__ = {};
Module['btDefaultCollisionConfiguration'] = btDefaultCollisionConfiguration;

  btDefaultCollisionConfiguration.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDefaultCollisionConfiguration___destroy___0(self);
}
// ContactResultCallback
function ContactResultCallback() { throw "cannot construct a ContactResultCallback, no constructor in IDL" }
ContactResultCallback.prototype = Object.create(WrapperObject.prototype);
ContactResultCallback.prototype.constructor = ContactResultCallback;
ContactResultCallback.prototype.__class__ = ContactResultCallback;
ContactResultCallback.__cache__ = {};
Module['ContactResultCallback'] = ContactResultCallback;

ContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg4 && typeof arg4 === 'object') arg4 = arg4.ptr;
  else arg4 = ensureString(arg4);
  if (arg5 && typeof arg5 === 'object') arg5 = arg5.ptr;
  else arg5 = ensureString(arg5);
  if (arg6 && typeof arg6 === 'object') arg6 = arg6.ptr;
  else arg6 = ensureString(arg6);
  return _emscripten_bind_ContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
};

  ContactResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_ContactResultCallback___destroy___0(self);
}
// btConeShapeZ
function btConeShapeZ(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btConeShapeZ_btConeShapeZ_2(arg0, arg1);
  getCache(btConeShapeZ)[this.ptr] = this;
};
btConeShapeZ.prototype = Object.create(btConeShape.prototype);
btConeShapeZ.prototype.constructor = btConeShapeZ;
btConeShapeZ.prototype.__class__ = btConeShapeZ;
btConeShapeZ.__cache__ = {};
Module['btConeShapeZ'] = btConeShapeZ;

btConeShapeZ.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConeShapeZ_setLocalScaling_1(self, arg0);
};

btConeShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConeShapeZ_calculateLocalInertia_2(self, arg0, arg1);
};

  btConeShapeZ.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConeShapeZ___destroy___0(self);
}
// btConeShapeX
function btConeShapeX(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btConeShapeX_btConeShapeX_2(arg0, arg1);
  getCache(btConeShapeX)[this.ptr] = this;
};
btConeShapeX.prototype = Object.create(btConeShape.prototype);
btConeShapeX.prototype.constructor = btConeShapeX;
btConeShapeX.prototype.__class__ = btConeShapeX;
btConeShapeX.__cache__ = {};
Module['btConeShapeX'] = btConeShapeX;

btConeShapeX.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConeShapeX_setLocalScaling_1(self, arg0);
};

btConeShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConeShapeX_calculateLocalInertia_2(self, arg0, arg1);
};

  btConeShapeX.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConeShapeX___destroy___0(self);
}
// btTriangleMesh
function btTriangleMesh(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_0(); getCache(btTriangleMesh)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_1(arg0); getCache(btTriangleMesh)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_2(arg0, arg1);
  getCache(btTriangleMesh)[this.ptr] = this;
};
btTriangleMesh.prototype = Object.create(btStridingMeshInterface.prototype);
btTriangleMesh.prototype.constructor = btTriangleMesh;
btTriangleMesh.prototype.__class__ = btTriangleMesh;
btTriangleMesh.__cache__ = {};
Module['btTriangleMesh'] = btTriangleMesh;

btTriangleMesh.prototype.addTriangle = function(arg0, arg1, arg2, arg3) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg3 === undefined) { _emscripten_bind_btTriangleMesh_addTriangle_3(self, arg0, arg1, arg2);  return }
  _emscripten_bind_btTriangleMesh_addTriangle_4(self, arg0, arg1, arg2, arg3);
};

  btTriangleMesh.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btTriangleMesh___destroy___0(self);
}
// btCollisionConfiguration
function btCollisionConfiguration() { throw "cannot construct a btCollisionConfiguration, no constructor in IDL" }
btCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
btCollisionConfiguration.prototype.constructor = btCollisionConfiguration;
btCollisionConfiguration.prototype.__class__ = btCollisionConfiguration;
btCollisionConfiguration.__cache__ = {};
Module['btCollisionConfiguration'] = btCollisionConfiguration;

  btCollisionConfiguration.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionConfiguration___destroy___0(self);
}
// btPersistentManifold
function btPersistentManifold() {
  this.ptr = _emscripten_bind_btPersistentManifold_btPersistentManifold_0();
  getCache(btPersistentManifold)[this.ptr] = this;
};
btPersistentManifold.prototype = Object.create(WrapperObject.prototype);
btPersistentManifold.prototype.constructor = btPersistentManifold;
btPersistentManifold.prototype.__class__ = btPersistentManifold;
btPersistentManifold.__cache__ = {};
Module['btPersistentManifold'] = btPersistentManifold;

btPersistentManifold.prototype.getBody0 = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btPersistentManifold_getBody0_0(self), btCollisionObject);
};

btPersistentManifold.prototype.getBody1 = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btPersistentManifold_getBody1_0(self), btCollisionObject);
};

btPersistentManifold.prototype.getNumContacts = function() {
  var self = this.ptr;
  return _emscripten_bind_btPersistentManifold_getNumContacts_0(self);
};

btPersistentManifold.prototype.getContactPoint = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btPersistentManifold_getContactPoint_1(self, arg0), btManifoldPoint);
};

  btPersistentManifold.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btPersistentManifold___destroy___0(self);
}
// btBoxShape
function btBoxShape(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btBoxShape_btBoxShape_1(arg0);
  getCache(btBoxShape)[this.ptr] = this;
};
btBoxShape.prototype = Object.create(btCollisionShape.prototype);
btBoxShape.prototype.constructor = btBoxShape;
btBoxShape.prototype.__class__ = btBoxShape;
btBoxShape.__cache__ = {};
Module['btBoxShape'] = btBoxShape;

btBoxShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btBoxShape_setLocalScaling_1(self, arg0);
};

btBoxShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btBoxShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btBoxShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btBoxShape___destroy___0(self);
}
// btCollisionDispatcher
function btCollisionDispatcher(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1(arg0);
  getCache(btCollisionDispatcher)[this.ptr] = this;
};
btCollisionDispatcher.prototype = Object.create(btDispatcher.prototype);
btCollisionDispatcher.prototype.constructor = btCollisionDispatcher;
btCollisionDispatcher.prototype.__class__ = btCollisionDispatcher;
btCollisionDispatcher.__cache__ = {};
Module['btCollisionDispatcher'] = btCollisionDispatcher;

btCollisionDispatcher.prototype.getNumManifolds = function() {
  var self = this.ptr;
  return _emscripten_bind_btCollisionDispatcher_getNumManifolds_0(self);
};

btCollisionDispatcher.prototype.getManifoldByIndexInternal = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1(self, arg0), btPersistentManifold);
};

  btCollisionDispatcher.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionDispatcher___destroy___0(self);
}
// btCompoundShape
function btCompoundShape(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btCompoundShape_btCompoundShape_0(); getCache(btCompoundShape)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btCompoundShape_btCompoundShape_1(arg0);
  getCache(btCompoundShape)[this.ptr] = this;
};
btCompoundShape.prototype = Object.create(btCollisionShape.prototype);
btCompoundShape.prototype.constructor = btCompoundShape;
btCompoundShape.prototype.__class__ = btCompoundShape;
btCompoundShape.__cache__ = {};
Module['btCompoundShape'] = btCompoundShape;

btCompoundShape.prototype.addChildShape = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCompoundShape_addChildShape_2(self, arg0, arg1);
};

btCompoundShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCompoundShape_setLocalScaling_1(self, arg0);
};

btCompoundShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCompoundShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btCompoundShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCompoundShape___destroy___0(self);
}
// btCollisionObjectWrapper
function btCollisionObjectWrapper() { throw "cannot construct a btCollisionObjectWrapper, no constructor in IDL" }
btCollisionObjectWrapper.prototype = Object.create(WrapperObject.prototype);
btCollisionObjectWrapper.prototype.constructor = btCollisionObjectWrapper;
btCollisionObjectWrapper.prototype.__class__ = btCollisionObjectWrapper;
btCollisionObjectWrapper.__cache__ = {};
Module['btCollisionObjectWrapper'] = btCollisionObjectWrapper;

// btDefaultMotionState
function btDefaultMotionState(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0(); getCache(btDefaultMotionState)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1(arg0); getCache(btDefaultMotionState)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2(arg0, arg1);
  getCache(btDefaultMotionState)[this.ptr] = this;
};
btDefaultMotionState.prototype = Object.create(btMotionState.prototype);
btDefaultMotionState.prototype.constructor = btDefaultMotionState;
btDefaultMotionState.prototype.__class__ = btDefaultMotionState;
btDefaultMotionState.__cache__ = {};
Module['btDefaultMotionState'] = btDefaultMotionState;

btDefaultMotionState.prototype.getWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDefaultMotionState_getWorldTransform_1(self, arg0);
};

btDefaultMotionState.prototype.setWorldTransform = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btDefaultMotionState_setWorldTransform_1(self, arg0);
};

  btDefaultMotionState.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDefaultMotionState___destroy___0(self);
}
// btTriangleMeshShape
function btTriangleMeshShape() { throw "cannot construct a btTriangleMeshShape, no constructor in IDL" }
btTriangleMeshShape.prototype = Object.create(btConcaveShape.prototype);
btTriangleMeshShape.prototype.constructor = btTriangleMeshShape;
btTriangleMeshShape.prototype.__class__ = btTriangleMeshShape;
btTriangleMeshShape.__cache__ = {};
Module['btTriangleMeshShape'] = btTriangleMeshShape;

btTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btTriangleMeshShape_setLocalScaling_1(self, arg0);
};

btTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btTriangleMeshShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btTriangleMeshShape___destroy___0(self);
}
// btDispatcher
function btDispatcher() { throw "cannot construct a btDispatcher, no constructor in IDL" }
btDispatcher.prototype = Object.create(WrapperObject.prototype);
btDispatcher.prototype.constructor = btDispatcher;
btDispatcher.prototype.__class__ = btDispatcher;
btDispatcher.__cache__ = {};
Module['btDispatcher'] = btDispatcher;

btDispatcher.prototype.getNumManifolds = function() {
  var self = this.ptr;
  return _emscripten_bind_btDispatcher_getNumManifolds_0(self);
};

btDispatcher.prototype.getManifoldByIndexInternal = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1(self, arg0), btPersistentManifold);
};

  btDispatcher.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDispatcher___destroy___0(self);
}
// ClosestRayResultCallback
function ClosestRayResultCallback(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2(arg0, arg1);
  getCache(ClosestRayResultCallback)[this.ptr] = this;
};
ClosestRayResultCallback.prototype = Object.create(RayResultCallback.prototype);
ClosestRayResultCallback.prototype.constructor = ClosestRayResultCallback;
ClosestRayResultCallback.prototype.__class__ = ClosestRayResultCallback;
ClosestRayResultCallback.__cache__ = {};
Module['ClosestRayResultCallback'] = ClosestRayResultCallback;

ClosestRayResultCallback.prototype.hasHit = function() {
  var self = this.ptr;
  return _emscripten_bind_ClosestRayResultCallback_hasHit_0(self);
};

  ClosestRayResultCallback.prototype.get_m_rayFromWorld= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0(self), btVector3);
}
  ClosestRayResultCallback.prototype.set_m_rayFromWorld= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1(self, arg0);
}
  ClosestRayResultCallback.prototype.get_m_rayToWorld= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0(self), btVector3);
}
  ClosestRayResultCallback.prototype.set_m_rayToWorld= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1(self, arg0);
}
  ClosestRayResultCallback.prototype.get_m_hitNormalWorld= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0(self), btVector3);
}
  ClosestRayResultCallback.prototype.set_m_hitNormalWorld= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1(self, arg0);
}
  ClosestRayResultCallback.prototype.get_m_hitPointWorld= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0(self), btVector3);
}
  ClosestRayResultCallback.prototype.set_m_hitPointWorld= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1(self, arg0);
}
  ClosestRayResultCallback.prototype.get_m_collisionObject= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
}
  ClosestRayResultCallback.prototype.set_m_collisionObject= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1(self, arg0);
}
  ClosestRayResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_ClosestRayResultCallback___destroy___0(self);
}
// btCapsuleShapeX
function btCapsuleShapeX(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2(arg0, arg1);
  getCache(btCapsuleShapeX)[this.ptr] = this;
};
btCapsuleShapeX.prototype = Object.create(btCapsuleShape.prototype);
btCapsuleShapeX.prototype.constructor = btCapsuleShapeX;
btCapsuleShapeX.prototype.__class__ = btCapsuleShapeX;
btCapsuleShapeX.__cache__ = {};
Module['btCapsuleShapeX'] = btCapsuleShapeX;

btCapsuleShapeX.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCapsuleShapeX_setLocalScaling_1(self, arg0);
};

btCapsuleShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2(self, arg0, arg1);
};

  btCapsuleShapeX.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCapsuleShapeX___destroy___0(self);
}
// btQuaternion
function btQuaternion(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  this.ptr = _emscripten_bind_btQuaternion_btQuaternion_4(arg0, arg1, arg2, arg3);
  getCache(btQuaternion)[this.ptr] = this;
};
btQuaternion.prototype = Object.create(btQuadWord.prototype);
btQuaternion.prototype.constructor = btQuaternion;
btQuaternion.prototype.__class__ = btQuaternion;
btQuaternion.__cache__ = {};
Module['btQuaternion'] = btQuaternion;

btQuaternion.prototype.setValue = function(arg0, arg1, arg2, arg3) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  _emscripten_bind_btQuaternion_setValue_4(self, arg0, arg1, arg2, arg3);
};

btQuaternion.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_x_0(self);
};

btQuaternion.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_y_0(self);
};

btQuaternion.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_z_0(self);
};

btQuaternion.prototype.w = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuaternion_w_0(self);
};

btQuaternion.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setX_1(self, arg0);
};

btQuaternion.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setY_1(self, arg0);
};

btQuaternion.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setZ_1(self, arg0);
};

btQuaternion.prototype.setW = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuaternion_setW_1(self, arg0);
};

  btQuaternion.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btQuaternion___destroy___0(self);
}
// btCapsuleShapeZ
function btCapsuleShapeZ(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  this.ptr = _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2(arg0, arg1);
  getCache(btCapsuleShapeZ)[this.ptr] = this;
};
btCapsuleShapeZ.prototype = Object.create(btCapsuleShape.prototype);
btCapsuleShapeZ.prototype.constructor = btCapsuleShapeZ;
btCapsuleShapeZ.prototype.__class__ = btCapsuleShapeZ;
btCapsuleShapeZ.__cache__ = {};
Module['btCapsuleShapeZ'] = btCapsuleShapeZ;

btCapsuleShapeZ.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1(self, arg0);
};

btCapsuleShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2(self, arg0, arg1);
};

  btCapsuleShapeZ.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCapsuleShapeZ___destroy___0(self);
}
// RayResultCallback
function RayResultCallback() { throw "cannot construct a RayResultCallback, no constructor in IDL" }
RayResultCallback.prototype = Object.create(WrapperObject.prototype);
RayResultCallback.prototype.constructor = RayResultCallback;
RayResultCallback.prototype.__class__ = RayResultCallback;
RayResultCallback.__cache__ = {};
Module['RayResultCallback'] = RayResultCallback;

RayResultCallback.prototype.hasHit = function() {
  var self = this.ptr;
  return _emscripten_bind_RayResultCallback_hasHit_0(self);
};

  RayResultCallback.prototype.get_m_collisionObject= function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_RayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
}
  RayResultCallback.prototype.set_m_collisionObject= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_RayResultCallback_set_m_collisionObject_1(self, arg0);
}
  RayResultCallback.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_RayResultCallback___destroy___0(self);
}
// btConcaveShape
function btConcaveShape() { throw "cannot construct a btConcaveShape, no constructor in IDL" }
btConcaveShape.prototype = Object.create(btCollisionShape.prototype);
btConcaveShape.prototype.constructor = btConcaveShape;
btConcaveShape.prototype.__class__ = btConcaveShape;
btConcaveShape.__cache__ = {};
Module['btConcaveShape'] = btConcaveShape;

btConcaveShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConcaveShape_setLocalScaling_1(self, arg0);
};

btConcaveShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btConcaveShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btConcaveShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConcaveShape___destroy___0(self);
}
// btVector4
function btVector4(arg0, arg1, arg2, arg3) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_0(); getCache(btVector4)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_1(arg0); getCache(btVector4)[this.ptr] = this;return }
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_2(arg0, arg1); getCache(btVector4)[this.ptr] = this;return }
  if (arg3 === undefined) { this.ptr = _emscripten_bind_btVector4_btVector4_3(arg0, arg1, arg2); getCache(btVector4)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btVector4_btVector4_4(arg0, arg1, arg2, arg3);
  getCache(btVector4)[this.ptr] = this;
};
btVector4.prototype = Object.create(btVector3.prototype);
btVector4.prototype.constructor = btVector4;
btVector4.prototype.__class__ = btVector4;
btVector4.__cache__ = {};
Module['btVector4'] = btVector4;

btVector4.prototype.w = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_w_0(self);
};

btVector4.prototype.setValue = function(arg0, arg1, arg2, arg3) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg3 && typeof arg3 === 'object') arg3 = arg3.ptr;
  else arg3 = ensureString(arg3);
  _emscripten_bind_btVector4_setValue_4(self, arg0, arg1, arg2, arg3);
};

btVector4.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_x_0(self);
};

btVector4.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_y_0(self);
};

btVector4.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector4_z_0(self);
};

btVector4.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector4_setX_1(self, arg0);
};

btVector4.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector4_setY_1(self, arg0);
};

btVector4.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector4_setZ_1(self, arg0);
};

btVector4.prototype.op_mul = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btVector4_op_mul_1(self, arg0), btVector3);
};

  btVector4.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btVector4___destroy___0(self);
}
// btOverlappingPairCache
function btOverlappingPairCache() { throw "cannot construct a btOverlappingPairCache, no constructor in IDL" }
btOverlappingPairCache.prototype = Object.create(WrapperObject.prototype);
btOverlappingPairCache.prototype.constructor = btOverlappingPairCache;
btOverlappingPairCache.prototype.__class__ = btOverlappingPairCache;
btOverlappingPairCache.__cache__ = {};
Module['btOverlappingPairCache'] = btOverlappingPairCache;

  btOverlappingPairCache.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btOverlappingPairCache___destroy___0(self);
}
// btVector3
function btVector3(arg0, arg1, arg2) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btVector3_btVector3_0(); getCache(btVector3)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btVector3_btVector3_1(arg0); getCache(btVector3)[this.ptr] = this;return }
  if (arg2 === undefined) { this.ptr = _emscripten_bind_btVector3_btVector3_2(arg0, arg1); getCache(btVector3)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btVector3_btVector3_3(arg0, arg1, arg2);
  getCache(btVector3)[this.ptr] = this;
};
btVector3.prototype = Object.create(WrapperObject.prototype);
btVector3.prototype.constructor = btVector3;
btVector3.prototype.__class__ = btVector3;
btVector3.__cache__ = {};
Module['btVector3'] = btVector3;

btVector3.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector3_x_0(self);
};

btVector3.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector3_y_0(self);
};

btVector3.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btVector3_z_0(self);
};

btVector3.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector3_setX_1(self, arg0);
};

btVector3.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector3_setY_1(self, arg0);
};

btVector3.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btVector3_setZ_1(self, arg0);
};

btVector3.prototype.setValue = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  _emscripten_bind_btVector3_setValue_3(self, arg0, arg1, arg2);
};

btVector3.prototype.op_mul = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btVector3_op_mul_1(self, arg0), btVector3);
};

  btVector3.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btVector3___destroy___0(self);
}
// btSphereShape
function btSphereShape(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btSphereShape_btSphereShape_1(arg0);
  getCache(btSphereShape)[this.ptr] = this;
};
btSphereShape.prototype = Object.create(btCollisionShape.prototype);
btSphereShape.prototype.constructor = btSphereShape;
btSphereShape.prototype.__class__ = btSphereShape;
btSphereShape.__cache__ = {};
Module['btSphereShape'] = btSphereShape;

btSphereShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btSphereShape_setLocalScaling_1(self, arg0);
};

btSphereShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btSphereShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btSphereShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btSphereShape___destroy___0(self);
}
// btDefaultCollisionConstructionInfo
function btDefaultCollisionConstructionInfo() {
  this.ptr = _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0();
  getCache(btDefaultCollisionConstructionInfo)[this.ptr] = this;
};
btDefaultCollisionConstructionInfo.prototype = Object.create(WrapperObject.prototype);
btDefaultCollisionConstructionInfo.prototype.constructor = btDefaultCollisionConstructionInfo;
btDefaultCollisionConstructionInfo.prototype.__class__ = btDefaultCollisionConstructionInfo;
btDefaultCollisionConstructionInfo.__cache__ = {};
Module['btDefaultCollisionConstructionInfo'] = btDefaultCollisionConstructionInfo;

  btDefaultCollisionConstructionInfo.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0(self);
}
// btCollisionShape
function btCollisionShape() { throw "cannot construct a btCollisionShape, no constructor in IDL" }
btCollisionShape.prototype = Object.create(WrapperObject.prototype);
btCollisionShape.prototype.constructor = btCollisionShape;
btCollisionShape.prototype.__class__ = btCollisionShape;
btCollisionShape.__cache__ = {};
Module['btCollisionShape'] = btCollisionShape;

btCollisionShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCollisionShape_setLocalScaling_1(self, arg0);
};

btCollisionShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCollisionShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btCollisionShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionShape___destroy___0(self);
}
// btConstraintSetting
function btConstraintSetting() {
  this.ptr = _emscripten_bind_btConstraintSetting_btConstraintSetting_0();
  getCache(btConstraintSetting)[this.ptr] = this;
};
btConstraintSetting.prototype = Object.create(WrapperObject.prototype);
btConstraintSetting.prototype.constructor = btConstraintSetting;
btConstraintSetting.prototype.__class__ = btConstraintSetting;
btConstraintSetting.__cache__ = {};
Module['btConstraintSetting'] = btConstraintSetting;

  btConstraintSetting.prototype.get_m_tau= function() {
  var self = this.ptr;
  return _emscripten_bind_btConstraintSetting_get_m_tau_0(self);
}
  btConstraintSetting.prototype.set_m_tau= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConstraintSetting_set_m_tau_1(self, arg0);
}
  btConstraintSetting.prototype.get_m_damping= function() {
  var self = this.ptr;
  return _emscripten_bind_btConstraintSetting_get_m_damping_0(self);
}
  btConstraintSetting.prototype.set_m_damping= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConstraintSetting_set_m_damping_1(self, arg0);
}
  btConstraintSetting.prototype.get_m_impulseClamp= function() {
  var self = this.ptr;
  return _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0(self);
}
  btConstraintSetting.prototype.set_m_impulseClamp= function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1(self, arg0);
}
  btConstraintSetting.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConstraintSetting___destroy___0(self);
}
// btConstraintSolver
function btConstraintSolver() { throw "cannot construct a btConstraintSolver, no constructor in IDL" }
btConstraintSolver.prototype = Object.create(WrapperObject.prototype);
btConstraintSolver.prototype.constructor = btConstraintSolver;
btConstraintSolver.prototype.__class__ = btConstraintSolver;
btConstraintSolver.__cache__ = {};
Module['btConstraintSolver'] = btConstraintSolver;

  btConstraintSolver.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btConstraintSolver___destroy___0(self);
}
// btRigidBody
function btRigidBody(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btRigidBody_btRigidBody_1(arg0);
  getCache(btRigidBody)[this.ptr] = this;
};
btRigidBody.prototype = Object.create(btCollisionObject.prototype);
btRigidBody.prototype.constructor = btRigidBody;
btRigidBody.prototype.__class__ = btRigidBody;
btRigidBody.__cache__ = {};
Module['btRigidBody'] = btRigidBody;

btRigidBody.prototype.setDamping = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btRigidBody_setDamping_2(self, arg0, arg1);
};

btRigidBody.prototype.setMassProps = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btRigidBody_setMassProps_2(self, arg0, arg1);
};

btRigidBody.prototype.setLinearFactor = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setLinearFactor_1(self, arg0);
};

btRigidBody.prototype.applyTorque = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_applyTorque_1(self, arg0);
};

btRigidBody.prototype.applyForce = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btRigidBody_applyForce_2(self, arg0, arg1);
};

btRigidBody.prototype.applyTorqueImpulse = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_applyTorqueImpulse_1(self, arg0);
};

btRigidBody.prototype.applyImpulse = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btRigidBody_applyImpulse_2(self, arg0, arg1);
};

btRigidBody.prototype.updateInertiaTensor = function() {
  var self = this.ptr;
  _emscripten_bind_btRigidBody_updateInertiaTensor_0(self);
};

btRigidBody.prototype.setLinearVelocity = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setLinearVelocity_1(self, arg0);
};

btRigidBody.prototype.setAngularVelocity = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setAngularVelocity_1(self, arg0);
};

btRigidBody.prototype.getMotionState = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btRigidBody_getMotionState_0(self), btMotionState);
};

btRigidBody.prototype.setAngularFactor = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setAngularFactor_1(self, arg0);
};

btRigidBody.prototype.upcast = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  return wrapPointer(_emscripten_bind_btRigidBody_upcast_1(self, arg0), btRigidBody);
};

btRigidBody.prototype.getCollisionShape = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btRigidBody_getCollisionShape_0(self), btCollisionShape);
};

btRigidBody.prototype.forceActivationState = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_forceActivationState_1(self, arg0);
};

btRigidBody.prototype.activate = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg0 === undefined) { _emscripten_bind_btRigidBody_activate_0(self);  return }
  _emscripten_bind_btRigidBody_activate_1(self, arg0);
};

btRigidBody.prototype.isActive = function() {
  var self = this.ptr;
  return _emscripten_bind_btRigidBody_isActive_0(self);
};

btRigidBody.prototype.setRestitution = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setRestitution_1(self, arg0);
};

btRigidBody.prototype.setFriction = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setFriction_1(self, arg0);
};

btRigidBody.prototype.getWorldTransform = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btRigidBody_getWorldTransform_0(self), btTransform);
};

btRigidBody.prototype.getCollisionFlags = function() {
  var self = this.ptr;
  return _emscripten_bind_btRigidBody_getCollisionFlags_0(self);
};

btRigidBody.prototype.setCollisionFlags = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btRigidBody_setCollisionFlags_1(self, arg0);
};

  btRigidBody.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btRigidBody___destroy___0(self);
}
// btCylinderShapeX
function btCylinderShapeX(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1(arg0);
  getCache(btCylinderShapeX)[this.ptr] = this;
};
btCylinderShapeX.prototype = Object.create(btCylinderShape.prototype);
btCylinderShapeX.prototype.constructor = btCylinderShapeX;
btCylinderShapeX.prototype.__class__ = btCylinderShapeX;
btCylinderShapeX.__cache__ = {};
Module['btCylinderShapeX'] = btCylinderShapeX;

btCylinderShapeX.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCylinderShapeX_setLocalScaling_1(self, arg0);
};

btCylinderShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2(self, arg0, arg1);
};

  btCylinderShapeX.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCylinderShapeX___destroy___0(self);
}
// btCylinderShapeZ
function btCylinderShapeZ(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1(arg0);
  getCache(btCylinderShapeZ)[this.ptr] = this;
};
btCylinderShapeZ.prototype = Object.create(btCylinderShape.prototype);
btCylinderShapeZ.prototype.constructor = btCylinderShapeZ;
btCylinderShapeZ.prototype.__class__ = btCylinderShapeZ;
btCylinderShapeZ.__cache__ = {};
Module['btCylinderShapeZ'] = btCylinderShapeZ;

btCylinderShapeZ.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCylinderShapeZ_setLocalScaling_1(self, arg0);
};

btCylinderShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2(self, arg0, arg1);
};

  btCylinderShapeZ.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCylinderShapeZ___destroy___0(self);
}
// btTransform
function btTransform(arg0, arg1) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg0 === undefined) { this.ptr = _emscripten_bind_btTransform_btTransform_0(); getCache(btTransform)[this.ptr] = this;return }
  if (arg1 === undefined) { this.ptr = _emscripten_bind_btTransform_btTransform_1(arg0); getCache(btTransform)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_btTransform_btTransform_2(arg0, arg1);
  getCache(btTransform)[this.ptr] = this;
};
btTransform.prototype = Object.create(WrapperObject.prototype);
btTransform.prototype.constructor = btTransform;
btTransform.prototype.__class__ = btTransform;
btTransform.__cache__ = {};
Module['btTransform'] = btTransform;

btTransform.prototype.setIdentity = function() {
  var self = this.ptr;
  _emscripten_bind_btTransform_setIdentity_0(self);
};

btTransform.prototype.setOrigin = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btTransform_setOrigin_1(self, arg0);
};

btTransform.prototype.setRotation = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btTransform_setRotation_1(self, arg0);
};

btTransform.prototype.getOrigin = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btTransform_getOrigin_0(self), btVector3);
};

btTransform.prototype.getRotation = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btTransform_getRotation_0(self), btQuaternion);
};

btTransform.prototype.getBasis = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btTransform_getBasis_0(self), btMatrix3x3);
};

  btTransform.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btTransform___destroy___0(self);
}
// btCollisionWorld
function btCollisionWorld() { throw "cannot construct a btCollisionWorld, no constructor in IDL" }
btCollisionWorld.prototype = Object.create(WrapperObject.prototype);
btCollisionWorld.prototype.constructor = btCollisionWorld;
btCollisionWorld.prototype.__class__ = btCollisionWorld;
btCollisionWorld.__cache__ = {};
Module['btCollisionWorld'] = btCollisionWorld;

btCollisionWorld.prototype.getDispatcher = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatcher_0(self), btDispatcher);
};

btCollisionWorld.prototype.rayTest = function(arg0, arg1, arg2) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  if (arg2 && typeof arg2 === 'object') arg2 = arg2.ptr;
  else arg2 = ensureString(arg2);
  _emscripten_bind_btCollisionWorld_rayTest_3(self, arg0, arg1, arg2);
};

  btCollisionWorld.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCollisionWorld___destroy___0(self);
}
// btQuadWord
function btQuadWord() { throw "cannot construct a btQuadWord, no constructor in IDL" }
btQuadWord.prototype = Object.create(WrapperObject.prototype);
btQuadWord.prototype.constructor = btQuadWord;
btQuadWord.prototype.__class__ = btQuadWord;
btQuadWord.__cache__ = {};
Module['btQuadWord'] = btQuadWord;

btQuadWord.prototype.x = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_x_0(self);
};

btQuadWord.prototype.y = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_y_0(self);
};

btQuadWord.prototype.z = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_z_0(self);
};

btQuadWord.prototype.w = function() {
  var self = this.ptr;
  return _emscripten_bind_btQuadWord_w_0(self);
};

btQuadWord.prototype.setX = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setX_1(self, arg0);
};

btQuadWord.prototype.setY = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setY_1(self, arg0);
};

btQuadWord.prototype.setZ = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setZ_1(self, arg0);
};

btQuadWord.prototype.setW = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btQuadWord_setW_1(self, arg0);
};

  btQuadWord.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btQuadWord___destroy___0(self);
}
// btCylinderShape
function btCylinderShape(arg0) {
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  this.ptr = _emscripten_bind_btCylinderShape_btCylinderShape_1(arg0);
  getCache(btCylinderShape)[this.ptr] = this;
};
btCylinderShape.prototype = Object.create(btCollisionShape.prototype);
btCylinderShape.prototype.constructor = btCylinderShape;
btCylinderShape.prototype.__class__ = btCylinderShape;
btCylinderShape.__cache__ = {};
Module['btCylinderShape'] = btCylinderShape;

btCylinderShape.prototype.setLocalScaling = function(arg0) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  _emscripten_bind_btCylinderShape_setLocalScaling_1(self, arg0);
};

btCylinderShape.prototype.calculateLocalInertia = function(arg0, arg1) {
  var self = this.ptr;
  if (arg0 && typeof arg0 === 'object') arg0 = arg0.ptr;
  else arg0 = ensureString(arg0);
  if (arg1 && typeof arg1 === 'object') arg1 = arg1.ptr;
  else arg1 = ensureString(arg1);
  _emscripten_bind_btCylinderShape_calculateLocalInertia_2(self, arg0, arg1);
};

  btCylinderShape.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btCylinderShape___destroy___0(self);
}
// btTypedConstraint
function btTypedConstraint() { throw "cannot construct a btTypedConstraint, no constructor in IDL" }
btTypedConstraint.prototype = Object.create(WrapperObject.prototype);
btTypedConstraint.prototype.constructor = btTypedConstraint;
btTypedConstraint.prototype.__class__ = btTypedConstraint;
btTypedConstraint.__cache__ = {};
Module['btTypedConstraint'] = btTypedConstraint;

  btTypedConstraint.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_btTypedConstraint___destroy___0(self);
}

this['Ammo'] = Module; /* With or without a closure, the proper usage is Ammo.* */



  return this;
}).call({});
